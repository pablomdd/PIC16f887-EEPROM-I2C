

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Wed Nov 13 15:51:04 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,delta=2
    10                           	psect	text437,local,class=CODE,delta=2
    11                           	psect	text438,local,class=CODE,delta=2
    12                           	psect	text446,local,class=CODE,delta=2
    13                           	psect	text451,local,class=CODE,delta=2
    14                           	psect	text452,local,class=CODE,delta=2
    15                           	psect	text455,local,class=CODE,delta=2
    16                           	psect	text456,local,class=CODE,delta=2
    17                           	psect	pa_nodes,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  000A                     	;#
    20                           
    21                           	psect	config
    22  2007  E0D4               	dw	57556	;#
    23  2008  FFFF               	dw	65535	;#
    24                           
    25                           	psect	strings
    26  0003                     __pstrings:	
    27  0003                     stringtab:	
    28                           ;	global	stringdir,stringtab,__stringbase
    29                           
    30  0003                     stringcode:	
    31                           ;	String table - string pointers are 1 byte each
    32                           
    33  0003                     stringdir:	
    34  0003  3000               	movlw	high stringdir
    35  0004  008A               	movwf	10
    36  0005  0804               	movf	4,w
    37  0006  0A84               	incf	4,f
    38  0007  0782               	addwf	2,f
    39  0008                     __stringbase:	
    40  0008  3400               	retlw	0
    41  0009                     _dpowers:	
    42  0009  3401               	retlw	1
    43  000A  3400               	retlw	0
    44  000B  340A               	retlw	10
    45  000C  3400               	retlw	0
    46  000D  3464               	retlw	100
    47  000E  3400               	retlw	0
    48  000F  34E8               	retlw	232
    49  0010  3403               	retlw	3
    50  0011  3410               	retlw	16
    51  0012  3427               	retlw	39
    52  000B                     _INTCON	set	11
    53  0006                     _PORTB	set	6
    54  0008                     _PORTD	set	8
    55  0018                     _RCSTA	set	24
    56  0013                     _SSPBUF	set	19
    57  0014                     _SSPCON	set	20
    58  0001                     _TMR0	set	1
    59  0019                     _TXREG	set	25
    60  006B                     _BCLIF	set	107
    61  002E                     _RA6	set	46
    62  002F                     _RA7	set	47
    63  0049                     _RE1	set	73
    64  0063                     _SSPIF	set	99
    65  005A                     _T0IF	set	90
    66  0064                     _TXIF	set	100
    67  0081                     _OPTION_REG	set	129
    68  008F                     _OSCCON	set	143
    69  0099                     _SPBRG	set	153
    70  0093                     _SSPADD	set	147
    71  0091                     _SSPCON2	set	145
    72  0085                     _TRISA	set	133
    73  0086                     _TRISB	set	134
    74  0088                     _TRISD	set	136
    75  0098                     _TXSTA	set	152
    76  048D                     _ACKDT	set	1165
    77  048C                     _ACKEN	set	1164
    78  048E                     _ACKSTAT	set	1166
    79  04A6                     _CKE	set	1190
    80  048A                     _PEN	set	1162
    81  048B                     _RCEN	set	1163
    82  0489                     _RSEN	set	1161
    83  04A2                     _R_W	set	1186
    84  0488                     _SEN	set	1160
    85  04A7                     _SMP	set	1191
    86  043B                     _TRISC3	set	1083
    87  043C                     _TRISC4	set	1084
    88  043E                     _TRISC6	set	1086
    89  043F                     _TRISC7	set	1087
    90  0107                     _CM1CON0	set	263
    91  0108                     _CM2CON0	set	264
    92  0188                     _ANSEL	set	392
    93  0189                     _ANSELH	set	393
    94  0187                     _BAUDCTL	set	391
    95  0005                     _PORTA	set	5
    96  0013                     STR_1:	
    97  0013  344D               	retlw	77	;'M'
    98  0014  346F               	retlw	111	;'o'
    99  0015  3473               	retlw	115	;'s'
   100  0016  3474               	retlw	116	;'t'
   101  0017  3472               	retlw	114	;'r'
   102  0018  3461               	retlw	97	;'a'
   103  0019  346E               	retlw	110	;'n'
   104  001A  3464               	retlw	100	;'d'
   105  001B  346F               	retlw	111	;'o'
   106  001C  3420               	retlw	32	;' '
   107  001D  3445               	retlw	69	;'E'
   108  001E  3473               	retlw	115	;'s'
   109  001F  3463               	retlw	99	;'c'
   110  0020  3472               	retlw	114	;'r'
   111  0021  3469               	retlw	105	;'i'
   112  0022  3474               	retlw	116	;'t'
   113  0023  3475               	retlw	117	;'u'
   114  0024  3472               	retlw	114	;'r'
   115  0025  3461               	retlw	97	;'a'
   116  0026  3420               	retlw	32	;' '
   117  0027  3400               	retlw	0
   118  0028                     STR_6:	
   119  0028  344D               	retlw	77	;'M'
   120  0029  346F               	retlw	111	;'o'
   121  002A  3473               	retlw	115	;'s'
   122  002B  3474               	retlw	116	;'t'
   123  002C  3472               	retlw	114	;'r'
   124  002D  3461               	retlw	97	;'a'
   125  002E  346E               	retlw	110	;'n'
   126  002F  3464               	retlw	100	;'d'
   127  0030  346F               	retlw	111	;'o'
   128  0031  3420               	retlw	32	;' '
   129  0032  344C               	retlw	76	;'L'
   130  0033  3465               	retlw	101	;'e'
   131  0034  3463               	retlw	99	;'c'
   132  0035  3474               	retlw	116	;'t'
   133  0036  3475               	retlw	117	;'u'
   134  0037  3472               	retlw	114	;'r'
   135  0038  3461               	retlw	97	;'a'
   136  0039  3420               	retlw	32	;' '
   137  003A  3400               	retlw	0
   138  003B                     STR_3:	
   139  003B  3454               	retlw	84	;'T'
   140  003C  3461               	retlw	97	;'a'
   141  003D  346D               	retlw	109	;'m'
   142  003E  3461               	retlw	97	;'a'
   143  003F  346E               	retlw	110	;'n'
   144  0040  3469               	retlw	105	;'i'
   145  0041  346F               	retlw	111	;'o'
   146  0042  3420               	retlw	32	;' '
   147  0043  3464               	retlw	100	;'d'
   148  0044  3465               	retlw	101	;'e'
   149  0045  3420               	retlw	32	;' '
   150  0046  3463               	retlw	99	;'c'
   151  0047  346E               	retlw	110	;'n'
   152  0048  3474               	retlw	116	;'t'
   153  0049  3420               	retlw	32	;' '
   154  004A  3425               	retlw	37	;'%'
   155  004B  3469               	retlw	105	;'i'
   156  004C  3400               	retlw	0
   157  004D                     STR_4:	
   158  004D  3444               	retlw	68	;'D'
   159  004E  3469               	retlw	105	;'i'
   160  004F  3472               	retlw	114	;'r'
   161  0050  3465               	retlw	101	;'e'
   162  0051  3463               	retlw	99	;'c'
   163  0052  3474               	retlw	116	;'t'
   164  0053  346F               	retlw	111	;'o'
   165  0054  3472               	retlw	114	;'r'
   166  0055  3469               	retlw	105	;'i'
   167  0056  346F               	retlw	111	;'o'
   168  0057  343A               	retlw	58	;':'
   169  0058  3420               	retlw	32	;' '
   170  0059  3425               	retlw	37	;'%'
   171  005A  3464               	retlw	100	;'d'
   172  005B  3420               	retlw	32	;' '
   173  005C  3400               	retlw	0
   174  005D                     STR_7:	
   175  005D  3444               	retlw	68	;'D'
   176  005E  3469               	retlw	105	;'i'
   177  005F  3472               	retlw	114	;'r'
   178  0060  3465               	retlw	101	;'e'
   179  0061  3463               	retlw	99	;'c'
   180  0062  3474               	retlw	116	;'t'
   181  0063  346F               	retlw	111	;'o'
   182  0064  3472               	retlw	114	;'r'
   183  0065  3469               	retlw	105	;'i'
   184  0066  346F               	retlw	111	;'o'
   185  0067  343A               	retlw	58	;':'
   186  0068  3420               	retlw	32	;' '
   187  0069  3425               	retlw	37	;'%'
   188  006A  3469               	retlw	105	;'i'
   189  006B  3420               	retlw	32	;' '
   190  006C  3400               	retlw	0
   191  006D                     STR_2:	
   192  006D  3447               	retlw	71	;'G'
   193  006E  3472               	retlw	114	;'r'
   194  006F  3461               	retlw	97	;'a'
   195  0070  3462               	retlw	98	;'b'
   196  0071  3461               	retlw	97	;'a'
   197  0072  346E               	retlw	110	;'n'
   198  0073  3464               	retlw	100	;'d'
   199  0074  346F               	retlw	111	;'o'
   200  0075  342E               	retlw	46	;'.'
   201  0076  342E               	retlw	46	;'.'
   202  0077  342E               	retlw	46	;'.'
   203  0078  342E               	retlw	46	;'.'
   204  0079  342E               	retlw	46	;'.'
   205  007A  3400               	retlw	0
   206  007B                     STR_5:	
   207  007B  3456               	retlw	86	;'V'
   208  007C  3461               	retlw	97	;'a'
   209  007D  346C               	retlw	108	;'l'
   210  007E  346F               	retlw	111	;'o'
   211  007F  3472               	retlw	114	;'r'
   212  0080  343A               	retlw	58	;':'
   213  0081  3420               	retlw	32	;' '
   214  0082  3425               	retlw	37	;'%'
   215  0083  3464               	retlw	100	;'d'
   216  0084  3420               	retlw	32	;' '
   217  0085  3400               	retlw	0
   218  0086                     STR_8:	
   219  0086  3456               	retlw	86	;'V'
   220  0087  3461               	retlw	97	;'a'
   221  0088  346C               	retlw	108	;'l'
   222  0089  346F               	retlw	111	;'o'
   223  008A  3472               	retlw	114	;'r'
   224  008B  343A               	retlw	58	;':'
   225  008C  3420               	retlw	32	;' '
   226  008D  3425               	retlw	37	;'%'
   227  008E  3469               	retlw	105	;'i'
   228  008F  3420               	retlw	32	;' '
   229  0090  3400               	retlw	0
   230                           
   231                           	psect	cinit
   232  039A                     start_initialization:	
   233  039A                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  039A  0183               	clrf	3
   237  039B  120A  118A  2D7D   	ljmp	_main	;jump to C main() function
   238                           
   239                           	psect	cstackCOMMON
   240  0070                     __pcstackCOMMON:	
   241  0070                     ?_init_micro:	
   242  0070                     ??_init_micro:	
   243                           ; 0 bytes @ 0x0
   244                           
   245  0070                     ?_msecbase:	
   246                           ; 0 bytes @ 0x0
   247                           
   248  0070                     ??_msecbase:	
   249                           ; 0 bytes @ 0x0
   250                           
   251  0070                     ?_pause:	
   252                           ; 0 bytes @ 0x0
   253                           
   254  0070                     ?_lcd_write:	
   255                           ; 0 bytes @ 0x0
   256                           
   257  0070                     ??_lcd_write:	
   258                           ; 0 bytes @ 0x0
   259                           
   260  0070                     ?_lcd_clear:	
   261                           ; 0 bytes @ 0x0
   262                           
   263  0070                     ?_lcd_puts:	
   264                           ; 0 bytes @ 0x0
   265                           
   266  0070                     ?_lcd_goto:	
   267                           ; 0 bytes @ 0x0
   268                           
   269  0070                     ?_putch:	
   270                           ; 0 bytes @ 0x0
   271                           
   272  0070                     ??_putch:	
   273                           ; 0 bytes @ 0x0
   274                           
   275  0070                     ?_i2c_init:	
   276                           ; 0 bytes @ 0x0
   277                           
   278  0070                     ??_i2c_init:	
   279                           ; 0 bytes @ 0x0
   280                           
   281  0070                     ?_i2c_waitForIdle:	
   282                           ; 0 bytes @ 0x0
   283                           
   284  0070                     ??_i2c_waitForIdle:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0070                     ?_i2c_start:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0070                     ?_i2c_repStart:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0070                     ?_i2c_stop:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0070                     ?_main:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0070                     ?_i2c_write:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0070                     ?_I2C_EEIN:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?___lwdiv:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     lcd_write@c:	
   309                           ; 2 bytes @ 0x0
   310                           
   311  0070                     putch@byte:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ___lwdiv@divisor:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     pause@usvalue:	
   318                           ; 2 bytes @ 0x0
   319                           
   320                           
   321                           ; 4 bytes @ 0x0
   322  0070                     	ds	1
   323  0071                     lcd_write@temp:	
   324                           
   325                           ; 1 bytes @ 0x1
   326  0071                     	ds	1
   327  0072                     ??_lcd_clear:	
   328  0072                     ??_lcd_puts:	
   329                           ; 0 bytes @ 0x2
   330                           
   331  0072                     ??_lcd_goto:	
   332                           ; 0 bytes @ 0x2
   333                           
   334  0072                     lcd_puts@s:	
   335                           ; 0 bytes @ 0x2
   336                           
   337  0072                     lcd_goto@pos:	
   338                           ; 1 bytes @ 0x2
   339                           
   340  0072                     ___lwdiv@dividend:	
   341                           ; 1 bytes @ 0x2
   342                           
   343                           
   344                           ; 2 bytes @ 0x2
   345  0072                     	ds	2
   346  0074                     ??_pause:	
   347  0074                     ??___lwdiv:	
   348                           ; 0 bytes @ 0x4
   349                           
   350  0074                     ___lwdiv@quotient:	
   351                           ; 0 bytes @ 0x4
   352                           
   353  0074                     pause@x:	
   354                           ; 2 bytes @ 0x4
   355                           
   356                           
   357                           ; 4 bytes @ 0x4
   358  0074                     	ds	1
   359  0075                     ??_i2c_start:	
   360  0075                     ??_i2c_repStart:	
   361                           ; 0 bytes @ 0x5
   362                           
   363  0075                     ??_i2c_stop:	
   364                           ; 0 bytes @ 0x5
   365                           
   366  0075                     ??_i2c_write:	
   367                           ; 0 bytes @ 0x5
   368                           
   369  0075                     ?_i2c_read:	
   370                           ; 0 bytes @ 0x5
   371                           
   372  0075                     i2c_write@i2cWriteData:	
   373                           ; 2 bytes @ 0x5
   374                           
   375                           
   376                           ; 1 bytes @ 0x5
   377  0075                     	ds	1
   378  0076                     ___lwdiv@counter:	
   379                           
   380                           ; 1 bytes @ 0x6
   381  0076                     	ds	1
   382  0077                     ??_i2c_read:	
   383  0077                     ?___lwmod:	
   384                           ; 0 bytes @ 0x7
   385                           
   386  0077                     i2c_read@ack:	
   387                           ; 2 bytes @ 0x7
   388                           
   389  0077                     ___lwmod@divisor:	
   390                           ; 1 bytes @ 0x7
   391                           
   392                           
   393                           ; 2 bytes @ 0x7
   394  0077                     	ds	1
   395  0078                     ?_I2C_EEOUT:	
   396  0078                     i2c_read@i2cReadData:	
   397                           ; 0 bytes @ 0x8
   398                           
   399  0078                     I2C_EEOUT@data:	
   400                           ; 1 bytes @ 0x8
   401                           
   402                           
   403                           ; 1 bytes @ 0x8
   404  0078                     	ds	1
   405  0079                     ??_I2C_EEOUT:	
   406  0079                     ??_I2C_EEIN:	
   407                           ; 0 bytes @ 0x9
   408                           
   409  0079                     I2C_EEOUT@address:	
   410                           ; 0 bytes @ 0x9
   411                           
   412  0079                     I2C_EEIN@address:	
   413                           ; 1 bytes @ 0x9
   414                           
   415  0079                     ___lwmod@dividend:	
   416                           ; 1 bytes @ 0x9
   417                           
   418                           
   419                           ; 2 bytes @ 0x9
   420  0079                     	ds	1
   421  007A                     I2C_EEIN@data:	
   422                           
   423                           ; 1 bytes @ 0xA
   424  007A                     	ds	1
   425  007B                     ??___lwmod:	
   426  007B                     ___lwmod@counter:	
   427                           ; 0 bytes @ 0xB
   428                           
   429                           
   430                           ; 1 bytes @ 0xB
   431  007B                     	ds	1
   432  007C                     ??_sprintf:	
   433                           
   434                           ; 0 bytes @ 0xC
   435  007C                     	ds	2
   436  007E                     ??_main:	
   437                           
   438                           	psect	cstackBANK0
   439  0020                     __pcstackBANK0:	
   440                           ; 0 bytes @ 0xE
   441                           
   442  0020                     ?_sprintf:	
   443  0020                     sprintf@f:	
   444                           ; 2 bytes @ 0x0
   445                           
   446                           
   447                           ; 1 bytes @ 0x0
   448  0020                     	ds	3
   449  0023                     sprintf@ap:	
   450                           
   451                           ; 1 bytes @ 0x3
   452  0023                     	ds	1
   453  0024                     sprintf@flag:	
   454                           
   455                           ; 1 bytes @ 0x4
   456  0024                     	ds	1
   457  0025                     sprintf@prec:	
   458                           
   459                           ; 1 bytes @ 0x5
   460  0025                     	ds	1
   461  0026                     sprintf@_val:	
   462                           
   463                           ; 4 bytes @ 0x6
   464  0026                     	ds	4
   465  002A                     sprintf@sp:	
   466                           
   467                           ; 1 bytes @ 0xA
   468  002A                     	ds	1
   469  002B                     sprintf@c:	
   470                           
   471                           ; 1 bytes @ 0xB
   472  002B                     	ds	1
   473  002C                     main@buffer:	
   474                           
   475                           ; 15 bytes @ 0xC
   476  002C                     	ds	15
   477  003B                     main@val:	
   478                           
   479                           ; 1 bytes @ 0x1B
   480  003B                     	ds	1
   481  003C                     main@i:	
   482                           
   483                           ; 2 bytes @ 0x1C
   484  003C                     	ds	2
   485  003E                     main@x:	
   486                           
   487                           ; 1 bytes @ 0x1E
   488  003E                     	ds	1
   489  003F                     main@x_1892:	
   490                           
   491                           ; 1 bytes @ 0x1F
   492  003F                     	ds	1
   493  0040                     main@x_1894:	
   494                           
   495                           ; 1 bytes @ 0x20
   496  0040                     	ds	1
   497  0041                     main@x_1896:	
   498                           
   499                           ; 1 bytes @ 0x21
   500  0041                     	ds	1
   501  0042                     main@x_1898:	
   502                           
   503                           ; 1 bytes @ 0x22
   504  0042                     	ds	1
   505  0043                     main@x_1901:	
   506                           
   507                           ; 1 bytes @ 0x23
   508  0043                     	ds	1
   509  0044                     main@x_1903:	
   510                           
   511                           ; 1 bytes @ 0x24
   512  0044                     	ds	1
   513  0045                     main@cnt:	
   514                           
   515                           ; 1 bytes @ 0x25
   516  0045                     	ds	1
   517                           
   518                           	psect	maintext
   519  057D                     __pmaintext:	
   520 ;;Data sizes: Strings 126, constant 10, data 0, bss 0, persistent 0 stack 0
   521 ;;Auto spaces:   Size  Autos    Used
   522 ;; COMMON          14     14      14
   523 ;; BANK0           80     38      38
   524 ;; BANK1           80      0       0
   525 ;; BANK3           96      0       0
   526 ;; BANK2           96      0       0
   527 ;;
   528 ;; Pointer list with targets:
   529 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   530 ;;
   531 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   532 ;;
   533 ;; ?_i2c_read	int  size(1) Largest target is 0
   534 ;;
   535 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 21
   536 ;;		 -> STR_8(CODE[11]), STR_7(CODE[16]), STR_6(CODE[19]), STR_5(CODE[11]), 
   537 ;;		 -> STR_4(CODE[16]), STR_3(CODE[18]), STR_1(CODE[21]), 
   538 ;;
   539 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 15
   540 ;;		 -> main@buffer(BANK0[15]), 
   541 ;;
   542 ;; ?_sprintf	int  size(1) Largest target is 0
   543 ;;
   544 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   545 ;;		 -> ?_sprintf(BANK0[2]), 
   546 ;;
   547 ;; S1921$_cp	PTR const unsigned char  size(1) Largest target is 0
   548 ;;
   549 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   550 ;;
   551 ;; lcd_puts@s	PTR const unsigned char  size(1) Largest target is 14
   552 ;;		 -> STR_2(CODE[14]), 
   553 ;;
   554 ;; pa	PTR unsigned char  size(1) Largest target is 1
   555 ;;		 -> PORTA(BITSFR0[1]), 
   556 ;;
   557 ;;
   558 ;; Critical Paths under _main in COMMON
   559 ;;
   560 ;;   _main->_sprintf
   561 ;;   _I2C_EEIN->_i2c_read
   562 ;;   _I2C_EEOUT->_pause
   563 ;;   _sprintf->___lwmod
   564 ;;   _i2c_write->_i2c_waitForIdle
   565 ;;   _i2c_read->_i2c_waitForIdle
   566 ;;   _i2c_stop->_i2c_waitForIdle
   567 ;;   _i2c_repStart->_i2c_waitForIdle
   568 ;;   _i2c_start->_i2c_waitForIdle
   569 ;;   _lcd_goto->_lcd_write
   570 ;;   _lcd_puts->_lcd_write
   571 ;;   _lcd_clear->_lcd_write
   572 ;;   ___lwmod->___lwdiv
   573 ;;
   574 ;; Critical Paths under _main in BANK0
   575 ;;
   576 ;;   _main->_sprintf
   577 ;;
   578 ;; Critical Paths under _main in BANK1
   579 ;;
   580 ;;   None.
   581 ;;
   582 ;; Critical Paths under _main in BANK3
   583 ;;
   584 ;;   None.
   585 ;;
   586 ;; Critical Paths under _main in BANK2
   587 ;;
   588 ;;   None.
   589 ;;
   590 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   591 ;;
   592 ;;
   593 ;;Call Graph Tables:
   594 ;;
   595 ;; ---------------------------------------------------------------------------------
   596 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   597 ;; ---------------------------------------------------------------------------------
   598 ;; (0) _main                                                28    28      0    2618
   599 ;;                                             12 BANK0     26    26      0
   600 ;;                         _init_micro
   601 ;;                           _i2c_init
   602 ;;                              _pause
   603 ;;                          _lcd_write
   604 ;;                          _lcd_clear
   605 ;;                              _putch
   606 ;;                            _sprintf
   607 ;;                           _lcd_goto
   608 ;;                           _lcd_puts
   609 ;;                          _I2C_EEOUT
   610 ;;                           _I2C_EEIN
   611 ;; ---------------------------------------------------------------------------------
   612 ;; (1) _I2C_EEIN                                             2     2      0     112
   613 ;;                                              9 COMMON     2     2      0
   614 ;;                          _i2c_start
   615 ;;                          _i2c_write
   616 ;;                       _i2c_repStart
   617 ;;                           _i2c_read
   618 ;;                           _i2c_stop
   619 ;; ---------------------------------------------------------------------------------
   620 ;; (1) _I2C_EEOUT                                            2     1      1     112
   621 ;;                                              8 COMMON     2     1      1
   622 ;;                          _i2c_start
   623 ;;                          _i2c_write
   624 ;;                           _i2c_stop
   625 ;;                              _pause
   626 ;; ---------------------------------------------------------------------------------
   627 ;; (1) _sprintf                                             14    11      3     798
   628 ;;                                             12 COMMON     2     2      0
   629 ;;                                              0 BANK0     12     9      3
   630 ;;                            ___lwdiv
   631 ;;                            ___lwmod
   632 ;; ---------------------------------------------------------------------------------
   633 ;; (2) _i2c_write                                            1     1      0      22
   634 ;;                                              5 COMMON     1     1      0
   635 ;;                    _i2c_waitForIdle
   636 ;; ---------------------------------------------------------------------------------
   637 ;; (2) _i2c_read                                             4     2      2      45
   638 ;;                                              5 COMMON     4     2      2
   639 ;;                    _i2c_waitForIdle
   640 ;; ---------------------------------------------------------------------------------
   641 ;; (2) _i2c_stop                                             0     0      0       0
   642 ;;                    _i2c_waitForIdle
   643 ;; ---------------------------------------------------------------------------------
   644 ;; (2) _i2c_repStart                                         0     0      0       0
   645 ;;                    _i2c_waitForIdle
   646 ;; ---------------------------------------------------------------------------------
   647 ;; (2) _i2c_start                                            0     0      0       0
   648 ;;                    _i2c_waitForIdle
   649 ;; ---------------------------------------------------------------------------------
   650 ;; (1) _lcd_goto                                             1     1      0     114
   651 ;;                                              2 COMMON     1     1      0
   652 ;;                          _lcd_write
   653 ;; ---------------------------------------------------------------------------------
   654 ;; (1) _lcd_puts                                             1     1      0     137
   655 ;;                                              2 COMMON     1     1      0
   656 ;;                          _lcd_write
   657 ;; ---------------------------------------------------------------------------------
   658 ;; (1) _lcd_clear                                            0     0      0      92
   659 ;;                          _lcd_write
   660 ;; ---------------------------------------------------------------------------------
   661 ;; (2) _pause                                                8     4      4      46
   662 ;;                                              0 COMMON     8     4      4
   663 ;;                           _msecbase
   664 ;; ---------------------------------------------------------------------------------
   665 ;; (2) ___lwmod                                              5     1      4     159
   666 ;;                                              7 COMMON     5     1      4
   667 ;;                            ___lwdiv (ARG)
   668 ;; ---------------------------------------------------------------------------------
   669 ;; (2) ___lwdiv                                              7     3      4     162
   670 ;;                                              0 COMMON     7     3      4
   671 ;; ---------------------------------------------------------------------------------
   672 ;; (3) _i2c_waitForIdle                                      5     5      0       0
   673 ;;                                              0 COMMON     5     5      0
   674 ;; ---------------------------------------------------------------------------------
   675 ;; (1) _i2c_init                                             0     0      0       0
   676 ;; ---------------------------------------------------------------------------------
   677 ;; (1) _putch                                                1     1      0      22
   678 ;;                                              0 COMMON     1     1      0
   679 ;; ---------------------------------------------------------------------------------
   680 ;; (2) _lcd_write                                            2     2      0      92
   681 ;;                                              0 COMMON     2     2      0
   682 ;; ---------------------------------------------------------------------------------
   683 ;; (3) _msecbase                                             0     0      0       0
   684 ;; ---------------------------------------------------------------------------------
   685 ;; (1) _init_micro                                           0     0      0       0
   686 ;; ---------------------------------------------------------------------------------
   687 ;; Estimated maximum stack depth 3
   688 ;; ---------------------------------------------------------------------------------
   689 ;; Call Graph Graphs:
   690 ;; _main (ROOT)
   691 ;;   _init_micro
   692 ;;   _i2c_init
   693 ;;   _pause
   694 ;;     _msecbase
   695 ;;   _lcd_write
   696 ;;   _lcd_clear
   697 ;;     _lcd_write
   698 ;;   _putch
   699 ;;   _sprintf
   700 ;;     ___lwdiv
   701 ;;     ___lwmod
   702 ;;       ___lwdiv (ARG)
   703 ;;   _lcd_goto
   704 ;;     _lcd_write
   705 ;;   _lcd_puts
   706 ;;     _lcd_write
   707 ;;   _I2C_EEOUT
   708 ;;     _i2c_start
   709 ;;       _i2c_waitForIdle
   710 ;;     _i2c_write
   711 ;;       _i2c_waitForIdle
   712 ;;     _i2c_stop
   713 ;;       _i2c_waitForIdle
   714 ;;     _pause
   715 ;;       _msecbase
   716 ;;   _I2C_EEIN
   717 ;;     _i2c_start
   718 ;;       _i2c_waitForIdle
   719 ;;     _i2c_write
   720 ;;       _i2c_waitForIdle
   721 ;;     _i2c_repStart
   722 ;;       _i2c_waitForIdle
   723 ;;     _i2c_read
   724 ;;       _i2c_waitForIdle
   725 ;;     _i2c_stop
   726 ;;       _i2c_waitForIdle
   727 ;;
   728 ;; Address spaces:
   729 ;;Name               Size   Autos  Total    Cost      Usage
   730 ;;BITCOMMON            E      0       0       0        0.0%
   731 ;;EEDATA             100      0       0       0        0.0%
   732 ;;NULL                 0      0       0       0        0.0%
   733 ;;CODE                 0      0       0       0        0.0%
   734 ;;COMMON               E      E       E       1      100.0%
   735 ;;BITSFR0              0      0       0       1        0.0%
   736 ;;SFR0                 0      0       0       1        0.0%
   737 ;;BITSFR1              0      0       0       2        0.0%
   738 ;;SFR1                 0      0       0       2        0.0%
   739 ;;STACK                0      0       3       2        0.0%
   740 ;;ABS                  0      0       0       3        0.0%
   741 ;;BITBANK0            50      0       0       4        0.0%
   742 ;;BITSFR3              0      0       0       4        0.0%
   743 ;;SFR3                 0      0       0       4        0.0%
   744 ;;BANK0               50     26      26       5       47.5%
   745 ;;BITSFR2              0      0       0       5        0.0%
   746 ;;SFR2                 0      0       0       5        0.0%
   747 ;;BITBANK1            50      0       0       6        0.0%
   748 ;;BANK1               50      0       0       7        0.0%
   749 ;;BITBANK3            60      0       0       8        0.0%
   750 ;;BANK3               60      0       0       9        0.0%
   751 ;;BITBANK2            60      0       0      10        0.0%
   752 ;;BANK2               60      0       0      11        0.0%
   753 ;;DATA                 0      0       0      12        0.0%
   754                           
   755                           
   756 ;; *************** function _main *****************
   757 ;; Defined at:
   758 ;;		line 1145 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  x               1   36[BANK0 ] unsigned char 
   763 ;;  x               1   35[BANK0 ] unsigned char 
   764 ;;  x               1   33[BANK0 ] unsigned char 
   765 ;;  x               1   32[BANK0 ] unsigned char 
   766 ;;  x               1   34[BANK0 ] unsigned char 
   767 ;;  x               1   31[BANK0 ] unsigned char 
   768 ;;  x               1   30[BANK0 ] unsigned char 
   769 ;;  i               2   28[BANK0 ] int 
   770 ;;  buffer         15   12[BANK0 ] unsigned char [15]
   771 ;;  cnt             1   37[BANK0 ] unsigned char 
   772 ;;  val             1   27[BANK0 ] unsigned char 
   773 ;;  char_pwm        1    0        unsigned char 
   774 ;;  char_recibid    1    0        unsigned char 
   775 ;; Return value:  Size  Location     Type
   776 ;;		None               void
   777 ;; Registers used:
   778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   779 ;; Tracked objects:
   780 ;;		On entry : 17F/0
   781 ;;		On exit  : 160/0
   782 ;;		Unchanged: FFE00/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         0       0       0       0       0
   785 ;;      Locals:         0      26       0       0       0
   786 ;;      Temps:          0       0       0       0       0
   787 ;;      Totals:         0      26       0       0       0
   788 ;;Total ram usage:       26 bytes
   789 ;; Hardware stack levels required when called:    3
   790 ;; This function calls:
   791 ;;		_init_micro
   792 ;;		_i2c_init
   793 ;;		_pause
   794 ;;		_lcd_write
   795 ;;		_lcd_clear
   796 ;;		_putch
   797 ;;		_sprintf
   798 ;;		_lcd_goto
   799 ;;		_lcd_puts
   800 ;;		_I2C_EEOUT
   801 ;;		_I2C_EEIN
   802 ;; This function is called by:
   803 ;;		Startup code after reset
   804 ;; This function uses a non-reentrant model
   805 ;;
   806  057D                     _main:	
   807                           
   808                           ;eeprom_i2c.c: 1147: init_micro();
   809                           
   810                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   811  057D  120A  118A  23A6   	fcall	_init_micro
      +       120A  118A         
   812                           
   813                           ;eeprom_i2c.c: 1148: i2c_init();
   814  0582  120A  118A  23AF   	fcall	_i2c_init
      +       120A  118A         
   815                           
   816                           ;eeprom_i2c.c: 1149: ANSEL=0x00;
   817  0587  1683               	bsf	3,5	;RP0=1, select bank3
   818  0588  1703               	bsf	3,6	;RP1=1, select bank3
   819  0589  0188               	clrf	8	;volatile
   820                           
   821                           ;eeprom_i2c.c: 1150: ANSELH=0x00;
   822  058A  0189               	clrf	9	;volatile
   823                           
   824                           ;eeprom_i2c.c: 1151: PORTB=0x00;
   825  058B  1283               	bcf	3,5	;RP0=0, select bank0
   826  058C  1303               	bcf	3,6	;RP1=0, select bank0
   827  058D  0186               	clrf	6	;volatile
   828                           
   829                           ;eeprom_i2c.c: 1152: TRISB=0x00;
   830  058E  1683               	bsf	3,5	;RP0=1, select bank1
   831  058F  0186               	clrf	6	;volatile
   832                           
   833                           ;eeprom_i2c.c: 1153: TRISA=0x00;
   834  0590  0185               	clrf	5	;volatile
   835                           
   836                           ;eeprom_i2c.c: 1154: TRISD=0x00;
   837  0591  0188               	clrf	8	;volatile
   838                           
   839                           ;eeprom_i2c.c: 1168: RA7=0;
   840  0592  1283               	bcf	3,5	;RP0=0, select bank0
   841  0593  300F               	movlw	15
   842  0594  1385               	bcf	5,7
   843                           
   844                           ;eeprom_i2c.c: 1169: RA6=0;
   845  0595  1305               	bcf	5,6
   846                           
   847                           ;eeprom_i2c.c: 1170: RE1=0;
   848  0596  1089               	bcf	9,1
   849                           
   850                           ;eeprom_i2c.c: 1172: pause(15);
   851  0597  00F0               	movwf	?_pause
   852  0598  01F1               	clrf	?_pause+1
   853  0599  01F2               	clrf	?_pause+2
   854  059A  01F3               	clrf	?_pause+3
   855  059B  120A  118A  2463   	fcall	_pause
      +       120A  118A         
   856                           
   857                           ;eeprom_i2c.c: 1173: PORTD=init_value;
   858  05A0  3003               	movlw	3
   859  05A1  1283               	bcf	3,5	;RP0=0, select bank0
   860  05A2  1303               	bcf	3,6	;RP1=0, select bank0
   861  05A3  0088               	movwf	8	;volatile
   862  05A4  300A               	movlw	10
   863                           
   864                           ;eeprom_i2c.c: 1174: ((RA6=1),(RA6=0));
   865  05A5  1705               	bsf	5,6
   866  05A6  1305               	bcf	5,6
   867                           
   868                           ;eeprom_i2c.c: 1175: pause(10);
   869  05A7  00F0               	movwf	?_pause
   870  05A8  01F1               	clrf	?_pause+1
   871  05A9  01F2               	clrf	?_pause+2
   872  05AA  01F3               	clrf	?_pause+3
   873  05AB  120A  118A  2463   	fcall	_pause
      +       120A  118A         
   874                           
   875                           ;eeprom_i2c.c: 1176: ((RA6=1),(RA6=0));
   876  05B0  1283               	bcf	3,5	;RP0=0, select bank0
   877  05B1  1303               	bcf	3,6	;RP1=0, select bank0
   878  05B2  300A               	movlw	10
   879  05B3  1705               	bsf	5,6
   880  05B4  1305               	bcf	5,6
   881                           
   882                           ;eeprom_i2c.c: 1177: pause(10);
   883  05B5  00F0               	movwf	?_pause
   884  05B6  01F1               	clrf	?_pause+1
   885  05B7  01F2               	clrf	?_pause+2
   886  05B8  01F3               	clrf	?_pause+3
   887  05B9  120A  118A  2463   	fcall	_pause
      +       120A  118A         
   888                           
   889                           ;eeprom_i2c.c: 1178: ((RA6=1),(RA6=0));
   890  05BE  1283               	bcf	3,5	;RP0=0, select bank0
   891  05BF  1303               	bcf	3,6	;RP1=0, select bank0
   892  05C0  300A               	movlw	10
   893  05C1  1705               	bsf	5,6
   894  05C2  1305               	bcf	5,6
   895                           
   896                           ;eeprom_i2c.c: 1179: pause(10);
   897  05C3  00F0               	movwf	?_pause
   898  05C4  01F1               	clrf	?_pause+1
   899  05C5  01F2               	clrf	?_pause+2
   900  05C6  01F3               	clrf	?_pause+3
   901  05C7  120A  118A  2463   	fcall	_pause
      +       120A  118A         
   902                           
   903                           ;eeprom_i2c.c: 1180: PORTD=2;
   904  05CC  3002               	movlw	2
   905  05CD  1283               	bcf	3,5	;RP0=0, select bank0
   906  05CE  1303               	bcf	3,6	;RP1=0, select bank0
   907  05CF  0088               	movwf	8	;volatile
   908  05D0  3028               	movlw	40
   909                           
   910                           ;eeprom_i2c.c: 1181: ((RA6=1),(RA6=0));
   911  05D1  1705               	bsf	5,6
   912  05D2  1305               	bcf	5,6
   913                           
   914                           ;eeprom_i2c.c: 1183: lcd_write(0x28);
   915  05D3  120A  118A  23DF   	fcall	_lcd_write
      +       120A  118A         
   916                           
   917                           ;eeprom_i2c.c: 1184: lcd_write(0xC);
   918  05D8  300C               	movlw	12
   919  05D9  120A  118A  23DF   	fcall	_lcd_write
      +       120A  118A         
   920                           
   921                           ;eeprom_i2c.c: 1185: lcd_clear();
   922  05DE  120A  118A  23C0   	fcall	_lcd_clear
      +       120A  118A         
   923                           
   924                           ;eeprom_i2c.c: 1186: lcd_write(0x06);
   925  05E3  3006               	movlw	6
   926  05E4  120A  118A  23DF   	fcall	_lcd_write
      +       120A  118A         
   927                           
   928                           ;eeprom_i2c.c: 1188: TRISC7=1;
   929  05E9  1683               	bsf	3,5	;RP0=1, select bank1
   930  05EA  3070               	movlw	112
   931  05EB  1787               	bsf	7,7
   932                           
   933                           ;eeprom_i2c.c: 1189: TRISC6=0;
   934  05EC  1307               	bcf	7,6
   935                           
   936                           ;eeprom_i2c.c: 1190: OSCCON=0x70;
   937  05ED  008F               	movwf	15	;volatile
   938                           
   939                           ;eeprom_i2c.c: 1191: SPBRG=12;
   940  05EE  300C               	movlw	12
   941  05EF  0099               	movwf	25	;volatile
   942                           
   943                           ;eeprom_i2c.c: 1192: RCSTA=0x90;
   944  05F0  3090               	movlw	144
   945  05F1  1283               	bcf	3,5	;RP0=0, select bank0
   946  05F2  0098               	movwf	24	;volatile
   947                           
   948                           ;eeprom_i2c.c: 1193: TXSTA=0x20;
   949  05F3  3020               	movlw	32
   950  05F4  1683               	bsf	3,5	;RP0=1, select bank1
   951  05F5  0098               	movwf	24	;volatile
   952                           
   953                           ;eeprom_i2c.c: 1194: BAUDCTL=0x00;
   954  05F6  1703               	bsf	3,6	;RP1=1, select bank3
   955  05F7  0187               	clrf	7	;volatile
   956                           
   957                           ;eeprom_i2c.c: 1195: pause(500);
   958  05F8  3000               	movlw	0
   959  05F9  00F3               	movwf	?_pause+3
   960  05FA  00F2               	movwf	?_pause+2
   961  05FB  3001               	movlw	1
   962  05FC  00F1               	movwf	?_pause+1
   963  05FD  30F4               	movlw	244
   964  05FE  00F0               	movwf	?_pause
   965  05FF  120A  118A  2463   	fcall	_pause
      +       120A  118A         
   966                           
   967                           ;eeprom_i2c.c: 1198: char char_recibido;
   968                           ;eeprom_i2c.c: 1199: char char_pwm;
   969                           ;eeprom_i2c.c: 1200: char buffer[15];
   970                           ;eeprom_i2c.c: 1203: PORTA=0x01;
   971  0604  3001               	movlw	1
   972  0605  1283               	bcf	3,5	;RP0=0, select bank0
   973  0606  1303               	bcf	3,6	;RP1=0, select bank0
   974  0607  0085               	movwf	5	;volatile
   975                           
   976                           ;eeprom_i2c.c: 1204: *pa=0xFF;
   977  0608  30FF               	movlw	255
   978  0609  0085               	movwf	5
   979                           
   980                           ;eeprom_i2c.c: 1206: putch(0x0D);
   981  060A  300D               	movlw	13
   982  060B  120A  118A  239E   	fcall	_putch
      +       120A  118A         
   983                           
   984                           ;eeprom_i2c.c: 1207: putch(0x0A);
   985  0610  300A               	movlw	10
   986  0611  120A  118A  239E   	fcall	_putch
      +       120A  118A         
   987                           
   988                           ;eeprom_i2c.c: 1210: for(int i=97; i<123; i++){
   989  0616  3061               	movlw	97
   990  0617  00BC               	movwf	main@i
   991  0618  01BD               	clrf	main@i+1
   992  0619                     l3576:	
   993                           
   994                           ;eeprom_i2c.c: 1211: putch(i);
   995  0619  1283               	bcf	3,5	;RP0=0, select bank0
   996  061A  1303               	bcf	3,6	;RP1=0, select bank0
   997  061B  083C               	movf	main@i,w
   998  061C  120A  118A  239E   	fcall	_putch
      +       120A  118A         
   999                           
  1000                           ;eeprom_i2c.c: 1212: pause(20);
  1001  0621  3014               	movlw	20
  1002  0622  00F0               	movwf	?_pause
  1003  0623  01F1               	clrf	?_pause+1
  1004  0624  01F2               	clrf	?_pause+2
  1005  0625  01F3               	clrf	?_pause+3
  1006  0626  120A  118A  2463   	fcall	_pause
      +       120A  118A         
  1007  062B  1283               	bcf	3,5	;RP0=0, select bank0
  1008  062C  1303               	bcf	3,6	;RP1=0, select bank0
  1009  062D  0ABC               	incf	main@i,f
  1010  062E  1903               	skipnz
  1011  062F  0ABD               	incf	main@i+1,f
  1012  0630  083D               	movf	main@i+1,w
  1013  0631  3A80               	xorlw	128
  1014  0632  00FF               	movwf	127
  1015  0633  3080               	movlw	128
  1016  0634  027F               	subwf	127,w
  1017  0635  1D03               	skipz
  1018  0636  2E39               	goto	u535
  1019  0637  307B               	movlw	123
  1020  0638  023C               	subwf	main@i,w
  1021  0639                     u535:	
  1022  0639  1C03               	skipc
  1023  063A  2E19               	goto	l3576
  1024                           
  1025                           ;eeprom_i2c.c: 1213: }
  1026                           ;eeprom_i2c.c: 1214: putch(0x0D);
  1027  063B  300D               	movlw	13
  1028  063C  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1029                           
  1030                           ;eeprom_i2c.c: 1215: putch(0x0A);
  1031  0641  300A               	movlw	10
  1032  0642  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1033                           
  1034                           ;eeprom_i2c.c: 1217: putch(0x0D);
  1035  0647  300D               	movlw	13
  1036  0648  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1037                           
  1038                           ;eeprom_i2c.c: 1218: putch(0x0A);
  1039  064D  300A               	movlw	10
  1040  064E  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1041                           
  1042                           ;eeprom_i2c.c: 1219: sprintf(buffer,"Mostrando Escritura ");
  1043  0653  300B               	movlw	(STR_1-__stringbase)& (0+255)
  1044  0654  00A0               	movwf	?_sprintf
  1045  0655  302C               	movlw	main@buffer& (0+255)
  1046  0656  120A  118A  248E   	fcall	_sprintf
      +       120A  118A         
  1047                           
  1048                           ;eeprom_i2c.c: 1220: for (char x = 0; x<20; x++)
  1049  065B  01BE               	clrf	main@x
  1050  065C                     l3592:	
  1051                           
  1052                           ;eeprom_i2c.c: 1221: {
  1053                           ;eeprom_i2c.c: 1222: putch (buffer[x]);
  1054  065C  083E               	movf	main@x,w
  1055  065D  3E2C               	addlw	main@buffer& (0+255)
  1056  065E  0084               	movwf	4
  1057  065F  0800               	movf	0,w
  1058  0660  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1059  0665  3014               	movlw	20
  1060  0666  0ABE               	incf	main@x,f
  1061  0667  023E               	subwf	main@x,w
  1062  0668  1C03               	skipc
  1063  0669  2E5C               	goto	l3592
  1064                           
  1065                           ;eeprom_i2c.c: 1223: }
  1066                           ;eeprom_i2c.c: 1224: pause(200);
  1067  066A  30C8               	movlw	200
  1068  066B  00F0               	movwf	?_pause
  1069  066C  01F1               	clrf	?_pause+1
  1070  066D  01F2               	clrf	?_pause+2
  1071  066E  01F3               	clrf	?_pause+3
  1072  066F  120A  118A  2463   	fcall	_pause
      +       120A  118A         
  1073                           
  1074                           ;eeprom_i2c.c: 1225: putch(0x0D);
  1075  0674  300D               	movlw	13
  1076  0675  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1077                           
  1078                           ;eeprom_i2c.c: 1226: putch(0x0A);
  1079  067A  300A               	movlw	10
  1080  067B  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1081                           
  1082                           ;eeprom_i2c.c: 1228: unsigned char cnt = 0;
  1083  0680  01C5               	clrf	main@cnt
  1084                           
  1085                           ;eeprom_i2c.c: 1231: lcd_clear();
  1086  0681  120A  118A  23C0   	fcall	_lcd_clear
      +       120A  118A         
  1087                           
  1088                           ;eeprom_i2c.c: 1232: lcd_goto(0);
  1089  0686  3000               	movlw	0
  1090  0687  120A  118A  23C3   	fcall	_lcd_goto
      +       120A  118A         
  1091                           
  1092                           ;eeprom_i2c.c: 1233: lcd_puts("Grabando.....");
  1093  068C  3065               	movlw	(STR_2-__stringbase)& (0+255)
  1094  068D  120A  118A  23C7   	fcall	_lcd_puts
      +       120A  118A         
  1095                           
  1096                           ;eeprom_i2c.c: 1235: sprintf(buffer,"Tamanio de cnt %i", sizeof(cnt));
  1097  0692  3033               	movlw	(STR_3-__stringbase)& (0+255)
  1098  0693  00A0               	movwf	?_sprintf
  1099  0694  302C               	movlw	main@buffer& (0+255)
  1100  0695  01A1               	clrf	?_sprintf+1
  1101  0696  0AA1               	incf	?_sprintf+1,f
  1102  0697  01A2               	clrf	?_sprintf+2
  1103  0698  120A  118A  248E   	fcall	_sprintf
      +       120A  118A         
  1104                           
  1105                           ;eeprom_i2c.c: 1236: for (char x = 0; x<20; x++)
  1106  069D  01BF               	clrf	main@x_1892
  1107  069E                     l3616:	
  1108                           
  1109                           ;eeprom_i2c.c: 1237: {
  1110                           ;eeprom_i2c.c: 1238: putch (buffer[x]);
  1111  069E  083F               	movf	main@x_1892,w
  1112  069F  3E2C               	addlw	main@buffer& (0+255)
  1113  06A0  0084               	movwf	4
  1114  06A1  0800               	movf	0,w
  1115  06A2  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1116  06A7  3014               	movlw	20
  1117  06A8  0ABF               	incf	main@x_1892,f
  1118  06A9  023F               	subwf	main@x_1892,w
  1119  06AA  1C03               	skipc
  1120  06AB  2E9E               	goto	l3616
  1121                           
  1122                           ;eeprom_i2c.c: 1239: }
  1123                           ;eeprom_i2c.c: 1240: pause(200);
  1124  06AC  30C8               	movlw	200
  1125  06AD  00F0               	movwf	?_pause
  1126  06AE  01F1               	clrf	?_pause+1
  1127  06AF  01F2               	clrf	?_pause+2
  1128  06B0  01F3               	clrf	?_pause+3
  1129  06B1  120A  118A  2463   	fcall	_pause
      +       120A  118A         
  1130                           
  1131                           ;eeprom_i2c.c: 1241: putch(0x0D);
  1132  06B6  300D               	movlw	13
  1133  06B7  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1134                           
  1135                           ;eeprom_i2c.c: 1242: putch(0x0A);
  1136  06BC  300A               	movlw	10
  1137  06BD  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1138  06C2                     l3666:	
  1139                           ;eeprom_i2c.c: 1246: while(cnt<=20){
  1140                           
  1141  06C2  3015               	movlw	21
  1142  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  1143  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  1144  06C5  0245               	subwf	main@cnt,w
  1145  06C6  1803               	btfsc	3,0
  1146  06C7  2F3E               	goto	l3668
  1147                           
  1148                           ;eeprom_i2c.c: 1247: PORTB = cnt+10;
  1149  06C8  0845               	movf	main@cnt,w
  1150  06C9  3E0A               	addlw	10
  1151  06CA  0086               	movwf	6	;volatile
  1152                           
  1153                           ;eeprom_i2c.c: 1248: pause(300);
  1154  06CB  3001               	movlw	1
  1155  06CC  01F3               	clrf	?_pause+3
  1156  06CD  01F2               	clrf	?_pause+2
  1157  06CE  00F1               	movwf	?_pause+1
  1158  06CF  302C               	movlw	44
  1159  06D0  00F0               	movwf	?_pause
  1160  06D1  120A  118A  2463   	fcall	_pause
      +       120A  118A         
  1161                           
  1162                           ;eeprom_i2c.c: 1249: I2C_EEOUT(cnt,10);
  1163  06D6  300A               	movlw	10
  1164  06D7  00F8               	movwf	?_I2C_EEOUT
  1165  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  1166  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  1167  06DA  0845               	movf	main@cnt,w
  1168  06DB  120A  118A  23F2   	fcall	_I2C_EEOUT
      +       120A  118A         
  1169                           
  1170                           ;eeprom_i2c.c: 1251: sprintf(buffer,"Directorio: %d ", cnt);
  1171  06E0  3045               	movlw	(STR_4-__stringbase)& (0+255)
  1172  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1173  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1174  06E3  00A0               	movwf	?_sprintf
  1175  06E4  0845               	movf	main@cnt,w
  1176  06E5  00A1               	movwf	?_sprintf+1
  1177  06E6  302C               	movlw	main@buffer& (0+255)
  1178  06E7  01A2               	clrf	?_sprintf+2
  1179  06E8  120A  118A  248E   	fcall	_sprintf
      +       120A  118A         
  1180                           
  1181                           ;eeprom_i2c.c: 1252: for (char x = 0; x<15; x++)
  1182  06ED  01C0               	clrf	main@x_1894
  1183  06EE                     l3638:	
  1184                           
  1185                           ;eeprom_i2c.c: 1253: {
  1186                           ;eeprom_i2c.c: 1254: putch (buffer[x]);
  1187  06EE  0840               	movf	main@x_1894,w
  1188  06EF  3E2C               	addlw	main@buffer& (0+255)
  1189  06F0  0084               	movwf	4
  1190  06F1  0800               	movf	0,w
  1191  06F2  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1192  06F7  300F               	movlw	15
  1193  06F8  0AC0               	incf	main@x_1894,f
  1194  06F9  0240               	subwf	main@x_1894,w
  1195  06FA  1C03               	skipc
  1196  06FB  2EEE               	goto	l3638
  1197                           
  1198                           ;eeprom_i2c.c: 1255: }
  1199                           ;eeprom_i2c.c: 1256: putch(0x0D);
  1200  06FC  300D               	movlw	13
  1201  06FD  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1202                           
  1203                           ;eeprom_i2c.c: 1257: putch(0x0A);
  1204  0702  300A               	movlw	10
  1205  0703  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1206                           
  1207                           ;eeprom_i2c.c: 1259: sprintf(buffer,"Valor: %d ", cnt+10);
  1208  0708  3073               	movlw	(STR_5-__stringbase)& (0+255)
  1209  0709  00A0               	movwf	?_sprintf
  1210  070A  0845               	movf	main@cnt,w
  1211  070B  3E0A               	addlw	10
  1212  070C  00A1               	movwf	?_sprintf+1
  1213  070D  3000               	movlw	0
  1214  070E  1803               	skipnc
  1215  070F  3001               	movlw	1
  1216  0710  00A2               	movwf	?_sprintf+2
  1217  0711  302C               	movlw	main@buffer& (0+255)
  1218  0712  120A  118A  248E   	fcall	_sprintf
      +       120A  118A         
  1219                           
  1220                           ;eeprom_i2c.c: 1260: for (char x = 0; x<10; x++)
  1221  0717  01C1               	clrf	main@x_1896
  1222  0718                     l3654:	
  1223                           
  1224                           ;eeprom_i2c.c: 1261: {
  1225                           ;eeprom_i2c.c: 1262: putch (buffer[x]);
  1226  0718  0841               	movf	main@x_1896,w
  1227  0719  3E2C               	addlw	main@buffer& (0+255)
  1228  071A  0084               	movwf	4
  1229  071B  0800               	movf	0,w
  1230  071C  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1231  0721  300A               	movlw	10
  1232  0722  0AC1               	incf	main@x_1896,f
  1233  0723  0241               	subwf	main@x_1896,w
  1234  0724  1C03               	skipc
  1235  0725  2F18               	goto	l3654
  1236                           
  1237                           ;eeprom_i2c.c: 1263: }
  1238                           ;eeprom_i2c.c: 1265: putch(0x0D);
  1239  0726  300D               	movlw	13
  1240  0727  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1241                           
  1242                           ;eeprom_i2c.c: 1266: putch(0x0A);
  1243  072C  300A               	movlw	10
  1244  072D  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1245  0732  3064               	movlw	100
  1246                           
  1247                           ;eeprom_i2c.c: 1269: cnt=cnt+1;
  1248  0733  0AC5               	incf	main@cnt,f
  1249                           
  1250                           ;eeprom_i2c.c: 1270: pause(100);
  1251  0734  00F0               	movwf	?_pause
  1252  0735  01F1               	clrf	?_pause+1
  1253  0736  01F2               	clrf	?_pause+2
  1254  0737  01F3               	clrf	?_pause+3
  1255  0738  120A  118A  2463   	fcall	_pause
      +       120A  118A         
  1256  073D  2EC2               	goto	l3666
  1257  073E                     l3668:	
  1258                           
  1259                           ;eeprom_i2c.c: 1271: }
  1260                           ;eeprom_i2c.c: 1273: putch(0x0D);
  1261  073E  300D               	movlw	13
  1262  073F  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1263                           
  1264                           ;eeprom_i2c.c: 1274: putch(0x0A);
  1265  0744  300A               	movlw	10
  1266  0745  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1267                           
  1268                           ;eeprom_i2c.c: 1275: sprintf(buffer,"Mostrando Lectura ");
  1269  074A  3020               	movlw	(STR_6-__stringbase)& (0+255)
  1270  074B  00A0               	movwf	?_sprintf
  1271  074C  302C               	movlw	main@buffer& (0+255)
  1272  074D  120A  118A  248E   	fcall	_sprintf
      +       120A  118A         
  1273                           
  1274                           ;eeprom_i2c.c: 1276: for (char x = 0; x<18; x++)
  1275  0752  01C2               	clrf	main@x_1898
  1276  0753                     l3678:	
  1277                           
  1278                           ;eeprom_i2c.c: 1277: {
  1279                           ;eeprom_i2c.c: 1278: putch (buffer[x]);
  1280  0753  0842               	movf	main@x_1898,w
  1281  0754  3E2C               	addlw	main@buffer& (0+255)
  1282  0755  0084               	movwf	4
  1283  0756  0800               	movf	0,w
  1284  0757  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1285  075C  3012               	movlw	18
  1286  075D  0AC2               	incf	main@x_1898,f
  1287  075E  0242               	subwf	main@x_1898,w
  1288  075F  1C03               	skipc
  1289  0760  2F53               	goto	l3678
  1290                           
  1291                           ;eeprom_i2c.c: 1279: }
  1292                           ;eeprom_i2c.c: 1280: pause(100);
  1293  0761  3064               	movlw	100
  1294  0762  00F0               	movwf	?_pause
  1295  0763  01F1               	clrf	?_pause+1
  1296  0764  01F2               	clrf	?_pause+2
  1297  0765  01F3               	clrf	?_pause+3
  1298  0766  120A  118A  2463   	fcall	_pause
      +       120A  118A         
  1299                           
  1300                           ;eeprom_i2c.c: 1281: putch(0x0D);
  1301  076B  300D               	movlw	13
  1302  076C  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1303                           
  1304                           ;eeprom_i2c.c: 1282: putch(0x0A);
  1305  0771  300A               	movlw	10
  1306  0772  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1307                           
  1308                           ;eeprom_i2c.c: 1284: cnt=0;
  1309  0777  01C5               	clrf	main@cnt
  1310  0778                     l3726:	
  1311                           ;eeprom_i2c.c: 1289: while(cnt <= 20)
  1312                           
  1313  0778  3015               	movlw	21
  1314  0779  0245               	subwf	main@cnt,w
  1315  077A  1803               	btfsc	3,0
  1316  077B  2FFD               	goto	l1327
  1317                           
  1318                           ;eeprom_i2c.c: 1290: {
  1319                           ;eeprom_i2c.c: 1291: val = I2C_EEIN(cnt);
  1320  077C  0845               	movf	main@cnt,w
  1321  077D  120A  118A  240B   	fcall	_I2C_EEIN
      +       120A  118A         
  1322  0782  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0783  00BB               	movwf	main@val
  1324                           
  1325                           ;eeprom_i2c.c: 1292: PORTB = I2C_EEIN(cnt);
  1326  0784  0845               	movf	main@cnt,w
  1327  0785  120A  118A  240B   	fcall	_I2C_EEIN
      +       120A  118A         
  1328  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1329  078B  0086               	movwf	6	;volatile
  1330                           
  1331                           ;eeprom_i2c.c: 1293: pause (300);
  1332  078C  3001               	movlw	1
  1333  078D  01F3               	clrf	?_pause+3
  1334  078E  01F2               	clrf	?_pause+2
  1335  078F  00F1               	movwf	?_pause+1
  1336  0790  302C               	movlw	44
  1337  0791  00F0               	movwf	?_pause
  1338  0792  120A  118A  2463   	fcall	_pause
      +       120A  118A         
  1339                           
  1340                           ;eeprom_i2c.c: 1295: sprintf(buffer,"Directorio: %i ", cnt);
  1341  0797  3055               	movlw	(STR_7-__stringbase)& (0+255)
  1342  0798  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0799  1303               	bcf	3,6	;RP1=0, select bank0
  1344  079A  00A0               	movwf	?_sprintf
  1345  079B  0845               	movf	main@cnt,w
  1346  079C  00A1               	movwf	?_sprintf+1
  1347  079D  302C               	movlw	main@buffer& (0+255)
  1348  079E  01A2               	clrf	?_sprintf+2
  1349  079F  120A  118A  248E   	fcall	_sprintf
      +       120A  118A         
  1350                           
  1351                           ;eeprom_i2c.c: 1296: for (char x = 0; x<16; x++)
  1352  07A4  01C3               	clrf	main@x_1901
  1353  07A5                     l3700:	
  1354                           
  1355                           ;eeprom_i2c.c: 1297: {
  1356                           ;eeprom_i2c.c: 1298: putch (buffer[x]);
  1357  07A5  0843               	movf	main@x_1901,w
  1358  07A6  3E2C               	addlw	main@buffer& (0+255)
  1359  07A7  0084               	movwf	4
  1360  07A8  0800               	movf	0,w
  1361  07A9  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1362  07AE  3010               	movlw	16
  1363  07AF  0AC3               	incf	main@x_1901,f
  1364  07B0  0243               	subwf	main@x_1901,w
  1365  07B1  1C03               	skipc
  1366  07B2  2FA5               	goto	l3700
  1367                           
  1368                           ;eeprom_i2c.c: 1299: }
  1369                           ;eeprom_i2c.c: 1301: putch(0x0D);
  1370  07B3  300D               	movlw	13
  1371  07B4  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1372                           
  1373                           ;eeprom_i2c.c: 1302: putch(0x0A);
  1374  07B9  300A               	movlw	10
  1375  07BA  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1376                           
  1377                           ;eeprom_i2c.c: 1304: sprintf(buffer,"Valor: %i ", val);
  1378  07BF  307E               	movlw	(STR_8-__stringbase)& (0+255)
  1379  07C0  00A0               	movwf	?_sprintf
  1380  07C1  083B               	movf	main@val,w
  1381  07C2  00A1               	movwf	?_sprintf+1
  1382  07C3  302C               	movlw	main@buffer& (0+255)
  1383  07C4  01A2               	clrf	?_sprintf+2
  1384  07C5  120A  118A  248E   	fcall	_sprintf
      +       120A  118A         
  1385                           
  1386                           ;eeprom_i2c.c: 1305: for (char x = 0; x<10; x++)
  1387  07CA  01C4               	clrf	main@x_1903
  1388  07CB                     l3716:	
  1389                           
  1390                           ;eeprom_i2c.c: 1306: {
  1391                           ;eeprom_i2c.c: 1307: putch (buffer[x]);
  1392  07CB  0844               	movf	main@x_1903,w
  1393  07CC  3E2C               	addlw	main@buffer& (0+255)
  1394  07CD  0084               	movwf	4
  1395  07CE  0800               	movf	0,w
  1396  07CF  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1397  07D4  300A               	movlw	10
  1398  07D5  0AC4               	incf	main@x_1903,f
  1399  07D6  0244               	subwf	main@x_1903,w
  1400  07D7  1C03               	skipc
  1401  07D8  2FCB               	goto	l3716
  1402                           
  1403                           ;eeprom_i2c.c: 1308: }
  1404                           ;eeprom_i2c.c: 1309: pause(100);
  1405  07D9  3064               	movlw	100
  1406  07DA  00F0               	movwf	?_pause
  1407  07DB  01F1               	clrf	?_pause+1
  1408  07DC  01F2               	clrf	?_pause+2
  1409  07DD  01F3               	clrf	?_pause+3
  1410  07DE  120A  118A  2463   	fcall	_pause
      +       120A  118A         
  1411                           
  1412                           ;eeprom_i2c.c: 1311: putch(0x0D);
  1413  07E3  300D               	movlw	13
  1414  07E4  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1415                           
  1416                           ;eeprom_i2c.c: 1312: putch(0x0A);
  1417  07E9  300A               	movlw	10
  1418  07EA  120A  118A  239E   	fcall	_putch
      +       120A  118A         
  1419                           
  1420                           ;eeprom_i2c.c: 1324: pause(255);
  1421  07EF  30FF               	movlw	255
  1422  07F0  00F0               	movwf	?_pause
  1423  07F1  01F1               	clrf	?_pause+1
  1424  07F2  01F2               	clrf	?_pause+2
  1425  07F3  01F3               	clrf	?_pause+3
  1426  07F4  120A  118A  2463   	fcall	_pause
      +       120A  118A         
  1427                           
  1428                           ;eeprom_i2c.c: 1325: cnt=cnt + 1;
  1429  07F9  1283               	bcf	3,5	;RP0=0, select bank0
  1430  07FA  1303               	bcf	3,6	;RP1=0, select bank0
  1431  07FB  0AC5               	incf	main@cnt,f
  1432  07FC  2F78               	goto	l3726
  1433  07FD                     l1327:	
  1434  07FD  120A  118A  2800   	ljmp	start
  1435  0800                     __end_of_main:	
  1436                           
  1437                           	psect	text437
  1438  03F2                     __ptext437:	
  1439 ;; =============== function _I2C_EEIN ends ============
  1440                           
  1441                           
  1442 ;; *************** function _I2C_EEOUT *****************
  1443 ;; Defined at:
  1444 ;;		line 1114 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  address         1    wreg     unsigned char 
  1447 ;;  data            1    8[COMMON] unsigned char 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  address         1    9[COMMON] unsigned char 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;		None               void
  1452 ;; Registers used:
  1453 ;;		wreg, status,2, status,0, pclath, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : 160/0
  1456 ;;		On exit  : 100/0
  1457 ;;		Unchanged: FFE9F/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1459 ;;      Params:         1       0       0       0       0
  1460 ;;      Locals:         1       0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0
  1462 ;;      Totals:         2       0       0       0       0
  1463 ;;Total ram usage:        2 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    2
  1466 ;; This function calls:
  1467 ;;		_i2c_start
  1468 ;;		_i2c_write
  1469 ;;		_i2c_stop
  1470 ;;		_pause
  1471 ;; This function is called by:
  1472 ;;		_main
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475  03F2                     _I2C_EEOUT:	
  1476                           
  1477                           ; Regs used in _I2C_EEOUT: [wreg+status,2+status,0+pclath+cstack]
  1478                           ;I2C_EEOUT@address stored from wreg
  1479  03F2  00F9               	movwf	I2C_EEOUT@address
  1480                           
  1481                           ;eeprom_i2c.c: 1115: i2c_start();
  1482  03F3  242D  120A  118A   	fcall	_i2c_start
  1483                           
  1484                           ;eeprom_i2c.c: 1116: i2c_write(0xa0);
  1485  03F6  30A0               	movlw	160
  1486  03F7  2427  120A  118A   	fcall	_i2c_write
  1487                           
  1488                           ;eeprom_i2c.c: 1117: i2c_write(address);
  1489  03FA  0879               	movf	I2C_EEOUT@address,w
  1490  03FB  2427  120A  118A   	fcall	_i2c_write
  1491                           
  1492                           ;eeprom_i2c.c: 1118: i2c_write(data);
  1493  03FE  0878               	movf	I2C_EEOUT@data,w
  1494  03FF  2427  120A  118A   	fcall	_i2c_write
  1495                           
  1496                           ;eeprom_i2c.c: 1119: i2c_stop();
  1497  0402  245D  120A  118A   	fcall	_i2c_stop
  1498                           
  1499                           ;eeprom_i2c.c: 1120: pause(11);
  1500  0405  300B               	movlw	11
  1501  0406  00F0               	movwf	?_pause
  1502  0407  01F1               	clrf	?_pause+1
  1503  0408  01F2               	clrf	?_pause+2
  1504  0409  01F3               	clrf	?_pause+3
  1505  040A  2C63               	ljmp	l3370
  1506  040B                     __end_of_I2C_EEOUT:	
  1507  040B                     __ptext436:	
  1508 ;; =============== function _main ends ============
  1509                           
  1510                           
  1511 ;; *************** function _I2C_EEIN *****************
  1512 ;; Defined at:
  1513 ;;		line 1129 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  address         1    wreg     unsigned char 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  address         1    9[COMMON] unsigned char 
  1518 ;;  data            1   10[COMMON] unsigned char 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      unsigned char 
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, status,0, pclath, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 160/0
  1525 ;;		On exit  : 160/20
  1526 ;;		Unchanged: FFE9F/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1528 ;;      Params:         0       0       0       0       0
  1529 ;;      Locals:         2       0       0       0       0
  1530 ;;      Temps:          0       0       0       0       0
  1531 ;;      Totals:         2       0       0       0       0
  1532 ;;Total ram usage:        2 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    2
  1535 ;; This function calls:
  1536 ;;		_i2c_start
  1537 ;;		_i2c_write
  1538 ;;		_i2c_repStart
  1539 ;;		_i2c_read
  1540 ;;		_i2c_stop
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545  040B                     _I2C_EEIN:	
  1546                           
  1547                           ; Regs used in _I2C_EEIN: [wreg+status,2+status,0+pclath+cstack]
  1548                           ;I2C_EEIN@address stored from wreg
  1549  040B  00F9               	movwf	I2C_EEIN@address
  1550                           
  1551                           ;eeprom_i2c.c: 1130: unsigned char data;
  1552                           ;eeprom_i2c.c: 1132: i2c_start();
  1553  040C  242D  120A  118A   	fcall	_i2c_start
  1554                           
  1555                           ;eeprom_i2c.c: 1133: i2c_write(0xa0);
  1556  040F  30A0               	movlw	160
  1557  0410  2427  120A  118A   	fcall	_i2c_write
  1558                           
  1559                           ;eeprom_i2c.c: 1134: i2c_write(address);
  1560  0413  0879               	movf	I2C_EEIN@address,w
  1561  0414  2427  120A  118A   	fcall	_i2c_write
  1562                           
  1563                           ;eeprom_i2c.c: 1135: i2c_repStart();
  1564  0417  2460  120A  118A   	fcall	_i2c_repStart
  1565                           
  1566                           ;eeprom_i2c.c: 1136: i2c_write(0xa1);
  1567  041A  30A1               	movlw	161
  1568  041B  2427  120A  118A   	fcall	_i2c_write
  1569                           
  1570                           ;eeprom_i2c.c: 1137: data=i2c_read(0);
  1571  041E  3000               	movlw	0
  1572  041F  2430  120A  118A   	fcall	_i2c_read
  1573  0422  0875               	movf	?_i2c_read,w
  1574  0423  00FA               	movwf	I2C_EEIN@data
  1575                           
  1576                           ;eeprom_i2c.c: 1138: i2c_stop();
  1577  0424  245D               	fcall	_i2c_stop
  1578                           
  1579                           ;eeprom_i2c.c: 1139: return(data);
  1580  0425  087A               	movf	I2C_EEIN@data,w
  1581  0426  0008               	return
  1582  0427                     __end_of_I2C_EEIN:	
  1583  0427                     __ptext439:	
  1584 ;; =============== function _sprintf ends ============
  1585                           
  1586                           
  1587 ;; *************** function _i2c_write *****************
  1588 ;; Defined at:
  1589 ;;		line 1101 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  i2cWriteData    1    wreg     unsigned char 
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;  i2cWriteData    1    5[COMMON] unsigned char 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      unsigned char 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2, status,0, pclath, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 140/20
  1600 ;;		On exit  : 160/0
  1601 ;;		Unchanged: FFE9F/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1603 ;;      Params:         0       0       0       0       0
  1604 ;;      Locals:         1       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0
  1606 ;;      Totals:         1       0       0       0       0
  1607 ;;Total ram usage:        1 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:    1
  1610 ;; This function calls:
  1611 ;;		_i2c_waitForIdle
  1612 ;; This function is called by:
  1613 ;;		_I2C_EEOUT
  1614 ;;		_I2C_EEIN
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617  0427                     _i2c_write:	
  1618                           
  1619                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  1620                           ;i2c_write@i2cWriteData stored from wreg
  1621  0427  00F5               	movwf	i2c_write@i2cWriteData
  1622                           
  1623                           ;eeprom_i2c.c: 1102: i2c_waitForIdle();
  1624  0428  2449               	fcall	_i2c_waitForIdle
  1625                           
  1626                           ;eeprom_i2c.c: 1103: SSPBUF = i2cWriteData;
  1627  0429  0875               	movf	i2c_write@i2cWriteData,w
  1628  042A  1283               	bcf	3,5	;RP0=0, select bank0
  1629  042B  0093               	movwf	19	;volatile
  1630                           
  1631                           ;eeprom_i2c.c: 1105: return ( ! ACKSTAT );
  1632                           ;	Return value of _i2c_write is never used
  1633  042C  0008               	return
  1634  042D                     __end_of_i2c_write:	
  1635  042D                     __ptext443:	
  1636 ;; =============== function _i2c_repStart ends ============
  1637                           
  1638                           
  1639 ;; *************** function _i2c_start *****************
  1640 ;; Defined at:
  1641 ;;		line 1048 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;		None
  1646 ;; Return value:  Size  Location     Type
  1647 ;;		None               void
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0, pclath, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 160/0
  1652 ;;		On exit  : 160/20
  1653 ;;		Unchanged: FFE9F/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1655 ;;      Params:         0       0       0       0       0
  1656 ;;      Locals:         0       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0
  1658 ;;      Totals:         0       0       0       0       0
  1659 ;;Total ram usage:        0 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; Hardware stack levels required when called:    1
  1662 ;; This function calls:
  1663 ;;		_i2c_waitForIdle
  1664 ;; This function is called by:
  1665 ;;		_I2C_EEOUT
  1666 ;;		_I2C_EEIN
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669  042D                     _i2c_start:	
  1670                           
  1671                           ;eeprom_i2c.c: 1049: i2c_waitForIdle();
  1672                           
  1673                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  1674  042D  2449               	fcall	_i2c_waitForIdle
  1675                           
  1676                           ;eeprom_i2c.c: 1050: SEN=1;
  1677  042E  1411               	bsf	17,0
  1678  042F  0008               	return
  1679  0430                     __end_of_i2c_start:	
  1680  0430                     __ptext440:	
  1681 ;; =============== function _i2c_write ends ============
  1682                           
  1683                           
  1684 ;; *************** function _i2c_read *****************
  1685 ;; Defined at:
  1686 ;;		line 1072 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  ack             1    wreg     unsigned char 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  ack             1    7[COMMON] unsigned char 
  1691 ;;  i2cReadData     1    8[COMMON] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  2    5[COMMON] int 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0, pclath, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 160/0
  1698 ;;		On exit  : 160/20
  1699 ;;		Unchanged: FFE9F/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1701 ;;      Params:         2       0       0       0       0
  1702 ;;      Locals:         2       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0
  1704 ;;      Totals:         4       0       0       0       0
  1705 ;;Total ram usage:        4 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    1
  1708 ;; This function calls:
  1709 ;;		_i2c_waitForIdle
  1710 ;; This function is called by:
  1711 ;;		_I2C_EEIN
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714  0430                     _i2c_read:	
  1715                           
  1716                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  1717                           ;i2c_read@ack stored from wreg
  1718  0430  00F7               	movwf	i2c_read@ack
  1719                           
  1720                           ;eeprom_i2c.c: 1073: unsigned char i2cReadData;
  1721                           ;eeprom_i2c.c: 1075: i2c_waitForIdle();
  1722  0431  2449  120A  118A   	fcall	_i2c_waitForIdle
  1723                           
  1724                           ;eeprom_i2c.c: 1077: RCEN=1;
  1725  0434  1591               	bsf	17,3
  1726                           
  1727                           ;eeprom_i2c.c: 1079: i2c_waitForIdle();
  1728  0435  2449  120A  118A   	fcall	_i2c_waitForIdle
  1729                           
  1730                           ;eeprom_i2c.c: 1081: i2cReadData = SSPBUF;
  1731  0438  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0439  0813               	movf	19,w	;volatile
  1733  043A  00F8               	movwf	i2c_read@i2cReadData
  1734                           
  1735                           ;eeprom_i2c.c: 1083: i2c_waitForIdle();
  1736  043B  2449  120A  118A   	fcall	_i2c_waitForIdle
  1737                           
  1738                           ;eeprom_i2c.c: 1085: if ( ack )
  1739  043E  0877               	movf	i2c_read@ack,w
  1740  043F  1903               	btfsc	3,2
  1741  0440  2C43               	goto	l1291
  1742                           
  1743                           ;eeprom_i2c.c: 1086: {
  1744                           ;eeprom_i2c.c: 1087: ACKDT=0;
  1745  0441  1291               	bcf	17,5
  1746                           
  1747                           ;eeprom_i2c.c: 1088: }
  1748  0442  2C44               	goto	l1292
  1749  0443                     l1291:	
  1750                           
  1751                           ;eeprom_i2c.c: 1089: else
  1752                           ;eeprom_i2c.c: 1090: {
  1753                           ;eeprom_i2c.c: 1091: ACKDT=1;
  1754  0443  1691               	bsf	17,5
  1755  0444                     l1292:	
  1756                           
  1757                           ;eeprom_i2c.c: 1092: }
  1758                           ;eeprom_i2c.c: 1093: ACKEN=1;
  1759  0444  1611               	bsf	17,4
  1760                           
  1761                           ;eeprom_i2c.c: 1095: return( i2cReadData );
  1762  0445  0878               	movf	i2c_read@i2cReadData,w
  1763  0446  00F5               	movwf	?_i2c_read
  1764  0447  01F6               	clrf	?_i2c_read+1
  1765  0448  0008               	return
  1766  0449                     __end_of_i2c_read:	
  1767  0449                     __ptext450:	
  1768 ;; =============== function ___lwdiv ends ============
  1769                           
  1770                           
  1771 ;; *************** function _i2c_waitForIdle *****************
  1772 ;; Defined at:
  1773 ;;		line 1041 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;		None               void
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0
  1782 ;; Tracked objects:
  1783 ;;		On entry : 140/20
  1784 ;;		On exit  : 160/20
  1785 ;;		Unchanged: FFE9F/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         0       0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0
  1789 ;;      Temps:          5       0       0       0       0
  1790 ;;      Totals:         5       0       0       0       0
  1791 ;;Total ram usage:        5 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_i2c_start
  1797 ;;		_i2c_repStart
  1798 ;;		_i2c_stop
  1799 ;;		_i2c_read
  1800 ;;		_i2c_write
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803  0449                     _i2c_waitForIdle:	
  1804  0449                     l3322:	
  1805                           ;eeprom_i2c.c: 1042: while (( SSPCON2 & 0x1F ) | R_W ) {};
  1806                           
  1807                           ; Regs used in _i2c_waitForIdle: [wreg+status,2+status,0]
  1808                           
  1809  0449  1003               	clrc
  1810  044A  1683               	bsf	3,5	;RP0=1, select bank1
  1811  044B  1914               	btfsc	20,2
  1812  044C  1403               	setc
  1813  044D  3000               	movlw	0
  1814  044E  1803               	skipnc
  1815  044F  3001               	movlw	1
  1816  0450  00F0               	movwf	??_i2c_waitForIdle
  1817  0451  301F               	movlw	31
  1818  0452  01F1               	clrf	??_i2c_waitForIdle+1
  1819  0453  0511               	andwf	17,w
  1820  0454  00F2               	movwf	??_i2c_waitForIdle+2
  1821  0455  0470               	iorwf	??_i2c_waitForIdle,w
  1822  0456  00F3               	movwf	??_i2c_waitForIdle+3
  1823  0457  0871               	movf	??_i2c_waitForIdle+1,w
  1824  0458  00F4               	movwf	??_i2c_waitForIdle+4
  1825  0459  0473               	iorwf	??_i2c_waitForIdle+3,w
  1826  045A  1903               	btfsc	3,2
  1827  045B  0008               	return
  1828  045C  2C49               	goto	l3322
  1829  045D                     __end_of_i2c_waitForIdle:	
  1830  045D                     __ptext441:	
  1831 ;; =============== function _i2c_read ends ============
  1832                           
  1833                           
  1834 ;; *************** function _i2c_stop *****************
  1835 ;; Defined at:
  1836 ;;		line 1064 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;		None               void
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0, pclath, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 140/20
  1847 ;;		On exit  : 160/20
  1848 ;;		Unchanged: FFE9F/0
  1849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1850 ;;      Params:         0       0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0
  1852 ;;      Temps:          0       0       0       0       0
  1853 ;;      Totals:         0       0       0       0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    1
  1857 ;; This function calls:
  1858 ;;		_i2c_waitForIdle
  1859 ;; This function is called by:
  1860 ;;		_I2C_EEOUT
  1861 ;;		_I2C_EEIN
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864  045D                     _i2c_stop:	
  1865                           
  1866                           ;eeprom_i2c.c: 1065: i2c_waitForIdle();
  1867                           
  1868                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  1869  045D  2449               	fcall	_i2c_waitForIdle
  1870                           
  1871                           ;eeprom_i2c.c: 1066: PEN=1;
  1872  045E  1511               	bsf	17,2
  1873  045F  0008               	return
  1874  0460                     __end_of_i2c_stop:	
  1875  0460                     __ptext442:	
  1876 ;; =============== function _i2c_stop ends ============
  1877                           
  1878                           
  1879 ;; *************** function _i2c_repStart *****************
  1880 ;; Defined at:
  1881 ;;		line 1056 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;		None
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;		None               void
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0, pclath, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 160/0
  1892 ;;		On exit  : 160/20
  1893 ;;		Unchanged: FFE9F/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1895 ;;      Params:         0       0       0       0       0
  1896 ;;      Locals:         0       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0
  1898 ;;      Totals:         0       0       0       0       0
  1899 ;;Total ram usage:        0 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    1
  1902 ;; This function calls:
  1903 ;;		_i2c_waitForIdle
  1904 ;; This function is called by:
  1905 ;;		_I2C_EEIN
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908  0460                     _i2c_repStart:	
  1909                           
  1910                           ;eeprom_i2c.c: 1057: i2c_waitForIdle();
  1911                           
  1912                           ; Regs used in _i2c_repStart: [wreg+status,2+status,0+pclath+cstack]
  1913  0460  2449               	fcall	_i2c_waitForIdle
  1914                           
  1915                           ;eeprom_i2c.c: 1058: RSEN=1;
  1916  0461  1491               	bsf	17,1
  1917  0462  0008               	return
  1918  0463                     __end_of_i2c_repStart:	
  1919  0463                     __ptext447:	
  1920 ;; =============== function _lcd_clear ends ============
  1921                           
  1922                           
  1923 ;; *************** function _pause *****************
  1924 ;; Defined at:
  1925 ;;		line 198 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  usvalue         4    0[COMMON] unsigned long 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  x               4    4[COMMON] unsigned long 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;		None               void
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0, pclath, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: FFF9F/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1939 ;;      Params:         4       0       0       0       0
  1940 ;;      Locals:         4       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0
  1942 ;;      Totals:         8       0       0       0       0
  1943 ;;Total ram usage:        8 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    1
  1946 ;; This function calls:
  1947 ;;		_msecbase
  1948 ;; This function is called by:
  1949 ;;		_I2C_EEOUT
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953  0463                     _pause:	
  1954  0463                     l3370:	
  1955                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  1956                           
  1957                           
  1958                           ;eeprom_i2c.c: 199: unsigned long x;
  1959                           ;eeprom_i2c.c: 200: for (x=1; x<=(usvalue); x++)
  1960  0463  01F4               	clrf	pause@x
  1961  0464  0AF4               	incf	pause@x,f
  1962  0465  01F5               	clrf	pause@x+1
  1963  0466  01F6               	clrf	pause@x+2
  1964  0467  01F7               	clrf	pause@x+3
  1965  0468                     l3376:	
  1966  0468  0877               	movf	pause@x+3,w
  1967  0469  0273               	subwf	pause@usvalue+3,w
  1968  046A  1D03               	skipz
  1969  046B  2C76               	goto	u435
  1970  046C  0876               	movf	pause@x+2,w
  1971  046D  0272               	subwf	pause@usvalue+2,w
  1972  046E  1D03               	skipz
  1973  046F  2C76               	goto	u435
  1974  0470  0875               	movf	pause@x+1,w
  1975  0471  0271               	subwf	pause@usvalue+1,w
  1976  0472  1D03               	skipz
  1977  0473  2C76               	goto	u435
  1978  0474  0874               	movf	pause@x,w
  1979  0475  0270               	subwf	pause@usvalue,w
  1980  0476                     u435:	
  1981  0476  1C03               	btfss	3,0
  1982  0477  0008               	return
  1983                           
  1984                           ;eeprom_i2c.c: 201: {
  1985                           ;eeprom_i2c.c: 202: msecbase();
  1986  0478  2483  120A  118A   	fcall	_msecbase
  1987  047B  0AF4               	incf	pause@x,f
  1988  047C  1903               	skipnz
  1989  047D  0AF5               	incf	pause@x+1,f
  1990  047E  1903               	skipnz
  1991  047F  0AF6               	incf	pause@x+2,f
  1992  0480  1903               	skipnz
  1993  0481  0AF7               	incf	pause@x+3,f
  1994  0482  2C68               	goto	l3376
  1995  0483                     __end_of_pause:	
  1996  0483                     __ptext454:	
  1997 ;; =============== function _lcd_write ends ============
  1998                           
  1999                           
  2000 ;; *************** function _msecbase *****************
  2001 ;; Defined at:
  2002 ;;		line 182 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;		None               void
  2009 ;; Registers used:
  2010 ;;		wreg
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: FFF9F/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2016 ;;      Params:         0       0       0       0       0
  2017 ;;      Locals:         0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0
  2019 ;;      Totals:         0       0       0       0       0
  2020 ;;Total ram usage:        0 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; This function calls:
  2023 ;;		Nothing
  2024 ;; This function is called by:
  2025 ;;		_pause
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028  0483                     _msecbase:	
  2029                           
  2030                           ;eeprom_i2c.c: 183: OPTION_REG = 0b00000011;
  2031                           
  2032                           ; Regs used in _msecbase: [wreg]
  2033  0483  3003               	movlw	3
  2034  0484  1683               	bsf	3,5	;RP0=1, select bank1
  2035  0485  1303               	bcf	3,6	;RP1=0, select bank1
  2036  0486  0081               	movwf	1	;volatile
  2037                           
  2038                           ;eeprom_i2c.c: 184: TMR0 = 0xD;
  2039  0487  300D               	movlw	13
  2040  0488  1283               	bcf	3,5	;RP0=0, select bank0
  2041  0489  0081               	movwf	1	;volatile
  2042  048A                     l1066:	
  2043                           ;eeprom_i2c.c: 185: while(!T0IF);
  2044                           
  2045  048A  1D0B               	btfss	11,2
  2046  048B  2C8A               	goto	l1066
  2047                           
  2048                           ;eeprom_i2c.c: 186: T0IF = 0;
  2049  048C  110B               	bcf	11,2
  2050  048D  0008               	return
  2051  048E                     __end_of_msecbase:	
  2052                           
  2053                           	psect	text438
  2054  048E                     __ptext438:	
  2055 ;; =============== function _I2C_EEOUT ends ============
  2056                           
  2057                           
  2058 ;; *************** function _sprintf *****************
  2059 ;; Defined at:
  2060 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  sp              1    wreg     PTR unsigned char 
  2063 ;;		 -> main@buffer(15), 
  2064 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2065 ;;		 -> STR_8(11), STR_7(16), STR_6(19), STR_5(11), 
  2066 ;;		 -> STR_4(16), STR_3(18), STR_1(21), 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  sp              1   10[BANK0 ] PTR unsigned char 
  2069 ;;		 -> main@buffer(15), 
  2070 ;;  _val            4    6[BANK0 ] struct .
  2071 ;;  c               1   11[BANK0 ] char 
  2072 ;;  prec            1    5[BANK0 ] char 
  2073 ;;  flag            1    4[BANK0 ] unsigned char 
  2074 ;;  ap              1    3[BANK0 ] PTR void [1]
  2075 ;;		 -> ?_sprintf(2), 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  2    0[BANK0 ] int 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 60/0
  2082 ;;		On exit  : 160/0
  2083 ;;		Unchanged: FFE9F/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         0       3       0       0       0
  2086 ;;      Locals:         0       9       0       0       0
  2087 ;;      Temps:          2       0       0       0       0
  2088 ;;      Totals:         2      12       0       0       0
  2089 ;;Total ram usage:       14 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    1
  2092 ;; This function calls:
  2093 ;;		___lwdiv
  2094 ;;		___lwmod
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099  048E                     _sprintf:	
  2100                           
  2101                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2102                           ;sprintf@sp stored from wreg
  2103  048E  00AA               	movwf	sprintf@sp
  2104  048F  3021               	movlw	(?_sprintf+1)& (0+255)
  2105  0490  00A3               	movwf	sprintf@ap
  2106  0491                     l3480:	
  2107  0491  0820               	movf	sprintf@f,w
  2108  0492  0AA0               	incf	sprintf@f,f
  2109  0493  0084               	movwf	4
  2110  0494  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2111  0499  00AB               	movwf	sprintf@c
  2112  049A  08AB               	movf	sprintf@c,f
  2113  049B  1903               	btfsc	3,2
  2114  049C  2D24               	goto	l3482
  2115  049D  082B               	movf	sprintf@c,w
  2116  049E  3A25               	xorlw	37
  2117  049F  1903               	skipnz
  2118  04A0  2CA6               	goto	l3436
  2119  04A1  082A               	movf	sprintf@sp,w
  2120  04A2  2577  120A  118A   	fcall	PL3	;call to abstracted procedure
  2121  04A5  2C91               	goto	l3480
  2122  04A6                     l3436:	
  2123  04A6  01A4               	clrf	sprintf@flag
  2124  04A7  0820               	movf	sprintf@f,w
  2125  04A8  0AA0               	incf	sprintf@f,f
  2126  04A9  0084               	movwf	4
  2127  04AA  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2128  04AF  00AB               	movwf	sprintf@c
  2129                           
  2130                           ; Switch size 1, requested type "space"
  2131                           ; Number of cases is 3, Range of values is 0 to 105
  2132                           ; switch strategies available:
  2133                           ; Name         Instructions Cycles
  2134                           ; simple_byte           10     6 (average)
  2135                           ; jumptable            260     6 (fixed)
  2136                           ; rangetable           110     6 (fixed)
  2137                           ; spacedrange          218     9 (fixed)
  2138                           ; locatedrange         106     3 (fixed)
  2139                           ;	Chosen strategy is simple_byte
  2140  04B0  3A00               	xorlw	0	; case 0
  2141  04B1  1903               	skipnz
  2142  04B2  2D24               	goto	l3482
  2143  04B3  3A64               	xorlw	100	; case 100
  2144  04B4  1903               	skipnz
  2145  04B5  2CBA               	goto	l3442
  2146  04B6  3A0D               	xorlw	13	; case 105
  2147  04B7  1903               	skipnz
  2148  04B8  2CBA               	goto	l3442
  2149  04B9  2C91               	goto	l3480
  2150  04BA                     l3442:	
  2151  04BA  0823               	movf	sprintf@ap,w
  2152  04BB  0084               	movwf	4
  2153  04BC  1383               	bcf	3,7	;select IRP bank0
  2154  04BD  0800               	movf	0,w
  2155  04BE  00A6               	movwf	sprintf@_val
  2156  04BF  0A84               	incf	4,f
  2157  04C0  0800               	movf	0,w
  2158  04C1  00A7               	movwf	sprintf@_val+1
  2159  04C2  0AA3               	incf	sprintf@ap,f
  2160  04C3  0AA3               	incf	sprintf@ap,f
  2161  04C4  1FA7               	btfss	sprintf@_val+1,7
  2162  04C5  2CCD               	goto	l3452
  2163  04C6  3003               	movlw	3
  2164  04C7  04A4               	iorwf	sprintf@flag,f
  2165  04C8  09A6               	comf	sprintf@_val,f
  2166  04C9  09A7               	comf	sprintf@_val+1,f
  2167  04CA  0AA6               	incf	sprintf@_val,f
  2168  04CB  1903               	skipnz
  2169  04CC  0AA7               	incf	sprintf@_val+1,f
  2170  04CD                     l3452:	
  2171  04CD  01AB               	clrf	sprintf@c
  2172  04CE  0AAB               	incf	sprintf@c,f
  2173  04CF                     l3456:	
  2174  04CF  1003               	clrc
  2175  04D0  0D2B               	rlf	sprintf@c,w
  2176  04D1  3E01               	addlw	low (_dpowers-__stringbase)
  2177  04D2  0084               	movwf	4
  2178  04D3  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2179  04D8  00FC               	movwf	??_sprintf
  2180  04D9  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2181  04DE  00FD               	movwf	??_sprintf+1
  2182  04DF  0227               	subwf	sprintf@_val+1,w
  2183  04E0  1D03               	skipz
  2184  04E1  2CE4               	goto	u485
  2185  04E2  087C               	movf	??_sprintf,w
  2186  04E3  0226               	subwf	sprintf@_val,w
  2187  04E4                     u485:	
  2188  04E4  1C03               	btfss	3,0
  2189  04E5  2CEB               	goto	l3464
  2190  04E6  0AAB               	incf	sprintf@c,f
  2191  04E7  082B               	movf	sprintf@c,w
  2192  04E8  3A05               	xorlw	5
  2193  04E9  1D03               	skipz
  2194  04EA  2CCF               	goto	l3456
  2195  04EB                     l3464:	
  2196  04EB  0824               	movf	sprintf@flag,w
  2197  04EC  3903               	andlw	3
  2198  04ED  1903               	btfsc	3,2
  2199  04EE  2CF5               	goto	l3470
  2200  04EF  082A               	movf	sprintf@sp,w
  2201  04F0  0084               	movwf	4
  2202  04F1  302D               	movlw	45
  2203  04F2  1383               	bcf	3,7	;select IRP bank0
  2204  04F3  0080               	movwf	0
  2205  04F4  0AAA               	incf	sprintf@sp,f
  2206  04F5                     l3470:	
  2207  04F5  082B               	movf	sprintf@c,w
  2208  04F6  00A5               	movwf	sprintf@prec
  2209  04F7  2D20               	goto	l3478
  2210  04F8                     l3472:	
  2211  04F8  300A               	movlw	10
  2212  04F9  00F7               	movwf	?___lwmod
  2213  04FA  01F8               	clrf	?___lwmod+1
  2214  04FB  1003               	clrc
  2215  04FC  0D25               	rlf	sprintf@prec,w
  2216  04FD  3E01               	addlw	low (_dpowers-__stringbase)
  2217  04FE  0084               	movwf	4
  2218  04FF  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2219  0504  00F0               	movwf	?___lwdiv
  2220  0505  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2221  050A  00F1               	movwf	?___lwdiv+1
  2222  050B  0827               	movf	sprintf@_val+1,w
  2223  050C  00F3               	movwf	?___lwdiv+3
  2224  050D  0826               	movf	sprintf@_val,w
  2225  050E  00F2               	movwf	?___lwdiv+2
  2226  050F  2529  120A  118A   	fcall	___lwdiv
  2227  0512  0871               	movf	?___lwdiv+1,w
  2228  0513  00FA               	movwf	?___lwmod+3
  2229  0514  0870               	movf	?___lwdiv,w
  2230  0515  00F9               	movwf	?___lwmod+2
  2231  0516  2553  120A  118A   	fcall	___lwmod
  2232  0519  0877               	movf	?___lwmod,w
  2233  051A  3E30               	addlw	48
  2234  051B  00AB               	movwf	sprintf@c
  2235  051C  082A               	movf	sprintf@sp,w
  2236  051D  2577  120A  118A   	fcall	PL3	;call to abstracted procedure
  2237  0520                     l3478:	
  2238  0520  03A5               	decf	sprintf@prec,f
  2239  0521  0F25               	incfsz	sprintf@prec,w
  2240  0522  2CF8               	goto	l3472
  2241  0523  2C91               	goto	l3480
  2242  0524                     l3482:	
  2243  0524  082A               	movf	sprintf@sp,w
  2244  0525  0084               	movwf	4
  2245  0526  1383               	bcf	3,7	;select IRP bank0
  2246  0527  0180               	clrf	0
  2247  0528  0008               	return
  2248  0529                     __end_of_sprintf:	
  2249  0529                     __ptext449:	
  2250 ;; =============== function ___lwmod ends ============
  2251                           
  2252                           
  2253 ;; *************** function ___lwdiv *****************
  2254 ;; Defined at:
  2255 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  divisor         2    0[COMMON] unsigned int 
  2258 ;;  dividend        2    2[COMMON] unsigned int 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  quotient        2    4[COMMON] unsigned int 
  2261 ;;  counter         1    6[COMMON] unsigned char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  2    0[COMMON] unsigned int 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0
  2266 ;; Tracked objects:
  2267 ;;		On entry : 60/0
  2268 ;;		On exit  : 60/0
  2269 ;;		Unchanged: FFF9F/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2271 ;;      Params:         4       0       0       0       0
  2272 ;;      Locals:         3       0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0
  2274 ;;      Totals:         7       0       0       0       0
  2275 ;;Total ram usage:        7 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_sprintf
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283  0529                     ___lwdiv:	
  2284                           
  2285                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2286  0529  01F4               	clrf	___lwdiv@quotient
  2287  052A  01F5               	clrf	___lwdiv@quotient+1
  2288  052B  0871               	movf	___lwdiv@divisor+1,w
  2289  052C  0470               	iorwf	___lwdiv@divisor,w
  2290  052D  1903               	skipnz
  2291  052E  2D4E               	goto	l3346
  2292  052F  01F6               	clrf	___lwdiv@counter
  2293  0530                     L3:	
  2294  0530  0AF6               	incf	___lwdiv@counter,f
  2295  0531  1BF1               	btfsc	___lwdiv@divisor+1,7
  2296  0532  2D37               	goto	l3334
  2297  0533  1003               	clrc
  2298  0534  0DF0               	rlf	___lwdiv@divisor,f
  2299  0535  0DF1               	rlf	___lwdiv@divisor+1,f
  2300  0536  2D30               	goto	L3
  2301  0537                     l3334:	
  2302  0537  1003               	clrc
  2303  0538  0DF4               	rlf	___lwdiv@quotient,f
  2304  0539  0DF5               	rlf	___lwdiv@quotient+1,f
  2305  053A  0871               	movf	___lwdiv@divisor+1,w
  2306  053B  0273               	subwf	___lwdiv@dividend+1,w
  2307  053C  1D03               	skipz
  2308  053D  2D40               	goto	u375
  2309  053E  0870               	movf	___lwdiv@divisor,w
  2310  053F  0272               	subwf	___lwdiv@dividend,w
  2311  0540                     u375:	
  2312  0540  1C03               	skipc
  2313  0541  2D4A               	goto	L4
  2314  0542  0870               	movf	___lwdiv@divisor,w
  2315  0543  02F2               	subwf	___lwdiv@dividend,f
  2316  0544  0871               	movf	___lwdiv@divisor+1,w
  2317  0545  1C03               	skipc
  2318  0546  03F3               	decf	___lwdiv@dividend+1,f
  2319  0547  02F3               	subwf	___lwdiv@dividend+1,f
  2320  0548  1474               	bsf	___lwdiv@quotient,0
  2321  0549  1003               	clrc
  2322  054A                     L4:	
  2323  054A  0CF1               	rrf	___lwdiv@divisor+1,f
  2324  054B  0CF0               	rrf	___lwdiv@divisor,f
  2325  054C  0BF6               	decfsz	___lwdiv@counter,f
  2326  054D  2D37               	goto	l3334
  2327  054E                     l3346:	
  2328  054E  0875               	movf	___lwdiv@quotient+1,w
  2329  054F  00F1               	movwf	?___lwdiv+1
  2330  0550  0874               	movf	___lwdiv@quotient,w
  2331  0551  00F0               	movwf	?___lwdiv
  2332  0552  0008               	return
  2333  0553                     __end_of___lwdiv:	
  2334  0553                     __ptext448:	
  2335 ;; =============== function _pause ends ============
  2336                           
  2337                           
  2338 ;; *************** function ___lwmod *****************
  2339 ;; Defined at:
  2340 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  divisor         2    7[COMMON] unsigned int 
  2343 ;;  dividend        2    9[COMMON] unsigned int 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  counter         1   11[COMMON] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  2    7[COMMON] unsigned int 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0
  2350 ;; Tracked objects:
  2351 ;;		On entry : 60/0
  2352 ;;		On exit  : 60/0
  2353 ;;		Unchanged: FFF9F/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2355 ;;      Params:         4       0       0       0       0
  2356 ;;      Locals:         1       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0
  2358 ;;      Totals:         5       0       0       0       0
  2359 ;;Total ram usage:        5 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; This function calls:
  2362 ;;		Nothing
  2363 ;; This function is called by:
  2364 ;;		_sprintf
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367  0553                     ___lwmod:	
  2368                           
  2369                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2370  0553  0878               	movf	___lwmod@divisor+1,w
  2371  0554  0477               	iorwf	___lwmod@divisor,w
  2372  0555  1903               	skipnz
  2373  0556  2D72               	goto	l3366
  2374  0557  01FB               	clrf	___lwmod@counter
  2375  0558                     L1:	
  2376  0558  0AFB               	incf	___lwmod@counter,f
  2377  0559  1BF8               	btfsc	___lwmod@divisor+1,7
  2378  055A  2D5F               	goto	l3358
  2379  055B  1003               	clrc
  2380  055C  0DF7               	rlf	___lwmod@divisor,f
  2381  055D  0DF8               	rlf	___lwmod@divisor+1,f
  2382  055E  2D58               	goto	L1
  2383  055F                     l3358:	
  2384  055F  0878               	movf	___lwmod@divisor+1,w
  2385  0560  027A               	subwf	___lwmod@dividend+1,w
  2386  0561  1D03               	skipz
  2387  0562  2D65               	goto	u415
  2388  0563  0877               	movf	___lwmod@divisor,w
  2389  0564  0279               	subwf	___lwmod@dividend,w
  2390  0565                     u415:	
  2391  0565  1C03               	skipc
  2392  0566  2D6E               	goto	L2
  2393  0567  0877               	movf	___lwmod@divisor,w
  2394  0568  02F9               	subwf	___lwmod@dividend,f
  2395  0569  0878               	movf	___lwmod@divisor+1,w
  2396  056A  1C03               	skipc
  2397  056B  03FA               	decf	___lwmod@dividend+1,f
  2398  056C  02FA               	subwf	___lwmod@dividend+1,f
  2399  056D  1003               	clrc
  2400  056E                     L2:	
  2401  056E  0CF8               	rrf	___lwmod@divisor+1,f
  2402  056F  0CF7               	rrf	___lwmod@divisor,f
  2403  0570  0BFB               	decfsz	___lwmod@counter,f
  2404  0571  2D5F               	goto	l3358
  2405  0572                     l3366:	
  2406  0572  087A               	movf	___lwmod@dividend+1,w
  2407  0573  00F8               	movwf	?___lwmod+1
  2408  0574  0879               	movf	___lwmod@dividend,w
  2409  0575  00F7               	movwf	?___lwmod
  2410  0576  0008               	return
  2411  0577                     __end_of___lwmod:	
  2412  0577                     PL3:	
  2413  0577  0084               	movwf	4
  2414  0578  082B               	movf	sprintf@c,w
  2415  0579  1383               	bcf	3,7	;select IRP bank0
  2416  057A  0080               	movwf	0
  2417  057B  0AAA               	incf	sprintf@sp,f
  2418  057C  0008               	return
  2419                           
  2420                           	psect	text446
  2421  03C0                     __ptext446:	
  2422 ;; =============== function _lcd_puts ends ============
  2423                           
  2424                           
  2425 ;; *************** function _lcd_clear *****************
  2426 ;; Defined at:
  2427 ;;		line 643 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;		None               void
  2434 ;; Registers used:
  2435 ;;		wreg, status,2, status,0, pclath, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 160/0
  2438 ;;		On exit  : 160/0
  2439 ;;		Unchanged: FFE9F/0
  2440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2441 ;;      Params:         0       0       0       0       0
  2442 ;;      Locals:         0       0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0
  2444 ;;      Totals:         0       0       0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    1
  2448 ;; This function calls:
  2449 ;;		_lcd_write
  2450 ;; This function is called by:
  2451 ;;		_main
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454  03C0                     _lcd_clear:	
  2455  03C0  3001               	movlw	1
  2456                           
  2457                           ;eeprom_i2c.c: 644: RA7 = 0;
  2458                           
  2459                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2460  03C1  1385               	bcf	5,7
  2461                           
  2462                           ;eeprom_i2c.c: 645: lcd_write(0x1);
  2463  03C2  2BDF               	ljmp	_lcd_write
  2464  03C3                     __end_of_lcd_clear:	
  2465  03C3                     __ptext444:	
  2466 ;; =============== function _i2c_start ends ============
  2467                           
  2468                           
  2469 ;; *************** function _lcd_goto *****************
  2470 ;; Defined at:
  2471 ;;		line 682 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  pos             1    wreg     unsigned char 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  pos             1    2[COMMON] unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;		None               void
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0, pclath, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 160/0
  2482 ;;		On exit  : 160/0
  2483 ;;		Unchanged: FFE9F/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2485 ;;      Params:         0       0       0       0       0
  2486 ;;      Locals:         1       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0
  2488 ;;      Totals:         1       0       0       0       0
  2489 ;;Total ram usage:        1 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    1
  2492 ;; This function calls:
  2493 ;;		_lcd_write
  2494 ;; This function is called by:
  2495 ;;		_main
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498  03C3                     _lcd_goto:	
  2499                           
  2500                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  2501                           ;lcd_goto@pos stored from wreg
  2502  03C3  00F2               	movwf	lcd_goto@pos
  2503                           
  2504                           ;eeprom_i2c.c: 683: RA7 = 0;
  2505  03C4  1385               	bcf	5,7
  2506                           
  2507                           ;eeprom_i2c.c: 684: lcd_write(0x80+pos);
  2508  03C5  3E80               	addlw	128
  2509  03C6  2BDF               	ljmp	_lcd_write
  2510  03C7                     __end_of_lcd_goto:	
  2511  03C7                     __ptext445:	
  2512 ;; =============== function _lcd_goto ends ============
  2513                           
  2514                           
  2515 ;; *************** function _lcd_puts *****************
  2516 ;; Defined at:
  2517 ;;		line 656 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  s               1    wreg     PTR const unsigned char 
  2520 ;;		 -> STR_2(14), 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  s               1    2[COMMON] PTR const unsigned char 
  2523 ;;		 -> STR_2(14), 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;		None               void
  2526 ;; Registers used:
  2527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 160/0
  2530 ;;		On exit  : 160/0
  2531 ;;		Unchanged: FFE9F/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2533 ;;      Params:         0       0       0       0       0
  2534 ;;      Locals:         1       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0
  2536 ;;      Totals:         1       0       0       0       0
  2537 ;;Total ram usage:        1 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    1
  2540 ;; This function calls:
  2541 ;;		_lcd_write
  2542 ;; This function is called by:
  2543 ;;		_main
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546  03C7                     _lcd_puts:	
  2547                           
  2548                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2549                           ;lcd_puts@s stored from wreg
  2550  03C7  00F2               	movwf	lcd_puts@s
  2551                           
  2552                           ;eeprom_i2c.c: 657: RA7 = 1;
  2553  03C8  1785               	bsf	5,7
  2554  03C9                     l3388:	
  2555                           ;eeprom_i2c.c: 658: while(*s)
  2556                           
  2557  03C9  0872               	movf	lcd_puts@s,w
  2558  03CA  0084               	movwf	4
  2559  03CB  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2560  03D0  3800               	iorlw	0
  2561  03D1  1903               	btfsc	3,2
  2562  03D2  0008               	return
  2563                           
  2564                           ;eeprom_i2c.c: 659: lcd_write(*s++);
  2565  03D3  0872               	movf	lcd_puts@s,w
  2566  03D4  0084               	movwf	4
  2567  03D5  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2568  03DA  23DF  120A  118A   	fcall	_lcd_write
  2569  03DD  0AF2               	incf	lcd_puts@s,f
  2570  03DE  2BC9               	goto	l3388
  2571  03DF                     __end_of_lcd_puts:	
  2572  03DF                     __ptext453:	
  2573 ;; =============== function _putch ends ============
  2574                           
  2575                           
  2576 ;; *************** function _lcd_write *****************
  2577 ;; Defined at:
  2578 ;;		line 623 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  c               1    wreg     unsigned char 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  c               1    0[COMMON] unsigned char 
  2583 ;;  temp            1    1[COMMON] unsigned char 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;		None               void
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0
  2588 ;; Tracked objects:
  2589 ;;		On entry : 160/0
  2590 ;;		On exit  : 160/0
  2591 ;;		Unchanged: FFE9F/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2593 ;;      Params:         0       0       0       0       0
  2594 ;;      Locals:         2       0       0       0       0
  2595 ;;      Temps:          0       0       0       0       0
  2596 ;;      Totals:         2       0       0       0       0
  2597 ;;Total ram usage:        2 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_lcd_clear
  2603 ;;		_lcd_puts
  2604 ;;		_lcd_goto
  2605 ;;		_main
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608  03DF                     _lcd_write:	
  2609                           
  2610                           ; Regs used in _lcd_write: [wreg+status,2+status,0]
  2611                           ;lcd_write@c stored from wreg
  2612  03DF  00F0               	movwf	lcd_write@c
  2613                           
  2614                           ;eeprom_i2c.c: 626: char temp = ( ( ( c >> 4 ) & 0x0F );
  2615  03E0  0E70               	swapf	lcd_write@c,w
  2616  03E1  390F               	andlw	15
  2617                           
  2618                           ;eeprom_i2c.c: 627: PORTD = PORTD & 0xF0;
  2619                           
  2620                           ;eeprom_i2c.c: 628: PORTD = PORTD + temp;
  2621                           
  2622                           ;eeprom_i2c.c: 629: ((RA6=1),(RA6=0));
  2623  03E2  23E8  120A  118A   	fcall	PL2	;call to abstracted procedure
  2624                           
  2625                           ;eeprom_i2c.c: 631: temp = ( c & 0x0F );
  2626  03E5  0870               	movf	lcd_write@c,w
  2627                           
  2628                           ;eeprom_i2c.c: 632: PORTD = PORTD & 0xF0;
  2629                           
  2630                           ;eeprom_i2c.c: 633: PORTD = PORTD + temp;
  2631                           
  2632                           ;eeprom_i2c.c: 634: ((RA6=1),(RA6=0));
  2633  03E6  23E8               	fcall	PL2	;call to abstracted procedure
  2634  03E7  0008               	return
  2635  03E8                     __end_of_lcd_write:	
  2636  03E8                     PL2:	
  2637  03E8  00F1               	movwf	lcd_write@temp
  2638  03E9  300F               	movlw	15
  2639  03EA  05F1               	andwf	lcd_write@temp,f
  2640  03EB  30F0               	movlw	240
  2641  03EC  0588               	andwf	8,f	;volatile
  2642  03ED  0871               	movf	lcd_write@temp,w
  2643  03EE  0788               	addwf	8,f	;volatile
  2644  03EF  1705               	bsf	5,6
  2645  03F0  1305               	bcf	5,6
  2646  03F1  0008               	return
  2647                           
  2648                           	psect	text451
  2649  03AF                     __ptext451:	
  2650 ;; =============== function _i2c_waitForIdle ends ============
  2651                           
  2652                           
  2653 ;; *************** function _i2c_init *****************
  2654 ;; Defined at:
  2655 ;;		line 1020 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;		None
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;		None
  2660 ;; Return value:  Size  Location     Type
  2661 ;;		None               void
  2662 ;; Registers used:
  2663 ;;		wreg, status,2
  2664 ;; Tracked objects:
  2665 ;;		On entry : 17F/40
  2666 ;;		On exit  : 17F/0
  2667 ;;		Unchanged: FFE80/0
  2668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2669 ;;      Params:         0       0       0       0       0
  2670 ;;      Locals:         0       0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0
  2672 ;;      Totals:         0       0       0       0       0
  2673 ;;Total ram usage:        0 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; This function calls:
  2676 ;;		Nothing
  2677 ;; This function is called by:
  2678 ;;		_main
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681  03AF                     _i2c_init:	
  2682                           
  2683                           ;eeprom_i2c.c: 1021: TRISC3=1;
  2684                           
  2685                           ; Regs used in _i2c_init: [wreg+status,2]
  2686  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2687  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2688  03B1  3038               	movlw	56
  2689  03B2  1587               	bsf	7,3
  2690                           
  2691                           ;eeprom_i2c.c: 1022: TRISC4=1;
  2692  03B3  1607               	bsf	7,4
  2693                           
  2694                           ;eeprom_i2c.c: 1024: SSPCON = 0x38;
  2695  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2696  03B5  0094               	movwf	20	;volatile
  2697                           
  2698                           ;eeprom_i2c.c: 1025: SSPCON2 = 0x00;
  2699  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  2700  03B7  0191               	clrf	17	;volatile
  2701                           
  2702                           ;eeprom_i2c.c: 1028: SSPADD = 0x27;
  2703  03B8  3027               	movlw	39
  2704  03B9  0093               	movwf	19	;volatile
  2705                           
  2706                           ;eeprom_i2c.c: 1031: CKE=1;
  2707  03BA  1714               	bsf	20,6
  2708                           
  2709                           ;eeprom_i2c.c: 1032: SMP=1;
  2710  03BB  1794               	bsf	20,7
  2711                           
  2712                           ;eeprom_i2c.c: 1034: SSPIF=0;
  2713  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2714  03BD  118C               	bcf	12,3
  2715                           
  2716                           ;eeprom_i2c.c: 1035: BCLIF=0;
  2717  03BE  118D               	bcf	13,3
  2718  03BF  0008               	return
  2719  03C0                     __end_of_i2c_init:	
  2720                           
  2721                           	psect	text452
  2722  039E                     __ptext452:	
  2723 ;; =============== function _i2c_init ends ============
  2724                           
  2725                           
  2726 ;; *************** function _putch *****************
  2727 ;; Defined at:
  2728 ;;		line 776 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  byte            1    wreg     unsigned char 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  byte            1    0[COMMON] unsigned char 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;		None               void
  2735 ;; Registers used:
  2736 ;;		wreg
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 60/0
  2740 ;;		Unchanged: FFF9F/0
  2741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2742 ;;      Params:         0       0       0       0       0
  2743 ;;      Locals:         1       0       0       0       0
  2744 ;;      Temps:          0       0       0       0       0
  2745 ;;      Totals:         1       0       0       0       0
  2746 ;;Total ram usage:        1 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754  039E                     _putch:	
  2755                           
  2756                           ; Regs used in _putch: [wreg]
  2757                           ;putch@byte stored from wreg
  2758  039E  00F0               	movwf	putch@byte
  2759  039F                     l1215:	
  2760                           ;eeprom_i2c.c: 778: while(!TXIF)
  2761                           
  2762  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2763  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2764  03A1  1E0C               	btfss	12,4
  2765  03A2  2B9F               	goto	l1215
  2766                           
  2767                           ;eeprom_i2c.c: 780: TXREG = byte;
  2768  03A3  0870               	movf	putch@byte,w
  2769  03A4  0099               	movwf	25	;volatile
  2770  03A5  0008               	return
  2771  03A6                     __end_of_putch:	
  2772                           
  2773                           	psect	text455
  2774  03A6                     __ptext455:	
  2775 ;; =============== function _msecbase ends ============
  2776                           
  2777                           
  2778 ;; *************** function _init_micro *****************
  2779 ;; Defined at:
  2780 ;;		line 112 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;		None
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;		None
  2785 ;; Return value:  Size  Location     Type
  2786 ;;		None               void
  2787 ;; Registers used:
  2788 ;;		status,2
  2789 ;; Tracked objects:
  2790 ;;		On entry : 17F/0
  2791 ;;		On exit  : 17F/40
  2792 ;;		Unchanged: FFE80/0
  2793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2794 ;;      Params:         0       0       0       0       0
  2795 ;;      Locals:         0       0       0       0       0
  2796 ;;      Temps:          0       0       0       0       0
  2797 ;;      Totals:         0       0       0       0       0
  2798 ;;Total ram usage:        0 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_main
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806  03A6                     _init_micro:	
  2807                           
  2808                           ;eeprom_i2c.c: 113: ANSEL = 0;
  2809                           
  2810                           ; Regs used in _init_micro: [status,2]
  2811  03A6  1683               	bsf	3,5	;RP0=1, select bank3
  2812  03A7  1703               	bsf	3,6	;RP1=1, select bank3
  2813  03A8  0188               	clrf	8	;volatile
  2814                           
  2815                           ;eeprom_i2c.c: 114: ANSELH = 0;
  2816  03A9  0189               	clrf	9	;volatile
  2817                           
  2818                           ;eeprom_i2c.c: 115: CM1CON0 = 0;
  2819  03AA  1283               	bcf	3,5	;RP0=0, select bank2
  2820  03AB  0187               	clrf	7	;volatile
  2821                           
  2822                           ;eeprom_i2c.c: 116: CM2CON0 = 0;
  2823  03AC  0188               	clrf	8	;volatile
  2824                           
  2825                           ;eeprom_i2c.c: 121: INTCON=0;
  2826  03AD  018B               	clrf	11	;volatile
  2827  03AE  0008               	return
  2828  03AF                     __end_of_init_micro:	
  2829                           
  2830                           	psect	text456
  2831  0000                     __ptext456:	
  2832 ;; =============== function _init_micro ends ============
  2833                           
  2834  007E                     btemp	set	126	;btemp
  2835  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Wed Nov 13 15:51:04 2019

                       pc 0002                        fsr 0004                       _CKE 04A6  
                     _RA6 002E                       _RA7 002F                       _RE1 0049  
                     u415 0565                       _PEN 048A                       u435 0476  
                     u375 0540                       u535 0639                       _SEN 0488  
                     u485 04E4                       _SMP 04A7                       _R_W 04A2  
                     fsr0 0004                       indf 0000               lcd_goto@pos 0072  
                    l1201 0000                      l1051 0000                      l1302 0000  
                    l1215 039F                      l1066 048A                      l1218 0000  
                    l1075 0000                      l1069 0000                      l1327 07FD  
                    l1273 0000                      l1186 0000                      l1282 0000  
                    l1195 0000                      l1291 0443                      l1355 0000  
                    l3300 0000                      l1292 0444                      l1189 0000  
                    l1285 0000                      l1293 0000                      l3310 0000  
                    l1279 0000                      l3312 0000                      l3304 0000  
                    l3320 0000                      l3400 0000                      l1288 0000  
                    l1296 0000                      l3314 0000                      l3306 0000  
                    l3322 0449                      l3402 0000                      l3410 0000  
                    l1299 0000                      l3316 0000                      l3308 0000  
                    l3340 0000                      l3324 0000                      l3404 0000  
                    l3412 0000                      l3420 0000                      l3500 0000  
                    l2357 0000                      l3318 0000                      l3334 0537  
                    l3326 0000                      l3350 0000                      l3414 0000  
                    l3406 0000                      l3422 0000                      l3510 0000  
                    l3502 0000                      l2367 0000                      l3280 0000  
                    l3344 0000                      l3336 0000                      l3416 0000  
                    l3408 0000                      l3424 0000                      l3440 0000  
                    l3600 0000                      l3520 0000                      l3512 0000  
                    l3504 0000                      l3290 0000                      l3282 0000  
                    l3346 054E                      l3370 0463                      l3450 0000  
                    l3442 04BA                      l3434 0000                      l3610 0000  
                    l3602 0000                      l3530 0000                      l3522 0000  
                    l3514 0000                      l3506 0000                      l3292 0000  
                    l3284 0000                      l3364 0000                      l3380 0000  
                    l3452 04CD                      l3444 0000                      l3436 04A6  
                    l3428 0000                      l3700 07A5                      l3620 0000  
                    l3604 0000                      l3540 0000                      l3532 0000  
                    l3524 0000                      l3516 0000                      l3508 0000  
                    l3278 0000                      l3294 0000                      l3286 0000  
                    l3358 055F                      l3366 0572                      l3374 0000  
                    l3382 0000                      l3390 0000                      l3470 04F5  
                    l3462 0000                      l3446 0000                      l3710 0000  
                    l3702 0000                      l3630 0000                      l3606 0000  
                    l3550 0000                      l3542 0000                      l3534 0000  
                    l3526 0000                      l3518 0000                      l3296 0000  
                    l3288 0000                      l3376 0468                      l3392 0000  
                    l3472 04F8                      l3464 04EB                      l3456 04CF  
                    l3480 0491                      l3720 0000                      l3704 0000  
                    l3640 0000                      l3632 0000                      l3616 069E  
                    l3608 0000                      l3560 0000                      l3552 0000  
                    l3544 0000                      l3536 0000                      l3528 0000  
                    l3298 0000                      l3378 0000                      l3386 0000  
                    l3394 0000                      l3474 0000                      l3482 0524  
                    l3490 0000                      l3642 0000                      l3626 0000  
                    l3618 0000                      l3570 0000                      l3562 0000  
                    l3554 0000                      l3546 0000                      l3538 0000  
                    l3388 03C9                      l3396 0000                      l3476 0000  
                    l3468 0000                      l3724 0000                      l3716 07CB  
                    l3708 0000                      l3628 0000                      l3580 0000  
                    l3564 0000                      l3556 0000                      l3548 0000  
                    l3398 0000                      l3478 0520                      l3486 0000  
                    l3718 0000                      l3726 0778                      l3670 0000  
                    l3662 0000                      l3654 0718                      l3646 0000  
                    l3638 06EE                      l3566 0000                      l3558 0000  
                    l3494 0000                      l3488 0000                      l3680 0000  
                    l3672 0000                      l3664 0000                      l3656 0000  
                    l3648 0000                      l3592 065C                      l3584 0000  
                    l3576 0619                      l3568 0000                      l3496 0000  
                    l3682 0000                      l3658 0000                      l3666 06C2  
                    l3594 0000                      l3586 0000                      l3578 0000  
                    l3498 0000                      l3692 0000                      l3668 073E  
                    l3596 0000                      l3694 0000                      l3686 0000  
                    l3678 0753                      l3688 0000                      STR_1 0013  
                    STR_2 006D                      STR_3 003B                      STR_4 004D  
                    STR_5 007B                      STR_6 0028                      STR_7 005D  
                    STR_8 0086                      _T0IF 005A                      _RCEN 048B  
                    _TMR0 0001                      _RSEN 0489                      _TXIF 0064  
        __end_of_I2C_EEIN 0427                      _main 057D                      btemp 007E  
       ??_i2c_waitForIdle 0070                      start 0000             ?_i2c_repStart 0070  
                   ?_main 0070                     _ACKEN 048C                     _ACKDT 048D  
                   _BCLIF 006B                     _ANSEL 0188               i2c_read@ack 0077  
         __end_of___lwdiv 0553           __end_of___lwmod 0577                     _RCSTA 0018  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088                     _SSPIF 0063                     _TXREG 0019  
                   _TXSTA 0098         __end_of_I2C_EEOUT 040B                     _pause 0463  
                   _putch 039E                     main@i 003C                     main@x 003E  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 0529            ??_i2c_repStart 0075              __end_of_main 0800  
        __end_of_i2c_init 03C0          __end_of_i2c_read 0449          __end_of_i2c_stop 0460  
                  ??_main 007E              I2C_EEIN@data 007A                    ?_pause 0070  
                  ?_putch 0070                    _ANSELH 0189                    _INTCON 000B  
                  _OSCCON 008F                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _TRISC6 043E                    _TRISC7 043F  
                  _SSPCON 0014                    _SSPBUF 0013        __size_of_i2c_start 0003  
      __size_of_i2c_write 0006          __end_of_lcd_goto 03C7          __end_of_lcd_puts 03DF  
               ??___lwdiv 0074                 ??___lwmod 007B          __end_of_msecbase 048E  
   i2c_write@i2cWriteData 0075                 ?_I2C_EEIN 0070                    pause@x 0074  
               ??_sprintf 007C             lcd_write@temp 0071            __pcstackCOMMON 0070  
           __end_of_pause 0483             __end_of_putch 03A6                ??_I2C_EEIN 0079  
       __end_of_i2c_start 0430         __end_of_i2c_write 042D      __end_of_i2c_repStart 0463  
      __size_of_lcd_clear 0003           _i2c_waitForIdle 0449       i2c_read@i2cReadData 0078  
      __size_of_lcd_write 0009                   ??_pause 0074                   ??_putch 0070  
               ?_i2c_init 0070                 ?_i2c_read 0075                 ?_i2c_stop 0070  
              __pmaintext 057D                   _CM1CON0 0107                   _CM2CON0 0108  
                 _ACKSTAT 048E                   _BAUDCTL 0187             I2C_EEOUT@data 0078  
                 _SSPCON2 0091                 ?_lcd_goto 0070                 ?_lcd_puts 0070  
               _I2C_EEOUT 03F2                ??_i2c_init 0070                ??_i2c_read 0077  
              ??_i2c_stop 0075           I2C_EEIN@address 0079                 ?_msecbase 0070  
       __end_of_lcd_clear 03C3         __end_of_lcd_write 03E8                   ___lwdiv 0529  
                 ___lwmod 0553                _init_micro 03A6   __end_of_i2c_waitForIdle 045D  
                 _dpowers 0009                   main@cnt 0045                   _sprintf 048E  
                 main@val 003B                ??_lcd_goto 0072                ??_lcd_puts 0072  
    end_of_initialization 039A                ?_I2C_EEOUT 0078                ??_msecbase 0070  
   __size_of_i2c_repStart 0003         __size_of_I2C_EEIN 001C                main@x_1901 0043  
              main@x_1903 0044                main@x_1892 003F                main@x_1894 0040  
              main@x_1896 0041                main@x_1898 0042                main@buffer 002C  
              lcd_write@c 0070              _i2c_repStart 0460               ?_init_micro 0070  
        ?_i2c_waitForIdle 0070       start_initialization 039A                 _i2c_start 042D  
               _i2c_write 0427               ??_I2C_EEOUT 0079         __size_of_i2c_init 0011  
       __size_of_i2c_read 0019         __size_of_i2c_stop 0003              pause@usvalue 0070  
           __pcstackBANK0 0020                ?_i2c_start 0070                ?_i2c_write 0070  
       __size_of_lcd_goto 0004       __size_of_init_micro 0009               sprintf@_val 0026  
             sprintf@flag 0024         __size_of_lcd_puts 0018               sprintf@prec 0025  
        ___lwdiv@dividend 0072         __size_of_msecbase 000B                 __ptext440 0430  
               __ptext441 045D                 __ptext450 0449                 __ptext442 0460  
               __ptext451 03AF                 __ptext443 042D                 __ptext452 039E  
               __ptext444 03C3                 __ptext436 040B                 __ptext453 03DF  
               __ptext445 03C7                 __ptext437 03F2                 __ptext454 0483  
               __ptext446 03C0                 __ptext438 048E                 __ptext455 03A6  
               __ptext447 0463                 __ptext439 0427                 __ptext456 0000  
               __ptext448 0553                 __ptext449 0529                  ?___lwdiv 0070  
                ?___lwmod 0077                 _lcd_clear 03C0                 __pstrings 0003  
               _lcd_write 03DF                  _I2C_EEIN 040B          ___lwdiv@quotient 0074  
                ?_sprintf 0020            __size_of_pause 0020            __size_of_putch 0008  
              ?_lcd_clear 0070               __stringbase 0008                ?_lcd_write 0070  
               lcd_puts@s 0072               ??_i2c_start 0075               ??_i2c_write 0075  
                _i2c_init 03AF                  _i2c_read 0430                  _i2c_stop 045D  
            ??_init_micro 0070          __size_of___lwdiv 002A          __size_of___lwmod 0024  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0076                  _lcd_goto 03C3  
                _lcd_puts 03C7          __size_of_sprintf 009B             __size_of_main 0283  
      __end_of_init_micro 03AF                  _msecbase 0483               ??_lcd_clear 0072  
             ??_lcd_write 0070                 putch@byte 0070  __size_of_i2c_waitForIdle 0014  
               sprintf@ap 0023                 sprintf@sp 002A          ___lwmod@dividend 0079  
               stringcode 0003          I2C_EEOUT@address 0079                _OPTION_REG 0081  
                sprintf@c 002B                  sprintf@f 0020           ___lwmod@divisor 0077  
         ___lwmod@counter 007B                  stringdir 0003                  stringtab 0003  
      __size_of_I2C_EEOUT 0019  
