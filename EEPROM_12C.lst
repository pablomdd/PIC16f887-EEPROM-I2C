

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Wed Nov 13 15:39:41 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,delta=2
    10                           	psect	text437,local,class=CODE,delta=2
    11                           	psect	text438,local,class=CODE,delta=2
    12                           	psect	text446,local,class=CODE,delta=2
    13                           	psect	text451,local,class=CODE,delta=2
    14                           	psect	text452,local,class=CODE,delta=2
    15                           	psect	text455,local,class=CODE,delta=2
    16                           	psect	text456,local,class=CODE,delta=2
    17                           	psect	pa_nodes,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  000A                     	;#
    20                           
    21                           	psect	config
    22  2007  E0D4               	dw	57556	;#
    23  2008  FFFF               	dw	65535	;#
    24                           
    25                           	psect	strings
    26  0003                     __pstrings:	
    27  0003                     stringtab:	
    28                           ;	global	stringdir,stringtab,__stringbase
    29                           
    30  0003                     stringcode:	
    31                           ;	String table - string pointers are 1 byte each
    32                           
    33  0003                     stringdir:	
    34  0003  3000               	movlw	high stringdir
    35  0004  008A               	movwf	10
    36  0005  0804               	movf	4,w
    37  0006  0A84               	incf	4,f
    38  0007  0782               	addwf	2,f
    39  0008                     __stringbase:	
    40  0008  3400               	retlw	0
    41  0009                     _dpowers:	
    42  0009  3401               	retlw	1
    43  000A  3400               	retlw	0
    44  000B  340A               	retlw	10
    45  000C  3400               	retlw	0
    46  000D  3464               	retlw	100
    47  000E  3400               	retlw	0
    48  000F  34E8               	retlw	232
    49  0010  3403               	retlw	3
    50  0011  3410               	retlw	16
    51  0012  3427               	retlw	39
    52  000B                     _INTCON	set	11
    53  0006                     _PORTB	set	6
    54  0008                     _PORTD	set	8
    55  0018                     _RCSTA	set	24
    56  0013                     _SSPBUF	set	19
    57  0014                     _SSPCON	set	20
    58  0001                     _TMR0	set	1
    59  0019                     _TXREG	set	25
    60  006B                     _BCLIF	set	107
    61  002E                     _RA6	set	46
    62  002F                     _RA7	set	47
    63  0049                     _RE1	set	73
    64  0063                     _SSPIF	set	99
    65  005A                     _T0IF	set	90
    66  0064                     _TXIF	set	100
    67  0081                     _OPTION_REG	set	129
    68  008F                     _OSCCON	set	143
    69  0099                     _SPBRG	set	153
    70  0093                     _SSPADD	set	147
    71  0091                     _SSPCON2	set	145
    72  0085                     _TRISA	set	133
    73  0086                     _TRISB	set	134
    74  0088                     _TRISD	set	136
    75  0098                     _TXSTA	set	152
    76  048D                     _ACKDT	set	1165
    77  048C                     _ACKEN	set	1164
    78  048E                     _ACKSTAT	set	1166
    79  04A6                     _CKE	set	1190
    80  048A                     _PEN	set	1162
    81  048B                     _RCEN	set	1163
    82  0489                     _RSEN	set	1161
    83  04A2                     _R_W	set	1186
    84  0488                     _SEN	set	1160
    85  04A7                     _SMP	set	1191
    86  043B                     _TRISC3	set	1083
    87  043C                     _TRISC4	set	1084
    88  043E                     _TRISC6	set	1086
    89  043F                     _TRISC7	set	1087
    90  0107                     _CM1CON0	set	263
    91  0108                     _CM2CON0	set	264
    92  0188                     _ANSEL	set	392
    93  0189                     _ANSELH	set	393
    94  0187                     _BAUDCTL	set	391
    95  0005                     _PORTA	set	5
    96  0013                     STR_1:	
    97  0013  344D               	retlw	77	;'M'
    98  0014  346F               	retlw	111	;'o'
    99  0015  3473               	retlw	115	;'s'
   100  0016  3474               	retlw	116	;'t'
   101  0017  3472               	retlw	114	;'r'
   102  0018  3461               	retlw	97	;'a'
   103  0019  346E               	retlw	110	;'n'
   104  001A  3464               	retlw	100	;'d'
   105  001B  346F               	retlw	111	;'o'
   106  001C  3420               	retlw	32	;' '
   107  001D  3445               	retlw	69	;'E'
   108  001E  3473               	retlw	115	;'s'
   109  001F  3463               	retlw	99	;'c'
   110  0020  3472               	retlw	114	;'r'
   111  0021  3469               	retlw	105	;'i'
   112  0022  3474               	retlw	116	;'t'
   113  0023  3475               	retlw	117	;'u'
   114  0024  3472               	retlw	114	;'r'
   115  0025  3461               	retlw	97	;'a'
   116  0026  3420               	retlw	32	;' '
   117  0027  3400               	retlw	0
   118  0028                     STR_6:	
   119  0028  344D               	retlw	77	;'M'
   120  0029  346F               	retlw	111	;'o'
   121  002A  3473               	retlw	115	;'s'
   122  002B  3474               	retlw	116	;'t'
   123  002C  3472               	retlw	114	;'r'
   124  002D  3461               	retlw	97	;'a'
   125  002E  346E               	retlw	110	;'n'
   126  002F  3464               	retlw	100	;'d'
   127  0030  346F               	retlw	111	;'o'
   128  0031  3420               	retlw	32	;' '
   129  0032  344C               	retlw	76	;'L'
   130  0033  3465               	retlw	101	;'e'
   131  0034  3463               	retlw	99	;'c'
   132  0035  3474               	retlw	116	;'t'
   133  0036  3475               	retlw	117	;'u'
   134  0037  3472               	retlw	114	;'r'
   135  0038  3461               	retlw	97	;'a'
   136  0039  3420               	retlw	32	;' '
   137  003A  3400               	retlw	0
   138  003B                     STR_3:	
   139  003B  3454               	retlw	84	;'T'
   140  003C  3461               	retlw	97	;'a'
   141  003D  346D               	retlw	109	;'m'
   142  003E  3461               	retlw	97	;'a'
   143  003F  346E               	retlw	110	;'n'
   144  0040  3469               	retlw	105	;'i'
   145  0041  346F               	retlw	111	;'o'
   146  0042  3420               	retlw	32	;' '
   147  0043  3464               	retlw	100	;'d'
   148  0044  3465               	retlw	101	;'e'
   149  0045  3420               	retlw	32	;' '
   150  0046  3463               	retlw	99	;'c'
   151  0047  346E               	retlw	110	;'n'
   152  0048  3474               	retlw	116	;'t'
   153  0049  3420               	retlw	32	;' '
   154  004A  3425               	retlw	37	;'%'
   155  004B  3469               	retlw	105	;'i'
   156  004C  3400               	retlw	0
   157  004D                     STR_4:	
   158  004D  3444               	retlw	68	;'D'
   159  004E  3469               	retlw	105	;'i'
   160  004F  3472               	retlw	114	;'r'
   161  0050  3465               	retlw	101	;'e'
   162  0051  3463               	retlw	99	;'c'
   163  0052  3474               	retlw	116	;'t'
   164  0053  346F               	retlw	111	;'o'
   165  0054  3472               	retlw	114	;'r'
   166  0055  3469               	retlw	105	;'i'
   167  0056  346F               	retlw	111	;'o'
   168  0057  343A               	retlw	58	;':'
   169  0058  3420               	retlw	32	;' '
   170  0059  3425               	retlw	37	;'%'
   171  005A  3464               	retlw	100	;'d'
   172  005B  3420               	retlw	32	;' '
   173  005C  3400               	retlw	0
   174  005D                     STR_7:	
   175  005D  3444               	retlw	68	;'D'
   176  005E  3469               	retlw	105	;'i'
   177  005F  3472               	retlw	114	;'r'
   178  0060  3465               	retlw	101	;'e'
   179  0061  3463               	retlw	99	;'c'
   180  0062  3474               	retlw	116	;'t'
   181  0063  346F               	retlw	111	;'o'
   182  0064  3472               	retlw	114	;'r'
   183  0065  3469               	retlw	105	;'i'
   184  0066  346F               	retlw	111	;'o'
   185  0067  343A               	retlw	58	;':'
   186  0068  3420               	retlw	32	;' '
   187  0069  3425               	retlw	37	;'%'
   188  006A  3469               	retlw	105	;'i'
   189  006B  3420               	retlw	32	;' '
   190  006C  3400               	retlw	0
   191  006D                     STR_2:	
   192  006D  3447               	retlw	71	;'G'
   193  006E  3472               	retlw	114	;'r'
   194  006F  3461               	retlw	97	;'a'
   195  0070  3462               	retlw	98	;'b'
   196  0071  3461               	retlw	97	;'a'
   197  0072  346E               	retlw	110	;'n'
   198  0073  3464               	retlw	100	;'d'
   199  0074  346F               	retlw	111	;'o'
   200  0075  342E               	retlw	46	;'.'
   201  0076  342E               	retlw	46	;'.'
   202  0077  342E               	retlw	46	;'.'
   203  0078  342E               	retlw	46	;'.'
   204  0079  342E               	retlw	46	;'.'
   205  007A  3400               	retlw	0
   206  007B                     STR_5:	
   207  007B  3456               	retlw	86	;'V'
   208  007C  3461               	retlw	97	;'a'
   209  007D  346C               	retlw	108	;'l'
   210  007E  346F               	retlw	111	;'o'
   211  007F  3472               	retlw	114	;'r'
   212  0080  343A               	retlw	58	;':'
   213  0081  3420               	retlw	32	;' '
   214  0082  3425               	retlw	37	;'%'
   215  0083  3464               	retlw	100	;'d'
   216  0084  3420               	retlw	32	;' '
   217  0085  3400               	retlw	0
   218  0086                     STR_8:	
   219  0086  3456               	retlw	86	;'V'
   220  0087  3461               	retlw	97	;'a'
   221  0088  346C               	retlw	108	;'l'
   222  0089  346F               	retlw	111	;'o'
   223  008A  3472               	retlw	114	;'r'
   224  008B  343A               	retlw	58	;':'
   225  008C  3420               	retlw	32	;' '
   226  008D  3425               	retlw	37	;'%'
   227  008E  3469               	retlw	105	;'i'
   228  008F  3420               	retlw	32	;' '
   229  0090  3400               	retlw	0
   230                           
   231                           	psect	cinit
   232  0399                     start_initialization:	
   233  0399                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  0399  0183               	clrf	3
   237  039A  120A  118A  2D7C   	ljmp	_main	;jump to C main() function
   238                           
   239                           	psect	cstackCOMMON
   240  0070                     __pcstackCOMMON:	
   241  0070                     ?_init_micro:	
   242  0070                     ??_init_micro:	
   243                           ; 0 bytes @ 0x0
   244                           
   245  0070                     ?_msecbase:	
   246                           ; 0 bytes @ 0x0
   247                           
   248  0070                     ??_msecbase:	
   249                           ; 0 bytes @ 0x0
   250                           
   251  0070                     ?_pause:	
   252                           ; 0 bytes @ 0x0
   253                           
   254  0070                     ?_lcd_write:	
   255                           ; 0 bytes @ 0x0
   256                           
   257  0070                     ??_lcd_write:	
   258                           ; 0 bytes @ 0x0
   259                           
   260  0070                     ?_lcd_clear:	
   261                           ; 0 bytes @ 0x0
   262                           
   263  0070                     ?_lcd_puts:	
   264                           ; 0 bytes @ 0x0
   265                           
   266  0070                     ?_lcd_goto:	
   267                           ; 0 bytes @ 0x0
   268                           
   269  0070                     ?_putch:	
   270                           ; 0 bytes @ 0x0
   271                           
   272  0070                     ??_putch:	
   273                           ; 0 bytes @ 0x0
   274                           
   275  0070                     ?_i2c_init:	
   276                           ; 0 bytes @ 0x0
   277                           
   278  0070                     ??_i2c_init:	
   279                           ; 0 bytes @ 0x0
   280                           
   281  0070                     ?_i2c_waitForIdle:	
   282                           ; 0 bytes @ 0x0
   283                           
   284  0070                     ??_i2c_waitForIdle:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0070                     ?_i2c_start:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0070                     ?_i2c_repStart:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0070                     ?_i2c_stop:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0070                     ?_main:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0070                     ?_i2c_write:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0070                     ?_I2C_EEIN:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?___lwdiv:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     lcd_write@c:	
   309                           ; 2 bytes @ 0x0
   310                           
   311  0070                     putch@byte:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ___lwdiv@divisor:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     pause@usvalue:	
   318                           ; 2 bytes @ 0x0
   319                           
   320                           
   321                           ; 4 bytes @ 0x0
   322  0070                     	ds	1
   323  0071                     lcd_write@temp:	
   324                           
   325                           ; 1 bytes @ 0x1
   326  0071                     	ds	1
   327  0072                     ??_lcd_clear:	
   328  0072                     ??_lcd_puts:	
   329                           ; 0 bytes @ 0x2
   330                           
   331  0072                     ??_lcd_goto:	
   332                           ; 0 bytes @ 0x2
   333                           
   334  0072                     lcd_puts@s:	
   335                           ; 0 bytes @ 0x2
   336                           
   337  0072                     lcd_goto@pos:	
   338                           ; 1 bytes @ 0x2
   339                           
   340  0072                     ___lwdiv@dividend:	
   341                           ; 1 bytes @ 0x2
   342                           
   343                           
   344                           ; 2 bytes @ 0x2
   345  0072                     	ds	2
   346  0074                     ??_pause:	
   347  0074                     ??___lwdiv:	
   348                           ; 0 bytes @ 0x4
   349                           
   350  0074                     ___lwdiv@quotient:	
   351                           ; 0 bytes @ 0x4
   352                           
   353  0074                     pause@x:	
   354                           ; 2 bytes @ 0x4
   355                           
   356                           
   357                           ; 4 bytes @ 0x4
   358  0074                     	ds	1
   359  0075                     ??_i2c_start:	
   360  0075                     ??_i2c_repStart:	
   361                           ; 0 bytes @ 0x5
   362                           
   363  0075                     ??_i2c_stop:	
   364                           ; 0 bytes @ 0x5
   365                           
   366  0075                     ??_i2c_write:	
   367                           ; 0 bytes @ 0x5
   368                           
   369  0075                     ?_i2c_read:	
   370                           ; 0 bytes @ 0x5
   371                           
   372  0075                     i2c_write@i2cWriteData:	
   373                           ; 2 bytes @ 0x5
   374                           
   375                           
   376                           ; 1 bytes @ 0x5
   377  0075                     	ds	1
   378  0076                     ___lwdiv@counter:	
   379                           
   380                           ; 1 bytes @ 0x6
   381  0076                     	ds	1
   382  0077                     ??_i2c_read:	
   383  0077                     ?___lwmod:	
   384                           ; 0 bytes @ 0x7
   385                           
   386  0077                     i2c_read@ack:	
   387                           ; 2 bytes @ 0x7
   388                           
   389  0077                     ___lwmod@divisor:	
   390                           ; 1 bytes @ 0x7
   391                           
   392                           
   393                           ; 2 bytes @ 0x7
   394  0077                     	ds	1
   395  0078                     ?_I2C_EEOUT:	
   396  0078                     i2c_read@i2cReadData:	
   397                           ; 0 bytes @ 0x8
   398                           
   399  0078                     I2C_EEOUT@data:	
   400                           ; 1 bytes @ 0x8
   401                           
   402                           
   403                           ; 1 bytes @ 0x8
   404  0078                     	ds	1
   405  0079                     ??_I2C_EEOUT:	
   406  0079                     ??_I2C_EEIN:	
   407                           ; 0 bytes @ 0x9
   408                           
   409  0079                     I2C_EEOUT@address:	
   410                           ; 0 bytes @ 0x9
   411                           
   412  0079                     I2C_EEIN@address:	
   413                           ; 1 bytes @ 0x9
   414                           
   415  0079                     ___lwmod@dividend:	
   416                           ; 1 bytes @ 0x9
   417                           
   418                           
   419                           ; 2 bytes @ 0x9
   420  0079                     	ds	1
   421  007A                     I2C_EEIN@data:	
   422                           
   423                           ; 1 bytes @ 0xA
   424  007A                     	ds	1
   425  007B                     ??___lwmod:	
   426  007B                     ___lwmod@counter:	
   427                           ; 0 bytes @ 0xB
   428                           
   429                           
   430                           ; 1 bytes @ 0xB
   431  007B                     	ds	1
   432  007C                     ??_sprintf:	
   433                           
   434                           ; 0 bytes @ 0xC
   435  007C                     	ds	2
   436  007E                     ??_main:	
   437                           
   438                           	psect	cstackBANK0
   439  0020                     __pcstackBANK0:	
   440                           ; 0 bytes @ 0xE
   441                           
   442  0020                     ?_sprintf:	
   443  0020                     sprintf@f:	
   444                           ; 2 bytes @ 0x0
   445                           
   446                           
   447                           ; 1 bytes @ 0x0
   448  0020                     	ds	3
   449  0023                     sprintf@ap:	
   450                           
   451                           ; 1 bytes @ 0x3
   452  0023                     	ds	1
   453  0024                     sprintf@flag:	
   454                           
   455                           ; 1 bytes @ 0x4
   456  0024                     	ds	1
   457  0025                     sprintf@prec:	
   458                           
   459                           ; 1 bytes @ 0x5
   460  0025                     	ds	1
   461  0026                     sprintf@_val:	
   462                           
   463                           ; 4 bytes @ 0x6
   464  0026                     	ds	4
   465  002A                     sprintf@sp:	
   466                           
   467                           ; 1 bytes @ 0xA
   468  002A                     	ds	1
   469  002B                     sprintf@c:	
   470                           
   471                           ; 1 bytes @ 0xB
   472  002B                     	ds	1
   473  002C                     main@buffer:	
   474                           
   475                           ; 15 bytes @ 0xC
   476  002C                     	ds	15
   477  003B                     main@val:	
   478                           
   479                           ; 1 bytes @ 0x1B
   480  003B                     	ds	1
   481  003C                     main@i:	
   482                           
   483                           ; 2 bytes @ 0x1C
   484  003C                     	ds	2
   485  003E                     main@x:	
   486                           
   487                           ; 1 bytes @ 0x1E
   488  003E                     	ds	1
   489  003F                     main@x_1892:	
   490                           
   491                           ; 1 bytes @ 0x1F
   492  003F                     	ds	1
   493  0040                     main@x_1894:	
   494                           
   495                           ; 1 bytes @ 0x20
   496  0040                     	ds	1
   497  0041                     main@x_1896:	
   498                           
   499                           ; 1 bytes @ 0x21
   500  0041                     	ds	1
   501  0042                     main@x_1898:	
   502                           
   503                           ; 1 bytes @ 0x22
   504  0042                     	ds	1
   505  0043                     main@x_1901:	
   506                           
   507                           ; 1 bytes @ 0x23
   508  0043                     	ds	1
   509  0044                     main@x_1903:	
   510                           
   511                           ; 1 bytes @ 0x24
   512  0044                     	ds	1
   513  0045                     main@cnt:	
   514                           
   515                           ; 1 bytes @ 0x25
   516  0045                     	ds	1
   517                           
   518                           	psect	maintext
   519  057C                     __pmaintext:	
   520 ;;Data sizes: Strings 126, constant 10, data 0, bss 0, persistent 0 stack 0
   521 ;;Auto spaces:   Size  Autos    Used
   522 ;; COMMON          14     14      14
   523 ;; BANK0           80     38      38
   524 ;; BANK1           80      0       0
   525 ;; BANK3           96      0       0
   526 ;; BANK2           96      0       0
   527 ;;
   528 ;; Pointer list with targets:
   529 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   530 ;;
   531 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   532 ;;
   533 ;; ?_i2c_read	int  size(1) Largest target is 0
   534 ;;
   535 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 21
   536 ;;		 -> STR_8(CODE[11]), STR_7(CODE[16]), STR_6(CODE[19]), STR_5(CODE[11]), 
   537 ;;		 -> STR_4(CODE[16]), STR_3(CODE[18]), STR_1(CODE[21]), 
   538 ;;
   539 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 15
   540 ;;		 -> main@buffer(BANK0[15]), 
   541 ;;
   542 ;; ?_sprintf	int  size(1) Largest target is 0
   543 ;;
   544 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   545 ;;		 -> ?_sprintf(BANK0[2]), 
   546 ;;
   547 ;; S1921$_cp	PTR const unsigned char  size(1) Largest target is 0
   548 ;;
   549 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   550 ;;
   551 ;; lcd_puts@s	PTR const unsigned char  size(1) Largest target is 14
   552 ;;		 -> STR_2(CODE[14]), 
   553 ;;
   554 ;; pa	PTR unsigned char  size(1) Largest target is 1
   555 ;;		 -> PORTA(BITSFR0[1]), 
   556 ;;
   557 ;;
   558 ;; Critical Paths under _main in COMMON
   559 ;;
   560 ;;   _main->_sprintf
   561 ;;   _I2C_EEIN->_i2c_read
   562 ;;   _I2C_EEOUT->_pause
   563 ;;   _sprintf->___lwmod
   564 ;;   _i2c_write->_i2c_waitForIdle
   565 ;;   _i2c_read->_i2c_waitForIdle
   566 ;;   _i2c_stop->_i2c_waitForIdle
   567 ;;   _i2c_repStart->_i2c_waitForIdle
   568 ;;   _i2c_start->_i2c_waitForIdle
   569 ;;   _lcd_goto->_lcd_write
   570 ;;   _lcd_puts->_lcd_write
   571 ;;   _lcd_clear->_lcd_write
   572 ;;   ___lwmod->___lwdiv
   573 ;;
   574 ;; Critical Paths under _main in BANK0
   575 ;;
   576 ;;   _main->_sprintf
   577 ;;
   578 ;; Critical Paths under _main in BANK1
   579 ;;
   580 ;;   None.
   581 ;;
   582 ;; Critical Paths under _main in BANK3
   583 ;;
   584 ;;   None.
   585 ;;
   586 ;; Critical Paths under _main in BANK2
   587 ;;
   588 ;;   None.
   589 ;;
   590 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   591 ;;
   592 ;;
   593 ;;Call Graph Tables:
   594 ;;
   595 ;; ---------------------------------------------------------------------------------
   596 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   597 ;; ---------------------------------------------------------------------------------
   598 ;; (0) _main                                                28    28      0    2640
   599 ;;                                             12 BANK0     26    26      0
   600 ;;                         _init_micro
   601 ;;                           _i2c_init
   602 ;;                              _pause
   603 ;;                          _lcd_write
   604 ;;                          _lcd_clear
   605 ;;                              _putch
   606 ;;                            _sprintf
   607 ;;                           _lcd_goto
   608 ;;                           _lcd_puts
   609 ;;                          _I2C_EEOUT
   610 ;;                           _I2C_EEIN
   611 ;; ---------------------------------------------------------------------------------
   612 ;; (1) _I2C_EEIN                                             2     2      0     112
   613 ;;                                              9 COMMON     2     2      0
   614 ;;                          _i2c_start
   615 ;;                          _i2c_write
   616 ;;                       _i2c_repStart
   617 ;;                           _i2c_read
   618 ;;                           _i2c_stop
   619 ;; ---------------------------------------------------------------------------------
   620 ;; (1) _I2C_EEOUT                                            2     1      1     112
   621 ;;                                              8 COMMON     2     1      1
   622 ;;                          _i2c_start
   623 ;;                          _i2c_write
   624 ;;                           _i2c_stop
   625 ;;                              _pause
   626 ;; ---------------------------------------------------------------------------------
   627 ;; (1) _sprintf                                             14    11      3     798
   628 ;;                                             12 COMMON     2     2      0
   629 ;;                                              0 BANK0     12     9      3
   630 ;;                            ___lwdiv
   631 ;;                            ___lwmod
   632 ;; ---------------------------------------------------------------------------------
   633 ;; (2) _i2c_write                                            1     1      0      22
   634 ;;                                              5 COMMON     1     1      0
   635 ;;                    _i2c_waitForIdle
   636 ;; ---------------------------------------------------------------------------------
   637 ;; (2) _i2c_read                                             4     2      2      45
   638 ;;                                              5 COMMON     4     2      2
   639 ;;                    _i2c_waitForIdle
   640 ;; ---------------------------------------------------------------------------------
   641 ;; (2) _i2c_stop                                             0     0      0       0
   642 ;;                    _i2c_waitForIdle
   643 ;; ---------------------------------------------------------------------------------
   644 ;; (2) _i2c_repStart                                         0     0      0       0
   645 ;;                    _i2c_waitForIdle
   646 ;; ---------------------------------------------------------------------------------
   647 ;; (2) _i2c_start                                            0     0      0       0
   648 ;;                    _i2c_waitForIdle
   649 ;; ---------------------------------------------------------------------------------
   650 ;; (1) _lcd_goto                                             1     1      0     114
   651 ;;                                              2 COMMON     1     1      0
   652 ;;                          _lcd_write
   653 ;; ---------------------------------------------------------------------------------
   654 ;; (1) _lcd_puts                                             1     1      0     137
   655 ;;                                              2 COMMON     1     1      0
   656 ;;                          _lcd_write
   657 ;; ---------------------------------------------------------------------------------
   658 ;; (1) _lcd_clear                                            0     0      0      92
   659 ;;                          _lcd_write
   660 ;; ---------------------------------------------------------------------------------
   661 ;; (2) _pause                                                8     4      4      46
   662 ;;                                              0 COMMON     8     4      4
   663 ;;                           _msecbase
   664 ;; ---------------------------------------------------------------------------------
   665 ;; (2) ___lwmod                                              5     1      4     159
   666 ;;                                              7 COMMON     5     1      4
   667 ;;                            ___lwdiv (ARG)
   668 ;; ---------------------------------------------------------------------------------
   669 ;; (2) ___lwdiv                                              7     3      4     162
   670 ;;                                              0 COMMON     7     3      4
   671 ;; ---------------------------------------------------------------------------------
   672 ;; (3) _i2c_waitForIdle                                      5     5      0       0
   673 ;;                                              0 COMMON     5     5      0
   674 ;; ---------------------------------------------------------------------------------
   675 ;; (1) _i2c_init                                             0     0      0       0
   676 ;; ---------------------------------------------------------------------------------
   677 ;; (1) _putch                                                1     1      0      22
   678 ;;                                              0 COMMON     1     1      0
   679 ;; ---------------------------------------------------------------------------------
   680 ;; (2) _lcd_write                                            2     2      0      92
   681 ;;                                              0 COMMON     2     2      0
   682 ;; ---------------------------------------------------------------------------------
   683 ;; (3) _msecbase                                             0     0      0       0
   684 ;; ---------------------------------------------------------------------------------
   685 ;; (1) _init_micro                                           0     0      0       0
   686 ;; ---------------------------------------------------------------------------------
   687 ;; Estimated maximum stack depth 3
   688 ;; ---------------------------------------------------------------------------------
   689 ;; Call Graph Graphs:
   690 ;; _main (ROOT)
   691 ;;   _init_micro
   692 ;;   _i2c_init
   693 ;;   _pause
   694 ;;     _msecbase
   695 ;;   _lcd_write
   696 ;;   _lcd_clear
   697 ;;     _lcd_write
   698 ;;   _putch
   699 ;;   _sprintf
   700 ;;     ___lwdiv
   701 ;;     ___lwmod
   702 ;;       ___lwdiv (ARG)
   703 ;;   _lcd_goto
   704 ;;     _lcd_write
   705 ;;   _lcd_puts
   706 ;;     _lcd_write
   707 ;;   _I2C_EEOUT
   708 ;;     _i2c_start
   709 ;;       _i2c_waitForIdle
   710 ;;     _i2c_write
   711 ;;       _i2c_waitForIdle
   712 ;;     _i2c_stop
   713 ;;       _i2c_waitForIdle
   714 ;;     _pause
   715 ;;       _msecbase
   716 ;;   _I2C_EEIN
   717 ;;     _i2c_start
   718 ;;       _i2c_waitForIdle
   719 ;;     _i2c_write
   720 ;;       _i2c_waitForIdle
   721 ;;     _i2c_repStart
   722 ;;       _i2c_waitForIdle
   723 ;;     _i2c_read
   724 ;;       _i2c_waitForIdle
   725 ;;     _i2c_stop
   726 ;;       _i2c_waitForIdle
   727 ;;
   728 ;; Address spaces:
   729 ;;Name               Size   Autos  Total    Cost      Usage
   730 ;;BITCOMMON            E      0       0       0        0.0%
   731 ;;EEDATA             100      0       0       0        0.0%
   732 ;;NULL                 0      0       0       0        0.0%
   733 ;;CODE                 0      0       0       0        0.0%
   734 ;;COMMON               E      E       E       1      100.0%
   735 ;;BITSFR0              0      0       0       1        0.0%
   736 ;;SFR0                 0      0       0       1        0.0%
   737 ;;BITSFR1              0      0       0       2        0.0%
   738 ;;SFR1                 0      0       0       2        0.0%
   739 ;;STACK                0      0       3       2        0.0%
   740 ;;ABS                  0      0       0       3        0.0%
   741 ;;BITBANK0            50      0       0       4        0.0%
   742 ;;BITSFR3              0      0       0       4        0.0%
   743 ;;SFR3                 0      0       0       4        0.0%
   744 ;;BANK0               50     26      26       5       47.5%
   745 ;;BITSFR2              0      0       0       5        0.0%
   746 ;;SFR2                 0      0       0       5        0.0%
   747 ;;BITBANK1            50      0       0       6        0.0%
   748 ;;BANK1               50      0       0       7        0.0%
   749 ;;BITBANK3            60      0       0       8        0.0%
   750 ;;BANK3               60      0       0       9        0.0%
   751 ;;BITBANK2            60      0       0      10        0.0%
   752 ;;BANK2               60      0       0      11        0.0%
   753 ;;DATA                 0      0       0      12        0.0%
   754                           
   755                           
   756 ;; *************** function _main *****************
   757 ;; Defined at:
   758 ;;		line 1145 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  x               1   36[BANK0 ] unsigned char 
   763 ;;  x               1   35[BANK0 ] unsigned char 
   764 ;;  x               1   33[BANK0 ] unsigned char 
   765 ;;  x               1   32[BANK0 ] unsigned char 
   766 ;;  x               1   34[BANK0 ] unsigned char 
   767 ;;  x               1   31[BANK0 ] unsigned char 
   768 ;;  x               1   30[BANK0 ] unsigned char 
   769 ;;  i               2   28[BANK0 ] int 
   770 ;;  buffer         15   12[BANK0 ] unsigned char [15]
   771 ;;  cnt             1   37[BANK0 ] unsigned char 
   772 ;;  val             1   27[BANK0 ] unsigned char 
   773 ;;  char_pwm        1    0        unsigned char 
   774 ;;  char_recibid    1    0        unsigned char 
   775 ;; Return value:  Size  Location     Type
   776 ;;		None               void
   777 ;; Registers used:
   778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   779 ;; Tracked objects:
   780 ;;		On entry : 17F/0
   781 ;;		On exit  : 160/0
   782 ;;		Unchanged: FFE00/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         0       0       0       0       0
   785 ;;      Locals:         0      26       0       0       0
   786 ;;      Temps:          0       0       0       0       0
   787 ;;      Totals:         0      26       0       0       0
   788 ;;Total ram usage:       26 bytes
   789 ;; Hardware stack levels required when called:    3
   790 ;; This function calls:
   791 ;;		_init_micro
   792 ;;		_i2c_init
   793 ;;		_pause
   794 ;;		_lcd_write
   795 ;;		_lcd_clear
   796 ;;		_putch
   797 ;;		_sprintf
   798 ;;		_lcd_goto
   799 ;;		_lcd_puts
   800 ;;		_I2C_EEOUT
   801 ;;		_I2C_EEIN
   802 ;; This function is called by:
   803 ;;		Startup code after reset
   804 ;; This function uses a non-reentrant model
   805 ;;
   806  057C                     _main:	
   807                           
   808                           ;eeprom_i2c.c: 1147: init_micro();
   809                           
   810                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   811  057C  120A  118A  23A5   	fcall	_init_micro
      +       120A  118A         
   812                           
   813                           ;eeprom_i2c.c: 1148: i2c_init();
   814  0581  120A  118A  23AE   	fcall	_i2c_init
      +       120A  118A         
   815                           
   816                           ;eeprom_i2c.c: 1149: ANSEL=0x00;
   817  0586  1683               	bsf	3,5	;RP0=1, select bank3
   818  0587  1703               	bsf	3,6	;RP1=1, select bank3
   819  0588  0188               	clrf	8	;volatile
   820                           
   821                           ;eeprom_i2c.c: 1150: ANSELH=0x00;
   822  0589  0189               	clrf	9	;volatile
   823                           
   824                           ;eeprom_i2c.c: 1151: PORTB=0x00;
   825  058A  1283               	bcf	3,5	;RP0=0, select bank0
   826  058B  1303               	bcf	3,6	;RP1=0, select bank0
   827  058C  0186               	clrf	6	;volatile
   828                           
   829                           ;eeprom_i2c.c: 1152: TRISB=0x00;
   830  058D  1683               	bsf	3,5	;RP0=1, select bank1
   831  058E  0186               	clrf	6	;volatile
   832                           
   833                           ;eeprom_i2c.c: 1153: TRISA=0x00;
   834  058F  0185               	clrf	5	;volatile
   835                           
   836                           ;eeprom_i2c.c: 1154: TRISD=0x00;
   837  0590  0188               	clrf	8	;volatile
   838                           
   839                           ;eeprom_i2c.c: 1168: RA7=0;
   840  0591  1283               	bcf	3,5	;RP0=0, select bank0
   841  0592  300F               	movlw	15
   842  0593  1385               	bcf	5,7
   843                           
   844                           ;eeprom_i2c.c: 1169: RA6=0;
   845  0594  1305               	bcf	5,6
   846                           
   847                           ;eeprom_i2c.c: 1170: RE1=0;
   848  0595  1089               	bcf	9,1
   849                           
   850                           ;eeprom_i2c.c: 1172: pause(15);
   851  0596  00F0               	movwf	?_pause
   852  0597  01F1               	clrf	?_pause+1
   853  0598  01F2               	clrf	?_pause+2
   854  0599  01F3               	clrf	?_pause+3
   855  059A  120A  118A  2462   	fcall	_pause
      +       120A  118A         
   856                           
   857                           ;eeprom_i2c.c: 1173: PORTD=init_value;
   858  059F  3003               	movlw	3
   859  05A0  1283               	bcf	3,5	;RP0=0, select bank0
   860  05A1  1303               	bcf	3,6	;RP1=0, select bank0
   861  05A2  0088               	movwf	8	;volatile
   862  05A3  300A               	movlw	10
   863                           
   864                           ;eeprom_i2c.c: 1174: ((RA6=1),(RA6=0));
   865  05A4  1705               	bsf	5,6
   866  05A5  1305               	bcf	5,6
   867                           
   868                           ;eeprom_i2c.c: 1175: pause(10);
   869  05A6  00F0               	movwf	?_pause
   870  05A7  01F1               	clrf	?_pause+1
   871  05A8  01F2               	clrf	?_pause+2
   872  05A9  01F3               	clrf	?_pause+3
   873  05AA  120A  118A  2462   	fcall	_pause
      +       120A  118A         
   874                           
   875                           ;eeprom_i2c.c: 1176: ((RA6=1),(RA6=0));
   876  05AF  1283               	bcf	3,5	;RP0=0, select bank0
   877  05B0  1303               	bcf	3,6	;RP1=0, select bank0
   878  05B1  300A               	movlw	10
   879  05B2  1705               	bsf	5,6
   880  05B3  1305               	bcf	5,6
   881                           
   882                           ;eeprom_i2c.c: 1177: pause(10);
   883  05B4  00F0               	movwf	?_pause
   884  05B5  01F1               	clrf	?_pause+1
   885  05B6  01F2               	clrf	?_pause+2
   886  05B7  01F3               	clrf	?_pause+3
   887  05B8  120A  118A  2462   	fcall	_pause
      +       120A  118A         
   888                           
   889                           ;eeprom_i2c.c: 1178: ((RA6=1),(RA6=0));
   890  05BD  1283               	bcf	3,5	;RP0=0, select bank0
   891  05BE  1303               	bcf	3,6	;RP1=0, select bank0
   892  05BF  300A               	movlw	10
   893  05C0  1705               	bsf	5,6
   894  05C1  1305               	bcf	5,6
   895                           
   896                           ;eeprom_i2c.c: 1179: pause(10);
   897  05C2  00F0               	movwf	?_pause
   898  05C3  01F1               	clrf	?_pause+1
   899  05C4  01F2               	clrf	?_pause+2
   900  05C5  01F3               	clrf	?_pause+3
   901  05C6  120A  118A  2462   	fcall	_pause
      +       120A  118A         
   902                           
   903                           ;eeprom_i2c.c: 1180: PORTD=2;
   904  05CB  3002               	movlw	2
   905  05CC  1283               	bcf	3,5	;RP0=0, select bank0
   906  05CD  1303               	bcf	3,6	;RP1=0, select bank0
   907  05CE  0088               	movwf	8	;volatile
   908  05CF  3028               	movlw	40
   909                           
   910                           ;eeprom_i2c.c: 1181: ((RA6=1),(RA6=0));
   911  05D0  1705               	bsf	5,6
   912  05D1  1305               	bcf	5,6
   913                           
   914                           ;eeprom_i2c.c: 1183: lcd_write(0x28);
   915  05D2  120A  118A  23DE   	fcall	_lcd_write
      +       120A  118A         
   916                           
   917                           ;eeprom_i2c.c: 1184: lcd_write(0xC);
   918  05D7  300C               	movlw	12
   919  05D8  120A  118A  23DE   	fcall	_lcd_write
      +       120A  118A         
   920                           
   921                           ;eeprom_i2c.c: 1185: lcd_clear();
   922  05DD  120A  118A  23BF   	fcall	_lcd_clear
      +       120A  118A         
   923                           
   924                           ;eeprom_i2c.c: 1186: lcd_write(0x06);
   925  05E2  3006               	movlw	6
   926  05E3  120A  118A  23DE   	fcall	_lcd_write
      +       120A  118A         
   927                           
   928                           ;eeprom_i2c.c: 1188: TRISC7=1;
   929  05E8  1683               	bsf	3,5	;RP0=1, select bank1
   930  05E9  3070               	movlw	112
   931  05EA  1787               	bsf	7,7
   932                           
   933                           ;eeprom_i2c.c: 1189: TRISC6=0;
   934  05EB  1307               	bcf	7,6
   935                           
   936                           ;eeprom_i2c.c: 1190: OSCCON=0x70;
   937  05EC  008F               	movwf	15	;volatile
   938                           
   939                           ;eeprom_i2c.c: 1191: SPBRG=12;
   940  05ED  300C               	movlw	12
   941  05EE  0099               	movwf	25	;volatile
   942                           
   943                           ;eeprom_i2c.c: 1192: RCSTA=0x90;
   944  05EF  3090               	movlw	144
   945  05F0  1283               	bcf	3,5	;RP0=0, select bank0
   946  05F1  0098               	movwf	24	;volatile
   947                           
   948                           ;eeprom_i2c.c: 1193: TXSTA=0x20;
   949  05F2  3020               	movlw	32
   950  05F3  1683               	bsf	3,5	;RP0=1, select bank1
   951  05F4  0098               	movwf	24	;volatile
   952                           
   953                           ;eeprom_i2c.c: 1194: BAUDCTL=0x00;
   954  05F5  1703               	bsf	3,6	;RP1=1, select bank3
   955  05F6  0187               	clrf	7	;volatile
   956                           
   957                           ;eeprom_i2c.c: 1195: pause(500);
   958  05F7  3000               	movlw	0
   959  05F8  00F3               	movwf	?_pause+3
   960  05F9  00F2               	movwf	?_pause+2
   961  05FA  3001               	movlw	1
   962  05FB  00F1               	movwf	?_pause+1
   963  05FC  30F4               	movlw	244
   964  05FD  00F0               	movwf	?_pause
   965  05FE  120A  118A  2462   	fcall	_pause
      +       120A  118A         
   966                           
   967                           ;eeprom_i2c.c: 1198: char char_recibido;
   968                           ;eeprom_i2c.c: 1199: char char_pwm;
   969                           ;eeprom_i2c.c: 1200: char buffer[15];
   970                           ;eeprom_i2c.c: 1203: PORTA=0x01;
   971  0603  3001               	movlw	1
   972  0604  1283               	bcf	3,5	;RP0=0, select bank0
   973  0605  1303               	bcf	3,6	;RP1=0, select bank0
   974  0606  0085               	movwf	5	;volatile
   975                           
   976                           ;eeprom_i2c.c: 1204: *pa=0xFF;
   977  0607  30FF               	movlw	255
   978  0608  0085               	movwf	5
   979                           
   980                           ;eeprom_i2c.c: 1206: putch(0x0D);
   981  0609  300D               	movlw	13
   982  060A  120A  118A  239D   	fcall	_putch
      +       120A  118A         
   983                           
   984                           ;eeprom_i2c.c: 1207: putch(0x0A);
   985  060F  300A               	movlw	10
   986  0610  120A  118A  239D   	fcall	_putch
      +       120A  118A         
   987                           
   988                           ;eeprom_i2c.c: 1210: for(int i=97; i<123; i++){
   989  0615  3061               	movlw	97
   990  0616  00BC               	movwf	main@i
   991  0617  01BD               	clrf	main@i+1
   992  0618                     l3576:	
   993                           
   994                           ;eeprom_i2c.c: 1211: putch(i);
   995  0618  1283               	bcf	3,5	;RP0=0, select bank0
   996  0619  1303               	bcf	3,6	;RP1=0, select bank0
   997  061A  083C               	movf	main@i,w
   998  061B  120A  118A  239D   	fcall	_putch
      +       120A  118A         
   999                           
  1000                           ;eeprom_i2c.c: 1212: pause(20);
  1001  0620  3014               	movlw	20
  1002  0621  00F0               	movwf	?_pause
  1003  0622  01F1               	clrf	?_pause+1
  1004  0623  01F2               	clrf	?_pause+2
  1005  0624  01F3               	clrf	?_pause+3
  1006  0625  120A  118A  2462   	fcall	_pause
      +       120A  118A         
  1007  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1008  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1009  062C  0ABC               	incf	main@i,f
  1010  062D  1903               	skipnz
  1011  062E  0ABD               	incf	main@i+1,f
  1012  062F  083D               	movf	main@i+1,w
  1013  0630  3A80               	xorlw	128
  1014  0631  00FF               	movwf	127
  1015  0632  3080               	movlw	128
  1016  0633  027F               	subwf	127,w
  1017  0634  1D03               	skipz
  1018  0635  2E38               	goto	u535
  1019  0636  307B               	movlw	123
  1020  0637  023C               	subwf	main@i,w
  1021  0638                     u535:	
  1022  0638  1C03               	skipc
  1023  0639  2E18               	goto	l3576
  1024                           
  1025                           ;eeprom_i2c.c: 1213: }
  1026                           ;eeprom_i2c.c: 1214: putch(0x0D);
  1027  063A  300D               	movlw	13
  1028  063B  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1029                           
  1030                           ;eeprom_i2c.c: 1215: putch(0x0A);
  1031  0640  300A               	movlw	10
  1032  0641  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1033                           
  1034                           ;eeprom_i2c.c: 1217: putch(0x0D);
  1035  0646  300D               	movlw	13
  1036  0647  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1037                           
  1038                           ;eeprom_i2c.c: 1218: putch(0x0A);
  1039  064C  300A               	movlw	10
  1040  064D  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1041                           
  1042                           ;eeprom_i2c.c: 1219: sprintf(buffer,"Mostrando Escritura ");
  1043  0652  300B               	movlw	(STR_1-__stringbase)& (0+255)
  1044  0653  00A0               	movwf	?_sprintf
  1045  0654  302C               	movlw	main@buffer& (0+255)
  1046  0655  120A  118A  248D   	fcall	_sprintf
      +       120A  118A         
  1047                           
  1048                           ;eeprom_i2c.c: 1220: for (char x = 0; x<20; x++)
  1049  065A  01BE               	clrf	main@x
  1050  065B                     l3592:	
  1051                           
  1052                           ;eeprom_i2c.c: 1221: {
  1053                           ;eeprom_i2c.c: 1222: putch (buffer[x]);
  1054  065B  083E               	movf	main@x,w
  1055  065C  3E2C               	addlw	main@buffer& (0+255)
  1056  065D  0084               	movwf	4
  1057  065E  0800               	movf	0,w
  1058  065F  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1059  0664  3014               	movlw	20
  1060  0665  0ABE               	incf	main@x,f
  1061  0666  023E               	subwf	main@x,w
  1062  0667  1C03               	skipc
  1063  0668  2E5B               	goto	l3592
  1064                           
  1065                           ;eeprom_i2c.c: 1223: }
  1066                           ;eeprom_i2c.c: 1224: pause(200);
  1067  0669  30C8               	movlw	200
  1068  066A  00F0               	movwf	?_pause
  1069  066B  01F1               	clrf	?_pause+1
  1070  066C  01F2               	clrf	?_pause+2
  1071  066D  01F3               	clrf	?_pause+3
  1072  066E  120A  118A  2462   	fcall	_pause
      +       120A  118A         
  1073                           
  1074                           ;eeprom_i2c.c: 1225: putch(0x0D);
  1075  0673  300D               	movlw	13
  1076  0674  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1077                           
  1078                           ;eeprom_i2c.c: 1226: putch(0x0A);
  1079  0679  300A               	movlw	10
  1080  067A  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1081                           
  1082                           ;eeprom_i2c.c: 1228: unsigned char cnt = 0;
  1083  067F  01C5               	clrf	main@cnt
  1084                           
  1085                           ;eeprom_i2c.c: 1231: lcd_clear();
  1086  0680  120A  118A  23BF   	fcall	_lcd_clear
      +       120A  118A         
  1087                           
  1088                           ;eeprom_i2c.c: 1232: lcd_goto(0);
  1089  0685  3000               	movlw	0
  1090  0686  120A  118A  23C2   	fcall	_lcd_goto
      +       120A  118A         
  1091                           
  1092                           ;eeprom_i2c.c: 1233: lcd_puts("Grabando.....");
  1093  068B  3065               	movlw	(STR_2-__stringbase)& (0+255)
  1094  068C  120A  118A  23C6   	fcall	_lcd_puts
      +       120A  118A         
  1095                           
  1096                           ;eeprom_i2c.c: 1235: sprintf(buffer,"Tamanio de cnt %i", sizeof(cnt));
  1097  0691  3033               	movlw	(STR_3-__stringbase)& (0+255)
  1098  0692  00A0               	movwf	?_sprintf
  1099  0693  302C               	movlw	main@buffer& (0+255)
  1100  0694  01A1               	clrf	?_sprintf+1
  1101  0695  0AA1               	incf	?_sprintf+1,f
  1102  0696  01A2               	clrf	?_sprintf+2
  1103  0697  120A  118A  248D   	fcall	_sprintf
      +       120A  118A         
  1104                           
  1105                           ;eeprom_i2c.c: 1236: for (char x = 0; x<20; x++)
  1106  069C  01BF               	clrf	main@x_1892
  1107  069D                     l3616:	
  1108                           
  1109                           ;eeprom_i2c.c: 1237: {
  1110                           ;eeprom_i2c.c: 1238: putch (buffer[x]);
  1111  069D  083F               	movf	main@x_1892,w
  1112  069E  3E2C               	addlw	main@buffer& (0+255)
  1113  069F  0084               	movwf	4
  1114  06A0  0800               	movf	0,w
  1115  06A1  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1116  06A6  3014               	movlw	20
  1117  06A7  0ABF               	incf	main@x_1892,f
  1118  06A8  023F               	subwf	main@x_1892,w
  1119  06A9  1C03               	skipc
  1120  06AA  2E9D               	goto	l3616
  1121                           
  1122                           ;eeprom_i2c.c: 1239: }
  1123                           ;eeprom_i2c.c: 1240: pause(200);
  1124  06AB  30C8               	movlw	200
  1125  06AC  00F0               	movwf	?_pause
  1126  06AD  01F1               	clrf	?_pause+1
  1127  06AE  01F2               	clrf	?_pause+2
  1128  06AF  01F3               	clrf	?_pause+3
  1129  06B0  120A  118A  2462   	fcall	_pause
      +       120A  118A         
  1130                           
  1131                           ;eeprom_i2c.c: 1241: putch(0x0D);
  1132  06B5  300D               	movlw	13
  1133  06B6  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1134                           
  1135                           ;eeprom_i2c.c: 1242: putch(0x0A);
  1136  06BB  300A               	movlw	10
  1137  06BC  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1138  06C1                     l3666:	
  1139                           ;eeprom_i2c.c: 1246: while(cnt<=20){
  1140                           
  1141  06C1  3015               	movlw	21
  1142  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  1143  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  1144  06C4  0245               	subwf	main@cnt,w
  1145  06C5  1803               	btfsc	3,0
  1146  06C6  2F3E               	goto	l3668
  1147                           
  1148                           ;eeprom_i2c.c: 1247: PORTB = cnt+10;
  1149  06C7  0845               	movf	main@cnt,w
  1150  06C8  3E0A               	addlw	10
  1151  06C9  0086               	movwf	6	;volatile
  1152                           
  1153                           ;eeprom_i2c.c: 1248: pause(300);
  1154  06CA  3001               	movlw	1
  1155  06CB  01F3               	clrf	?_pause+3
  1156  06CC  01F2               	clrf	?_pause+2
  1157  06CD  00F1               	movwf	?_pause+1
  1158  06CE  302C               	movlw	44
  1159  06CF  00F0               	movwf	?_pause
  1160  06D0  120A  118A  2462   	fcall	_pause
      +       120A  118A         
  1161                           
  1162                           ;eeprom_i2c.c: 1249: I2C_EEOUT(cnt,10 - cnt);
  1163  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1164  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1165  06D7  0845               	movf	main@cnt,w
  1166  06D8  3C0A               	sublw	10
  1167  06D9  00F8               	movwf	?_I2C_EEOUT
  1168  06DA  0845               	movf	main@cnt,w
  1169  06DB  120A  118A  23F1   	fcall	_I2C_EEOUT
      +       120A  118A         
  1170                           
  1171                           ;eeprom_i2c.c: 1251: sprintf(buffer,"Directorio: %d ", cnt);
  1172  06E0  3045               	movlw	(STR_4-__stringbase)& (0+255)
  1173  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1174  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1175  06E3  00A0               	movwf	?_sprintf
  1176  06E4  0845               	movf	main@cnt,w
  1177  06E5  00A1               	movwf	?_sprintf+1
  1178  06E6  302C               	movlw	main@buffer& (0+255)
  1179  06E7  01A2               	clrf	?_sprintf+2
  1180  06E8  120A  118A  248D   	fcall	_sprintf
      +       120A  118A         
  1181                           
  1182                           ;eeprom_i2c.c: 1252: for (char x = 0; x<15; x++)
  1183  06ED  01C0               	clrf	main@x_1894
  1184  06EE                     l3638:	
  1185                           
  1186                           ;eeprom_i2c.c: 1253: {
  1187                           ;eeprom_i2c.c: 1254: putch (buffer[x]);
  1188  06EE  0840               	movf	main@x_1894,w
  1189  06EF  3E2C               	addlw	main@buffer& (0+255)
  1190  06F0  0084               	movwf	4
  1191  06F1  0800               	movf	0,w
  1192  06F2  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1193  06F7  300F               	movlw	15
  1194  06F8  0AC0               	incf	main@x_1894,f
  1195  06F9  0240               	subwf	main@x_1894,w
  1196  06FA  1C03               	skipc
  1197  06FB  2EEE               	goto	l3638
  1198                           
  1199                           ;eeprom_i2c.c: 1255: }
  1200                           ;eeprom_i2c.c: 1256: putch(0x0D);
  1201  06FC  300D               	movlw	13
  1202  06FD  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1203                           
  1204                           ;eeprom_i2c.c: 1257: putch(0x0A);
  1205  0702  300A               	movlw	10
  1206  0703  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1207                           
  1208                           ;eeprom_i2c.c: 1259: sprintf(buffer,"Valor: %d ", cnt+10);
  1209  0708  3073               	movlw	(STR_5-__stringbase)& (0+255)
  1210  0709  00A0               	movwf	?_sprintf
  1211  070A  0845               	movf	main@cnt,w
  1212  070B  3E0A               	addlw	10
  1213  070C  00A1               	movwf	?_sprintf+1
  1214  070D  3000               	movlw	0
  1215  070E  1803               	skipnc
  1216  070F  3001               	movlw	1
  1217  0710  00A2               	movwf	?_sprintf+2
  1218  0711  302C               	movlw	main@buffer& (0+255)
  1219  0712  120A  118A  248D   	fcall	_sprintf
      +       120A  118A         
  1220                           
  1221                           ;eeprom_i2c.c: 1260: for (char x = 0; x<10; x++)
  1222  0717  01C1               	clrf	main@x_1896
  1223  0718                     l3654:	
  1224                           
  1225                           ;eeprom_i2c.c: 1261: {
  1226                           ;eeprom_i2c.c: 1262: putch (buffer[x]);
  1227  0718  0841               	movf	main@x_1896,w
  1228  0719  3E2C               	addlw	main@buffer& (0+255)
  1229  071A  0084               	movwf	4
  1230  071B  0800               	movf	0,w
  1231  071C  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1232  0721  300A               	movlw	10
  1233  0722  0AC1               	incf	main@x_1896,f
  1234  0723  0241               	subwf	main@x_1896,w
  1235  0724  1C03               	skipc
  1236  0725  2F18               	goto	l3654
  1237                           
  1238                           ;eeprom_i2c.c: 1263: }
  1239                           ;eeprom_i2c.c: 1265: putch(0x0D);
  1240  0726  300D               	movlw	13
  1241  0727  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1242                           
  1243                           ;eeprom_i2c.c: 1266: putch(0x0A);
  1244  072C  300A               	movlw	10
  1245  072D  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1246  0732  3064               	movlw	100
  1247                           
  1248                           ;eeprom_i2c.c: 1269: cnt=cnt+1;
  1249  0733  0AC5               	incf	main@cnt,f
  1250                           
  1251                           ;eeprom_i2c.c: 1270: pause(100);
  1252  0734  00F0               	movwf	?_pause
  1253  0735  01F1               	clrf	?_pause+1
  1254  0736  01F2               	clrf	?_pause+2
  1255  0737  01F3               	clrf	?_pause+3
  1256  0738  120A  118A  2462   	fcall	_pause
      +       120A  118A         
  1257  073D  2EC1               	goto	l3666
  1258  073E                     l3668:	
  1259                           
  1260                           ;eeprom_i2c.c: 1271: }
  1261                           ;eeprom_i2c.c: 1273: putch(0x0D);
  1262  073E  300D               	movlw	13
  1263  073F  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1264                           
  1265                           ;eeprom_i2c.c: 1274: putch(0x0A);
  1266  0744  300A               	movlw	10
  1267  0745  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1268                           
  1269                           ;eeprom_i2c.c: 1275: sprintf(buffer,"Mostrando Lectura ");
  1270  074A  3020               	movlw	(STR_6-__stringbase)& (0+255)
  1271  074B  00A0               	movwf	?_sprintf
  1272  074C  302C               	movlw	main@buffer& (0+255)
  1273  074D  120A  118A  248D   	fcall	_sprintf
      +       120A  118A         
  1274                           
  1275                           ;eeprom_i2c.c: 1276: for (char x = 0; x<18; x++)
  1276  0752  01C2               	clrf	main@x_1898
  1277  0753                     l3678:	
  1278                           
  1279                           ;eeprom_i2c.c: 1277: {
  1280                           ;eeprom_i2c.c: 1278: putch (buffer[x]);
  1281  0753  0842               	movf	main@x_1898,w
  1282  0754  3E2C               	addlw	main@buffer& (0+255)
  1283  0755  0084               	movwf	4
  1284  0756  0800               	movf	0,w
  1285  0757  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1286  075C  3012               	movlw	18
  1287  075D  0AC2               	incf	main@x_1898,f
  1288  075E  0242               	subwf	main@x_1898,w
  1289  075F  1C03               	skipc
  1290  0760  2F53               	goto	l3678
  1291                           
  1292                           ;eeprom_i2c.c: 1279: }
  1293                           ;eeprom_i2c.c: 1280: pause(100);
  1294  0761  3064               	movlw	100
  1295  0762  00F0               	movwf	?_pause
  1296  0763  01F1               	clrf	?_pause+1
  1297  0764  01F2               	clrf	?_pause+2
  1298  0765  01F3               	clrf	?_pause+3
  1299  0766  120A  118A  2462   	fcall	_pause
      +       120A  118A         
  1300                           
  1301                           ;eeprom_i2c.c: 1281: putch(0x0D);
  1302  076B  300D               	movlw	13
  1303  076C  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1304                           
  1305                           ;eeprom_i2c.c: 1282: putch(0x0A);
  1306  0771  300A               	movlw	10
  1307  0772  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1308                           
  1309                           ;eeprom_i2c.c: 1284: cnt=0;
  1310  0777  01C5               	clrf	main@cnt
  1311  0778                     l3726:	
  1312                           ;eeprom_i2c.c: 1289: while(cnt <= 20)
  1313                           
  1314  0778  3015               	movlw	21
  1315  0779  0245               	subwf	main@cnt,w
  1316  077A  1803               	btfsc	3,0
  1317  077B  2FFD               	goto	l1327
  1318                           
  1319                           ;eeprom_i2c.c: 1290: {
  1320                           ;eeprom_i2c.c: 1291: val = I2C_EEIN(cnt);
  1321  077C  0845               	movf	main@cnt,w
  1322  077D  120A  118A  240A   	fcall	_I2C_EEIN
      +       120A  118A         
  1323  0782  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0783  00BB               	movwf	main@val
  1325                           
  1326                           ;eeprom_i2c.c: 1292: PORTB = I2C_EEIN(cnt);
  1327  0784  0845               	movf	main@cnt,w
  1328  0785  120A  118A  240A   	fcall	_I2C_EEIN
      +       120A  118A         
  1329  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1330  078B  0086               	movwf	6	;volatile
  1331                           
  1332                           ;eeprom_i2c.c: 1293: pause (300);
  1333  078C  3001               	movlw	1
  1334  078D  01F3               	clrf	?_pause+3
  1335  078E  01F2               	clrf	?_pause+2
  1336  078F  00F1               	movwf	?_pause+1
  1337  0790  302C               	movlw	44
  1338  0791  00F0               	movwf	?_pause
  1339  0792  120A  118A  2462   	fcall	_pause
      +       120A  118A         
  1340                           
  1341                           ;eeprom_i2c.c: 1295: sprintf(buffer,"Directorio: %i ", cnt);
  1342  0797  3055               	movlw	(STR_7-__stringbase)& (0+255)
  1343  0798  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0799  1303               	bcf	3,6	;RP1=0, select bank0
  1345  079A  00A0               	movwf	?_sprintf
  1346  079B  0845               	movf	main@cnt,w
  1347  079C  00A1               	movwf	?_sprintf+1
  1348  079D  302C               	movlw	main@buffer& (0+255)
  1349  079E  01A2               	clrf	?_sprintf+2
  1350  079F  120A  118A  248D   	fcall	_sprintf
      +       120A  118A         
  1351                           
  1352                           ;eeprom_i2c.c: 1296: for (char x = 0; x<16; x++)
  1353  07A4  01C3               	clrf	main@x_1901
  1354  07A5                     l3700:	
  1355                           
  1356                           ;eeprom_i2c.c: 1297: {
  1357                           ;eeprom_i2c.c: 1298: putch (buffer[x]);
  1358  07A5  0843               	movf	main@x_1901,w
  1359  07A6  3E2C               	addlw	main@buffer& (0+255)
  1360  07A7  0084               	movwf	4
  1361  07A8  0800               	movf	0,w
  1362  07A9  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1363  07AE  3010               	movlw	16
  1364  07AF  0AC3               	incf	main@x_1901,f
  1365  07B0  0243               	subwf	main@x_1901,w
  1366  07B1  1C03               	skipc
  1367  07B2  2FA5               	goto	l3700
  1368                           
  1369                           ;eeprom_i2c.c: 1299: }
  1370                           ;eeprom_i2c.c: 1301: putch(0x0D);
  1371  07B3  300D               	movlw	13
  1372  07B4  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1373                           
  1374                           ;eeprom_i2c.c: 1302: putch(0x0A);
  1375  07B9  300A               	movlw	10
  1376  07BA  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1377                           
  1378                           ;eeprom_i2c.c: 1304: sprintf(buffer,"Valor: %i ", val);
  1379  07BF  307E               	movlw	(STR_8-__stringbase)& (0+255)
  1380  07C0  00A0               	movwf	?_sprintf
  1381  07C1  083B               	movf	main@val,w
  1382  07C2  00A1               	movwf	?_sprintf+1
  1383  07C3  302C               	movlw	main@buffer& (0+255)
  1384  07C4  01A2               	clrf	?_sprintf+2
  1385  07C5  120A  118A  248D   	fcall	_sprintf
      +       120A  118A         
  1386                           
  1387                           ;eeprom_i2c.c: 1305: for (char x = 0; x<10; x++)
  1388  07CA  01C4               	clrf	main@x_1903
  1389  07CB                     l3716:	
  1390                           
  1391                           ;eeprom_i2c.c: 1306: {
  1392                           ;eeprom_i2c.c: 1307: putch (buffer[x]);
  1393  07CB  0844               	movf	main@x_1903,w
  1394  07CC  3E2C               	addlw	main@buffer& (0+255)
  1395  07CD  0084               	movwf	4
  1396  07CE  0800               	movf	0,w
  1397  07CF  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1398  07D4  300A               	movlw	10
  1399  07D5  0AC4               	incf	main@x_1903,f
  1400  07D6  0244               	subwf	main@x_1903,w
  1401  07D7  1C03               	skipc
  1402  07D8  2FCB               	goto	l3716
  1403                           
  1404                           ;eeprom_i2c.c: 1308: }
  1405                           ;eeprom_i2c.c: 1309: pause(100);
  1406  07D9  3064               	movlw	100
  1407  07DA  00F0               	movwf	?_pause
  1408  07DB  01F1               	clrf	?_pause+1
  1409  07DC  01F2               	clrf	?_pause+2
  1410  07DD  01F3               	clrf	?_pause+3
  1411  07DE  120A  118A  2462   	fcall	_pause
      +       120A  118A         
  1412                           
  1413                           ;eeprom_i2c.c: 1311: putch(0x0D);
  1414  07E3  300D               	movlw	13
  1415  07E4  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1416                           
  1417                           ;eeprom_i2c.c: 1312: putch(0x0A);
  1418  07E9  300A               	movlw	10
  1419  07EA  120A  118A  239D   	fcall	_putch
      +       120A  118A         
  1420                           
  1421                           ;eeprom_i2c.c: 1324: pause(255);
  1422  07EF  30FF               	movlw	255
  1423  07F0  00F0               	movwf	?_pause
  1424  07F1  01F1               	clrf	?_pause+1
  1425  07F2  01F2               	clrf	?_pause+2
  1426  07F3  01F3               	clrf	?_pause+3
  1427  07F4  120A  118A  2462   	fcall	_pause
      +       120A  118A         
  1428                           
  1429                           ;eeprom_i2c.c: 1325: cnt=cnt + 1;
  1430  07F9  1283               	bcf	3,5	;RP0=0, select bank0
  1431  07FA  1303               	bcf	3,6	;RP1=0, select bank0
  1432  07FB  0AC5               	incf	main@cnt,f
  1433  07FC  2F78               	goto	l3726
  1434  07FD                     l1327:	
  1435  07FD  120A  118A  2800   	ljmp	start
  1436  0800                     __end_of_main:	
  1437                           
  1438                           	psect	text437
  1439  03F1                     __ptext437:	
  1440 ;; =============== function _I2C_EEIN ends ============
  1441                           
  1442                           
  1443 ;; *************** function _I2C_EEOUT *****************
  1444 ;; Defined at:
  1445 ;;		line 1114 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  address         1    wreg     unsigned char 
  1448 ;;  data            1    8[COMMON] unsigned char 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;  address         1    9[COMMON] unsigned char 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;		None               void
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, status,0, pclath, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 160/0
  1457 ;;		On exit  : 100/0
  1458 ;;		Unchanged: FFE9F/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1460 ;;      Params:         1       0       0       0       0
  1461 ;;      Locals:         1       0       0       0       0
  1462 ;;      Temps:          0       0       0       0       0
  1463 ;;      Totals:         2       0       0       0       0
  1464 ;;Total ram usage:        2 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    2
  1467 ;; This function calls:
  1468 ;;		_i2c_start
  1469 ;;		_i2c_write
  1470 ;;		_i2c_stop
  1471 ;;		_pause
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476  03F1                     _I2C_EEOUT:	
  1477                           
  1478                           ; Regs used in _I2C_EEOUT: [wreg+status,2+status,0+pclath+cstack]
  1479                           ;I2C_EEOUT@address stored from wreg
  1480  03F1  00F9               	movwf	I2C_EEOUT@address
  1481                           
  1482                           ;eeprom_i2c.c: 1115: i2c_start();
  1483  03F2  242C  120A  118A   	fcall	_i2c_start
  1484                           
  1485                           ;eeprom_i2c.c: 1116: i2c_write(0xa0);
  1486  03F5  30A0               	movlw	160
  1487  03F6  2426  120A  118A   	fcall	_i2c_write
  1488                           
  1489                           ;eeprom_i2c.c: 1117: i2c_write(address);
  1490  03F9  0879               	movf	I2C_EEOUT@address,w
  1491  03FA  2426  120A  118A   	fcall	_i2c_write
  1492                           
  1493                           ;eeprom_i2c.c: 1118: i2c_write(data);
  1494  03FD  0878               	movf	I2C_EEOUT@data,w
  1495  03FE  2426  120A  118A   	fcall	_i2c_write
  1496                           
  1497                           ;eeprom_i2c.c: 1119: i2c_stop();
  1498  0401  245C  120A  118A   	fcall	_i2c_stop
  1499                           
  1500                           ;eeprom_i2c.c: 1120: pause(11);
  1501  0404  300B               	movlw	11
  1502  0405  00F0               	movwf	?_pause
  1503  0406  01F1               	clrf	?_pause+1
  1504  0407  01F2               	clrf	?_pause+2
  1505  0408  01F3               	clrf	?_pause+3
  1506  0409  2C62               	ljmp	l3370
  1507  040A                     __end_of_I2C_EEOUT:	
  1508  040A                     __ptext436:	
  1509 ;; =============== function _main ends ============
  1510                           
  1511                           
  1512 ;; *************** function _I2C_EEIN *****************
  1513 ;; Defined at:
  1514 ;;		line 1129 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  address         1    wreg     unsigned char 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  address         1    9[COMMON] unsigned char 
  1519 ;;  data            1   10[COMMON] unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      unsigned char 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0, pclath, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 160/0
  1526 ;;		On exit  : 160/20
  1527 ;;		Unchanged: FFE9F/0
  1528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1529 ;;      Params:         0       0       0       0       0
  1530 ;;      Locals:         2       0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0
  1532 ;;      Totals:         2       0       0       0       0
  1533 ;;Total ram usage:        2 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    2
  1536 ;; This function calls:
  1537 ;;		_i2c_start
  1538 ;;		_i2c_write
  1539 ;;		_i2c_repStart
  1540 ;;		_i2c_read
  1541 ;;		_i2c_stop
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546  040A                     _I2C_EEIN:	
  1547                           
  1548                           ; Regs used in _I2C_EEIN: [wreg+status,2+status,0+pclath+cstack]
  1549                           ;I2C_EEIN@address stored from wreg
  1550  040A  00F9               	movwf	I2C_EEIN@address
  1551                           
  1552                           ;eeprom_i2c.c: 1130: unsigned char data;
  1553                           ;eeprom_i2c.c: 1132: i2c_start();
  1554  040B  242C  120A  118A   	fcall	_i2c_start
  1555                           
  1556                           ;eeprom_i2c.c: 1133: i2c_write(0xa0);
  1557  040E  30A0               	movlw	160
  1558  040F  2426  120A  118A   	fcall	_i2c_write
  1559                           
  1560                           ;eeprom_i2c.c: 1134: i2c_write(address);
  1561  0412  0879               	movf	I2C_EEIN@address,w
  1562  0413  2426  120A  118A   	fcall	_i2c_write
  1563                           
  1564                           ;eeprom_i2c.c: 1135: i2c_repStart();
  1565  0416  245F  120A  118A   	fcall	_i2c_repStart
  1566                           
  1567                           ;eeprom_i2c.c: 1136: i2c_write(0xa1);
  1568  0419  30A1               	movlw	161
  1569  041A  2426  120A  118A   	fcall	_i2c_write
  1570                           
  1571                           ;eeprom_i2c.c: 1137: data=i2c_read(0);
  1572  041D  3000               	movlw	0
  1573  041E  242F  120A  118A   	fcall	_i2c_read
  1574  0421  0875               	movf	?_i2c_read,w
  1575  0422  00FA               	movwf	I2C_EEIN@data
  1576                           
  1577                           ;eeprom_i2c.c: 1138: i2c_stop();
  1578  0423  245C               	fcall	_i2c_stop
  1579                           
  1580                           ;eeprom_i2c.c: 1139: return(data);
  1581  0424  087A               	movf	I2C_EEIN@data,w
  1582  0425  0008               	return
  1583  0426                     __end_of_I2C_EEIN:	
  1584  0426                     __ptext439:	
  1585 ;; =============== function _sprintf ends ============
  1586                           
  1587                           
  1588 ;; *************** function _i2c_write *****************
  1589 ;; Defined at:
  1590 ;;		line 1101 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  i2cWriteData    1    wreg     unsigned char 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  i2cWriteData    1    5[COMMON] unsigned char 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      unsigned char 
  1597 ;; Registers used:
  1598 ;;		wreg, status,2, status,0, pclath, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 140/20
  1601 ;;		On exit  : 160/0
  1602 ;;		Unchanged: FFE9F/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1604 ;;      Params:         0       0       0       0       0
  1605 ;;      Locals:         1       0       0       0       0
  1606 ;;      Temps:          0       0       0       0       0
  1607 ;;      Totals:         1       0       0       0       0
  1608 ;;Total ram usage:        1 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    1
  1611 ;; This function calls:
  1612 ;;		_i2c_waitForIdle
  1613 ;; This function is called by:
  1614 ;;		_I2C_EEOUT
  1615 ;;		_I2C_EEIN
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618  0426                     _i2c_write:	
  1619                           
  1620                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  1621                           ;i2c_write@i2cWriteData stored from wreg
  1622  0426  00F5               	movwf	i2c_write@i2cWriteData
  1623                           
  1624                           ;eeprom_i2c.c: 1102: i2c_waitForIdle();
  1625  0427  2448               	fcall	_i2c_waitForIdle
  1626                           
  1627                           ;eeprom_i2c.c: 1103: SSPBUF = i2cWriteData;
  1628  0428  0875               	movf	i2c_write@i2cWriteData,w
  1629  0429  1283               	bcf	3,5	;RP0=0, select bank0
  1630  042A  0093               	movwf	19	;volatile
  1631                           
  1632                           ;eeprom_i2c.c: 1105: return ( ! ACKSTAT );
  1633                           ;	Return value of _i2c_write is never used
  1634  042B  0008               	return
  1635  042C                     __end_of_i2c_write:	
  1636  042C                     __ptext443:	
  1637 ;; =============== function _i2c_repStart ends ============
  1638                           
  1639                           
  1640 ;; *************** function _i2c_start *****************
  1641 ;; Defined at:
  1642 ;;		line 1048 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;		None               void
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0, pclath, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 160/0
  1653 ;;		On exit  : 160/20
  1654 ;;		Unchanged: FFE9F/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1656 ;;      Params:         0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0
  1659 ;;      Totals:         0       0       0       0       0
  1660 ;;Total ram usage:        0 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    1
  1663 ;; This function calls:
  1664 ;;		_i2c_waitForIdle
  1665 ;; This function is called by:
  1666 ;;		_I2C_EEOUT
  1667 ;;		_I2C_EEIN
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670  042C                     _i2c_start:	
  1671                           
  1672                           ;eeprom_i2c.c: 1049: i2c_waitForIdle();
  1673                           
  1674                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  1675  042C  2448               	fcall	_i2c_waitForIdle
  1676                           
  1677                           ;eeprom_i2c.c: 1050: SEN=1;
  1678  042D  1411               	bsf	17,0
  1679  042E  0008               	return
  1680  042F                     __end_of_i2c_start:	
  1681  042F                     __ptext440:	
  1682 ;; =============== function _i2c_write ends ============
  1683                           
  1684                           
  1685 ;; *************** function _i2c_read *****************
  1686 ;; Defined at:
  1687 ;;		line 1072 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  ack             1    wreg     unsigned char 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  ack             1    7[COMMON] unsigned char 
  1692 ;;  i2cReadData     1    8[COMMON] unsigned char 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  2    5[COMMON] int 
  1695 ;; Registers used:
  1696 ;;		wreg, status,2, status,0, pclath, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 160/0
  1699 ;;		On exit  : 160/20
  1700 ;;		Unchanged: FFE9F/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1702 ;;      Params:         2       0       0       0       0
  1703 ;;      Locals:         2       0       0       0       0
  1704 ;;      Temps:          0       0       0       0       0
  1705 ;;      Totals:         4       0       0       0       0
  1706 ;;Total ram usage:        4 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    1
  1709 ;; This function calls:
  1710 ;;		_i2c_waitForIdle
  1711 ;; This function is called by:
  1712 ;;		_I2C_EEIN
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715  042F                     _i2c_read:	
  1716                           
  1717                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  1718                           ;i2c_read@ack stored from wreg
  1719  042F  00F7               	movwf	i2c_read@ack
  1720                           
  1721                           ;eeprom_i2c.c: 1073: unsigned char i2cReadData;
  1722                           ;eeprom_i2c.c: 1075: i2c_waitForIdle();
  1723  0430  2448  120A  118A   	fcall	_i2c_waitForIdle
  1724                           
  1725                           ;eeprom_i2c.c: 1077: RCEN=1;
  1726  0433  1591               	bsf	17,3
  1727                           
  1728                           ;eeprom_i2c.c: 1079: i2c_waitForIdle();
  1729  0434  2448  120A  118A   	fcall	_i2c_waitForIdle
  1730                           
  1731                           ;eeprom_i2c.c: 1081: i2cReadData = SSPBUF;
  1732  0437  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0438  0813               	movf	19,w	;volatile
  1734  0439  00F8               	movwf	i2c_read@i2cReadData
  1735                           
  1736                           ;eeprom_i2c.c: 1083: i2c_waitForIdle();
  1737  043A  2448  120A  118A   	fcall	_i2c_waitForIdle
  1738                           
  1739                           ;eeprom_i2c.c: 1085: if ( ack )
  1740  043D  0877               	movf	i2c_read@ack,w
  1741  043E  1903               	btfsc	3,2
  1742  043F  2C42               	goto	l1291
  1743                           
  1744                           ;eeprom_i2c.c: 1086: {
  1745                           ;eeprom_i2c.c: 1087: ACKDT=0;
  1746  0440  1291               	bcf	17,5
  1747                           
  1748                           ;eeprom_i2c.c: 1088: }
  1749  0441  2C43               	goto	l1292
  1750  0442                     l1291:	
  1751                           
  1752                           ;eeprom_i2c.c: 1089: else
  1753                           ;eeprom_i2c.c: 1090: {
  1754                           ;eeprom_i2c.c: 1091: ACKDT=1;
  1755  0442  1691               	bsf	17,5
  1756  0443                     l1292:	
  1757                           
  1758                           ;eeprom_i2c.c: 1092: }
  1759                           ;eeprom_i2c.c: 1093: ACKEN=1;
  1760  0443  1611               	bsf	17,4
  1761                           
  1762                           ;eeprom_i2c.c: 1095: return( i2cReadData );
  1763  0444  0878               	movf	i2c_read@i2cReadData,w
  1764  0445  00F5               	movwf	?_i2c_read
  1765  0446  01F6               	clrf	?_i2c_read+1
  1766  0447  0008               	return
  1767  0448                     __end_of_i2c_read:	
  1768  0448                     __ptext450:	
  1769 ;; =============== function ___lwdiv ends ============
  1770                           
  1771                           
  1772 ;; *************** function _i2c_waitForIdle *****************
  1773 ;; Defined at:
  1774 ;;		line 1041 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;		None               void
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0
  1783 ;; Tracked objects:
  1784 ;;		On entry : 140/20
  1785 ;;		On exit  : 160/20
  1786 ;;		Unchanged: FFE9F/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1788 ;;      Params:         0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0
  1790 ;;      Temps:          5       0       0       0       0
  1791 ;;      Totals:         5       0       0       0       0
  1792 ;;Total ram usage:        5 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_i2c_start
  1798 ;;		_i2c_repStart
  1799 ;;		_i2c_stop
  1800 ;;		_i2c_read
  1801 ;;		_i2c_write
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804  0448                     _i2c_waitForIdle:	
  1805  0448                     l3322:	
  1806                           ;eeprom_i2c.c: 1042: while (( SSPCON2 & 0x1F ) | R_W ) {};
  1807                           
  1808                           ; Regs used in _i2c_waitForIdle: [wreg+status,2+status,0]
  1809                           
  1810  0448  1003               	clrc
  1811  0449  1683               	bsf	3,5	;RP0=1, select bank1
  1812  044A  1914               	btfsc	20,2
  1813  044B  1403               	setc
  1814  044C  3000               	movlw	0
  1815  044D  1803               	skipnc
  1816  044E  3001               	movlw	1
  1817  044F  00F0               	movwf	??_i2c_waitForIdle
  1818  0450  301F               	movlw	31
  1819  0451  01F1               	clrf	??_i2c_waitForIdle+1
  1820  0452  0511               	andwf	17,w
  1821  0453  00F2               	movwf	??_i2c_waitForIdle+2
  1822  0454  0470               	iorwf	??_i2c_waitForIdle,w
  1823  0455  00F3               	movwf	??_i2c_waitForIdle+3
  1824  0456  0871               	movf	??_i2c_waitForIdle+1,w
  1825  0457  00F4               	movwf	??_i2c_waitForIdle+4
  1826  0458  0473               	iorwf	??_i2c_waitForIdle+3,w
  1827  0459  1903               	btfsc	3,2
  1828  045A  0008               	return
  1829  045B  2C48               	goto	l3322
  1830  045C                     __end_of_i2c_waitForIdle:	
  1831  045C                     __ptext441:	
  1832 ;; =============== function _i2c_read ends ============
  1833                           
  1834                           
  1835 ;; *************** function _i2c_stop *****************
  1836 ;; Defined at:
  1837 ;;		line 1064 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;		None               void
  1844 ;; Registers used:
  1845 ;;		wreg, status,2, status,0, pclath, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 140/20
  1848 ;;		On exit  : 160/20
  1849 ;;		Unchanged: FFE9F/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1851 ;;      Params:         0       0       0       0       0
  1852 ;;      Locals:         0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0
  1854 ;;      Totals:         0       0       0       0       0
  1855 ;;Total ram usage:        0 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    1
  1858 ;; This function calls:
  1859 ;;		_i2c_waitForIdle
  1860 ;; This function is called by:
  1861 ;;		_I2C_EEOUT
  1862 ;;		_I2C_EEIN
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865  045C                     _i2c_stop:	
  1866                           
  1867                           ;eeprom_i2c.c: 1065: i2c_waitForIdle();
  1868                           
  1869                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  1870  045C  2448               	fcall	_i2c_waitForIdle
  1871                           
  1872                           ;eeprom_i2c.c: 1066: PEN=1;
  1873  045D  1511               	bsf	17,2
  1874  045E  0008               	return
  1875  045F                     __end_of_i2c_stop:	
  1876  045F                     __ptext442:	
  1877 ;; =============== function _i2c_stop ends ============
  1878                           
  1879                           
  1880 ;; *************** function _i2c_repStart *****************
  1881 ;; Defined at:
  1882 ;;		line 1056 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;		None               void
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0, pclath, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 160/0
  1893 ;;		On exit  : 160/20
  1894 ;;		Unchanged: FFE9F/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1896 ;;      Params:         0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0
  1899 ;;      Totals:         0       0       0       0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    1
  1903 ;; This function calls:
  1904 ;;		_i2c_waitForIdle
  1905 ;; This function is called by:
  1906 ;;		_I2C_EEIN
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909  045F                     _i2c_repStart:	
  1910                           
  1911                           ;eeprom_i2c.c: 1057: i2c_waitForIdle();
  1912                           
  1913                           ; Regs used in _i2c_repStart: [wreg+status,2+status,0+pclath+cstack]
  1914  045F  2448               	fcall	_i2c_waitForIdle
  1915                           
  1916                           ;eeprom_i2c.c: 1058: RSEN=1;
  1917  0460  1491               	bsf	17,1
  1918  0461  0008               	return
  1919  0462                     __end_of_i2c_repStart:	
  1920  0462                     __ptext447:	
  1921 ;; =============== function _lcd_clear ends ============
  1922                           
  1923                           
  1924 ;; *************** function _pause *****************
  1925 ;; Defined at:
  1926 ;;		line 198 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  usvalue         4    0[COMMON] unsigned long 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  x               4    4[COMMON] unsigned long 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;		None               void
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0, pclath, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: FFF9F/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1940 ;;      Params:         4       0       0       0       0
  1941 ;;      Locals:         4       0       0       0       0
  1942 ;;      Temps:          0       0       0       0       0
  1943 ;;      Totals:         8       0       0       0       0
  1944 ;;Total ram usage:        8 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    1
  1947 ;; This function calls:
  1948 ;;		_msecbase
  1949 ;; This function is called by:
  1950 ;;		_I2C_EEOUT
  1951 ;;		_main
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954  0462                     _pause:	
  1955  0462                     l3370:	
  1956                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  1957                           
  1958                           
  1959                           ;eeprom_i2c.c: 199: unsigned long x;
  1960                           ;eeprom_i2c.c: 200: for (x=1; x<=(usvalue); x++)
  1961  0462  01F4               	clrf	pause@x
  1962  0463  0AF4               	incf	pause@x,f
  1963  0464  01F5               	clrf	pause@x+1
  1964  0465  01F6               	clrf	pause@x+2
  1965  0466  01F7               	clrf	pause@x+3
  1966  0467                     l3376:	
  1967  0467  0877               	movf	pause@x+3,w
  1968  0468  0273               	subwf	pause@usvalue+3,w
  1969  0469  1D03               	skipz
  1970  046A  2C75               	goto	u435
  1971  046B  0876               	movf	pause@x+2,w
  1972  046C  0272               	subwf	pause@usvalue+2,w
  1973  046D  1D03               	skipz
  1974  046E  2C75               	goto	u435
  1975  046F  0875               	movf	pause@x+1,w
  1976  0470  0271               	subwf	pause@usvalue+1,w
  1977  0471  1D03               	skipz
  1978  0472  2C75               	goto	u435
  1979  0473  0874               	movf	pause@x,w
  1980  0474  0270               	subwf	pause@usvalue,w
  1981  0475                     u435:	
  1982  0475  1C03               	btfss	3,0
  1983  0476  0008               	return
  1984                           
  1985                           ;eeprom_i2c.c: 201: {
  1986                           ;eeprom_i2c.c: 202: msecbase();
  1987  0477  2482  120A  118A   	fcall	_msecbase
  1988  047A  0AF4               	incf	pause@x,f
  1989  047B  1903               	skipnz
  1990  047C  0AF5               	incf	pause@x+1,f
  1991  047D  1903               	skipnz
  1992  047E  0AF6               	incf	pause@x+2,f
  1993  047F  1903               	skipnz
  1994  0480  0AF7               	incf	pause@x+3,f
  1995  0481  2C67               	goto	l3376
  1996  0482                     __end_of_pause:	
  1997  0482                     __ptext454:	
  1998 ;; =============== function _lcd_write ends ============
  1999                           
  2000                           
  2001 ;; *************** function _msecbase *****************
  2002 ;; Defined at:
  2003 ;;		line 182 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;		None
  2008 ;; Return value:  Size  Location     Type
  2009 ;;		None               void
  2010 ;; Registers used:
  2011 ;;		wreg
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: FFF9F/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2017 ;;      Params:         0       0       0       0       0
  2018 ;;      Locals:         0       0       0       0       0
  2019 ;;      Temps:          0       0       0       0       0
  2020 ;;      Totals:         0       0       0       0       0
  2021 ;;Total ram usage:        0 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_pause
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029  0482                     _msecbase:	
  2030                           
  2031                           ;eeprom_i2c.c: 183: OPTION_REG = 0b00000011;
  2032                           
  2033                           ; Regs used in _msecbase: [wreg]
  2034  0482  3003               	movlw	3
  2035  0483  1683               	bsf	3,5	;RP0=1, select bank1
  2036  0484  1303               	bcf	3,6	;RP1=0, select bank1
  2037  0485  0081               	movwf	1	;volatile
  2038                           
  2039                           ;eeprom_i2c.c: 184: TMR0 = 0xD;
  2040  0486  300D               	movlw	13
  2041  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2042  0488  0081               	movwf	1	;volatile
  2043  0489                     l1066:	
  2044                           ;eeprom_i2c.c: 185: while(!T0IF);
  2045                           
  2046  0489  1D0B               	btfss	11,2
  2047  048A  2C89               	goto	l1066
  2048                           
  2049                           ;eeprom_i2c.c: 186: T0IF = 0;
  2050  048B  110B               	bcf	11,2
  2051  048C  0008               	return
  2052  048D                     __end_of_msecbase:	
  2053                           
  2054                           	psect	text438
  2055  048D                     __ptext438:	
  2056 ;; =============== function _I2C_EEOUT ends ============
  2057                           
  2058                           
  2059 ;; *************** function _sprintf *****************
  2060 ;; Defined at:
  2061 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  sp              1    wreg     PTR unsigned char 
  2064 ;;		 -> main@buffer(15), 
  2065 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2066 ;;		 -> STR_8(11), STR_7(16), STR_6(19), STR_5(11), 
  2067 ;;		 -> STR_4(16), STR_3(18), STR_1(21), 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  sp              1   10[BANK0 ] PTR unsigned char 
  2070 ;;		 -> main@buffer(15), 
  2071 ;;  _val            4    6[BANK0 ] struct .
  2072 ;;  c               1   11[BANK0 ] char 
  2073 ;;  prec            1    5[BANK0 ] char 
  2074 ;;  flag            1    4[BANK0 ] unsigned char 
  2075 ;;  ap              1    3[BANK0 ] PTR void [1]
  2076 ;;		 -> ?_sprintf(2), 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  2    0[BANK0 ] int 
  2079 ;; Registers used:
  2080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 60/0
  2083 ;;		On exit  : 160/0
  2084 ;;		Unchanged: FFE9F/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2086 ;;      Params:         0       3       0       0       0
  2087 ;;      Locals:         0       9       0       0       0
  2088 ;;      Temps:          2       0       0       0       0
  2089 ;;      Totals:         2      12       0       0       0
  2090 ;;Total ram usage:       14 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    1
  2093 ;; This function calls:
  2094 ;;		___lwdiv
  2095 ;;		___lwmod
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100  048D                     _sprintf:	
  2101                           
  2102                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2103                           ;sprintf@sp stored from wreg
  2104  048D  00AA               	movwf	sprintf@sp
  2105  048E  3021               	movlw	(?_sprintf+1)& (0+255)
  2106  048F  00A3               	movwf	sprintf@ap
  2107  0490                     l3480:	
  2108  0490  0820               	movf	sprintf@f,w
  2109  0491  0AA0               	incf	sprintf@f,f
  2110  0492  0084               	movwf	4
  2111  0493  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2112  0498  00AB               	movwf	sprintf@c
  2113  0499  08AB               	movf	sprintf@c,f
  2114  049A  1903               	btfsc	3,2
  2115  049B  2D23               	goto	l3482
  2116  049C  082B               	movf	sprintf@c,w
  2117  049D  3A25               	xorlw	37
  2118  049E  1903               	skipnz
  2119  049F  2CA5               	goto	l3436
  2120  04A0  082A               	movf	sprintf@sp,w
  2121  04A1  2576  120A  118A   	fcall	PL3	;call to abstracted procedure
  2122  04A4  2C90               	goto	l3480
  2123  04A5                     l3436:	
  2124  04A5  01A4               	clrf	sprintf@flag
  2125  04A6  0820               	movf	sprintf@f,w
  2126  04A7  0AA0               	incf	sprintf@f,f
  2127  04A8  0084               	movwf	4
  2128  04A9  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2129  04AE  00AB               	movwf	sprintf@c
  2130                           
  2131                           ; Switch size 1, requested type "space"
  2132                           ; Number of cases is 3, Range of values is 0 to 105
  2133                           ; switch strategies available:
  2134                           ; Name         Instructions Cycles
  2135                           ; simple_byte           10     6 (average)
  2136                           ; jumptable            260     6 (fixed)
  2137                           ; rangetable           110     6 (fixed)
  2138                           ; spacedrange          218     9 (fixed)
  2139                           ; locatedrange         106     3 (fixed)
  2140                           ;	Chosen strategy is simple_byte
  2141  04AF  3A00               	xorlw	0	; case 0
  2142  04B0  1903               	skipnz
  2143  04B1  2D23               	goto	l3482
  2144  04B2  3A64               	xorlw	100	; case 100
  2145  04B3  1903               	skipnz
  2146  04B4  2CB9               	goto	l3442
  2147  04B5  3A0D               	xorlw	13	; case 105
  2148  04B6  1903               	skipnz
  2149  04B7  2CB9               	goto	l3442
  2150  04B8  2C90               	goto	l3480
  2151  04B9                     l3442:	
  2152  04B9  0823               	movf	sprintf@ap,w
  2153  04BA  0084               	movwf	4
  2154  04BB  1383               	bcf	3,7	;select IRP bank0
  2155  04BC  0800               	movf	0,w
  2156  04BD  00A6               	movwf	sprintf@_val
  2157  04BE  0A84               	incf	4,f
  2158  04BF  0800               	movf	0,w
  2159  04C0  00A7               	movwf	sprintf@_val+1
  2160  04C1  0AA3               	incf	sprintf@ap,f
  2161  04C2  0AA3               	incf	sprintf@ap,f
  2162  04C3  1FA7               	btfss	sprintf@_val+1,7
  2163  04C4  2CCC               	goto	l3452
  2164  04C5  3003               	movlw	3
  2165  04C6  04A4               	iorwf	sprintf@flag,f
  2166  04C7  09A6               	comf	sprintf@_val,f
  2167  04C8  09A7               	comf	sprintf@_val+1,f
  2168  04C9  0AA6               	incf	sprintf@_val,f
  2169  04CA  1903               	skipnz
  2170  04CB  0AA7               	incf	sprintf@_val+1,f
  2171  04CC                     l3452:	
  2172  04CC  01AB               	clrf	sprintf@c
  2173  04CD  0AAB               	incf	sprintf@c,f
  2174  04CE                     l3456:	
  2175  04CE  1003               	clrc
  2176  04CF  0D2B               	rlf	sprintf@c,w
  2177  04D0  3E01               	addlw	low (_dpowers-__stringbase)
  2178  04D1  0084               	movwf	4
  2179  04D2  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2180  04D7  00FC               	movwf	??_sprintf
  2181  04D8  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2182  04DD  00FD               	movwf	??_sprintf+1
  2183  04DE  0227               	subwf	sprintf@_val+1,w
  2184  04DF  1D03               	skipz
  2185  04E0  2CE3               	goto	u485
  2186  04E1  087C               	movf	??_sprintf,w
  2187  04E2  0226               	subwf	sprintf@_val,w
  2188  04E3                     u485:	
  2189  04E3  1C03               	btfss	3,0
  2190  04E4  2CEA               	goto	l3464
  2191  04E5  0AAB               	incf	sprintf@c,f
  2192  04E6  082B               	movf	sprintf@c,w
  2193  04E7  3A05               	xorlw	5
  2194  04E8  1D03               	skipz
  2195  04E9  2CCE               	goto	l3456
  2196  04EA                     l3464:	
  2197  04EA  0824               	movf	sprintf@flag,w
  2198  04EB  3903               	andlw	3
  2199  04EC  1903               	btfsc	3,2
  2200  04ED  2CF4               	goto	l3470
  2201  04EE  082A               	movf	sprintf@sp,w
  2202  04EF  0084               	movwf	4
  2203  04F0  302D               	movlw	45
  2204  04F1  1383               	bcf	3,7	;select IRP bank0
  2205  04F2  0080               	movwf	0
  2206  04F3  0AAA               	incf	sprintf@sp,f
  2207  04F4                     l3470:	
  2208  04F4  082B               	movf	sprintf@c,w
  2209  04F5  00A5               	movwf	sprintf@prec
  2210  04F6  2D1F               	goto	l3478
  2211  04F7                     l3472:	
  2212  04F7  300A               	movlw	10
  2213  04F8  00F7               	movwf	?___lwmod
  2214  04F9  01F8               	clrf	?___lwmod+1
  2215  04FA  1003               	clrc
  2216  04FB  0D25               	rlf	sprintf@prec,w
  2217  04FC  3E01               	addlw	low (_dpowers-__stringbase)
  2218  04FD  0084               	movwf	4
  2219  04FE  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2220  0503  00F0               	movwf	?___lwdiv
  2221  0504  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2222  0509  00F1               	movwf	?___lwdiv+1
  2223  050A  0827               	movf	sprintf@_val+1,w
  2224  050B  00F3               	movwf	?___lwdiv+3
  2225  050C  0826               	movf	sprintf@_val,w
  2226  050D  00F2               	movwf	?___lwdiv+2
  2227  050E  2528  120A  118A   	fcall	___lwdiv
  2228  0511  0871               	movf	?___lwdiv+1,w
  2229  0512  00FA               	movwf	?___lwmod+3
  2230  0513  0870               	movf	?___lwdiv,w
  2231  0514  00F9               	movwf	?___lwmod+2
  2232  0515  2552  120A  118A   	fcall	___lwmod
  2233  0518  0877               	movf	?___lwmod,w
  2234  0519  3E30               	addlw	48
  2235  051A  00AB               	movwf	sprintf@c
  2236  051B  082A               	movf	sprintf@sp,w
  2237  051C  2576  120A  118A   	fcall	PL3	;call to abstracted procedure
  2238  051F                     l3478:	
  2239  051F  03A5               	decf	sprintf@prec,f
  2240  0520  0F25               	incfsz	sprintf@prec,w
  2241  0521  2CF7               	goto	l3472
  2242  0522  2C90               	goto	l3480
  2243  0523                     l3482:	
  2244  0523  082A               	movf	sprintf@sp,w
  2245  0524  0084               	movwf	4
  2246  0525  1383               	bcf	3,7	;select IRP bank0
  2247  0526  0180               	clrf	0
  2248  0527  0008               	return
  2249  0528                     __end_of_sprintf:	
  2250  0528                     __ptext449:	
  2251 ;; =============== function ___lwmod ends ============
  2252                           
  2253                           
  2254 ;; *************** function ___lwdiv *****************
  2255 ;; Defined at:
  2256 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  divisor         2    0[COMMON] unsigned int 
  2259 ;;  dividend        2    2[COMMON] unsigned int 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  quotient        2    4[COMMON] unsigned int 
  2262 ;;  counter         1    6[COMMON] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  2    0[COMMON] unsigned int 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0
  2267 ;; Tracked objects:
  2268 ;;		On entry : 60/0
  2269 ;;		On exit  : 60/0
  2270 ;;		Unchanged: FFF9F/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2272 ;;      Params:         4       0       0       0       0
  2273 ;;      Locals:         3       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0
  2275 ;;      Totals:         7       0       0       0       0
  2276 ;;Total ram usage:        7 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_sprintf
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284  0528                     ___lwdiv:	
  2285                           
  2286                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2287  0528  01F4               	clrf	___lwdiv@quotient
  2288  0529  01F5               	clrf	___lwdiv@quotient+1
  2289  052A  0871               	movf	___lwdiv@divisor+1,w
  2290  052B  0470               	iorwf	___lwdiv@divisor,w
  2291  052C  1903               	skipnz
  2292  052D  2D4D               	goto	l3346
  2293  052E  01F6               	clrf	___lwdiv@counter
  2294  052F                     L3:	
  2295  052F  0AF6               	incf	___lwdiv@counter,f
  2296  0530  1BF1               	btfsc	___lwdiv@divisor+1,7
  2297  0531  2D36               	goto	l3334
  2298  0532  1003               	clrc
  2299  0533  0DF0               	rlf	___lwdiv@divisor,f
  2300  0534  0DF1               	rlf	___lwdiv@divisor+1,f
  2301  0535  2D2F               	goto	L3
  2302  0536                     l3334:	
  2303  0536  1003               	clrc
  2304  0537  0DF4               	rlf	___lwdiv@quotient,f
  2305  0538  0DF5               	rlf	___lwdiv@quotient+1,f
  2306  0539  0871               	movf	___lwdiv@divisor+1,w
  2307  053A  0273               	subwf	___lwdiv@dividend+1,w
  2308  053B  1D03               	skipz
  2309  053C  2D3F               	goto	u375
  2310  053D  0870               	movf	___lwdiv@divisor,w
  2311  053E  0272               	subwf	___lwdiv@dividend,w
  2312  053F                     u375:	
  2313  053F  1C03               	skipc
  2314  0540  2D49               	goto	L4
  2315  0541  0870               	movf	___lwdiv@divisor,w
  2316  0542  02F2               	subwf	___lwdiv@dividend,f
  2317  0543  0871               	movf	___lwdiv@divisor+1,w
  2318  0544  1C03               	skipc
  2319  0545  03F3               	decf	___lwdiv@dividend+1,f
  2320  0546  02F3               	subwf	___lwdiv@dividend+1,f
  2321  0547  1474               	bsf	___lwdiv@quotient,0
  2322  0548  1003               	clrc
  2323  0549                     L4:	
  2324  0549  0CF1               	rrf	___lwdiv@divisor+1,f
  2325  054A  0CF0               	rrf	___lwdiv@divisor,f
  2326  054B  0BF6               	decfsz	___lwdiv@counter,f
  2327  054C  2D36               	goto	l3334
  2328  054D                     l3346:	
  2329  054D  0875               	movf	___lwdiv@quotient+1,w
  2330  054E  00F1               	movwf	?___lwdiv+1
  2331  054F  0874               	movf	___lwdiv@quotient,w
  2332  0550  00F0               	movwf	?___lwdiv
  2333  0551  0008               	return
  2334  0552                     __end_of___lwdiv:	
  2335  0552                     __ptext448:	
  2336 ;; =============== function _pause ends ============
  2337                           
  2338                           
  2339 ;; *************** function ___lwmod *****************
  2340 ;; Defined at:
  2341 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  divisor         2    7[COMMON] unsigned int 
  2344 ;;  dividend        2    9[COMMON] unsigned int 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  counter         1   11[COMMON] unsigned char 
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  2    7[COMMON] unsigned int 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2, status,0
  2351 ;; Tracked objects:
  2352 ;;		On entry : 60/0
  2353 ;;		On exit  : 60/0
  2354 ;;		Unchanged: FFF9F/0
  2355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2356 ;;      Params:         4       0       0       0       0
  2357 ;;      Locals:         1       0       0       0       0
  2358 ;;      Temps:          0       0       0       0       0
  2359 ;;      Totals:         5       0       0       0       0
  2360 ;;Total ram usage:        5 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_sprintf
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368  0552                     ___lwmod:	
  2369                           
  2370                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2371  0552  0878               	movf	___lwmod@divisor+1,w
  2372  0553  0477               	iorwf	___lwmod@divisor,w
  2373  0554  1903               	skipnz
  2374  0555  2D71               	goto	l3366
  2375  0556  01FB               	clrf	___lwmod@counter
  2376  0557                     L1:	
  2377  0557  0AFB               	incf	___lwmod@counter,f
  2378  0558  1BF8               	btfsc	___lwmod@divisor+1,7
  2379  0559  2D5E               	goto	l3358
  2380  055A  1003               	clrc
  2381  055B  0DF7               	rlf	___lwmod@divisor,f
  2382  055C  0DF8               	rlf	___lwmod@divisor+1,f
  2383  055D  2D57               	goto	L1
  2384  055E                     l3358:	
  2385  055E  0878               	movf	___lwmod@divisor+1,w
  2386  055F  027A               	subwf	___lwmod@dividend+1,w
  2387  0560  1D03               	skipz
  2388  0561  2D64               	goto	u415
  2389  0562  0877               	movf	___lwmod@divisor,w
  2390  0563  0279               	subwf	___lwmod@dividend,w
  2391  0564                     u415:	
  2392  0564  1C03               	skipc
  2393  0565  2D6D               	goto	L2
  2394  0566  0877               	movf	___lwmod@divisor,w
  2395  0567  02F9               	subwf	___lwmod@dividend,f
  2396  0568  0878               	movf	___lwmod@divisor+1,w
  2397  0569  1C03               	skipc
  2398  056A  03FA               	decf	___lwmod@dividend+1,f
  2399  056B  02FA               	subwf	___lwmod@dividend+1,f
  2400  056C  1003               	clrc
  2401  056D                     L2:	
  2402  056D  0CF8               	rrf	___lwmod@divisor+1,f
  2403  056E  0CF7               	rrf	___lwmod@divisor,f
  2404  056F  0BFB               	decfsz	___lwmod@counter,f
  2405  0570  2D5E               	goto	l3358
  2406  0571                     l3366:	
  2407  0571  087A               	movf	___lwmod@dividend+1,w
  2408  0572  00F8               	movwf	?___lwmod+1
  2409  0573  0879               	movf	___lwmod@dividend,w
  2410  0574  00F7               	movwf	?___lwmod
  2411  0575  0008               	return
  2412  0576                     __end_of___lwmod:	
  2413  0576                     PL3:	
  2414  0576  0084               	movwf	4
  2415  0577  082B               	movf	sprintf@c,w
  2416  0578  1383               	bcf	3,7	;select IRP bank0
  2417  0579  0080               	movwf	0
  2418  057A  0AAA               	incf	sprintf@sp,f
  2419  057B  0008               	return
  2420                           
  2421                           	psect	text446
  2422  03BF                     __ptext446:	
  2423 ;; =============== function _lcd_puts ends ============
  2424                           
  2425                           
  2426 ;; *************** function _lcd_clear *****************
  2427 ;; Defined at:
  2428 ;;		line 643 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;		None               void
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0, pclath, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 160/0
  2439 ;;		On exit  : 160/0
  2440 ;;		Unchanged: FFE9F/0
  2441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2442 ;;      Params:         0       0       0       0       0
  2443 ;;      Locals:         0       0       0       0       0
  2444 ;;      Temps:          0       0       0       0       0
  2445 ;;      Totals:         0       0       0       0       0
  2446 ;;Total ram usage:        0 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    1
  2449 ;; This function calls:
  2450 ;;		_lcd_write
  2451 ;; This function is called by:
  2452 ;;		_main
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455  03BF                     _lcd_clear:	
  2456  03BF  3001               	movlw	1
  2457                           
  2458                           ;eeprom_i2c.c: 644: RA7 = 0;
  2459                           
  2460                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2461  03C0  1385               	bcf	5,7
  2462                           
  2463                           ;eeprom_i2c.c: 645: lcd_write(0x1);
  2464  03C1  2BDE               	ljmp	_lcd_write
  2465  03C2                     __end_of_lcd_clear:	
  2466  03C2                     __ptext444:	
  2467 ;; =============== function _i2c_start ends ============
  2468                           
  2469                           
  2470 ;; *************** function _lcd_goto *****************
  2471 ;; Defined at:
  2472 ;;		line 682 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  pos             1    wreg     unsigned char 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  pos             1    2[COMMON] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;		None               void
  2479 ;; Registers used:
  2480 ;;		wreg, status,2, status,0, pclath, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 160/0
  2483 ;;		On exit  : 160/0
  2484 ;;		Unchanged: FFE9F/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2486 ;;      Params:         0       0       0       0       0
  2487 ;;      Locals:         1       0       0       0       0
  2488 ;;      Temps:          0       0       0       0       0
  2489 ;;      Totals:         1       0       0       0       0
  2490 ;;Total ram usage:        1 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    1
  2493 ;; This function calls:
  2494 ;;		_lcd_write
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499  03C2                     _lcd_goto:	
  2500                           
  2501                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  2502                           ;lcd_goto@pos stored from wreg
  2503  03C2  00F2               	movwf	lcd_goto@pos
  2504                           
  2505                           ;eeprom_i2c.c: 683: RA7 = 0;
  2506  03C3  1385               	bcf	5,7
  2507                           
  2508                           ;eeprom_i2c.c: 684: lcd_write(0x80+pos);
  2509  03C4  3E80               	addlw	128
  2510  03C5  2BDE               	ljmp	_lcd_write
  2511  03C6                     __end_of_lcd_goto:	
  2512  03C6                     __ptext445:	
  2513 ;; =============== function _lcd_goto ends ============
  2514                           
  2515                           
  2516 ;; *************** function _lcd_puts *****************
  2517 ;; Defined at:
  2518 ;;		line 656 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  s               1    wreg     PTR const unsigned char 
  2521 ;;		 -> STR_2(14), 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  s               1    2[COMMON] PTR const unsigned char 
  2524 ;;		 -> STR_2(14), 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;		None               void
  2527 ;; Registers used:
  2528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2529 ;; Tracked objects:
  2530 ;;		On entry : 160/0
  2531 ;;		On exit  : 160/0
  2532 ;;		Unchanged: FFE9F/0
  2533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2534 ;;      Params:         0       0       0       0       0
  2535 ;;      Locals:         1       0       0       0       0
  2536 ;;      Temps:          0       0       0       0       0
  2537 ;;      Totals:         1       0       0       0       0
  2538 ;;Total ram usage:        1 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    1
  2541 ;; This function calls:
  2542 ;;		_lcd_write
  2543 ;; This function is called by:
  2544 ;;		_main
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547  03C6                     _lcd_puts:	
  2548                           
  2549                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2550                           ;lcd_puts@s stored from wreg
  2551  03C6  00F2               	movwf	lcd_puts@s
  2552                           
  2553                           ;eeprom_i2c.c: 657: RA7 = 1;
  2554  03C7  1785               	bsf	5,7
  2555  03C8                     l3388:	
  2556                           ;eeprom_i2c.c: 658: while(*s)
  2557                           
  2558  03C8  0872               	movf	lcd_puts@s,w
  2559  03C9  0084               	movwf	4
  2560  03CA  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2561  03CF  3800               	iorlw	0
  2562  03D0  1903               	btfsc	3,2
  2563  03D1  0008               	return
  2564                           
  2565                           ;eeprom_i2c.c: 659: lcd_write(*s++);
  2566  03D2  0872               	movf	lcd_puts@s,w
  2567  03D3  0084               	movwf	4
  2568  03D4  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  2569  03D9  23DE  120A  118A   	fcall	_lcd_write
  2570  03DC  0AF2               	incf	lcd_puts@s,f
  2571  03DD  2BC8               	goto	l3388
  2572  03DE                     __end_of_lcd_puts:	
  2573  03DE                     __ptext453:	
  2574 ;; =============== function _putch ends ============
  2575                           
  2576                           
  2577 ;; *************** function _lcd_write *****************
  2578 ;; Defined at:
  2579 ;;		line 623 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  c               1    wreg     unsigned char 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  c               1    0[COMMON] unsigned char 
  2584 ;;  temp            1    1[COMMON] unsigned char 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;		None               void
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0
  2589 ;; Tracked objects:
  2590 ;;		On entry : 160/0
  2591 ;;		On exit  : 160/0
  2592 ;;		Unchanged: FFE9F/0
  2593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2594 ;;      Params:         0       0       0       0       0
  2595 ;;      Locals:         2       0       0       0       0
  2596 ;;      Temps:          0       0       0       0       0
  2597 ;;      Totals:         2       0       0       0       0
  2598 ;;Total ram usage:        2 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; This function calls:
  2601 ;;		Nothing
  2602 ;; This function is called by:
  2603 ;;		_lcd_clear
  2604 ;;		_lcd_puts
  2605 ;;		_lcd_goto
  2606 ;;		_main
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609  03DE                     _lcd_write:	
  2610                           
  2611                           ; Regs used in _lcd_write: [wreg+status,2+status,0]
  2612                           ;lcd_write@c stored from wreg
  2613  03DE  00F0               	movwf	lcd_write@c
  2614                           
  2615                           ;eeprom_i2c.c: 626: char temp = ( ( ( c >> 4 ) & 0x0F );
  2616  03DF  0E70               	swapf	lcd_write@c,w
  2617  03E0  390F               	andlw	15
  2618                           
  2619                           ;eeprom_i2c.c: 627: PORTD = PORTD & 0xF0;
  2620                           
  2621                           ;eeprom_i2c.c: 628: PORTD = PORTD + temp;
  2622                           
  2623                           ;eeprom_i2c.c: 629: ((RA6=1),(RA6=0));
  2624  03E1  23E7  120A  118A   	fcall	PL2	;call to abstracted procedure
  2625                           
  2626                           ;eeprom_i2c.c: 631: temp = ( c & 0x0F );
  2627  03E4  0870               	movf	lcd_write@c,w
  2628                           
  2629                           ;eeprom_i2c.c: 632: PORTD = PORTD & 0xF0;
  2630                           
  2631                           ;eeprom_i2c.c: 633: PORTD = PORTD + temp;
  2632                           
  2633                           ;eeprom_i2c.c: 634: ((RA6=1),(RA6=0));
  2634  03E5  23E7               	fcall	PL2	;call to abstracted procedure
  2635  03E6  0008               	return
  2636  03E7                     __end_of_lcd_write:	
  2637  03E7                     PL2:	
  2638  03E7  00F1               	movwf	lcd_write@temp
  2639  03E8  300F               	movlw	15
  2640  03E9  05F1               	andwf	lcd_write@temp,f
  2641  03EA  30F0               	movlw	240
  2642  03EB  0588               	andwf	8,f	;volatile
  2643  03EC  0871               	movf	lcd_write@temp,w
  2644  03ED  0788               	addwf	8,f	;volatile
  2645  03EE  1705               	bsf	5,6
  2646  03EF  1305               	bcf	5,6
  2647  03F0  0008               	return
  2648                           
  2649                           	psect	text451
  2650  03AE                     __ptext451:	
  2651 ;; =============== function _i2c_waitForIdle ends ============
  2652                           
  2653                           
  2654 ;; *************** function _i2c_init *****************
  2655 ;; Defined at:
  2656 ;;		line 1020 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;		None               void
  2663 ;; Registers used:
  2664 ;;		wreg, status,2
  2665 ;; Tracked objects:
  2666 ;;		On entry : 17F/40
  2667 ;;		On exit  : 17F/0
  2668 ;;		Unchanged: FFE80/0
  2669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2670 ;;      Params:         0       0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0
  2673 ;;      Totals:         0       0       0       0       0
  2674 ;;Total ram usage:        0 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682  03AE                     _i2c_init:	
  2683                           
  2684                           ;eeprom_i2c.c: 1021: TRISC3=1;
  2685                           
  2686                           ; Regs used in _i2c_init: [wreg+status,2]
  2687  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  2688  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  2689  03B0  3038               	movlw	56
  2690  03B1  1587               	bsf	7,3
  2691                           
  2692                           ;eeprom_i2c.c: 1022: TRISC4=1;
  2693  03B2  1607               	bsf	7,4
  2694                           
  2695                           ;eeprom_i2c.c: 1024: SSPCON = 0x38;
  2696  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2697  03B4  0094               	movwf	20	;volatile
  2698                           
  2699                           ;eeprom_i2c.c: 1025: SSPCON2 = 0x00;
  2700  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2701  03B6  0191               	clrf	17	;volatile
  2702                           
  2703                           ;eeprom_i2c.c: 1028: SSPADD = 0x27;
  2704  03B7  3027               	movlw	39
  2705  03B8  0093               	movwf	19	;volatile
  2706                           
  2707                           ;eeprom_i2c.c: 1031: CKE=1;
  2708  03B9  1714               	bsf	20,6
  2709                           
  2710                           ;eeprom_i2c.c: 1032: SMP=1;
  2711  03BA  1794               	bsf	20,7
  2712                           
  2713                           ;eeprom_i2c.c: 1034: SSPIF=0;
  2714  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2715  03BC  118C               	bcf	12,3
  2716                           
  2717                           ;eeprom_i2c.c: 1035: BCLIF=0;
  2718  03BD  118D               	bcf	13,3
  2719  03BE  0008               	return
  2720  03BF                     __end_of_i2c_init:	
  2721                           
  2722                           	psect	text452
  2723  039D                     __ptext452:	
  2724 ;; =============== function _i2c_init ends ============
  2725                           
  2726                           
  2727 ;; *************** function _putch *****************
  2728 ;; Defined at:
  2729 ;;		line 776 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  byte            1    wreg     unsigned char 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  byte            1    0[COMMON] unsigned char 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;		None               void
  2736 ;; Registers used:
  2737 ;;		wreg
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 60/0
  2741 ;;		Unchanged: FFF9F/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2743 ;;      Params:         0       0       0       0       0
  2744 ;;      Locals:         1       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0
  2746 ;;      Totals:         1       0       0       0       0
  2747 ;;Total ram usage:        1 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; This function calls:
  2750 ;;		Nothing
  2751 ;; This function is called by:
  2752 ;;		_main
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755  039D                     _putch:	
  2756                           
  2757                           ; Regs used in _putch: [wreg]
  2758                           ;putch@byte stored from wreg
  2759  039D  00F0               	movwf	putch@byte
  2760  039E                     l1215:	
  2761                           ;eeprom_i2c.c: 778: while(!TXIF)
  2762                           
  2763  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2764  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2765  03A0  1E0C               	btfss	12,4
  2766  03A1  2B9E               	goto	l1215
  2767                           
  2768                           ;eeprom_i2c.c: 780: TXREG = byte;
  2769  03A2  0870               	movf	putch@byte,w
  2770  03A3  0099               	movwf	25	;volatile
  2771  03A4  0008               	return
  2772  03A5                     __end_of_putch:	
  2773                           
  2774                           	psect	text455
  2775  03A5                     __ptext455:	
  2776 ;; =============== function _msecbase ends ============
  2777                           
  2778                           
  2779 ;; *************** function _init_micro *****************
  2780 ;; Defined at:
  2781 ;;		line 112 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;		None               void
  2788 ;; Registers used:
  2789 ;;		status,2
  2790 ;; Tracked objects:
  2791 ;;		On entry : 17F/0
  2792 ;;		On exit  : 17F/40
  2793 ;;		Unchanged: FFE80/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2795 ;;      Params:         0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0
  2798 ;;      Totals:         0       0       0       0       0
  2799 ;;Total ram usage:        0 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_main
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807  03A5                     _init_micro:	
  2808                           
  2809                           ;eeprom_i2c.c: 113: ANSEL = 0;
  2810                           
  2811                           ; Regs used in _init_micro: [status,2]
  2812  03A5  1683               	bsf	3,5	;RP0=1, select bank3
  2813  03A6  1703               	bsf	3,6	;RP1=1, select bank3
  2814  03A7  0188               	clrf	8	;volatile
  2815                           
  2816                           ;eeprom_i2c.c: 114: ANSELH = 0;
  2817  03A8  0189               	clrf	9	;volatile
  2818                           
  2819                           ;eeprom_i2c.c: 115: CM1CON0 = 0;
  2820  03A9  1283               	bcf	3,5	;RP0=0, select bank2
  2821  03AA  0187               	clrf	7	;volatile
  2822                           
  2823                           ;eeprom_i2c.c: 116: CM2CON0 = 0;
  2824  03AB  0188               	clrf	8	;volatile
  2825                           
  2826                           ;eeprom_i2c.c: 121: INTCON=0;
  2827  03AC  018B               	clrf	11	;volatile
  2828  03AD  0008               	return
  2829  03AE                     __end_of_init_micro:	
  2830                           
  2831                           	psect	text456
  2832  0000                     __ptext456:	
  2833 ;; =============== function _init_micro ends ============
  2834                           
  2835  007E                     btemp	set	126	;btemp
  2836  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Wed Nov 13 15:39:41 2019

                       pc 0002                        fsr 0004                       _CKE 04A6  
                     _RA6 002E                       _RA7 002F                       _RE1 0049  
                     u415 0564                       _PEN 048A                       u435 0475  
                     u375 053F                       u535 0638                       _SEN 0488  
                     u485 04E3                       _SMP 04A7                       _R_W 04A2  
                     fsr0 0004                       indf 0000               lcd_goto@pos 0072  
                    l1201 0000                      l1051 0000                      l1302 0000  
                    l1215 039E                      l1066 0489                      l1218 0000  
                    l1075 0000                      l1069 0000                      l1327 07FD  
                    l1273 0000                      l1186 0000                      l1282 0000  
                    l1195 0000                      l1291 0442                      l1355 0000  
                    l3300 0000                      l1292 0443                      l1189 0000  
                    l1285 0000                      l1293 0000                      l3310 0000  
                    l1279 0000                      l3312 0000                      l3304 0000  
                    l3320 0000                      l3400 0000                      l1288 0000  
                    l1296 0000                      l3314 0000                      l3306 0000  
                    l3322 0448                      l3402 0000                      l3410 0000  
                    l1299 0000                      l3316 0000                      l3308 0000  
                    l3340 0000                      l3324 0000                      l3404 0000  
                    l3412 0000                      l3420 0000                      l3500 0000  
                    l2357 0000                      l3318 0000                      l3334 0536  
                    l3326 0000                      l3350 0000                      l3414 0000  
                    l3406 0000                      l3422 0000                      l3510 0000  
                    l3502 0000                      l2367 0000                      l3280 0000  
                    l3344 0000                      l3336 0000                      l3416 0000  
                    l3408 0000                      l3424 0000                      l3440 0000  
                    l3600 0000                      l3520 0000                      l3512 0000  
                    l3504 0000                      l3290 0000                      l3282 0000  
                    l3346 054D                      l3370 0462                      l3450 0000  
                    l3442 04B9                      l3434 0000                      l3610 0000  
                    l3602 0000                      l3530 0000                      l3522 0000  
                    l3514 0000                      l3506 0000                      l3292 0000  
                    l3284 0000                      l3364 0000                      l3380 0000  
                    l3452 04CC                      l3444 0000                      l3436 04A5  
                    l3428 0000                      l3700 07A5                      l3620 0000  
                    l3604 0000                      l3540 0000                      l3532 0000  
                    l3524 0000                      l3516 0000                      l3508 0000  
                    l3278 0000                      l3294 0000                      l3286 0000  
                    l3358 055E                      l3366 0571                      l3374 0000  
                    l3382 0000                      l3390 0000                      l3470 04F4  
                    l3462 0000                      l3446 0000                      l3710 0000  
                    l3702 0000                      l3630 0000                      l3606 0000  
                    l3550 0000                      l3542 0000                      l3534 0000  
                    l3526 0000                      l3518 0000                      l3296 0000  
                    l3288 0000                      l3376 0467                      l3392 0000  
                    l3472 04F7                      l3464 04EA                      l3456 04CE  
                    l3480 0490                      l3720 0000                      l3704 0000  
                    l3640 0000                      l3632 0000                      l3616 069D  
                    l3608 0000                      l3560 0000                      l3552 0000  
                    l3544 0000                      l3536 0000                      l3528 0000  
                    l3298 0000                      l3378 0000                      l3386 0000  
                    l3394 0000                      l3474 0000                      l3482 0523  
                    l3490 0000                      l3642 0000                      l3626 0000  
                    l3618 0000                      l3570 0000                      l3562 0000  
                    l3554 0000                      l3546 0000                      l3538 0000  
                    l3388 03C8                      l3396 0000                      l3476 0000  
                    l3468 0000                      l3724 0000                      l3716 07CB  
                    l3708 0000                      l3628 0000                      l3580 0000  
                    l3564 0000                      l3556 0000                      l3548 0000  
                    l3398 0000                      l3478 051F                      l3486 0000  
                    l3718 0000                      l3726 0778                      l3670 0000  
                    l3662 0000                      l3654 0718                      l3646 0000  
                    l3638 06EE                      l3566 0000                      l3558 0000  
                    l3494 0000                      l3488 0000                      l3680 0000  
                    l3672 0000                      l3664 0000                      l3656 0000  
                    l3648 0000                      l3592 065B                      l3584 0000  
                    l3576 0618                      l3568 0000                      l3496 0000  
                    l3682 0000                      l3658 0000                      l3666 06C1  
                    l3594 0000                      l3586 0000                      l3578 0000  
                    l3498 0000                      l3692 0000                      l3668 073E  
                    l3596 0000                      l3694 0000                      l3686 0000  
                    l3678 0753                      l3688 0000                      STR_1 0013  
                    STR_2 006D                      STR_3 003B                      STR_4 004D  
                    STR_5 007B                      STR_6 0028                      STR_7 005D  
                    STR_8 0086                      _T0IF 005A                      _RCEN 048B  
                    _TMR0 0001                      _RSEN 0489                      _TXIF 0064  
        __end_of_I2C_EEIN 0426                      _main 057C                      btemp 007E  
       ??_i2c_waitForIdle 0070                      start 0000             ?_i2c_repStart 0070  
                   ?_main 0070                     _ACKEN 048C                     _ACKDT 048D  
                   _BCLIF 006B                     _ANSEL 0188               i2c_read@ack 0077  
         __end_of___lwdiv 0552           __end_of___lwmod 0576                     _RCSTA 0018  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088                     _SSPIF 0063                     _TXREG 0019  
                   _TXSTA 0098         __end_of_I2C_EEOUT 040A                     _pause 0462  
                   _putch 039D                     main@i 003C                     main@x 003E  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 0528            ??_i2c_repStart 0075              __end_of_main 0800  
        __end_of_i2c_init 03BF          __end_of_i2c_read 0448          __end_of_i2c_stop 045F  
                  ??_main 007E              I2C_EEIN@data 007A                    ?_pause 0070  
                  ?_putch 0070                    _ANSELH 0189                    _INTCON 000B  
                  _OSCCON 008F                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _TRISC6 043E                    _TRISC7 043F  
                  _SSPCON 0014                    _SSPBUF 0013        __size_of_i2c_start 0003  
      __size_of_i2c_write 0006          __end_of_lcd_goto 03C6          __end_of_lcd_puts 03DE  
               ??___lwdiv 0074                 ??___lwmod 007B          __end_of_msecbase 048D  
   i2c_write@i2cWriteData 0075                 ?_I2C_EEIN 0070                    pause@x 0074  
               ??_sprintf 007C             lcd_write@temp 0071            __pcstackCOMMON 0070  
           __end_of_pause 0482             __end_of_putch 03A5                ??_I2C_EEIN 0079  
       __end_of_i2c_start 042F         __end_of_i2c_write 042C      __end_of_i2c_repStart 0462  
      __size_of_lcd_clear 0003           _i2c_waitForIdle 0448       i2c_read@i2cReadData 0078  
      __size_of_lcd_write 0009                   ??_pause 0074                   ??_putch 0070  
               ?_i2c_init 0070                 ?_i2c_read 0075                 ?_i2c_stop 0070  
              __pmaintext 057C                   _CM1CON0 0107                   _CM2CON0 0108  
                 _ACKSTAT 048E                   _BAUDCTL 0187             I2C_EEOUT@data 0078  
                 _SSPCON2 0091                 ?_lcd_goto 0070                 ?_lcd_puts 0070  
               _I2C_EEOUT 03F1                ??_i2c_init 0070                ??_i2c_read 0077  
              ??_i2c_stop 0075           I2C_EEIN@address 0079                 ?_msecbase 0070  
       __end_of_lcd_clear 03C2         __end_of_lcd_write 03E7                   ___lwdiv 0528  
                 ___lwmod 0552                _init_micro 03A5   __end_of_i2c_waitForIdle 045C  
                 _dpowers 0009                   main@cnt 0045                   _sprintf 048D  
                 main@val 003B                ??_lcd_goto 0072                ??_lcd_puts 0072  
    end_of_initialization 0399                ?_I2C_EEOUT 0078                ??_msecbase 0070  
   __size_of_i2c_repStart 0003         __size_of_I2C_EEIN 001C                main@x_1901 0043  
              main@x_1903 0044                main@x_1892 003F                main@x_1894 0040  
              main@x_1896 0041                main@x_1898 0042                main@buffer 002C  
              lcd_write@c 0070              _i2c_repStart 045F               ?_init_micro 0070  
        ?_i2c_waitForIdle 0070       start_initialization 0399                 _i2c_start 042C  
               _i2c_write 0426               ??_I2C_EEOUT 0079         __size_of_i2c_init 0011  
       __size_of_i2c_read 0019         __size_of_i2c_stop 0003              pause@usvalue 0070  
           __pcstackBANK0 0020                ?_i2c_start 0070                ?_i2c_write 0070  
       __size_of_lcd_goto 0004       __size_of_init_micro 0009               sprintf@_val 0026  
             sprintf@flag 0024         __size_of_lcd_puts 0018               sprintf@prec 0025  
        ___lwdiv@dividend 0072         __size_of_msecbase 000B                 __ptext440 042F  
               __ptext441 045C                 __ptext450 0448                 __ptext442 045F  
               __ptext451 03AE                 __ptext443 042C                 __ptext452 039D  
               __ptext444 03C2                 __ptext436 040A                 __ptext453 03DE  
               __ptext445 03C6                 __ptext437 03F1                 __ptext454 0482  
               __ptext446 03BF                 __ptext438 048D                 __ptext455 03A5  
               __ptext447 0462                 __ptext439 0426                 __ptext456 0000  
               __ptext448 0552                 __ptext449 0528                  ?___lwdiv 0070  
                ?___lwmod 0077                 _lcd_clear 03BF                 __pstrings 0003  
               _lcd_write 03DE                  _I2C_EEIN 040A          ___lwdiv@quotient 0074  
                ?_sprintf 0020            __size_of_pause 0020            __size_of_putch 0008  
              ?_lcd_clear 0070               __stringbase 0008                ?_lcd_write 0070  
               lcd_puts@s 0072               ??_i2c_start 0075               ??_i2c_write 0075  
                _i2c_init 03AE                  _i2c_read 042F                  _i2c_stop 045C  
            ??_init_micro 0070          __size_of___lwdiv 002A          __size_of___lwmod 0024  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0076                  _lcd_goto 03C2  
                _lcd_puts 03C6          __size_of_sprintf 009B             __size_of_main 0284  
      __end_of_init_micro 03AE                  _msecbase 0482               ??_lcd_clear 0072  
             ??_lcd_write 0070                 putch@byte 0070  __size_of_i2c_waitForIdle 0014  
               sprintf@ap 0023                 sprintf@sp 002A          ___lwmod@dividend 0079  
               stringcode 0003          I2C_EEOUT@address 0079                _OPTION_REG 0081  
                sprintf@c 002B                  sprintf@f 0020           ___lwmod@divisor 0077  
         ___lwmod@counter 007B                  stringdir 0003                  stringtab 0003  
      __size_of_I2C_EEOUT 0019  
