

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Wed Nov 27 20:26:50 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text757,local,class=CODE,delta=2
    13                           	psect	text758,local,class=CODE,delta=2
    14                           	psect	text763,local,class=CODE,delta=2
    15                           	psect	text767,local,class=CODE,delta=2
    16                           	psect	text782,local,class=CODE,delta=2
    17                           	psect	text785,local,class=CODE,delta=2
    18                           	psect	text794,local,class=CODE,delta=2
    19                           	psect	text796,local,class=CODE,delta=2
    20                           	psect	text797,local,class=CODE,delta=2
    21                           	psect	functab,global,reloc=256,class=CODE,delta=2
    22                           	psect	pa_nodes,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  000A                     	;#
    25                           
    26                           	psect	config
    27  2007  E8D4               	dw	59604	;#
    28  2008  FFFF               	dw	65535	;#
    29                           
    30                           	psect	strings
    31  0709                     __pstrings:	
    32  0709                     stringtab:	
    33                           ;	global	stringdir,stringtab,__stringbase
    34                           
    35                           
    36                           ;	String table - string pointers are 1 byte each
    37  0709  1BFF               	btfsc	btemp+1,7
    38  070A  2F13               	ljmp	stringcode
    39  070B  1383               	bcf	3,7
    40  070C  187F               	btfsc	btemp+1,0
    41  070D  1783               	bsf	3,7
    42  070E  0800               	movf	0,w
    43  070F  0A84               	incf	4,f
    44  0710  1903               	skipnz
    45  0711  0AFF               	incf	btemp+1,f
    46  0712  0008               	return
    47  0713                     stringcode:	
    48  0713                     stringdir:	
    49  0713  3007               	movlw	high stringdir
    50  0714  008A               	movwf	10
    51  0715  0804               	movf	4,w
    52  0716  0A84               	incf	4,f
    53  0717  0782               	addwf	2,f
    54  0718                     __stringbase:	
    55  0718  3400               	retlw	0
    56  0719                     __npowers_:	
    57  0719  3400               	retlw	0
    58  071A  3480               	retlw	128
    59  071B  343F               	retlw	63
    60  071C  34CD               	retlw	205
    61  071D  34CC               	retlw	204
    62  071E  343D               	retlw	61
    63  071F  34D7               	retlw	215
    64  0720  3423               	retlw	35
    65  0721  343C               	retlw	60
    66  0722  3412               	retlw	18
    67  0723  3483               	retlw	131
    68  0724  343A               	retlw	58
    69  0725  34B7               	retlw	183
    70  0726  34D1               	retlw	209
    71  0727  3438               	retlw	56
    72  0728  34C6               	retlw	198
    73  0729  3427               	retlw	39
    74  072A  3437               	retlw	55
    75  072B  3438               	retlw	56
    76  072C  3486               	retlw	134
    77  072D  3435               	retlw	53
    78  072E  34C0               	retlw	192
    79  072F  34D6               	retlw	214
    80  0730  3433               	retlw	51
    81  0731  34CC               	retlw	204
    82  0732  342B               	retlw	43
    83  0733  3432               	retlw	50
    84  0734  3470               	retlw	112
    85  0735  3489               	retlw	137
    86  0736  3430               	retlw	48
    87  0737  34E7               	retlw	231
    88  0738  34DB               	retlw	219
    89  0739  342E               	retlw	46
    90  073A  34E5               	retlw	229
    91  073B  343C               	retlw	60
    92  073C  341E               	retlw	30
    93  073D  3442               	retlw	66
    94  073E  34A2               	retlw	162
    95  073F  340D               	retlw	13
    96  0740                     __powers_:	
    97  0740  3400               	retlw	0
    98  0741  3480               	retlw	128
    99  0742  343F               	retlw	63
   100  0743  3400               	retlw	0
   101  0744  3420               	retlw	32
   102  0745  3441               	retlw	65
   103  0746  3400               	retlw	0
   104  0747  34C8               	retlw	200
   105  0748  3442               	retlw	66
   106  0749  3400               	retlw	0
   107  074A  347A               	retlw	122
   108  074B  3444               	retlw	68
   109  074C  3440               	retlw	64
   110  074D  341C               	retlw	28
   111  074E  3446               	retlw	70
   112  074F  3450               	retlw	80
   113  0750  34C3               	retlw	195
   114  0751  3447               	retlw	71
   115  0752  3424               	retlw	36
   116  0753  3474               	retlw	116
   117  0754  3449               	retlw	73
   118  0755  3497               	retlw	151
   119  0756  3418               	retlw	24
   120  0757  344B               	retlw	75
   121  0758  34BC               	retlw	188
   122  0759  34BE               	retlw	190
   123  075A  344C               	retlw	76
   124  075B  346B               	retlw	107
   125  075C  346E               	retlw	110
   126  075D  344E               	retlw	78
   127  075E  3403               	retlw	3
   128  075F  3415               	retlw	21
   129  0760  3450               	retlw	80
   130  0761  3479               	retlw	121
   131  0762  34AD               	retlw	173
   132  0763  3460               	retlw	96
   133  0764  34F3               	retlw	243
   134  0765  3449               	retlw	73
   135  0766  3471               	retlw	113
   136  0767                     _dpowers:	
   137  0767  3401               	retlw	1
   138  0768  3400               	retlw	0
   139  0769  3400               	retlw	0
   140  076A  3400               	retlw	0
   141  076B  340A               	retlw	10
   142  076C  3400               	retlw	0
   143  076D  3400               	retlw	0
   144  076E  3400               	retlw	0
   145  076F  3464               	retlw	100
   146  0770  3400               	retlw	0
   147  0771  3400               	retlw	0
   148  0772  3400               	retlw	0
   149  0773  34E8               	retlw	232
   150  0774  3403               	retlw	3
   151  0775  3400               	retlw	0
   152  0776  3400               	retlw	0
   153  0777  3410               	retlw	16
   154  0778  3427               	retlw	39
   155  0779  3400               	retlw	0
   156  077A  3400               	retlw	0
   157  077B  34A0               	retlw	160
   158  077C  3486               	retlw	134
   159  077D  3401               	retlw	1
   160  077E  3400               	retlw	0
   161  077F  3440               	retlw	64
   162  0780  3442               	retlw	66
   163  0781  340F               	retlw	15
   164  0782  3400               	retlw	0
   165  0783  3480               	retlw	128
   166  0784  3496               	retlw	150
   167  0785  3498               	retlw	152
   168  0786  3400               	retlw	0
   169  0787  3400               	retlw	0
   170  0788  34E1               	retlw	225
   171  0789  34F5               	retlw	245
   172  078A  3405               	retlw	5
   173  078B  3400               	retlw	0
   174  078C  34CA               	retlw	202
   175  078D  349A               	retlw	154
   176  078E  343B               	retlw	59
   177  001F                     _ADCON0	set	31
   178  001E                     _ADRESH	set	30
   179  0017                     _CCP1CON	set	23
   180  001D                     _CCP2CON	set	29
   181  0015                     _CCPR1L	set	21
   182  001B                     _CCPR2L	set	27
   183  000C                     _PIR1	set	12
   184  000C                     _PIR1bits	set	12
   185  0006                     _PORTB	set	6
   186  0008                     _PORTD	set	8
   187  001A                     _RCREG	set	26
   188  0018                     _RCSTA	set	24
   189  0013                     _SSPBUF	set	19
   190  0014                     _SSPCON	set	20
   191  0012                     _T2CON	set	18
   192  0001                     _TMR0	set	1
   193  0019                     _TXREG	set	25
   194  00F9                     _GO_DONE	set	249
   195  0065                     _RCIF	set	101
   196  0048                     _RE0	set	72
   197  0049                     _RE1	set	73
   198  004A                     _RE2	set	74
   199  005A                     _T0IF	set	90
   200  0064                     _TXIF	set	100
   201  009E                     _ADRESL	set	158
   202  0081                     _OPTION_REG	set	129
   203  008F                     _OSCCON	set	143
   204  0092                     _PR2	set	146
   205  0099                     _SPBRG	set	153
   206  0093                     _SSPADD	set	147
   207  0091                     _SSPCON2	set	145
   208  0091                     _SSPCON2bits	set	145
   209  0094                     _SSPSTAT	set	148
   210  0085                     _TRISA	set	133
   211  0086                     _TRISB	set	134
   212  0087                     _TRISC	set	135
   213  0087                     _TRISCbits	set	135
   214  0088                     _TRISD	set	136
   215  0089                     _TRISE	set	137
   216  0098                     _TXSTA	set	152
   217  0439                     _TRISC1	set	1081
   218  043A                     _TRISC2	set	1082
   219  043E                     _TRISC6	set	1086
   220  043F                     _TRISC7	set	1087
   221  0188                     _ANSEL	set	392
   222  0189                     _ANSELH	set	393
   223  0187                     _BAUDCTL	set	391
   224  0005                     _PORTA	set	5
   225  078F                     STR_3:	
   226  078F  344D               	retlw	77	;'M'
   227  0790  3465               	retlw	101	;'e'
   228  0791  346D               	retlw	109	;'m'
   229  0792  346F               	retlw	111	;'o'
   230  0793  3472               	retlw	114	;'r'
   231  0794  3469               	retlw	105	;'i'
   232  0795  3461               	retlw	97	;'a'
   233  0796  3420               	retlw	32	;' '
   234  0797  3445               	retlw	69	;'E'
   235  0798  3473               	retlw	115	;'s'
   236  0799  3463               	retlw	99	;'c'
   237  079A  3472               	retlw	114	;'r'
   238  079B  3469               	retlw	105	;'i'
   239  079C  3474               	retlw	116	;'t'
   240  079D  3461               	retlw	97	;'a'
   241  079E  3400               	retlw	0
   242  079F                     STR_2:	
   243  079F  3445               	retlw	69	;'E'
   244  07A0  3473               	retlw	115	;'s'
   245  07A1  3463               	retlw	99	;'c'
   246  07A2  3472               	retlw	114	;'r'
   247  07A3  3469               	retlw	105	;'i'
   248  07A4  3462               	retlw	98	;'b'
   249  07A5  3469               	retlw	105	;'i'
   250  07A6  3465               	retlw	101	;'e'
   251  07A7  346E               	retlw	110	;'n'
   252  07A8  3464               	retlw	100	;'d'
   253  07A9  346F               	retlw	111	;'o'
   254  07AA  342E               	retlw	46	;'.'
   255  07AB  342E               	retlw	46	;'.'
   256  07AC  342E               	retlw	46	;'.'
   257  07AD  3400               	retlw	0
   258  07AE                     STR_1:	
   259  07AE  3445               	retlw	69	;'E'
   260  07AF  3473               	retlw	115	;'s'
   261  07B0  3470               	retlw	112	;'p'
   262  07B1  3465               	retlw	101	;'e'
   263  07B2  3472               	retlw	114	;'r'
   264  07B3  3461               	retlw	97	;'a'
   265  07B4  3420               	retlw	32	;' '
   266  07B5  3463               	retlw	99	;'c'
   267  07B6  346F               	retlw	111	;'o'
   268  07B7  346D               	retlw	109	;'m'
   269  07B8  3461               	retlw	97	;'a'
   270  07B9  346E               	retlw	110	;'n'
   271  07BA  3464               	retlw	100	;'d'
   272  07BB  346F               	retlw	111	;'o'
   273  07BC  3400               	retlw	0
   274  07BD                     STR_7:	
   275  07BD  344D               	retlw	77	;'M'
   276  07BE  3465               	retlw	101	;'e'
   277  07BF  346D               	retlw	109	;'m'
   278  07C0  346F               	retlw	111	;'o'
   279  07C1  3472               	retlw	114	;'r'
   280  07C2  3469               	retlw	105	;'i'
   281  07C3  3461               	retlw	97	;'a'
   282  07C4  3420               	retlw	32	;' '
   283  07C5  346C               	retlw	108	;'l'
   284  07C6  3465               	retlw	101	;'e'
   285  07C7  3469               	retlw	105	;'i'
   286  07C8  3464               	retlw	100	;'d'
   287  07C9  3461               	retlw	97	;'a'
   288  07CA  3400               	retlw	0
   289  07CB                     STR_4:	
   290  07CB  344C               	retlw	76	;'L'
   291  07CC  3465               	retlw	101	;'e'
   292  07CD  3479               	retlw	121	;'y'
   293  07CE  3465               	retlw	101	;'e'
   294  07CF  346E               	retlw	110	;'n'
   295  07D0  3464               	retlw	100	;'d'
   296  07D1  346F               	retlw	111	;'o'
   297  07D2  342E               	retlw	46	;'.'
   298  07D3  342E               	retlw	46	;'.'
   299  07D4  342E               	retlw	46	;'.'
   300  07D5  3400               	retlw	0
   301  07D6                     STR_5:	
   302  07D6  3425               	retlw	37	;'%'
   303  07D7  3431               	retlw	49	;'1'
   304  07D8  342E               	retlw	46	;'.'
   305  07D9  3433               	retlw	51	;'3'
   306  07DA  3466               	retlw	102	;'f'
   307  07DB  3400               	retlw	0
   308  07DC                     STR_6:	
   309  07DC  3456               	retlw	86	;'V'
   310  07DD  343A               	retlw	58	;':'
   311  07DE  3400               	retlw	0
   312                           
   313                           	psect	cinit
   314  07EC                     start_initialization:	
   315                           
   316                           ; Clear objects allocated to BANK1
   317  07EC  1683               	bsf	3,5	;RP0=1, select bank1
   318  07ED  01D1               	clrf	__pbssBANK1& (0+127)
   319  07EE  01D2               	clrf	(__pbssBANK1+1)& (0+127)
   320  07EF  01D3               	clrf	(__pbssBANK1+2)& (0+127)
   321  07F0  01D4               	clrf	(__pbssBANK1+3)& (0+127)
   322  07F1  01D5               	clrf	(__pbssBANK1+4)& (0+127)
   323  07F2  01D6               	clrf	(__pbssBANK1+5)& (0+127)
   324  07F3                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327  07F3  0183               	clrf	3
   328  07F4  120A  118A  29DF   	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssBANK1
   331  00D1                     __pbssBANK1:	
   332  00D1                     _nin:	
   333  00D1                     	ds	1
   334  00D2                     _carac:	
   335  00D2                     	ds	5
   336                           
   337                           	psect	cstackBANK1
   338  00A0                     __pcstackBANK1:	
   339  00A0                     _sprintf$1936:	
   340                           
   341                           ; 4 bytes @ 0x0
   342  00A0                     	ds	4
   343  00A4                     sprintf@ap:	
   344                           
   345                           ; 1 bytes @ 0x4
   346  00A4                     	ds	1
   347  00A5                     sprintf@integ:	
   348                           
   349                           ; 3 bytes @ 0x5
   350  00A5                     	ds	3
   351  00A8                     sprintf@_val:	
   352                           
   353                           ; 4 bytes @ 0x8
   354  00A8                     	ds	4
   355  00AC                     sprintf@flag:	
   356                           
   357                           ; 2 bytes @ 0xC
   358  00AC                     	ds	2
   359  00AE                     sprintf@width:	
   360                           
   361                           ; 2 bytes @ 0xE
   362  00AE                     	ds	2
   363  00B0                     sprintf@exp:	
   364                           
   365                           ; 2 bytes @ 0x10
   366  00B0                     	ds	2
   367  00B2                     sprintf@sp:	
   368                           
   369                           ; 1 bytes @ 0x12
   370  00B2                     	ds	1
   371  00B3                     sprintf@fval:	
   372                           
   373                           ; 3 bytes @ 0x13
   374  00B3                     	ds	3
   375  00B6                     sprintf@prec:	
   376                           
   377                           ; 2 bytes @ 0x16
   378  00B6                     	ds	2
   379  00B8                     sprintf@c:	
   380                           
   381                           ; 1 bytes @ 0x18
   382  00B8                     	ds	1
   383  00B9                     _main$2959:	
   384                           
   385                           ; 3 bytes @ 0x19
   386  00B9                     	ds	3
   387  00BC                     main@cntd:	
   388                           
   389                           ; 2 bytes @ 0x1C
   390  00BC                     	ds	2
   391  00BE                     main@char_recibido:	
   392                           
   393                           ; 1 bytes @ 0x1E
   394  00BE                     	ds	1
   395  00BF                     main@cnt1i:	
   396                           
   397                           ; 2 bytes @ 0x1F
   398  00BF                     	ds	2
   399  00C1                     main@cnt2i:	
   400                           
   401                           ; 2 bytes @ 0x21
   402  00C1                     	ds	2
   403  00C3                     main@cnt1:	
   404                           
   405                           ; 1 bytes @ 0x23
   406  00C3                     	ds	1
   407  00C4                     main@cnt2:	
   408                           
   409                           ; 1 bytes @ 0x24
   410  00C4                     	ds	1
   411  00C5                     main@uni:	
   412                           
   413                           ; 2 bytes @ 0x25
   414  00C5                     	ds	2
   415  00C7                     main@mil:	
   416                           
   417                           ; 2 bytes @ 0x27
   418  00C7                     	ds	2
   419  00C9                     main@dec:	
   420                           
   421                           ; 2 bytes @ 0x29
   422  00C9                     	ds	2
   423  00CB                     main@B2:	
   424                           
   425                           ; 2 bytes @ 0x2B
   426  00CB                     	ds	2
   427  00CD                     main@cen:	
   428                           
   429                           ; 2 bytes @ 0x2D
   430  00CD                     	ds	2
   431  00CF                     main@B1:	
   432                           
   433                           ; 2 bytes @ 0x2F
   434  00CF                     	ds	2
   435                           
   436                           	psect	cstackCOMMON
   437  0070                     __pcstackCOMMON:	
   438  0070                     ?_isdigit:	
   439  0070                     ??_isdigit:	
   440                           ; 1 bit 
   441                           
   442  0070                     ?_putch:	
   443                           ; 0 bytes @ 0x0
   444                           
   445  0070                     ??_putch:	
   446                           ; 0 bytes @ 0x0
   447                           
   448  0070                     ??_getch:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0070                     ?_msecbase:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0070                     ??_msecbase:	
   455                           ; 0 bytes @ 0x0
   456                           
   457  0070                     ?_pause:	
   458                           ; 0 bytes @ 0x0
   459                           
   460  0070                     ?_i2c_init:	
   461                           ; 0 bytes @ 0x0
   462                           
   463  0070                     ??_i2c_init:	
   464                           ; 0 bytes @ 0x0
   465                           
   466  0070                     ?_i2c_start:	
   467                           ; 0 bytes @ 0x0
   468                           
   469  0070                     ??_i2c_start:	
   470                           ; 0 bytes @ 0x0
   471                           
   472  0070                     ?_i2c_restart:	
   473                           ; 0 bytes @ 0x0
   474                           
   475  0070                     ??_i2c_restart:	
   476                           ; 0 bytes @ 0x0
   477                           
   478  0070                     ?_i2c_stop:	
   479                           ; 0 bytes @ 0x0
   480                           
   481  0070                     ??_i2c_stop:	
   482                           ; 0 bytes @ 0x0
   483                           
   484  0070                     ??_i2c_read:	
   485                           ; 0 bytes @ 0x0
   486                           
   487  0070                     ?_I2C_nack:	
   488                           ; 0 bytes @ 0x0
   489                           
   490  0070                     ??_I2C_nack:	
   491                           ; 0 bytes @ 0x0
   492                           
   493  0070                     ?_i2c_write:	
   494                           ; 0 bytes @ 0x0
   495                           
   496  0070                     ??_i2c_write:	
   497                           ; 0 bytes @ 0x0
   498                           
   499  0070                     ?_lcd_clear:	
   500                           ; 0 bytes @ 0x0
   501                           
   502  0070                     ?_lcd_goto:	
   503                           ; 0 bytes @ 0x0
   504                           
   505  0070                     ?_main:	
   506                           ; 0 bytes @ 0x0
   507                           
   508  0070                     ?___ftge:	
   509                           ; 0 bytes @ 0x0
   510                           
   511  0070                     ?_getch:	
   512                           ; 1 bit 
   513                           
   514  0070                     ?_i2c_read:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?___lbmod:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?___wmul:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?___lwdiv:	
   524                           ; 2 bytes @ 0x0
   525                           
   526  0070                     ?___awmod:	
   527                           ; 2 bytes @ 0x0
   528                           
   529  0070                     ?___ftpack:	
   530                           ; 2 bytes @ 0x0
   531                           
   532  0070                     ?___ftneg:	
   533                           ; 3 bytes @ 0x0
   534                           
   535  0070                     ?__tdiv_to_l_:	
   536                           ; 3 bytes @ 0x0
   537                           
   538  0070                     ?__div_to_l_:	
   539                           ; 4 bytes @ 0x0
   540                           
   541  0070                     ?___lldiv:	
   542                           ; 4 bytes @ 0x0
   543                           
   544  0070                     putch@dato:	
   545                           ; 4 bytes @ 0x0
   546                           
   547  0070                     i2c_write@I2C_data:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     _isdigit$2444:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ___lbmod@divisor:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     pause@usvalue:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ___wmul@multiplier:	
   560                           ; 2 bytes @ 0x0
   561                           
   562  0070                     ___lwdiv@divisor:	
   563                           ; 2 bytes @ 0x0
   564                           
   565  0070                     ___awmod@divisor:	
   566                           ; 2 bytes @ 0x0
   567                           
   568  0070                     ___ftneg@f1:	
   569                           ; 2 bytes @ 0x0
   570                           
   571  0070                     ___ftge@ff1:	
   572                           ; 3 bytes @ 0x0
   573                           
   574  0070                     __tdiv_to_l_@f1:	
   575                           ; 3 bytes @ 0x0
   576                           
   577  0070                     __div_to_l_@f1:	
   578                           ; 3 bytes @ 0x0
   579                           
   580  0070                     ___ftpack@arg:	
   581                           ; 3 bytes @ 0x0
   582                           
   583  0070                     ___lldiv@divisor:	
   584                           ; 3 bytes @ 0x0
   585                           
   586                           
   587                           ; 4 bytes @ 0x0
   588  0070                     	ds	1
   589  0071                     ??___lbmod:	
   590  0071                     isdigit@c:	
   591                           ; 0 bytes @ 0x1
   592                           
   593                           
   594                           ; 1 bytes @ 0x1
   595  0071                     	ds	1
   596  0072                     ??_pause:	
   597  0072                     ___lbmod@dividend:	
   598                           ; 0 bytes @ 0x2
   599                           
   600  0072                     pause@x:	
   601                           ; 1 bytes @ 0x2
   602                           
   603  0072                     ___wmul@multiplicand:	
   604                           ; 2 bytes @ 0x2
   605                           
   606  0072                     ___lwdiv@dividend:	
   607                           ; 2 bytes @ 0x2
   608                           
   609  0072                     ___awmod@dividend:	
   610                           ; 2 bytes @ 0x2
   611                           
   612                           
   613                           ; 2 bytes @ 0x2
   614  0072                     	ds	1
   615  0073                     ??___ftneg:	
   616  0073                     ___lbmod@counter:	
   617                           ; 0 bytes @ 0x3
   618                           
   619  0073                     ___ftpack@exp:	
   620                           ; 1 bytes @ 0x3
   621                           
   622  0073                     ___ftge@ff2:	
   623                           ; 1 bytes @ 0x3
   624                           
   625  0073                     __tdiv_to_l_@f2:	
   626                           ; 3 bytes @ 0x3
   627                           
   628  0073                     __div_to_l_@f2:	
   629                           ; 3 bytes @ 0x3
   630                           
   631                           
   632                           ; 3 bytes @ 0x3
   633  0073                     	ds	1
   634  0074                     ?_I2C_EEOUT:	
   635  0074                     ?_lcd_write:	
   636                           ; 0 bytes @ 0x4
   637                           
   638  0074                     ??___wmul:	
   639                           ; 0 bytes @ 0x4
   640                           
   641  0074                     ??___lwdiv:	
   642                           ; 0 bytes @ 0x4
   643                           
   644  0074                     ??___awmod:	
   645                           ; 0 bytes @ 0x4
   646                           
   647  0074                     I2C_EEOUT@address2:	
   648                           ; 0 bytes @ 0x4
   649                           
   650  0074                     ___lbmod@rem:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0074                     ___awmod@counter:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  0074                     ___ftpack@sign:	
   657                           ; 1 bytes @ 0x4
   658                           
   659  0074                     lcd_write@c:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     ___wmul@product:	
   663                           ; 2 bytes @ 0x4
   664                           
   665  0074                     ___lwdiv@quotient:	
   666                           ; 2 bytes @ 0x4
   667                           
   668  0074                     ___lldiv@dividend:	
   669                           ; 2 bytes @ 0x4
   670                           
   671                           
   672                           ; 4 bytes @ 0x4
   673  0074                     	ds	1
   674  0075                     ??___ftpack:	
   675  0075                     ?___lbdiv:	
   676                           ; 0 bytes @ 0x5
   677                           
   678  0075                     I2C_EEOUT@data:	
   679                           ; 1 bytes @ 0x5
   680                           
   681  0075                     ___lbdiv@divisor:	
   682                           ; 1 bytes @ 0x5
   683                           
   684  0075                     ___awmod@sign:	
   685                           ; 1 bytes @ 0x5
   686                           
   687                           
   688                           ; 1 bytes @ 0x5
   689  0075                     	ds	1
   690  0076                     ??__tdiv_to_l_:	
   691  0076                     ??__div_to_l_:	
   692                           ; 0 bytes @ 0x6
   693                           
   694  0076                     ??_I2C_EEOUT:	
   695                           ; 0 bytes @ 0x6
   696                           
   697  0076                     ??_lcd_write:	
   698                           ; 0 bytes @ 0x6
   699                           
   700  0076                     ??_lcd_clear:	
   701                           ; 0 bytes @ 0x6
   702                           
   703  0076                     ?_lcd_puts:	
   704                           ; 0 bytes @ 0x6
   705                           
   706  0076                     ??_lcd_goto:	
   707                           ; 0 bytes @ 0x6
   708                           
   709  0076                     ??___lbdiv:	
   710                           ; 0 bytes @ 0x6
   711                           
   712  0076                     ??___ftge:	
   713                           ; 0 bytes @ 0x6
   714                           
   715  0076                     ?___awdiv:	
   716                           ; 0 bytes @ 0x6
   717                           
   718  0076                     I2C_EEOUT@address1:	
   719                           ; 2 bytes @ 0x6
   720                           
   721  0076                     lcd_goto@pos:	
   722                           ; 1 bytes @ 0x6
   723                           
   724  0076                     ___lwdiv@counter:	
   725                           ; 1 bytes @ 0x6
   726                           
   727  0076                     ___lbdiv@dividend:	
   728                           ; 1 bytes @ 0x6
   729                           
   730  0076                     lcd_puts@s:	
   731                           ; 1 bytes @ 0x6
   732                           
   733  0076                     ___awdiv@divisor:	
   734                           ; 2 bytes @ 0x6
   735                           
   736                           
   737                           ; 2 bytes @ 0x6
   738  0076                     	ds	1
   739  0077                     ___lbdiv@counter:	
   740                           
   741                           ; 1 bytes @ 0x7
   742  0077                     	ds	1
   743  0078                     ??_lcd_puts:	
   744  0078                     ??___lldiv:	
   745                           ; 0 bytes @ 0x8
   746                           
   747  0078                     ?___lltoft:	
   748                           ; 0 bytes @ 0x8
   749                           
   750  0078                     ___lbdiv@quotient:	
   751                           ; 3 bytes @ 0x8
   752                           
   753  0078                     ___awdiv@dividend:	
   754                           ; 1 bytes @ 0x8
   755                           
   756  0078                     ___lldiv@quotient:	
   757                           ; 2 bytes @ 0x8
   758                           
   759  0078                     ___lltoft@c:	
   760                           ; 4 bytes @ 0x8
   761                           
   762                           
   763                           ; 4 bytes @ 0x8
   764  0078                     	ds	1
   765  0079                     ?___bmul:	
   766  0079                     ___bmul@multiplicand:	
   767                           ; 1 bytes @ 0x9
   768                           
   769                           
   770                           ; 1 bytes @ 0x9
   771  0079                     	ds	1
   772  007A                     ??___bmul:	
   773  007A                     ??___awdiv:	
   774                           ; 0 bytes @ 0xA
   775                           
   776  007A                     ___bmul@product:	
   777                           ; 0 bytes @ 0xA
   778                           
   779  007A                     ___awdiv@counter:	
   780                           ; 1 bytes @ 0xA
   781                           
   782                           
   783                           ; 1 bytes @ 0xA
   784  007A                     	ds	1
   785  007B                     ___bmul@multiplier:	
   786  007B                     ___awdiv@sign:	
   787                           ; 1 bytes @ 0xB
   788                           
   789                           
   790                           ; 1 bytes @ 0xB
   791  007B                     	ds	1
   792  007C                     ??___lltoft:	
   793  007C                     ___lldiv@counter:	
   794                           ; 0 bytes @ 0xC
   795                           
   796  007C                     ___lltoft@exp:	
   797                           ; 1 bytes @ 0xC
   798                           
   799  007C                     ___awdiv@quotient:	
   800                           ; 1 bytes @ 0xC
   801                           
   802                           
   803                           ; 2 bytes @ 0xC
   804  007C                     	ds	1
   805  007D                     ??___llmod:	
   806  007D                     ___llmod@counter:	
   807                           ; 0 bytes @ 0xD
   808                           
   809                           
   810                           ; 1 bytes @ 0xD
   811  007D                     	ds	1
   812  007E                     ??_I2C_EEIN:	
   813  007E                     ??_fround:	
   814                           ; 0 bytes @ 0xE
   815                           
   816  007E                     ??___ftsub:	
   817                           ; 0 bytes @ 0xE
   818                           
   819  007E                     ??___lbtoft:	
   820                           ; 0 bytes @ 0xE
   821                           
   822                           
   823                           	psect	cstackBANK0
   824  0020                     __pcstackBANK0:	
   825                           ; 0 bytes @ 0xE
   826                           
   827  0020                     ?___fttol:	
   828  0020                     ?___llmod:	
   829                           ; 4 bytes @ 0x0
   830                           
   831  0020                     ___fttol@f1:	
   832                           ; 4 bytes @ 0x0
   833                           
   834  0020                     ___llmod@divisor:	
   835                           ; 3 bytes @ 0x0
   836                           
   837  0020                     __tdiv_to_l_@quot:	
   838                           ; 4 bytes @ 0x0
   839                           
   840  0020                     __div_to_l_@quot:	
   841                           ; 4 bytes @ 0x0
   842                           
   843                           
   844                           ; 4 bytes @ 0x0
   845  0020                     	ds	4
   846  0024                     ??___fttol:	
   847  0024                     __tdiv_to_l_@cntr:	
   848                           ; 0 bytes @ 0x4
   849                           
   850  0024                     __div_to_l_@cntr:	
   851                           ; 1 bytes @ 0x4
   852                           
   853  0024                     ___llmod@dividend:	
   854                           ; 1 bytes @ 0x4
   855                           
   856                           
   857                           ; 4 bytes @ 0x4
   858  0024                     	ds	1
   859  0025                     __tdiv_to_l_@exp1:	
   860  0025                     __div_to_l_@exp1:	
   861                           ; 1 bytes @ 0x5
   862                           
   863                           
   864                           ; 1 bytes @ 0x5
   865  0025                     	ds	2
   866  0027                     ___fttol@sign1:	
   867                           
   868                           ; 1 bytes @ 0x7
   869  0027                     	ds	1
   870  0028                     ___fttol@lval:	
   871                           
   872                           ; 4 bytes @ 0x8
   873  0028                     	ds	4
   874  002C                     ___fttol@exp1:	
   875                           
   876                           ; 1 bytes @ 0xC
   877  002C                     	ds	1
   878  002D                     ?_I2C_EEIN:	
   879  002D                     ?___lbtoft:	
   880                           ; 1 bytes @ 0xD
   881                           
   882  002D                     I2C_EEIN@address1:	
   883                           ; 3 bytes @ 0xD
   884                           
   885                           
   886                           ; 1 bytes @ 0xD
   887  002D                     	ds	1
   888  002E                     I2C_EEIN@address2:	
   889                           
   890                           ; 1 bytes @ 0xE
   891  002E                     	ds	1
   892  002F                     I2C_EEIN@data:	
   893                           
   894                           ; 1 bytes @ 0xF
   895  002F                     	ds	1
   896  0030                     ___lbtoft@c:	
   897                           
   898                           ; 1 bytes @ 0x10
   899  0030                     	ds	1
   900  0031                     ?___ftmul:	
   901  0031                     ___ftmul@f1:	
   902                           ; 3 bytes @ 0x11
   903                           
   904                           
   905                           ; 3 bytes @ 0x11
   906  0031                     	ds	3
   907  0034                     ___ftmul@f2:	
   908                           
   909                           ; 3 bytes @ 0x14
   910  0034                     	ds	3
   911  0037                     ??___ftmul:	
   912                           
   913                           ; 0 bytes @ 0x17
   914  0037                     	ds	3
   915  003A                     ___ftmul@exp:	
   916                           
   917                           ; 1 bytes @ 0x1A
   918  003A                     	ds	1
   919  003B                     ___ftmul@f3_as_product:	
   920                           
   921                           ; 3 bytes @ 0x1B
   922  003B                     	ds	3
   923  003E                     ___ftmul@cntr:	
   924                           
   925                           ; 1 bytes @ 0x1E
   926  003E                     	ds	1
   927  003F                     ___ftmul@sign:	
   928                           
   929                           ; 1 bytes @ 0x1F
   930  003F                     	ds	1
   931  0040                     ?_scale:	
   932  0040                     ?___ftadd:	
   933                           ; 3 bytes @ 0x20
   934                           
   935  0040                     ___ftadd@f1:	
   936                           ; 3 bytes @ 0x20
   937                           
   938                           
   939                           ; 3 bytes @ 0x20
   940  0040                     	ds	3
   941  0043                     ??_scale:	
   942  0043                     ___ftadd@f2:	
   943                           ; 0 bytes @ 0x23
   944                           
   945                           
   946                           ; 3 bytes @ 0x23
   947  0043                     	ds	3
   948  0046                     ??___ftadd:	
   949                           
   950                           ; 0 bytes @ 0x26
   951  0046                     	ds	1
   952  0047                     _scale$2962:	
   953                           
   954                           ; 3 bytes @ 0x27
   955  0047                     	ds	2
   956  0049                     ___ftadd@sign:	
   957                           
   958                           ; 1 bytes @ 0x29
   959  0049                     	ds	1
   960  004A                     scale@scl:	
   961  004A                     ___ftadd@exp2:	
   962                           ; 1 bytes @ 0x2A
   963                           
   964                           
   965                           ; 1 bytes @ 0x2A
   966  004A                     	ds	1
   967  004B                     ___ftadd@exp1:	
   968                           
   969                           ; 1 bytes @ 0x2B
   970  004B                     	ds	1
   971  004C                     ?_fround:	
   972  004C                     ?___ftsub:	
   973                           ; 3 bytes @ 0x2C
   974                           
   975  004C                     ___ftsub@f2:	
   976                           ; 3 bytes @ 0x2C
   977                           
   978                           
   979                           ; 3 bytes @ 0x2C
   980  004C                     	ds	3
   981  004F                     ___ftsub@f1:	
   982  004F                     _fround$2961:	
   983                           ; 3 bytes @ 0x2F
   984                           
   985                           
   986                           ; 3 bytes @ 0x2F
   987  004F                     	ds	3
   988  0052                     _fround$2960:	
   989                           
   990                           ; 3 bytes @ 0x32
   991  0052                     	ds	3
   992  0055                     fround@prec:	
   993                           
   994                           ; 1 bytes @ 0x35
   995  0055                     	ds	1
   996  0056                     ?_sprintf:	
   997  0056                     sprintf@f:	
   998                           ; 2 bytes @ 0x36
   999                           
  1000                           
  1001                           ; 1 bytes @ 0x36
  1002  0056                     	ds	4
  1003  005A                     ??_sprintf:	
  1004                           
  1005                           ; 0 bytes @ 0x3A
  1006  005A                     	ds	5
  1007  005F                     ??_main:	
  1008                           
  1009                           ; 0 bytes @ 0x3F
  1010  005F                     	ds	2
  1011                           
  1012                           	psect	maintext
  1013  01DF                     __pmaintext:	
  1014 ;;Data sizes: Strings 80, constant 118, data 0, bss 6, persistent 0 stack 0
  1015 ;;Auto spaces:   Size  Autos    Used
  1016 ;; COMMON          14     14      14
  1017 ;; BANK0           80     65      65
  1018 ;; BANK1           80     49      55
  1019 ;; BANK3           96      0       0
  1020 ;; BANK2           96      0       0
  1021 ;;
  1022 ;; Pointer list with targets:
  1023 ;; ?___lbtoft	float  size(1) Largest target is 0
  1024 ;;
  1025 ;; ?___ftpack	float  size(1) Largest target is 0
  1026 ;;
  1027 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
  1028 ;;
  1029 ;; ?___llmod	unsigned long  size(1) Largest target is 0
  1030 ;;
  1031 ;; ?___ftsub	float  size(1) Largest target is 0
  1032 ;;
  1033 ;; ?___lltoft	float  size(1) Largest target is 0
  1034 ;;
  1035 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
  1036 ;;
  1037 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
  1038 ;;
  1039 ;; ?___ftadd	float  size(1) Largest target is 0
  1040 ;;
  1041 ;; ?___ftneg	float  size(1) Largest target is 0
  1042 ;;
  1043 ;; ?___awmod	int  size(1) Largest target is 40
  1044 ;;		 -> dpowers(CODE[40]), 
  1045 ;;
  1046 ;; ?___awdiv	int  size(1) Largest target is 0
  1047 ;;
  1048 ;; ?_scale	int  size(1) Largest target is 0
  1049 ;;
  1050 ;; ?_fround	int  size(1) Largest target is 0
  1051 ;;
  1052 ;; ?___fttol	long  size(1) Largest target is 0
  1053 ;;
  1054 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1055 ;;
  1056 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1057 ;;
  1058 ;; ?___ftmul	float  size(1) Largest target is 0
  1059 ;;
  1060 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 6
  1061 ;;		 -> STR_5(CODE[6]), 
  1062 ;;
  1063 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 5
  1064 ;;		 -> carac(BANK1[5]), 
  1065 ;;
  1066 ;; ?_sprintf	int  size(1) Largest target is 0
  1067 ;;
  1068 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1069 ;;		 -> ?_sprintf(BANK0[2]), 
  1070 ;;
  1071 ;; S1925$_cp	PTR const unsigned char  size(1) Largest target is 0
  1072 ;;
  1073 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1074 ;;
  1075 ;; lcd_puts@s	PTR const unsigned char  size(2) Largest target is 16
  1076 ;;		 -> STR_7(CODE[14]), STR_6(CODE[3]), carac(BANK1[5]), STR_4(CODE[11]), 
  1077 ;;		 -> STR_3(CODE[16]), STR_2(CODE[15]), STR_1(CODE[15]), 
  1078 ;;
  1079 ;; pa	PTR unsigned char  size(1) Largest target is 1
  1080 ;;		 -> PORTA(BITSFR0[1]), 
  1081 ;;
  1082 ;;
  1083 ;; Critical Paths under _main in COMMON
  1084 ;;
  1085 ;;   _sprintf->___awdiv
  1086 ;;   _sprintf->__div_to_l_
  1087 ;;   _sprintf->___llmod
  1088 ;;   _lcd_goto->_lcd_write
  1089 ;;   _lcd_puts->_lcd_write
  1090 ;;   _lcd_clear->_lcd_write
  1091 ;;   _scale->___awdiv
  1092 ;;   _lcd_write->_pause
  1093 ;;   _I2C_EEOUT->_pause
  1094 ;;   ___lltoft->___ftpack
  1095 ;;   ___ftmul->___awdiv
  1096 ;;   ___llmod->___lldiv
  1097 ;;   ___awdiv->___awmod
  1098 ;;   ___fttol->___awdiv
  1099 ;;   ___lbdiv->___lbmod
  1100 ;;   ___bmul->___lbdiv
  1101 ;;
  1102 ;; Critical Paths under _main in BANK0
  1103 ;;
  1104 ;;   _main->_sprintf
  1105 ;;   _sprintf->_fround
  1106 ;;   ___ftsub->___ftadd
  1107 ;;   _scale->___ftmul
  1108 ;;   _fround->___ftadd
  1109 ;;   ___lbtoft->___fttol
  1110 ;;   ___ftmul->___lbtoft
  1111 ;;   ___ftadd->___ftmul
  1112 ;;   _I2C_EEIN->___fttol
  1113 ;;
  1114 ;; Critical Paths under _main in BANK1
  1115 ;;
  1116 ;;   _main->_sprintf
  1117 ;;
  1118 ;; Critical Paths under _main in BANK3
  1119 ;;
  1120 ;;   None.
  1121 ;;
  1122 ;; Critical Paths under _main in BANK2
  1123 ;;
  1124 ;;   None.
  1125 ;;
  1126 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1127 ;;
  1128 ;;
  1129 ;;Call Graph Tables:
  1130 ;;
  1131 ;; ---------------------------------------------------------------------------------
  1132 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1133 ;; ---------------------------------------------------------------------------------
  1134 ;; (0) _main                                                26    26      0   13837
  1135 ;;                                             63 BANK0      2     2      0
  1136 ;;                                             25 BANK1     24    24      0
  1137 ;;                              _pause
  1138 ;;                          _lcd_write
  1139 ;;                          _lcd_clear
  1140 ;;                           _lcd_goto
  1141 ;;                           _lcd_puts
  1142 ;;                              _getch
  1143 ;;                           _i2c_init
  1144 ;;                          _I2C_EEOUT
  1145 ;;                           _I2C_EEIN
  1146 ;;                           ___lbtoft
  1147 ;;                            ___ftmul
  1148 ;;                            _sprintf
  1149 ;;                            ___lwdiv
  1150 ;;                             ___wmul
  1151 ;;                              _putch
  1152 ;;                            ___fttol
  1153 ;; ---------------------------------------------------------------------------------
  1154 ;; (1) _sprintf                                             38    34      4   10142
  1155 ;;                                             54 BANK0      9     5      4
  1156 ;;                                              0 BANK1     25    25      0
  1157 ;;                            _isdigit
  1158 ;;                             ___wmul
  1159 ;;                             ___ftge
  1160 ;;                            ___ftneg
  1161 ;;                            ___awdiv
  1162 ;;                              _scale
  1163 ;;                            ___ftmul
  1164 ;;                             _fround
  1165 ;;                            ___ftadd
  1166 ;;                            ___fttol
  1167 ;;                         __div_to_l_
  1168 ;;                        __tdiv_to_l_
  1169 ;;                           ___lltoft
  1170 ;;                            ___ftsub
  1171 ;;                            ___lldiv
  1172 ;;                            ___llmod
  1173 ;;                           ___lbtoft (ARG)
  1174 ;;                           _I2C_EEIN (ARG)
  1175 ;; ---------------------------------------------------------------------------------
  1176 ;; (1) _lcd_goto                                             1     1      0     112
  1177 ;;                                              6 COMMON     1     1      0
  1178 ;;                          _lcd_write
  1179 ;; ---------------------------------------------------------------------------------
  1180 ;; (1) _lcd_puts                                             2     0      2     135
  1181 ;;                                              6 COMMON     2     0      2
  1182 ;;                          _lcd_write
  1183 ;; ---------------------------------------------------------------------------------
  1184 ;; (1) _lcd_clear                                            0     0      0     136
  1185 ;;                          _lcd_write
  1186 ;;                              _pause
  1187 ;; ---------------------------------------------------------------------------------
  1188 ;; (2) ___ftsub                                              6     0      6    1094
  1189 ;;                                             44 BANK0      6     0      6
  1190 ;;                            ___ftadd
  1191 ;;                           ___lltoft (ARG)
  1192 ;; ---------------------------------------------------------------------------------
  1193 ;; (2) _scale                                               14    11      3    1688
  1194 ;;                                             32 BANK0     11     8      3
  1195 ;;                            ___awmod
  1196 ;;                            ___awdiv
  1197 ;;                            ___ftmul
  1198 ;;                             ___bmul
  1199 ;;                            ___fttol (ARG)
  1200 ;; ---------------------------------------------------------------------------------
  1201 ;; (2) _fround                                              13    10      3    1215
  1202 ;;                                             44 BANK0     10     7      3
  1203 ;;                            ___lbmod
  1204 ;;                             ___bmul
  1205 ;;                            ___lbdiv
  1206 ;;                            ___ftmul
  1207 ;;                            ___ftadd (ARG)
  1208 ;; ---------------------------------------------------------------------------------
  1209 ;; (2) _lcd_write                                            2     0      2      90
  1210 ;;                                              4 COMMON     2     0      2
  1211 ;;                              _pause
  1212 ;; ---------------------------------------------------------------------------------
  1213 ;; (1) _I2C_EEOUT                                            3     1      2     134
  1214 ;;                                              4 COMMON     3     1      2
  1215 ;;                          _i2c_start
  1216 ;;                          _i2c_write
  1217 ;;                           _i2c_stop
  1218 ;;                              _pause
  1219 ;; ---------------------------------------------------------------------------------
  1220 ;; (2) ___lltoft                                             5     1      4     278
  1221 ;;                                              8 COMMON     5     1      4
  1222 ;;                           ___ftpack
  1223 ;; ---------------------------------------------------------------------------------
  1224 ;; (1) ___lbtoft                                             4     1      3     231
  1225 ;;                                             13 BANK0      4     1      3
  1226 ;;                           ___ftpack
  1227 ;;                            ___fttol (ARG)
  1228 ;; ---------------------------------------------------------------------------------
  1229 ;; (3) ___ftmul                                             15     9      6     535
  1230 ;;                                             17 BANK0     15     9      6
  1231 ;;                           ___ftpack
  1232 ;;                           ___lbtoft (ARG)
  1233 ;;                           _I2C_EEIN (ARG)
  1234 ;;                            ___fttol (ARG)
  1235 ;;                            ___awdiv (ARG)
  1236 ;;                            ___awmod (ARG)
  1237 ;;                             ___bmul (ARG)
  1238 ;;                            ___lbdiv (ARG)
  1239 ;;                            ___lbmod (ARG)
  1240 ;; ---------------------------------------------------------------------------------
  1241 ;; (3) ___ftadd                                             12     6      6    1049
  1242 ;;                                             32 BANK0     12     6      6
  1243 ;;                           ___ftpack
  1244 ;;                            ___lbmod (ARG)
  1245 ;;                             ___bmul (ARG)
  1246 ;;                            ___lbdiv (ARG)
  1247 ;;                            ___ftmul (ARG)
  1248 ;; ---------------------------------------------------------------------------------
  1249 ;; (1) _I2C_EEIN                                             3     1      2      89
  1250 ;;                                             13 BANK0      3     1      2
  1251 ;;                          _i2c_start
  1252 ;;                          _i2c_write
  1253 ;;                        _i2c_restart
  1254 ;;                           _i2c_read
  1255 ;;                           _I2C_nack
  1256 ;;                           _i2c_stop
  1257 ;;                            ___fttol (ARG)
  1258 ;; ---------------------------------------------------------------------------------
  1259 ;; (2) _pause                                                4     2      2      46
  1260 ;;                                              0 COMMON     4     2      2
  1261 ;;                           _msecbase
  1262 ;; ---------------------------------------------------------------------------------
  1263 ;; (3) ___awmod                                              6     2      4     296
  1264 ;;                                              0 COMMON     6     2      4
  1265 ;; ---------------------------------------------------------------------------------
  1266 ;; (2) ___lldiv                                             13     5      8     162
  1267 ;;                                              0 COMMON    13     5      8
  1268 ;; ---------------------------------------------------------------------------------
  1269 ;; (2) ___ftge                                               6     0      6     136
  1270 ;;                                              0 COMMON     6     0      6
  1271 ;; ---------------------------------------------------------------------------------
  1272 ;; (2) ___ftneg                                              3     0      3      45
  1273 ;;                                              0 COMMON     3     0      3
  1274 ;; ---------------------------------------------------------------------------------
  1275 ;; (2) ___llmod                                              9     1      8     159
  1276 ;;                                             13 COMMON     1     1      0
  1277 ;;                                              0 BANK0      8     0      8
  1278 ;;                            ___lldiv (ARG)
  1279 ;; ---------------------------------------------------------------------------------
  1280 ;; (3) ___awdiv                                              8     4      4     300
  1281 ;;                                              6 COMMON     8     4      4
  1282 ;;                            ___awmod (ARG)
  1283 ;; ---------------------------------------------------------------------------------
  1284 ;; (1) ___fttol                                             13     9      4     252
  1285 ;;                                              0 BANK0     13     9      4
  1286 ;;                           ___ftpack (ARG)
  1287 ;;                          _i2c_start (ARG)
  1288 ;;                          _i2c_write (ARG)
  1289 ;;                        _i2c_restart (ARG)
  1290 ;;                           _i2c_read (ARG)
  1291 ;;                           _I2C_nack (ARG)
  1292 ;;                           _i2c_stop (ARG)
  1293 ;;                            ___awmod (ARG)
  1294 ;;                            ___awdiv (ARG)
  1295 ;;                             ___bmul (ARG)
  1296 ;; ---------------------------------------------------------------------------------
  1297 ;; (4) ___ftpack                                             8     3      5     209
  1298 ;;                                              0 COMMON     8     3      5
  1299 ;; ---------------------------------------------------------------------------------
  1300 ;; (3) ___lbmod                                              5     4      1     159
  1301 ;;                                              0 COMMON     5     4      1
  1302 ;; ---------------------------------------------------------------------------------
  1303 ;; (3) ___lbdiv                                              4     3      1     162
  1304 ;;                                              5 COMMON     4     3      1
  1305 ;;                            ___lbmod (ARG)
  1306 ;; ---------------------------------------------------------------------------------
  1307 ;; (1) ___lwdiv                                              7     3      4     162
  1308 ;;                                              0 COMMON     7     3      4
  1309 ;; ---------------------------------------------------------------------------------
  1310 ;; (1) ___wmul                                               6     2      4      92
  1311 ;;                                              0 COMMON     6     2      4
  1312 ;; ---------------------------------------------------------------------------------
  1313 ;; (3) ___bmul                                               3     2      1      68
  1314 ;;                                              9 COMMON     3     2      1
  1315 ;;                            ___lbmod (ARG)
  1316 ;;                            ___lbdiv (ARG)
  1317 ;; ---------------------------------------------------------------------------------
  1318 ;; (2) __div_to_l_                                          20    14      6     446
  1319 ;;                                              0 COMMON    14     8      6
  1320 ;;                                              0 BANK0      6     6      0
  1321 ;; ---------------------------------------------------------------------------------
  1322 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1323 ;;                                              0 COMMON     9     3      6
  1324 ;;                                              0 BANK0      6     6      0
  1325 ;; ---------------------------------------------------------------------------------
  1326 ;; (2) _isdigit                                              2     2      0      68
  1327 ;;                                              0 COMMON     2     2      0
  1328 ;; ---------------------------------------------------------------------------------
  1329 ;; (2) _i2c_write                                            1     1      0      22
  1330 ;;                                              0 COMMON     1     1      0
  1331 ;; ---------------------------------------------------------------------------------
  1332 ;; (2) _I2C_nack                                             0     0      0       0
  1333 ;; ---------------------------------------------------------------------------------
  1334 ;; (2) _i2c_read                                             0     0      0       0
  1335 ;; ---------------------------------------------------------------------------------
  1336 ;; (2) _i2c_stop                                             0     0      0       0
  1337 ;; ---------------------------------------------------------------------------------
  1338 ;; (2) _i2c_restart                                          0     0      0       0
  1339 ;; ---------------------------------------------------------------------------------
  1340 ;; (2) _i2c_start                                            0     0      0       0
  1341 ;; ---------------------------------------------------------------------------------
  1342 ;; (1) _i2c_init                                             0     0      0       0
  1343 ;; ---------------------------------------------------------------------------------
  1344 ;; (3) _msecbase                                             0     0      0       0
  1345 ;; ---------------------------------------------------------------------------------
  1346 ;; (1) _getch                                                0     0      0       0
  1347 ;; ---------------------------------------------------------------------------------
  1348 ;; (1) _putch                                                1     1      0      22
  1349 ;;                                              0 COMMON     1     1      0
  1350 ;; ---------------------------------------------------------------------------------
  1351 ;; Estimated maximum stack depth 4
  1352 ;; ---------------------------------------------------------------------------------
  1353 ;; Call Graph Graphs:
  1354 ;; _main (ROOT)
  1355 ;;   _pause
  1356 ;;     _msecbase
  1357 ;;   _lcd_write
  1358 ;;     _pause
  1359 ;;       _msecbase
  1360 ;;   _lcd_clear
  1361 ;;     _lcd_write
  1362 ;;       _pause
  1363 ;;         _msecbase
  1364 ;;     _pause
  1365 ;;       _msecbase
  1366 ;;   _lcd_goto
  1367 ;;     _lcd_write
  1368 ;;       _pause
  1369 ;;         _msecbase
  1370 ;;   _lcd_puts
  1371 ;;     _lcd_write
  1372 ;;       _pause
  1373 ;;         _msecbase
  1374 ;;   _getch
  1375 ;;   _i2c_init
  1376 ;;   _I2C_EEOUT
  1377 ;;     _i2c_start
  1378 ;;     _i2c_write
  1379 ;;     _i2c_stop
  1380 ;;     _pause
  1381 ;;       _msecbase
  1382 ;;   _I2C_EEIN
  1383 ;;     _i2c_start
  1384 ;;     _i2c_write
  1385 ;;     _i2c_restart
  1386 ;;     _i2c_read
  1387 ;;     _I2C_nack
  1388 ;;     _i2c_stop
  1389 ;;     ___fttol (ARG)
  1390 ;;       ___ftpack (ARG)
  1391 ;;       _i2c_start (ARG)
  1392 ;;       _i2c_write (ARG)
  1393 ;;       _i2c_restart (ARG)
  1394 ;;       _i2c_read (ARG)
  1395 ;;       _I2C_nack (ARG)
  1396 ;;       _i2c_stop (ARG)
  1397 ;;       ___awmod (ARG)
  1398 ;;       ___awdiv (ARG)
  1399 ;;         ___awmod (ARG)
  1400 ;;       ___bmul (ARG)
  1401 ;;         ___lbmod (ARG)
  1402 ;;         ___lbdiv (ARG)
  1403 ;;           ___lbmod (ARG)
  1404 ;;   ___lbtoft
  1405 ;;     ___ftpack
  1406 ;;     ___fttol (ARG)
  1407 ;;       ___ftpack (ARG)
  1408 ;;       _i2c_start (ARG)
  1409 ;;       _i2c_write (ARG)
  1410 ;;       _i2c_restart (ARG)
  1411 ;;       _i2c_read (ARG)
  1412 ;;       _I2C_nack (ARG)
  1413 ;;       _i2c_stop (ARG)
  1414 ;;       ___awmod (ARG)
  1415 ;;       ___awdiv (ARG)
  1416 ;;         ___awmod (ARG)
  1417 ;;       ___bmul (ARG)
  1418 ;;         ___lbmod (ARG)
  1419 ;;         ___lbdiv (ARG)
  1420 ;;           ___lbmod (ARG)
  1421 ;;   ___ftmul
  1422 ;;     ___ftpack
  1423 ;;     ___lbtoft (ARG)
  1424 ;;       ___ftpack
  1425 ;;       ___fttol (ARG)
  1426 ;;         ___ftpack (ARG)
  1427 ;;         _i2c_start (ARG)
  1428 ;;         _i2c_write (ARG)
  1429 ;;         _i2c_restart (ARG)
  1430 ;;         _i2c_read (ARG)
  1431 ;;         _I2C_nack (ARG)
  1432 ;;         _i2c_stop (ARG)
  1433 ;;         ___awmod (ARG)
  1434 ;;         ___awdiv (ARG)
  1435 ;;           ___awmod (ARG)
  1436 ;;         ___bmul (ARG)
  1437 ;;           ___lbmod (ARG)
  1438 ;;           ___lbdiv (ARG)
  1439 ;;             ___lbmod (ARG)
  1440 ;;     _I2C_EEIN (ARG)
  1441 ;;       _i2c_start
  1442 ;;       _i2c_write
  1443 ;;       _i2c_restart
  1444 ;;       _i2c_read
  1445 ;;       _I2C_nack
  1446 ;;       _i2c_stop
  1447 ;;       ___fttol (ARG)
  1448 ;;         ___ftpack (ARG)
  1449 ;;         _i2c_start (ARG)
  1450 ;;         _i2c_write (ARG)
  1451 ;;         _i2c_restart (ARG)
  1452 ;;         _i2c_read (ARG)
  1453 ;;         _I2C_nack (ARG)
  1454 ;;         _i2c_stop (ARG)
  1455 ;;         ___awmod (ARG)
  1456 ;;         ___awdiv (ARG)
  1457 ;;           ___awmod (ARG)
  1458 ;;         ___bmul (ARG)
  1459 ;;           ___lbmod (ARG)
  1460 ;;           ___lbdiv (ARG)
  1461 ;;             ___lbmod (ARG)
  1462 ;;     ___fttol (ARG)
  1463 ;;       ___ftpack (ARG)
  1464 ;;       _i2c_start (ARG)
  1465 ;;       _i2c_write (ARG)
  1466 ;;       _i2c_restart (ARG)
  1467 ;;       _i2c_read (ARG)
  1468 ;;       _I2C_nack (ARG)
  1469 ;;       _i2c_stop (ARG)
  1470 ;;       ___awmod (ARG)
  1471 ;;       ___awdiv (ARG)
  1472 ;;         ___awmod (ARG)
  1473 ;;       ___bmul (ARG)
  1474 ;;         ___lbmod (ARG)
  1475 ;;         ___lbdiv (ARG)
  1476 ;;           ___lbmod (ARG)
  1477 ;;     ___awdiv (ARG)
  1478 ;;       ___awmod (ARG)
  1479 ;;     ___awmod (ARG)
  1480 ;;     ___bmul (ARG)
  1481 ;;       ___lbmod (ARG)
  1482 ;;       ___lbdiv (ARG)
  1483 ;;         ___lbmod (ARG)
  1484 ;;     ___lbdiv (ARG)
  1485 ;;       ___lbmod (ARG)
  1486 ;;     ___lbmod (ARG)
  1487 ;;   _sprintf
  1488 ;;     _isdigit
  1489 ;;     ___wmul
  1490 ;;     ___ftge
  1491 ;;     ___ftneg
  1492 ;;     ___awdiv
  1493 ;;       ___awmod (ARG)
  1494 ;;     _scale
  1495 ;;       ___awmod
  1496 ;;       ___awdiv
  1497 ;;         ___awmod (ARG)
  1498 ;;       ___ftmul
  1499 ;;         ___ftpack
  1500 ;;         ___lbtoft (ARG)
  1501 ;;           ___ftpack
  1502 ;;           ___fttol (ARG)
  1503 ;;             ___ftpack (ARG)
  1504 ;;             _i2c_start (ARG)
  1505 ;;             _i2c_write (ARG)
  1506 ;;             _i2c_restart (ARG)
  1507 ;;             _i2c_read (ARG)
  1508 ;;             _I2C_nack (ARG)
  1509 ;;             _i2c_stop (ARG)
  1510 ;;             ___awmod (ARG)
  1511 ;;             ___awdiv (ARG)
  1512 ;;               ___awmod (ARG)
  1513 ;;             ___bmul (ARG)
  1514 ;;               ___lbmod (ARG)
  1515 ;;               ___lbdiv (ARG)
  1516 ;;                 ___lbmod (ARG)
  1517 ;;         _I2C_EEIN (ARG)
  1518 ;;           _i2c_start
  1519 ;;           _i2c_write
  1520 ;;           _i2c_restart
  1521 ;;           _i2c_read
  1522 ;;           _I2C_nack
  1523 ;;           _i2c_stop
  1524 ;;           ___fttol (ARG)
  1525 ;;             ___ftpack (ARG)
  1526 ;;             _i2c_start (ARG)
  1527 ;;             _i2c_write (ARG)
  1528 ;;             _i2c_restart (ARG)
  1529 ;;             _i2c_read (ARG)
  1530 ;;             _I2C_nack (ARG)
  1531 ;;             _i2c_stop (ARG)
  1532 ;;             ___awmod (ARG)
  1533 ;;             ___awdiv (ARG)
  1534 ;;               ___awmod (ARG)
  1535 ;;             ___bmul (ARG)
  1536 ;;               ___lbmod (ARG)
  1537 ;;               ___lbdiv (ARG)
  1538 ;;                 ___lbmod (ARG)
  1539 ;;         ___fttol (ARG)
  1540 ;;           ___ftpack (ARG)
  1541 ;;           _i2c_start (ARG)
  1542 ;;           _i2c_write (ARG)
  1543 ;;           _i2c_restart (ARG)
  1544 ;;           _i2c_read (ARG)
  1545 ;;           _I2C_nack (ARG)
  1546 ;;           _i2c_stop (ARG)
  1547 ;;           ___awmod (ARG)
  1548 ;;           ___awdiv (ARG)
  1549 ;;             ___awmod (ARG)
  1550 ;;           ___bmul (ARG)
  1551 ;;             ___lbmod (ARG)
  1552 ;;             ___lbdiv (ARG)
  1553 ;;               ___lbmod (ARG)
  1554 ;;         ___awdiv (ARG)
  1555 ;;           ___awmod (ARG)
  1556 ;;         ___awmod (ARG)
  1557 ;;         ___bmul (ARG)
  1558 ;;           ___lbmod (ARG)
  1559 ;;           ___lbdiv (ARG)
  1560 ;;             ___lbmod (ARG)
  1561 ;;         ___lbdiv (ARG)
  1562 ;;           ___lbmod (ARG)
  1563 ;;         ___lbmod (ARG)
  1564 ;;       ___bmul
  1565 ;;         ___lbmod (ARG)
  1566 ;;         ___lbdiv (ARG)
  1567 ;;           ___lbmod (ARG)
  1568 ;;       ___fttol (ARG)
  1569 ;;         ___ftpack (ARG)
  1570 ;;         _i2c_start (ARG)
  1571 ;;         _i2c_write (ARG)
  1572 ;;         _i2c_restart (ARG)
  1573 ;;         _i2c_read (ARG)
  1574 ;;         _I2C_nack (ARG)
  1575 ;;         _i2c_stop (ARG)
  1576 ;;         ___awmod (ARG)
  1577 ;;         ___awdiv (ARG)
  1578 ;;           ___awmod (ARG)
  1579 ;;         ___bmul (ARG)
  1580 ;;           ___lbmod (ARG)
  1581 ;;           ___lbdiv (ARG)
  1582 ;;             ___lbmod (ARG)
  1583 ;;     ___ftmul
  1584 ;;       ___ftpack
  1585 ;;       ___lbtoft (ARG)
  1586 ;;         ___ftpack
  1587 ;;         ___fttol (ARG)
  1588 ;;           ___ftpack (ARG)
  1589 ;;           _i2c_start (ARG)
  1590 ;;           _i2c_write (ARG)
  1591 ;;           _i2c_restart (ARG)
  1592 ;;           _i2c_read (ARG)
  1593 ;;           _I2C_nack (ARG)
  1594 ;;           _i2c_stop (ARG)
  1595 ;;           ___awmod (ARG)
  1596 ;;           ___awdiv (ARG)
  1597 ;;             ___awmod (ARG)
  1598 ;;           ___bmul (ARG)
  1599 ;;             ___lbmod (ARG)
  1600 ;;             ___lbdiv (ARG)
  1601 ;;               ___lbmod (ARG)
  1602 ;;       _I2C_EEIN (ARG)
  1603 ;;         _i2c_start
  1604 ;;         _i2c_write
  1605 ;;         _i2c_restart
  1606 ;;         _i2c_read
  1607 ;;         _I2C_nack
  1608 ;;         _i2c_stop
  1609 ;;         ___fttol (ARG)
  1610 ;;           ___ftpack (ARG)
  1611 ;;           _i2c_start (ARG)
  1612 ;;           _i2c_write (ARG)
  1613 ;;           _i2c_restart (ARG)
  1614 ;;           _i2c_read (ARG)
  1615 ;;           _I2C_nack (ARG)
  1616 ;;           _i2c_stop (ARG)
  1617 ;;           ___awmod (ARG)
  1618 ;;           ___awdiv (ARG)
  1619 ;;             ___awmod (ARG)
  1620 ;;           ___bmul (ARG)
  1621 ;;             ___lbmod (ARG)
  1622 ;;             ___lbdiv (ARG)
  1623 ;;               ___lbmod (ARG)
  1624 ;;       ___fttol (ARG)
  1625 ;;         ___ftpack (ARG)
  1626 ;;         _i2c_start (ARG)
  1627 ;;         _i2c_write (ARG)
  1628 ;;         _i2c_restart (ARG)
  1629 ;;         _i2c_read (ARG)
  1630 ;;         _I2C_nack (ARG)
  1631 ;;         _i2c_stop (ARG)
  1632 ;;         ___awmod (ARG)
  1633 ;;         ___awdiv (ARG)
  1634 ;;           ___awmod (ARG)
  1635 ;;         ___bmul (ARG)
  1636 ;;           ___lbmod (ARG)
  1637 ;;           ___lbdiv (ARG)
  1638 ;;             ___lbmod (ARG)
  1639 ;;       ___awdiv (ARG)
  1640 ;;         ___awmod (ARG)
  1641 ;;       ___awmod (ARG)
  1642 ;;       ___bmul (ARG)
  1643 ;;         ___lbmod (ARG)
  1644 ;;         ___lbdiv (ARG)
  1645 ;;           ___lbmod (ARG)
  1646 ;;       ___lbdiv (ARG)
  1647 ;;         ___lbmod (ARG)
  1648 ;;       ___lbmod (ARG)
  1649 ;;     _fround
  1650 ;;       ___lbmod
  1651 ;;       ___bmul
  1652 ;;         ___lbmod (ARG)
  1653 ;;         ___lbdiv (ARG)
  1654 ;;           ___lbmod (ARG)
  1655 ;;       ___lbdiv
  1656 ;;         ___lbmod (ARG)
  1657 ;;       ___ftmul
  1658 ;;         ___ftpack
  1659 ;;         ___lbtoft (ARG)
  1660 ;;           ___ftpack
  1661 ;;           ___fttol (ARG)
  1662 ;;             ___ftpack (ARG)
  1663 ;;             _i2c_start (ARG)
  1664 ;;             _i2c_write (ARG)
  1665 ;;             _i2c_restart (ARG)
  1666 ;;             _i2c_read (ARG)
  1667 ;;             _I2C_nack (ARG)
  1668 ;;             _i2c_stop (ARG)
  1669 ;;             ___awmod (ARG)
  1670 ;;             ___awdiv (ARG)
  1671 ;;               ___awmod (ARG)
  1672 ;;             ___bmul (ARG)
  1673 ;;               ___lbmod (ARG)
  1674 ;;               ___lbdiv (ARG)
  1675 ;;                 ___lbmod (ARG)
  1676 ;;         _I2C_EEIN (ARG)
  1677 ;;           _i2c_start
  1678 ;;           _i2c_write
  1679 ;;           _i2c_restart
  1680 ;;           _i2c_read
  1681 ;;           _I2C_nack
  1682 ;;           _i2c_stop
  1683 ;;           ___fttol (ARG)
  1684 ;;             ___ftpack (ARG)
  1685 ;;             _i2c_start (ARG)
  1686 ;;             _i2c_write (ARG)
  1687 ;;             _i2c_restart (ARG)
  1688 ;;             _i2c_read (ARG)
  1689 ;;             _I2C_nack (ARG)
  1690 ;;             _i2c_stop (ARG)
  1691 ;;             ___awmod (ARG)
  1692 ;;             ___awdiv (ARG)
  1693 ;;               ___awmod (ARG)
  1694 ;;             ___bmul (ARG)
  1695 ;;               ___lbmod (ARG)
  1696 ;;               ___lbdiv (ARG)
  1697 ;;                 ___lbmod (ARG)
  1698 ;;         ___fttol (ARG)
  1699 ;;           ___ftpack (ARG)
  1700 ;;           _i2c_start (ARG)
  1701 ;;           _i2c_write (ARG)
  1702 ;;           _i2c_restart (ARG)
  1703 ;;           _i2c_read (ARG)
  1704 ;;           _I2C_nack (ARG)
  1705 ;;           _i2c_stop (ARG)
  1706 ;;           ___awmod (ARG)
  1707 ;;           ___awdiv (ARG)
  1708 ;;             ___awmod (ARG)
  1709 ;;           ___bmul (ARG)
  1710 ;;             ___lbmod (ARG)
  1711 ;;             ___lbdiv (ARG)
  1712 ;;               ___lbmod (ARG)
  1713 ;;         ___awdiv (ARG)
  1714 ;;           ___awmod (ARG)
  1715 ;;         ___awmod (ARG)
  1716 ;;         ___bmul (ARG)
  1717 ;;           ___lbmod (ARG)
  1718 ;;           ___lbdiv (ARG)
  1719 ;;             ___lbmod (ARG)
  1720 ;;         ___lbdiv (ARG)
  1721 ;;           ___lbmod (ARG)
  1722 ;;         ___lbmod (ARG)
  1723 ;;       ___ftadd (ARG)
  1724 ;;         ___ftpack
  1725 ;;         ___lbmod (ARG)
  1726 ;;         ___bmul (ARG)
  1727 ;;           ___lbmod (ARG)
  1728 ;;           ___lbdiv (ARG)
  1729 ;;             ___lbmod (ARG)
  1730 ;;         ___lbdiv (ARG)
  1731 ;;           ___lbmod (ARG)
  1732 ;;         ___ftmul (ARG)
  1733 ;;           ___ftpack
  1734 ;;           ___lbtoft (ARG)
  1735 ;;             ___ftpack
  1736 ;;             ___fttol (ARG)
  1737 ;;               ___ftpack (ARG)
  1738 ;;               _i2c_start (ARG)
  1739 ;;               _i2c_write (ARG)
  1740 ;;               _i2c_restart (ARG)
  1741 ;;               _i2c_read (ARG)
  1742 ;;               _I2C_nack (ARG)
  1743 ;;               _i2c_stop (ARG)
  1744 ;;               ___awmod (ARG)
  1745 ;;               ___awdiv (ARG)
  1746 ;;                 ___awmod (ARG)
  1747 ;;               ___bmul (ARG)
  1748 ;;                 ___lbmod (ARG)
  1749 ;;                 ___lbdiv (ARG)
  1750 ;;                   ___lbmod (ARG)
  1751 ;;           _I2C_EEIN (ARG)
  1752 ;;             _i2c_start
  1753 ;;             _i2c_write
  1754 ;;             _i2c_restart
  1755 ;;             _i2c_read
  1756 ;;             _I2C_nack
  1757 ;;             _i2c_stop
  1758 ;;             ___fttol (ARG)
  1759 ;;               ___ftpack (ARG)
  1760 ;;               _i2c_start (ARG)
  1761 ;;               _i2c_write (ARG)
  1762 ;;               _i2c_restart (ARG)
  1763 ;;               _i2c_read (ARG)
  1764 ;;               _I2C_nack (ARG)
  1765 ;;               _i2c_stop (ARG)
  1766 ;;               ___awmod (ARG)
  1767 ;;               ___awdiv (ARG)
  1768 ;;                 ___awmod (ARG)
  1769 ;;               ___bmul (ARG)
  1770 ;;                 ___lbmod (ARG)
  1771 ;;                 ___lbdiv (ARG)
  1772 ;;                   ___lbmod (ARG)
  1773 ;;           ___fttol (ARG)
  1774 ;;             ___ftpack (ARG)
  1775 ;;             _i2c_start (ARG)
  1776 ;;             _i2c_write (ARG)
  1777 ;;             _i2c_restart (ARG)
  1778 ;;             _i2c_read (ARG)
  1779 ;;             _I2C_nack (ARG)
  1780 ;;             _i2c_stop (ARG)
  1781 ;;             ___awmod (ARG)
  1782 ;;             ___awdiv (ARG)
  1783 ;;               ___awmod (ARG)
  1784 ;;             ___bmul (ARG)
  1785 ;;               ___lbmod (ARG)
  1786 ;;               ___lbdiv (ARG)
  1787 ;;                 ___lbmod (ARG)
  1788 ;;           ___awdiv (ARG)
  1789 ;;             ___awmod (ARG)
  1790 ;;           ___awmod (ARG)
  1791 ;;           ___bmul (ARG)
  1792 ;;             ___lbmod (ARG)
  1793 ;;             ___lbdiv (ARG)
  1794 ;;               ___lbmod (ARG)
  1795 ;;           ___lbdiv (ARG)
  1796 ;;             ___lbmod (ARG)
  1797 ;;           ___lbmod (ARG)
  1798 ;;     ___ftadd
  1799 ;;       ___ftpack
  1800 ;;       ___lbmod (ARG)
  1801 ;;       ___bmul (ARG)
  1802 ;;         ___lbmod (ARG)
  1803 ;;         ___lbdiv (ARG)
  1804 ;;           ___lbmod (ARG)
  1805 ;;       ___lbdiv (ARG)
  1806 ;;         ___lbmod (ARG)
  1807 ;;       ___ftmul (ARG)
  1808 ;;         ___ftpack
  1809 ;;         ___lbtoft (ARG)
  1810 ;;           ___ftpack
  1811 ;;           ___fttol (ARG)
  1812 ;;             ___ftpack (ARG)
  1813 ;;             _i2c_start (ARG)
  1814 ;;             _i2c_write (ARG)
  1815 ;;             _i2c_restart (ARG)
  1816 ;;             _i2c_read (ARG)
  1817 ;;             _I2C_nack (ARG)
  1818 ;;             _i2c_stop (ARG)
  1819 ;;             ___awmod (ARG)
  1820 ;;             ___awdiv (ARG)
  1821 ;;               ___awmod (ARG)
  1822 ;;             ___bmul (ARG)
  1823 ;;               ___lbmod (ARG)
  1824 ;;               ___lbdiv (ARG)
  1825 ;;                 ___lbmod (ARG)
  1826 ;;         _I2C_EEIN (ARG)
  1827 ;;           _i2c_start
  1828 ;;           _i2c_write
  1829 ;;           _i2c_restart
  1830 ;;           _i2c_read
  1831 ;;           _I2C_nack
  1832 ;;           _i2c_stop
  1833 ;;           ___fttol (ARG)
  1834 ;;             ___ftpack (ARG)
  1835 ;;             _i2c_start (ARG)
  1836 ;;             _i2c_write (ARG)
  1837 ;;             _i2c_restart (ARG)
  1838 ;;             _i2c_read (ARG)
  1839 ;;             _I2C_nack (ARG)
  1840 ;;             _i2c_stop (ARG)
  1841 ;;             ___awmod (ARG)
  1842 ;;             ___awdiv (ARG)
  1843 ;;               ___awmod (ARG)
  1844 ;;             ___bmul (ARG)
  1845 ;;               ___lbmod (ARG)
  1846 ;;               ___lbdiv (ARG)
  1847 ;;                 ___lbmod (ARG)
  1848 ;;         ___fttol (ARG)
  1849 ;;           ___ftpack (ARG)
  1850 ;;           _i2c_start (ARG)
  1851 ;;           _i2c_write (ARG)
  1852 ;;           _i2c_restart (ARG)
  1853 ;;           _i2c_read (ARG)
  1854 ;;           _I2C_nack (ARG)
  1855 ;;           _i2c_stop (ARG)
  1856 ;;           ___awmod (ARG)
  1857 ;;           ___awdiv (ARG)
  1858 ;;             ___awmod (ARG)
  1859 ;;           ___bmul (ARG)
  1860 ;;             ___lbmod (ARG)
  1861 ;;             ___lbdiv (ARG)
  1862 ;;               ___lbmod (ARG)
  1863 ;;         ___awdiv (ARG)
  1864 ;;           ___awmod (ARG)
  1865 ;;         ___awmod (ARG)
  1866 ;;         ___bmul (ARG)
  1867 ;;           ___lbmod (ARG)
  1868 ;;           ___lbdiv (ARG)
  1869 ;;             ___lbmod (ARG)
  1870 ;;         ___lbdiv (ARG)
  1871 ;;           ___lbmod (ARG)
  1872 ;;         ___lbmod (ARG)
  1873 ;;     ___fttol
  1874 ;;       ___ftpack (ARG)
  1875 ;;       _i2c_start (ARG)
  1876 ;;       _i2c_write (ARG)
  1877 ;;       _i2c_restart (ARG)
  1878 ;;       _i2c_read (ARG)
  1879 ;;       _I2C_nack (ARG)
  1880 ;;       _i2c_stop (ARG)
  1881 ;;       ___awmod (ARG)
  1882 ;;       ___awdiv (ARG)
  1883 ;;         ___awmod (ARG)
  1884 ;;       ___bmul (ARG)
  1885 ;;         ___lbmod (ARG)
  1886 ;;         ___lbdiv (ARG)
  1887 ;;           ___lbmod (ARG)
  1888 ;;     __div_to_l_
  1889 ;;     __tdiv_to_l_
  1890 ;;     ___lltoft
  1891 ;;       ___ftpack
  1892 ;;     ___ftsub
  1893 ;;       ___ftadd
  1894 ;;         ___ftpack
  1895 ;;         ___lbmod (ARG)
  1896 ;;         ___bmul (ARG)
  1897 ;;           ___lbmod (ARG)
  1898 ;;           ___lbdiv (ARG)
  1899 ;;             ___lbmod (ARG)
  1900 ;;         ___lbdiv (ARG)
  1901 ;;           ___lbmod (ARG)
  1902 ;;         ___ftmul (ARG)
  1903 ;;           ___ftpack
  1904 ;;           ___lbtoft (ARG)
  1905 ;;             ___ftpack
  1906 ;;             ___fttol (ARG)
  1907 ;;               ___ftpack (ARG)
  1908 ;;               _i2c_start (ARG)
  1909 ;;               _i2c_write (ARG)
  1910 ;;               _i2c_restart (ARG)
  1911 ;;               _i2c_read (ARG)
  1912 ;;               _I2C_nack (ARG)
  1913 ;;               _i2c_stop (ARG)
  1914 ;;               ___awmod (ARG)
  1915 ;;               ___awdiv (ARG)
  1916 ;;                 ___awmod (ARG)
  1917 ;;               ___bmul (ARG)
  1918 ;;                 ___lbmod (ARG)
  1919 ;;                 ___lbdiv (ARG)
  1920 ;;                   ___lbmod (ARG)
  1921 ;;           _I2C_EEIN (ARG)
  1922 ;;             _i2c_start
  1923 ;;             _i2c_write
  1924 ;;             _i2c_restart
  1925 ;;             _i2c_read
  1926 ;;             _I2C_nack
  1927 ;;             _i2c_stop
  1928 ;;             ___fttol (ARG)
  1929 ;;               ___ftpack (ARG)
  1930 ;;               _i2c_start (ARG)
  1931 ;;               _i2c_write (ARG)
  1932 ;;               _i2c_restart (ARG)
  1933 ;;               _i2c_read (ARG)
  1934 ;;               _I2C_nack (ARG)
  1935 ;;               _i2c_stop (ARG)
  1936 ;;               ___awmod (ARG)
  1937 ;;               ___awdiv (ARG)
  1938 ;;                 ___awmod (ARG)
  1939 ;;               ___bmul (ARG)
  1940 ;;                 ___lbmod (ARG)
  1941 ;;                 ___lbdiv (ARG)
  1942 ;;                   ___lbmod (ARG)
  1943 ;;           ___fttol (ARG)
  1944 ;;             ___ftpack (ARG)
  1945 ;;             _i2c_start (ARG)
  1946 ;;             _i2c_write (ARG)
  1947 ;;             _i2c_restart (ARG)
  1948 ;;             _i2c_read (ARG)
  1949 ;;             _I2C_nack (ARG)
  1950 ;;             _i2c_stop (ARG)
  1951 ;;             ___awmod (ARG)
  1952 ;;             ___awdiv (ARG)
  1953 ;;               ___awmod (ARG)
  1954 ;;             ___bmul (ARG)
  1955 ;;               ___lbmod (ARG)
  1956 ;;               ___lbdiv (ARG)
  1957 ;;                 ___lbmod (ARG)
  1958 ;;           ___awdiv (ARG)
  1959 ;;             ___awmod (ARG)
  1960 ;;           ___awmod (ARG)
  1961 ;;           ___bmul (ARG)
  1962 ;;             ___lbmod (ARG)
  1963 ;;             ___lbdiv (ARG)
  1964 ;;               ___lbmod (ARG)
  1965 ;;           ___lbdiv (ARG)
  1966 ;;             ___lbmod (ARG)
  1967 ;;           ___lbmod (ARG)
  1968 ;;       ___lltoft (ARG)
  1969 ;;         ___ftpack
  1970 ;;     ___lldiv
  1971 ;;     ___llmod
  1972 ;;       ___lldiv (ARG)
  1973 ;;     ___lbtoft (ARG)
  1974 ;;       ___ftpack
  1975 ;;       ___fttol (ARG)
  1976 ;;         ___ftpack (ARG)
  1977 ;;         _i2c_start (ARG)
  1978 ;;         _i2c_write (ARG)
  1979 ;;         _i2c_restart (ARG)
  1980 ;;         _i2c_read (ARG)
  1981 ;;         _I2C_nack (ARG)
  1982 ;;         _i2c_stop (ARG)
  1983 ;;         ___awmod (ARG)
  1984 ;;         ___awdiv (ARG)
  1985 ;;           ___awmod (ARG)
  1986 ;;         ___bmul (ARG)
  1987 ;;           ___lbmod (ARG)
  1988 ;;           ___lbdiv (ARG)
  1989 ;;             ___lbmod (ARG)
  1990 ;;     _I2C_EEIN (ARG)
  1991 ;;       _i2c_start
  1992 ;;       _i2c_write
  1993 ;;       _i2c_restart
  1994 ;;       _i2c_read
  1995 ;;       _I2C_nack
  1996 ;;       _i2c_stop
  1997 ;;       ___fttol (ARG)
  1998 ;;         ___ftpack (ARG)
  1999 ;;         _i2c_start (ARG)
  2000 ;;         _i2c_write (ARG)
  2001 ;;         _i2c_restart (ARG)
  2002 ;;         _i2c_read (ARG)
  2003 ;;         _I2C_nack (ARG)
  2004 ;;         _i2c_stop (ARG)
  2005 ;;         ___awmod (ARG)
  2006 ;;         ___awdiv (ARG)
  2007 ;;           ___awmod (ARG)
  2008 ;;         ___bmul (ARG)
  2009 ;;           ___lbmod (ARG)
  2010 ;;           ___lbdiv (ARG)
  2011 ;;             ___lbmod (ARG)
  2012 ;;   ___lwdiv
  2013 ;;   ___wmul
  2014 ;;   _putch
  2015 ;;   ___fttol
  2016 ;;     ___ftpack (ARG)
  2017 ;;     _i2c_start (ARG)
  2018 ;;     _i2c_write (ARG)
  2019 ;;     _i2c_restart (ARG)
  2020 ;;     _i2c_read (ARG)
  2021 ;;     _I2C_nack (ARG)
  2022 ;;     _i2c_stop (ARG)
  2023 ;;     ___awmod (ARG)
  2024 ;;     ___awdiv (ARG)
  2025 ;;       ___awmod (ARG)
  2026 ;;     ___bmul (ARG)
  2027 ;;       ___lbmod (ARG)
  2028 ;;       ___lbdiv (ARG)
  2029 ;;         ___lbmod (ARG)
  2030 ;;
  2031 ;; Address spaces:
  2032 ;;Name               Size   Autos  Total    Cost      Usage
  2033 ;;BITCOMMON            E      0       0       0        0.0%
  2034 ;;EEDATA             100      0       0       0        0.0%
  2035 ;;NULL                 0      0       0       0        0.0%
  2036 ;;CODE                 0      0       0       0        0.0%
  2037 ;;COMMON               E      E       E       1      100.0%
  2038 ;;BITSFR0              0      0       0       1        0.0%
  2039 ;;SFR0                 0      0       0       1        0.0%
  2040 ;;BITSFR1              0      0       0       2        0.0%
  2041 ;;SFR1                 0      0       0       2        0.0%
  2042 ;;STACK                0      0       4       2        0.0%
  2043 ;;ABS                  0      0      86       3        0.0%
  2044 ;;BITBANK0            50      0       0       4        0.0%
  2045 ;;BITSFR3              0      0       0       4        0.0%
  2046 ;;SFR3                 0      0       0       4        0.0%
  2047 ;;BANK0               50     41      41       5       81.3%
  2048 ;;BITSFR2              0      0       0       5        0.0%
  2049 ;;SFR2                 0      0       0       5        0.0%
  2050 ;;BITBANK1            50      0       0       6        0.0%
  2051 ;;BANK1               50     31      37       7       68.8%
  2052 ;;BITBANK3            60      0       0       8        0.0%
  2053 ;;BANK3               60      0       0       9        0.0%
  2054 ;;BITBANK2            60      0       0      10        0.0%
  2055 ;;BANK2               60      0       0      11        0.0%
  2056 ;;DATA                 0      0      8A      12        0.0%
  2057                           
  2058                           
  2059 ;; *************** function _main *****************
  2060 ;; Defined at:
  2061 ;;		line 250 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;		None
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  B1              2   47[BANK1 ] unsigned int 
  2066 ;;  cen             2   45[BANK1 ] unsigned int 
  2067 ;;  B2              2   43[BANK1 ] unsigned int 
  2068 ;;  dec             2   41[BANK1 ] unsigned int 
  2069 ;;  mil             2   39[BANK1 ] unsigned int 
  2070 ;;  uni             2   37[BANK1 ] unsigned int 
  2071 ;;  cnt2i           2   33[BANK1 ] unsigned int 
  2072 ;;  cnt1i           2   31[BANK1 ] unsigned int 
  2073 ;;  cntd            2   28[BANK1 ] unsigned int 
  2074 ;;  cnt2            1   36[BANK1 ] unsigned char 
  2075 ;;  cnt1            1   35[BANK1 ] unsigned char 
  2076 ;;  char_recibid    1   30[BANK1 ] unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;		None               void
  2079 ;; Registers used:
  2080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 17F/0
  2083 ;;		On exit  : 60/20
  2084 ;;		Unchanged: FFE00/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2086 ;;      Params:         0       0       0       0       0
  2087 ;;      Locals:         0       0      24       0       0
  2088 ;;      Temps:          0       2       0       0       0
  2089 ;;      Totals:         0       2      24       0       0
  2090 ;;Total ram usage:       26 bytes
  2091 ;; Hardware stack levels required when called:    4
  2092 ;; This function calls:
  2093 ;;		_pause
  2094 ;;		_lcd_write
  2095 ;;		_lcd_clear
  2096 ;;		_lcd_goto
  2097 ;;		_lcd_puts
  2098 ;;		_getch
  2099 ;;		_i2c_init
  2100 ;;		_I2C_EEOUT
  2101 ;;		_I2C_EEIN
  2102 ;;		___lbtoft
  2103 ;;		___ftmul
  2104 ;;		_sprintf
  2105 ;;		___lwdiv
  2106 ;;		___wmul
  2107 ;;		_putch
  2108 ;;		___fttol
  2109 ;; This function is called by:
  2110 ;;		Startup code after reset
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113  01DF                     _main:	
  2114                           
  2115                           ;eeprom_i2c.c: 251: ANSEL=32;
  2116                           
  2117                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2118  01DF  3020               	movlw	32
  2119  01E0  1683               	bsf	3,5	;RP0=1, select bank3
  2120  01E1  1703               	bsf	3,6	;RP1=1, select bank3
  2121  01E2  0088               	movwf	8	;volatile
  2122                           
  2123                           ;eeprom_i2c.c: 252: ANSELH=0;
  2124  01E3  0189               	clrf	9	;volatile
  2125                           
  2126                           ;eeprom_i2c.c: 253: OSCCON=0xC0;
  2127  01E4  30C0               	movlw	192
  2128  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  2129  01E6  008F               	movwf	15	;volatile
  2130                           
  2131                           ;eeprom_i2c.c: 254: TRISA=0xFF;
  2132  01E7  30FF               	movlw	255
  2133  01E8  0085               	movwf	5	;volatile
  2134                           
  2135                           ;eeprom_i2c.c: 255: TRISB=0;
  2136  01E9  0186               	clrf	6	;volatile
  2137                           
  2138                           ;eeprom_i2c.c: 256: TRISC=6;
  2139  01EA  3006               	movlw	6
  2140  01EB  0087               	movwf	7	;volatile
  2141                           
  2142                           ;eeprom_i2c.c: 257: TRISD=0;
  2143  01EC  0188               	clrf	8	;volatile
  2144                           
  2145                           ;eeprom_i2c.c: 258: TRISE=1;
  2146  01ED  3001               	movlw	1
  2147  01EE  0089               	movwf	9	;volatile
  2148                           
  2149                           ;eeprom_i2c.c: 260: PR2=0xFC;
  2150  01EF  30FC               	movlw	252
  2151  01F0  0092               	movwf	18	;volatile
  2152                           
  2153                           ;eeprom_i2c.c: 261: CCP2CON=0x0C;
  2154  01F1  300C               	movlw	12
  2155  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2156  01F3  009D               	movwf	29	;volatile
  2157                           
  2158                           ;eeprom_i2c.c: 262: CCP1CON=0x0C;
  2159  01F4  0097               	movwf	23	;volatile
  2160                           
  2161                           ;eeprom_i2c.c: 263: CCPR1L=0x80;
  2162  01F5  3080               	movlw	128
  2163  01F6  0095               	movwf	21	;volatile
  2164                           
  2165                           ;eeprom_i2c.c: 264: CCPR2L=0x80;
  2166  01F7  009B               	movwf	27	;volatile
  2167                           
  2168                           ;eeprom_i2c.c: 265: PIR1=0;
  2169  01F8  018C               	clrf	12	;volatile
  2170                           
  2171                           ;eeprom_i2c.c: 266: T2CON=0X07;
  2172  01F9  3007               	movlw	7
  2173  01FA  0092               	movwf	18	;volatile
  2174  01FB                     l6606:	
  2175                           ;eeprom_i2c.c: 267: while(PIR1);
  2176                           
  2177  01FB  088C               	movf	12,f
  2178  01FC  1D03               	skipz
  2179  01FD  29FB               	goto	l6606
  2180                           
  2181                           ;eeprom_i2c.c: 268: TRISC1=0;
  2182  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  2183  01FF  1087               	bcf	7,1
  2184                           
  2185                           ;eeprom_i2c.c: 269: TRISC2=0;
  2186  0200  1107               	bcf	7,2
  2187                           
  2188                           ;eeprom_i2c.c: 270: RE2=0;
  2189  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0202  300F               	movlw	15
  2191  0203  1109               	bcf	9,2
  2192                           
  2193                           ;eeprom_i2c.c: 271: RE1=0;
  2194  0204  1089               	bcf	9,1
  2195                           
  2196                           ;eeprom_i2c.c: 272: RE0=0;
  2197  0205  1009               	bcf	9,0
  2198                           
  2199                           ;eeprom_i2c.c: 273: pause(15);
  2200  0206  00F0               	movwf	?_pause
  2201  0207  01F1               	clrf	?_pause+1
  2202  0208  160A  118A  24AD   	fcall	_pause
      +       120A  118A         
  2203                           
  2204                           ;eeprom_i2c.c: 274: PORTD=init_value;
  2205  020D  3003               	movlw	3
  2206  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2207  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0210  0088               	movwf	8	;volatile
  2209  0211  300A               	movlw	10
  2210                           
  2211                           ;eeprom_i2c.c: 275: ((RE1=1),(RE1=0));
  2212  0212  1489               	bsf	9,1
  2213  0213  1089               	bcf	9,1
  2214                           
  2215                           ;eeprom_i2c.c: 276: pause(10);
  2216  0214  00F0               	movwf	?_pause
  2217  0215  01F1               	clrf	?_pause+1
  2218  0216  160A  118A  24AD   	fcall	_pause
      +       120A  118A         
  2219                           
  2220                           ;eeprom_i2c.c: 277: ((RE1=1),(RE1=0));
  2221  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2222  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2223  021D  300A               	movlw	10
  2224  021E  1489               	bsf	9,1
  2225  021F  1089               	bcf	9,1
  2226                           
  2227                           ;eeprom_i2c.c: 278: pause(10);
  2228  0220  00F0               	movwf	?_pause
  2229  0221  01F1               	clrf	?_pause+1
  2230  0222  160A  118A  24AD   	fcall	_pause
      +       120A  118A         
  2231                           
  2232                           ;eeprom_i2c.c: 279: ((RE1=1),(RE1=0));
  2233  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2234  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2235  0229  300A               	movlw	10
  2236  022A  1489               	bsf	9,1
  2237  022B  1089               	bcf	9,1
  2238                           
  2239                           ;eeprom_i2c.c: 280: pause(10);
  2240  022C  00F0               	movwf	?_pause
  2241  022D  01F1               	clrf	?_pause+1
  2242  022E  160A  118A  24AD   	fcall	_pause
      +       120A  118A         
  2243                           
  2244                           ;eeprom_i2c.c: 281: PORTD=2;
  2245  0233  3002               	movlw	2
  2246  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0236  0088               	movwf	8	;volatile
  2249  0237  3028               	movlw	40
  2250                           
  2251                           ;eeprom_i2c.c: 282: ((RE1=1),(RE1=0));
  2252  0238  1489               	bsf	9,1
  2253  0239  1089               	bcf	9,1
  2254                           
  2255                           ;eeprom_i2c.c: 283: lcd_write(0x28);
  2256  023A  00F4               	movwf	?_lcd_write
  2257  023B  01F5               	clrf	?_lcd_write+1
  2258  023C  160A  118A  249C   	fcall	_lcd_write
      +       120A  118A         
  2259                           
  2260                           ;eeprom_i2c.c: 284: lcd_write(0xC);
  2261  0241  300C               	movlw	12
  2262  0242  00F4               	movwf	?_lcd_write
  2263  0243  01F5               	clrf	?_lcd_write+1
  2264  0244  160A  118A  249C   	fcall	_lcd_write
      +       120A  118A         
  2265                           
  2266                           ;eeprom_i2c.c: 285: lcd_clear();
  2267  0249  160A  118A  2471   	fcall	_lcd_clear
      +       120A  118A         
  2268                           
  2269                           ;eeprom_i2c.c: 286: lcd_write(0x06);
  2270  024E  3006               	movlw	6
  2271  024F  00F4               	movwf	?_lcd_write
  2272  0250  01F5               	clrf	?_lcd_write+1
  2273  0251  160A  118A  249C   	fcall	_lcd_write
      +       120A  118A         
  2274                           
  2275                           ;eeprom_i2c.c: 287: PORTB=0;
  2276  0256  0186               	clrf	6	;volatile
  2277                           
  2278                           ;eeprom_i2c.c: 290: TRISC7=1;
  2279  0257  1683               	bsf	3,5	;RP0=1, select bank1
  2280  0258  3070               	movlw	112
  2281  0259  1787               	bsf	7,7
  2282                           
  2283                           ;eeprom_i2c.c: 291: TRISC6=0;
  2284  025A  1307               	bcf	7,6
  2285                           
  2286                           ;eeprom_i2c.c: 292: OSCCON=0x70;
  2287  025B  008F               	movwf	15	;volatile
  2288                           
  2289                           ;eeprom_i2c.c: 293: SPBRG=12;
  2290  025C  300C               	movlw	12
  2291  025D  0099               	movwf	25	;volatile
  2292                           
  2293                           ;eeprom_i2c.c: 294: RCSTA=0x90;
  2294  025E  3090               	movlw	144
  2295  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0260  0098               	movwf	24	;volatile
  2297                           
  2298                           ;eeprom_i2c.c: 295: TXSTA=0x20;
  2299  0261  3020               	movlw	32
  2300  0262  1683               	bsf	3,5	;RP0=1, select bank1
  2301  0263  0098               	movwf	24	;volatile
  2302                           
  2303                           ;eeprom_i2c.c: 296: BAUDCTL=0x00;
  2304  0264  1703               	bsf	3,6	;RP1=1, select bank3
  2305  0265  0187               	clrf	7	;volatile
  2306                           
  2307                           ;eeprom_i2c.c: 297: pause(500);
  2308  0266  30F4               	movlw	244
  2309  0267  00F0               	movwf	?_pause
  2310  0268  3001               	movlw	1
  2311  0269  00F1               	movwf	?_pause+1
  2312  026A  160A  118A  24AD   	fcall	_pause
      +       120A  118A         
  2313                           
  2314                           ;eeprom_i2c.c: 298: PORTA=0x03;
  2315  026F  3003               	movlw	3
  2316  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2317  0271  1303               	bcf	3,6	;RP1=0, select bank0
  2318  0272  0085               	movwf	5	;volatile
  2319                           
  2320                           ;eeprom_i2c.c: 299: *pa=0xFF;
  2321  0273  30FF               	movlw	255
  2322  0274  0085               	movwf	5
  2323                           
  2324                           ;eeprom_i2c.c: 300: lcd_clear();
  2325  0275  160A  118A  2471   	fcall	_lcd_clear
      +       120A  118A         
  2326                           
  2327                           ;eeprom_i2c.c: 301: lcd_goto(0);
  2328  027A  3000               	movlw	0
  2329  027B  160A  118A  2402   	fcall	_lcd_goto
      +       120A  118A         
  2330                           
  2331                           ;eeprom_i2c.c: 302: lcd_puts("Espera comando");
  2332  0280  3096               	movlw	low (STR_1-__stringbase)
  2333  0281                     L1:	
  2334  0281  00F6               	movwf	?_lcd_puts
  2335  0282  3080               	movlw	128
  2336  0283  00F7               	movwf	?_lcd_puts+1
  2337  0284  160A  118A  247D   	fcall	_lcd_puts
      +       120A  118A         
  2338                           
  2339                           ;eeprom_i2c.c: 303: char char_recibido;
  2340                           ;eeprom_i2c.c: 304: char_recibido=getch();
  2341                           
  2342                           ;eeprom_i2c.c: 305: while(char_recibido=='E')
  2343  0289  120A  118A  205F   	fcall	_getch
      +       120A  118A         
  2344  028E  1683               	bsf	3,5	;RP0=1, select bank1
  2345  028F  00BE               	movwf	main@char_recibido^(0+128)
  2346  0290  3A45               	xorlw	69
  2347  0291  1D03               	btfss	3,2
  2348  0292  2EF9               	goto	l6894
  2349                           
  2350                           ;eeprom_i2c.c: 306: {
  2351                           ;eeprom_i2c.c: 307: lcd_goto(0);
  2352  0293  3000               	movlw	0
  2353  0294  160A  118A  2402   	fcall	_lcd_goto
      +       120A  118A         
  2354                           
  2355                           ;eeprom_i2c.c: 308: lcd_puts("Escribiendo...");
  2356  0299  3087               	movlw	low (STR_2-__stringbase)
  2357  029A  00F6               	movwf	?_lcd_puts
  2358  029B  3080               	movlw	128
  2359  029C  00F7               	movwf	?_lcd_puts+1
  2360  029D  160A  118A  247D   	fcall	_lcd_puts
      +       120A  118A         
  2361                           
  2362                           ;eeprom_i2c.c: 309: i2c_init();
  2363  02A2  120A  118A  27DF   	fcall	_i2c_init
      +       120A  118A         
  2364                           
  2365                           ;eeprom_i2c.c: 310: PORTB=0;
  2366  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2367  02A8  0186               	clrf	6	;volatile
  2368                           
  2369                           ;eeprom_i2c.c: 311: cnt1=0;
  2370  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2371  02AA  01C3               	clrf	main@cnt1^(0+128)
  2372                           
  2373                           ;eeprom_i2c.c: 313: cnt1i=0;
  2374  02AB  01BF               	clrf	main@cnt1i^(0+128)
  2375  02AC  01C0               	clrf	(main@cnt1i+1)^(0+128)
  2376  02AD                     l6716:	
  2377                           ;eeprom_i2c.c: 316: while(cnt1i<4)
  2378                           
  2379  02AD  3000               	movlw	0
  2380  02AE  0240               	subwf	(main@cnt1i+1)^(0+128),w
  2381  02AF  3004               	movlw	4
  2382  02B0  1903               	skipnz
  2383  02B1  023F               	subwf	main@cnt1i^(0+128),w
  2384  02B2  1803               	btfsc	3,0
  2385  02B3  2AEA               	goto	l6718
  2386                           
  2387                           ;eeprom_i2c.c: 317: {
  2388                           ;eeprom_i2c.c: 318: cnt2=0;
  2389  02B4  01C4               	clrf	main@cnt2^(0+128)
  2390                           
  2391                           ;eeprom_i2c.c: 319: cnt2i=0;
  2392  02B5  01C1               	clrf	main@cnt2i^(0+128)
  2393  02B6  01C2               	clrf	(main@cnt2i+1)^(0+128)
  2394  02B7                     l6712:	
  2395                           ;eeprom_i2c.c: 321: while(cnt2i<256)
  2396                           
  2397  02B7  3001               	movlw	1
  2398  02B8  0242               	subwf	(main@cnt2i+1)^(0+128),w
  2399  02B9  3000               	movlw	0
  2400  02BA  1903               	skipnz
  2401  02BB  0241               	subwf	main@cnt2i^(0+128),w
  2402  02BC  1803               	btfsc	3,0
  2403  02BD  2AE5               	goto	l6714
  2404                           
  2405                           ;eeprom_i2c.c: 322: {
  2406                           ;eeprom_i2c.c: 323: ADCON0=0xD5;
  2407  02BE  30D5               	movlw	213
  2408  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2409  02C0  009F               	movwf	31	;volatile
  2410                           
  2411                           ;eeprom_i2c.c: 324: GO_DONE=1;
  2412  02C1  149F               	bsf	31,1
  2413  02C2                     l1167:	
  2414                           ;eeprom_i2c.c: 325: while(GO_DONE==1);
  2415                           
  2416  02C2  189F               	btfsc	31,1
  2417  02C3  2AC2               	goto	l1167
  2418                           
  2419                           ;eeprom_i2c.c: 326: CCPR1L=ADRESH;
  2420  02C4  081E               	movf	30,w	;volatile
  2421  02C5  0095               	movwf	21	;volatile
  2422                           
  2423                           ;eeprom_i2c.c: 327: CCP1CON=(ADRESL>>2)|0x0C;
  2424  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  2425  02C7  081E               	movf	30,w	;volatile
  2426  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2427  02C9  00DF               	movwf	??_main
  2428  02CA  1003               	clrc
  2429  02CB  0CDF               	rrf	??_main,f
  2430  02CC  1003               	clrc
  2431  02CD  0CDF               	rrf	??_main,f
  2432  02CE  085F               	movf	??_main,w
  2433  02CF  380C               	iorlw	12
  2434  02D0  0097               	movwf	23	;volatile
  2435                           
  2436                           ;eeprom_i2c.c: 329: nin=ADRESH;
  2437  02D1  081E               	movf	30,w	;volatile
  2438  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2439  02D3  00D1               	movwf	_nin^(0+128)
  2440                           
  2441                           ;eeprom_i2c.c: 343: I2C_EEOUT(cnt1, cnt2, nin);
  2442  02D4  0844               	movf	main@cnt2^(0+128),w
  2443  02D5  00F4               	movwf	?_I2C_EEOUT
  2444  02D6  0851               	movf	_nin^(0+128),w
  2445  02D7  00F5               	movwf	?_I2C_EEOUT+1
  2446  02D8  0843               	movf	main@cnt1^(0+128),w
  2447  02D9  160A  118A  240E   	fcall	_I2C_EEOUT
      +       120A  118A         
  2448                           
  2449                           ;eeprom_i2c.c: 344: cnt2=cnt2+1;
  2450  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2451  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  2452  02E0  0AC4               	incf	main@cnt2^(0+128),f
  2453                           
  2454                           ;eeprom_i2c.c: 345: cnt2i=cnt2i+1;
  2455  02E1  0AC1               	incf	main@cnt2i^(0+128),f
  2456  02E2  1903               	skipnz
  2457  02E3  0AC2               	incf	(main@cnt2i+1)^(0+128),f
  2458  02E4  2AB7               	goto	l6712
  2459  02E5                     l6714:	
  2460                           
  2461                           ;eeprom_i2c.c: 346: }
  2462                           ;eeprom_i2c.c: 347: cnt1=cnt1+1;
  2463  02E5  0AC3               	incf	main@cnt1^(0+128),f
  2464                           
  2465                           ;eeprom_i2c.c: 348: cnt1i=cnt1i+1;
  2466  02E6  0ABF               	incf	main@cnt1i^(0+128),f
  2467  02E7  1903               	skipnz
  2468  02E8  0AC0               	incf	(main@cnt1i+1)^(0+128),f
  2469  02E9  2AAD               	goto	l6716
  2470  02EA                     l6718:	
  2471                           
  2472                           ;eeprom_i2c.c: 351: cnt1=0;
  2473  02EA  01C3               	clrf	main@cnt1^(0+128)
  2474                           
  2475                           ;eeprom_i2c.c: 352: cnt2i=0;
  2476  02EB  01C1               	clrf	main@cnt2i^(0+128)
  2477  02EC  01C2               	clrf	(main@cnt2i+1)^(0+128)
  2478                           
  2479                           ;eeprom_i2c.c: 353: cnt1i=0;
  2480  02ED  01BF               	clrf	main@cnt1i^(0+128)
  2481  02EE  01C0               	clrf	(main@cnt1i+1)^(0+128)
  2482                           
  2483                           ;eeprom_i2c.c: 354: cntd=0;
  2484  02EF  01BC               	clrf	main@cntd^(0+128)
  2485  02F0  01BD               	clrf	(main@cntd+1)^(0+128)
  2486                           
  2487                           ;eeprom_i2c.c: 355: lcd_clear();
  2488  02F1  160A  118A  2471   	fcall	_lcd_clear
      +       120A  118A         
  2489                           
  2490                           ;eeprom_i2c.c: 356: lcd_goto(0);
  2491  02F6  3000               	movlw	0
  2492  02F7  160A  118A  2402   	fcall	_lcd_goto
      +       120A  118A         
  2493                           
  2494                           ;eeprom_i2c.c: 357: lcd_puts("Memoria Escrita");
  2495  02FC  3077               	movlw	low (STR_3-__stringbase)
  2496  02FD  2A81               	goto	L1
  2497  02FE                     l6730:	
  2498                           
  2499                           ;eeprom_i2c.c: 361: {
  2500                           ;eeprom_i2c.c: 362: lcd_clear();
  2501  02FE  160A  118A  2471   	fcall	_lcd_clear
      +       120A  118A         
  2502                           
  2503                           ;eeprom_i2c.c: 363: lcd_goto(0);
  2504  0303  3000               	movlw	0
  2505  0304  160A  118A  2402   	fcall	_lcd_goto
      +       120A  118A         
  2506                           
  2507                           ;eeprom_i2c.c: 364: lcd_puts("Leyendo...");
  2508  0309  30B3               	movlw	low (STR_4-__stringbase)
  2509  030A  00F6               	movwf	?_lcd_puts
  2510  030B  3080               	movlw	128
  2511  030C  00F7               	movwf	?_lcd_puts+1
  2512  030D  160A  118A  247D   	fcall	_lcd_puts
      +       120A  118A         
  2513  0312                     l6886:	
  2514                           ;eeprom_i2c.c: 365: while(cnt1i<4)
  2515                           
  2516  0312  3000               	movlw	0
  2517  0313  1683               	bsf	3,5	;RP0=1, select bank1
  2518  0314  0240               	subwf	(main@cnt1i+1)^(0+128),w
  2519  0315  3004               	movlw	4
  2520  0316  1903               	skipnz
  2521  0317  023F               	subwf	main@cnt1i^(0+128),w
  2522  0318  1803               	btfsc	3,0
  2523  0319  2EDE               	goto	l6888
  2524                           
  2525                           ;eeprom_i2c.c: 366: {
  2526                           ;eeprom_i2c.c: 367: cnt2=0;
  2527  031A  01C4               	clrf	main@cnt2^(0+128)
  2528                           
  2529                           ;eeprom_i2c.c: 368: cnt2i=0;
  2530  031B  01C1               	clrf	main@cnt2i^(0+128)
  2531  031C  01C2               	clrf	(main@cnt2i+1)^(0+128)
  2532  031D                     l6882:	
  2533                           ;eeprom_i2c.c: 369: while(cnt2i<256)
  2534                           
  2535  031D  3001               	movlw	1
  2536  031E  0242               	subwf	(main@cnt2i+1)^(0+128),w
  2537  031F  3000               	movlw	0
  2538  0320  1903               	skipnz
  2539  0321  0241               	subwf	main@cnt2i^(0+128),w
  2540  0322  1803               	btfsc	3,0
  2541  0323  2ED9               	goto	l6884
  2542                           
  2543                           ;eeprom_i2c.c: 370: {
  2544                           ;eeprom_i2c.c: 371: PORTB=I2C_EEIN(cnt1,cnt2);
  2545  0324  0843               	movf	main@cnt1^(0+128),w
  2546  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0326  00AD               	movwf	?_I2C_EEIN
  2548  0327  1683               	bsf	3,5	;RP0=1, select bank1
  2549  0328  0844               	movf	main@cnt2^(0+128),w
  2550  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2551  032A  00AE               	movwf	?_I2C_EEIN+1
  2552  032B  160A  118A  2429   	fcall	_I2C_EEIN
      +       120A  118A         
  2553  0330  0086               	movwf	6	;volatile
  2554                           
  2555                           ;eeprom_i2c.c: 372: sprintf(carac,"%1.3f",I2C_EEIN(cnt1,cnt2)*0.0196078431372);
  2556  0331  30A1               	movlw	161
  2557  0332  00B1               	movwf	?___ftmul
  2558  0333  30A0               	movlw	160
  2559  0334  00B2               	movwf	?___ftmul+1
  2560  0335  303C               	movlw	60
  2561  0336  00B3               	movwf	?___ftmul+2
  2562  0337  1683               	bsf	3,5	;RP0=1, select bank1
  2563  0338  0844               	movf	main@cnt2^(0+128),w
  2564  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2565  033A  00AE               	movwf	?_I2C_EEIN+1
  2566  033B  1683               	bsf	3,5	;RP0=1, select bank1
  2567  033C  0843               	movf	main@cnt1^(0+128),w
  2568  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2569  033E  00AD               	movwf	?_I2C_EEIN
  2570  033F  160A  118A  2429   	fcall	_I2C_EEIN
      +       120A  118A         
  2571  0344  160A  118A  24C9   	fcall	___lbtoft
      +       120A  118A         
  2572  0349  082D               	movf	?___lbtoft,w
  2573  034A  00B4               	movwf	?___ftmul+3
  2574  034B  082E               	movf	?___lbtoft+1,w
  2575  034C  00B5               	movwf	?___ftmul+4
  2576  034D  082F               	movf	?___lbtoft+2,w
  2577  034E  00B6               	movwf	?___ftmul+5
  2578  034F  160A  118A  26EC   	fcall	___ftmul
      +       120A  118A         
  2579  0354  0831               	movf	?___ftmul,w
  2580  0355  1683               	bsf	3,5	;RP0=1, select bank1
  2581  0356  00B9               	movwf	_main$2959^(0+128)
  2582  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0358  0832               	movf	?___ftmul+1,w
  2584  0359  1683               	bsf	3,5	;RP0=1, select bank1
  2585  035A  00BA               	movwf	(_main$2959+1)^(0+128)
  2586  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2587  035C  0833               	movf	?___ftmul+2,w
  2588  035D  1683               	bsf	3,5	;RP0=1, select bank1
  2589  035E  00BB               	movwf	(_main$2959+2)^(0+128)
  2590                           
  2591                           ;eeprom_i2c.c: 372: sprintf(carac,"%1.3f",I2C_EEIN(cnt1,cnt2)*0.0196078431372);
  2592  035F  30BE               	movlw	(STR_5-__stringbase)& (0+255)
  2593  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2594  0361  00D6               	movwf	?_sprintf
  2595  0362  1683               	bsf	3,5	;RP0=1, select bank1
  2596  0363  0839               	movf	_main$2959^(0+128),w
  2597  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2598  0365  00D7               	movwf	?_sprintf+1
  2599  0366  1683               	bsf	3,5	;RP0=1, select bank1
  2600  0367  083A               	movf	(_main$2959+1)^(0+128),w
  2601  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2602  0369  00D8               	movwf	?_sprintf+2
  2603  036A  1683               	bsf	3,5	;RP0=1, select bank1
  2604  036B  083B               	movf	(_main$2959+2)^(0+128),w
  2605  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2606  036D  00D9               	movwf	?_sprintf+3
  2607  036E  30D2               	movlw	_carac& (0+255)
  2608  036F  120A  158A  2035   	fcall	_sprintf
      +       120A  118A         
  2609                           
  2610                           ;eeprom_i2c.c: 373: lcd_goto(0x40);
  2611  0374  3040               	movlw	64
  2612  0375  160A  118A  2402   	fcall	_lcd_goto
      +       120A  118A         
  2613                           
  2614                           ;eeprom_i2c.c: 374: lcd_puts("V:");
  2615  037A  30C4               	movlw	low (STR_6-__stringbase)
  2616  037B  00F6               	movwf	?_lcd_puts
  2617  037C  3080               	movlw	128
  2618  037D  00F7               	movwf	?_lcd_puts+1
  2619  037E  160A  118A  247D   	fcall	_lcd_puts
      +       120A  118A         
  2620                           
  2621                           ;eeprom_i2c.c: 375: lcd_goto(0x42);
  2622  0383  3042               	movlw	66
  2623  0384  160A  118A  2402   	fcall	_lcd_goto
      +       120A  118A         
  2624                           
  2625                           ;eeprom_i2c.c: 376: lcd_puts(carac);
  2626  0389  30D2               	movlw	_carac& (0+255)
  2627  038A  00F6               	movwf	?_lcd_puts
  2628  038B  01F7               	clrf	?_lcd_puts+1
  2629  038C  160A  118A  247D   	fcall	_lcd_puts
      +       120A  118A         
  2630                           
  2631                           ;eeprom_i2c.c: 384: B1=cnt1i;
  2632  0391  1683               	bsf	3,5	;RP0=1, select bank1
  2633  0392  0840               	movf	(main@cnt1i+1)^(0+128),w
  2634  0393  00D0               	movwf	(main@B1+1)^(0+128)
  2635  0394  083F               	movf	main@cnt1i^(0+128),w
  2636  0395  00CF               	movwf	main@B1^(0+128)
  2637                           
  2638                           ;eeprom_i2c.c: 385: cen=B1/100;
  2639  0396  3064               	movlw	100
  2640  0397  00F0               	movwf	?___lwdiv
  2641  0398  01F1               	clrf	?___lwdiv+1
  2642  0399  0850               	movf	(main@B1+1)^(0+128),w
  2643  039A  00F3               	movwf	?___lwdiv+3
  2644  039B  084F               	movf	main@B1^(0+128),w
  2645  039C  00F2               	movwf	?___lwdiv+2
  2646  039D  120A  118A  2063   	fcall	___lwdiv
      +       120A  118A         
  2647  03A2  0871               	movf	?___lwdiv+1,w
  2648  03A3  00CE               	movwf	(main@cen+1)^(0+128)
  2649  03A4  0870               	movf	?___lwdiv,w
  2650  03A5  00CD               	movwf	main@cen^(0+128)
  2651                           
  2652                           ;eeprom_i2c.c: 386: B2=B1-(cen*100);
  2653  03A6  084E               	movf	(main@cen+1)^(0+128),w
  2654  03A7  00F1               	movwf	?___wmul+1
  2655  03A8  084D               	movf	main@cen^(0+128),w
  2656  03A9  00F0               	movwf	?___wmul
  2657  03AA  309C               	movlw	156
  2658  03AB  00F2               	movwf	?___wmul+2
  2659  03AC  30FF               	movlw	255
  2660  03AD  00F3               	movwf	?___wmul+3
  2661  03AE  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  2662  03B3  0871               	movf	?___wmul+1,w
  2663  03B4  00CC               	movwf	(main@B2+1)^(0+128)
  2664  03B5  0870               	movf	?___wmul,w
  2665  03B6  00CB               	movwf	main@B2^(0+128)
  2666  03B7  084F               	movf	main@B1^(0+128),w
  2667  03B8  07CB               	addwf	main@B2^(0+128),f
  2668  03B9  1803               	skipnc
  2669  03BA  0ACC               	incf	(main@B2+1)^(0+128),f
  2670  03BB  0850               	movf	(main@B1+1)^(0+128),w
  2671  03BC  07CC               	addwf	(main@B2+1)^(0+128),f
  2672                           
  2673                           ;eeprom_i2c.c: 387: dec=B2/10;
  2674  03BD  300A               	movlw	10
  2675  03BE  00F0               	movwf	?___lwdiv
  2676  03BF  01F1               	clrf	?___lwdiv+1
  2677  03C0  084C               	movf	(main@B2+1)^(0+128),w
  2678  03C1  00F3               	movwf	?___lwdiv+3
  2679  03C2  084B               	movf	main@B2^(0+128),w
  2680  03C3  00F2               	movwf	?___lwdiv+2
  2681  03C4  120A  118A  2063   	fcall	___lwdiv
      +       120A  118A         
  2682  03C9  0871               	movf	?___lwdiv+1,w
  2683  03CA  00CA               	movwf	(main@dec+1)^(0+128)
  2684  03CB  0870               	movf	?___lwdiv,w
  2685  03CC  00C9               	movwf	main@dec^(0+128)
  2686                           
  2687                           ;eeprom_i2c.c: 388: uni=B1-(cen*100)-(dec*10);
  2688  03CD  084A               	movf	(main@dec+1)^(0+128),w
  2689  03CE  00F1               	movwf	?___wmul+1
  2690  03CF  0849               	movf	main@dec^(0+128),w
  2691  03D0  00F0               	movwf	?___wmul
  2692  03D1  30F6               	movlw	246
  2693  03D2  00F2               	movwf	?___wmul+2
  2694  03D3  30FF               	movlw	255
  2695  03D4  00F3               	movwf	?___wmul+3
  2696  03D5  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  2697  03DA  0871               	movf	?___wmul+1,w
  2698  03DB  00C6               	movwf	(main@uni+1)^(0+128)
  2699  03DC  0870               	movf	?___wmul,w
  2700  03DD  00C5               	movwf	main@uni^(0+128)
  2701  03DE  084E               	movf	(main@cen+1)^(0+128),w
  2702  03DF  00F1               	movwf	?___wmul+1
  2703  03E0  084D               	movf	main@cen^(0+128),w
  2704  03E1  00F0               	movwf	?___wmul
  2705  03E2  309C               	movlw	156
  2706  03E3  00F2               	movwf	?___wmul+2
  2707  03E4  30FF               	movlw	255
  2708  03E5  00F3               	movwf	?___wmul+3
  2709  03E6  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  2710  03EB  0870               	movf	?___wmul,w
  2711  03EC  07C5               	addwf	main@uni^(0+128),f
  2712  03ED  1803               	skipnc
  2713  03EE  0AC6               	incf	(main@uni+1)^(0+128),f
  2714  03EF  0871               	movf	?___wmul+1,w
  2715  03F0  07C6               	addwf	(main@uni+1)^(0+128),f
  2716  03F1  084F               	movf	main@B1^(0+128),w
  2717  03F2  07C5               	addwf	main@uni^(0+128),f
  2718  03F3  1803               	skipnc
  2719  03F4  0AC6               	incf	(main@uni+1)^(0+128),f
  2720  03F5  0850               	movf	(main@B1+1)^(0+128),w
  2721  03F6  07C6               	addwf	(main@uni+1)^(0+128),f
  2722                           
  2723                           ;eeprom_i2c.c: 391: putch(cen+48);
  2724  03F7  084D               	movf	main@cen^(0+128),w
  2725  03F8  3E30               	addlw	48
  2726  03F9  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  2727                           
  2728                           ;eeprom_i2c.c: 392: putch(dec+48);
  2729  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2730  03FF  0849               	movf	main@dec^(0+128),w
  2731  0400  3E30               	addlw	48
  2732  0401  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  2733                           
  2734                           ;eeprom_i2c.c: 393: putch(uni+48);
  2735  0406  1683               	bsf	3,5	;RP0=1, select bank1
  2736  0407  0845               	movf	main@uni^(0+128),w
  2737  0408  3E30               	addlw	48
  2738  0409  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  2739                           
  2740                           ;eeprom_i2c.c: 394: putch(0x0D);
  2741  040E  300D               	movlw	13
  2742  040F  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  2743                           
  2744                           ;eeprom_i2c.c: 395: putch(0x0A);
  2745  0414  300A               	movlw	10
  2746  0415  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  2747                           
  2748                           ;eeprom_i2c.c: 396: pause(250);
  2749  041A  30FA               	movlw	250
  2750  041B  00F0               	movwf	?_pause
  2751  041C  01F1               	clrf	?_pause+1
  2752  041D  160A  118A  24AD   	fcall	_pause
      +       120A  118A         
  2753                           
  2754                           ;eeprom_i2c.c: 398: B1=cnt2i;
  2755  0422  1683               	bsf	3,5	;RP0=1, select bank1
  2756  0423  1303               	bcf	3,6	;RP1=0, select bank1
  2757  0424  0842               	movf	(main@cnt2i+1)^(0+128),w
  2758  0425  00D0               	movwf	(main@B1+1)^(0+128)
  2759  0426  0841               	movf	main@cnt2i^(0+128),w
  2760  0427  00CF               	movwf	main@B1^(0+128)
  2761                           
  2762                           ;eeprom_i2c.c: 399: cen=B1/100;
  2763  0428  3064               	movlw	100
  2764  0429  00F0               	movwf	?___lwdiv
  2765  042A  01F1               	clrf	?___lwdiv+1
  2766  042B  0850               	movf	(main@B1+1)^(0+128),w
  2767  042C  00F3               	movwf	?___lwdiv+3
  2768  042D  084F               	movf	main@B1^(0+128),w
  2769  042E  00F2               	movwf	?___lwdiv+2
  2770  042F  120A  118A  2063   	fcall	___lwdiv
      +       120A  118A         
  2771  0434  0871               	movf	?___lwdiv+1,w
  2772  0435  00CE               	movwf	(main@cen+1)^(0+128)
  2773  0436  0870               	movf	?___lwdiv,w
  2774  0437  00CD               	movwf	main@cen^(0+128)
  2775                           
  2776                           ;eeprom_i2c.c: 400: B2=B1-(cen*100);
  2777  0438  084E               	movf	(main@cen+1)^(0+128),w
  2778  0439  00F1               	movwf	?___wmul+1
  2779  043A  084D               	movf	main@cen^(0+128),w
  2780  043B  00F0               	movwf	?___wmul
  2781  043C  309C               	movlw	156
  2782  043D  00F2               	movwf	?___wmul+2
  2783  043E  30FF               	movlw	255
  2784  043F  00F3               	movwf	?___wmul+3
  2785  0440  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  2786  0445  0871               	movf	?___wmul+1,w
  2787  0446  00CC               	movwf	(main@B2+1)^(0+128)
  2788  0447  0870               	movf	?___wmul,w
  2789  0448  00CB               	movwf	main@B2^(0+128)
  2790  0449  084F               	movf	main@B1^(0+128),w
  2791  044A  07CB               	addwf	main@B2^(0+128),f
  2792  044B  1803               	skipnc
  2793  044C  0ACC               	incf	(main@B2+1)^(0+128),f
  2794  044D  0850               	movf	(main@B1+1)^(0+128),w
  2795  044E  07CC               	addwf	(main@B2+1)^(0+128),f
  2796                           
  2797                           ;eeprom_i2c.c: 401: dec=B2/10;
  2798  044F  300A               	movlw	10
  2799  0450  00F0               	movwf	?___lwdiv
  2800  0451  01F1               	clrf	?___lwdiv+1
  2801  0452  084C               	movf	(main@B2+1)^(0+128),w
  2802  0453  00F3               	movwf	?___lwdiv+3
  2803  0454  084B               	movf	main@B2^(0+128),w
  2804  0455  00F2               	movwf	?___lwdiv+2
  2805  0456  120A  118A  2063   	fcall	___lwdiv
      +       120A  118A         
  2806  045B  0871               	movf	?___lwdiv+1,w
  2807  045C  00CA               	movwf	(main@dec+1)^(0+128)
  2808  045D  0870               	movf	?___lwdiv,w
  2809  045E  00C9               	movwf	main@dec^(0+128)
  2810                           
  2811                           ;eeprom_i2c.c: 402: uni=B1-(cen*100)-(dec*10);
  2812  045F  084A               	movf	(main@dec+1)^(0+128),w
  2813  0460  00F1               	movwf	?___wmul+1
  2814  0461  0849               	movf	main@dec^(0+128),w
  2815  0462  00F0               	movwf	?___wmul
  2816  0463  30F6               	movlw	246
  2817  0464  00F2               	movwf	?___wmul+2
  2818  0465  30FF               	movlw	255
  2819  0466  00F3               	movwf	?___wmul+3
  2820  0467  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  2821  046C  0871               	movf	?___wmul+1,w
  2822  046D  00C6               	movwf	(main@uni+1)^(0+128)
  2823  046E  0870               	movf	?___wmul,w
  2824  046F  00C5               	movwf	main@uni^(0+128)
  2825  0470  084E               	movf	(main@cen+1)^(0+128),w
  2826  0471  00F1               	movwf	?___wmul+1
  2827  0472  084D               	movf	main@cen^(0+128),w
  2828  0473  00F0               	movwf	?___wmul
  2829  0474  309C               	movlw	156
  2830  0475  00F2               	movwf	?___wmul+2
  2831  0476  30FF               	movlw	255
  2832  0477  00F3               	movwf	?___wmul+3
  2833  0478  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  2834  047D  0870               	movf	?___wmul,w
  2835  047E  07C5               	addwf	main@uni^(0+128),f
  2836  047F  1803               	skipnc
  2837  0480  0AC6               	incf	(main@uni+1)^(0+128),f
  2838  0481  0871               	movf	?___wmul+1,w
  2839  0482  07C6               	addwf	(main@uni+1)^(0+128),f
  2840  0483  084F               	movf	main@B1^(0+128),w
  2841  0484  07C5               	addwf	main@uni^(0+128),f
  2842  0485  1803               	skipnc
  2843  0486  0AC6               	incf	(main@uni+1)^(0+128),f
  2844  0487  0850               	movf	(main@B1+1)^(0+128),w
  2845  0488  07C6               	addwf	(main@uni+1)^(0+128),f
  2846                           
  2847                           ;eeprom_i2c.c: 405: putch(cen+48);
  2848  0489  084D               	movf	main@cen^(0+128),w
  2849  048A  3E30               	addlw	48
  2850  048B  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  2851                           
  2852                           ;eeprom_i2c.c: 406: putch(dec+48);
  2853  0490  1683               	bsf	3,5	;RP0=1, select bank1
  2854  0491  0849               	movf	main@dec^(0+128),w
  2855  0492  3E30               	addlw	48
  2856  0493  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  2857                           
  2858                           ;eeprom_i2c.c: 407: putch(uni+48);
  2859  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2860  0499  0845               	movf	main@uni^(0+128),w
  2861  049A  3E30               	addlw	48
  2862  049B  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  2863                           
  2864                           ;eeprom_i2c.c: 408: putch(0x0D);
  2865  04A0  300D               	movlw	13
  2866  04A1  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  2867                           
  2868                           ;eeprom_i2c.c: 409: putch(0x0A);
  2869  04A6  300A               	movlw	10
  2870  04A7  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  2871                           
  2872                           ;eeprom_i2c.c: 410: pause(250);
  2873  04AC  30FA               	movlw	250
  2874  04AD  00F0               	movwf	?_pause
  2875  04AE  01F1               	clrf	?_pause+1
  2876  04AF  160A  118A  24AD   	fcall	_pause
      +       120A  118A         
  2877                           
  2878                           ;eeprom_i2c.c: 414: cntd=cnt2+(cnt1*256)+1;
  2879  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  2880  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  2881  04B6  0844               	movf	main@cnt2^(0+128),w
  2882  04B7  00BC               	movwf	main@cntd^(0+128)
  2883  04B8  01BD               	clrf	(main@cntd+1)^(0+128)
  2884  04B9  0843               	movf	main@cnt1^(0+128),w
  2885  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2886  04BB  00DF               	movwf	??_main
  2887  04BC  01E0               	clrf	??_main+1
  2888  04BD  00E0               	movwf	??_main+1
  2889  04BE  01DF               	clrf	??_main
  2890  04BF  085F               	movf	??_main,w
  2891  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  2892  04C1  07BC               	addwf	main@cntd^(0+128),f
  2893  04C2  1803               	skipnc
  2894  04C3  0ABD               	incf	(main@cntd+1)^(0+128),f
  2895  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  2896  04C5  0860               	movf	??_main+1,w
  2897  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  2898  04C7  07BD               	addwf	(main@cntd+1)^(0+128),f
  2899  04C8  0ABC               	incf	main@cntd^(0+128),f
  2900  04C9  1903               	skipnz
  2901  04CA  0ABD               	incf	(main@cntd+1)^(0+128),f
  2902                           
  2903                           ;eeprom_i2c.c: 415: B1=cntd;
  2904  04CB  083D               	movf	(main@cntd+1)^(0+128),w
  2905  04CC  00D0               	movwf	(main@B1+1)^(0+128)
  2906  04CD  083C               	movf	main@cntd^(0+128),w
  2907  04CE  00CF               	movwf	main@B1^(0+128)
  2908                           
  2909                           ;eeprom_i2c.c: 416: mil=B1/1000;
  2910  04CF  30E8               	movlw	232
  2911  04D0  00F0               	movwf	?___lwdiv
  2912  04D1  3003               	movlw	3
  2913  04D2  00F1               	movwf	?___lwdiv+1
  2914  04D3  0850               	movf	(main@B1+1)^(0+128),w
  2915  04D4  00F3               	movwf	?___lwdiv+3
  2916  04D5  084F               	movf	main@B1^(0+128),w
  2917  04D6  00F2               	movwf	?___lwdiv+2
  2918  04D7  120A  118A  2063   	fcall	___lwdiv
      +       120A  118A         
  2919  04DC  0871               	movf	?___lwdiv+1,w
  2920  04DD  00C8               	movwf	(main@mil+1)^(0+128)
  2921  04DE  0870               	movf	?___lwdiv,w
  2922  04DF  00C7               	movwf	main@mil^(0+128)
  2923                           
  2924                           ;eeprom_i2c.c: 417: B2=B1-(mil*1000);
  2925  04E0  0848               	movf	(main@mil+1)^(0+128),w
  2926  04E1  00F1               	movwf	?___wmul+1
  2927  04E2  0847               	movf	main@mil^(0+128),w
  2928  04E3  00F0               	movwf	?___wmul
  2929  04E4  3018               	movlw	24
  2930  04E5  00F2               	movwf	?___wmul+2
  2931  04E6  30FC               	movlw	252
  2932  04E7  00F3               	movwf	?___wmul+3
  2933  04E8  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  2934  04ED  0871               	movf	?___wmul+1,w
  2935  04EE  00CC               	movwf	(main@B2+1)^(0+128)
  2936  04EF  0870               	movf	?___wmul,w
  2937  04F0  00CB               	movwf	main@B2^(0+128)
  2938  04F1  084F               	movf	main@B1^(0+128),w
  2939  04F2  07CB               	addwf	main@B2^(0+128),f
  2940  04F3  1803               	skipnc
  2941  04F4  0ACC               	incf	(main@B2+1)^(0+128),f
  2942  04F5  0850               	movf	(main@B1+1)^(0+128),w
  2943  04F6  07CC               	addwf	(main@B2+1)^(0+128),f
  2944                           
  2945                           ;eeprom_i2c.c: 418: cen=B2/100;
  2946  04F7  3064               	movlw	100
  2947  04F8  00F0               	movwf	?___lwdiv
  2948  04F9  01F1               	clrf	?___lwdiv+1
  2949  04FA  084C               	movf	(main@B2+1)^(0+128),w
  2950  04FB  00F3               	movwf	?___lwdiv+3
  2951  04FC  084B               	movf	main@B2^(0+128),w
  2952  04FD  00F2               	movwf	?___lwdiv+2
  2953  04FE  120A  118A  2063   	fcall	___lwdiv
      +       120A  118A         
  2954  0503  0871               	movf	?___lwdiv+1,w
  2955  0504  00CE               	movwf	(main@cen+1)^(0+128)
  2956  0505  0870               	movf	?___lwdiv,w
  2957  0506  00CD               	movwf	main@cen^(0+128)
  2958                           
  2959                           ;eeprom_i2c.c: 419: B2=B1-(mil*1000)-(cen*100);
  2960  0507  084E               	movf	(main@cen+1)^(0+128),w
  2961  0508  00F1               	movwf	?___wmul+1
  2962  0509  084D               	movf	main@cen^(0+128),w
  2963  050A  00F0               	movwf	?___wmul
  2964  050B  309C               	movlw	156
  2965  050C  00F2               	movwf	?___wmul+2
  2966  050D  30FF               	movlw	255
  2967  050E  00F3               	movwf	?___wmul+3
  2968  050F  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  2969  0514  0871               	movf	?___wmul+1,w
  2970  0515  00CC               	movwf	(main@B2+1)^(0+128)
  2971  0516  0870               	movf	?___wmul,w
  2972  0517  00CB               	movwf	main@B2^(0+128)
  2973  0518  0848               	movf	(main@mil+1)^(0+128),w
  2974  0519  00F1               	movwf	?___wmul+1
  2975  051A  0847               	movf	main@mil^(0+128),w
  2976  051B  00F0               	movwf	?___wmul
  2977  051C  3018               	movlw	24
  2978  051D  00F2               	movwf	?___wmul+2
  2979  051E  30FC               	movlw	252
  2980  051F  00F3               	movwf	?___wmul+3
  2981  0520  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  2982  0525  0870               	movf	?___wmul,w
  2983  0526  07CB               	addwf	main@B2^(0+128),f
  2984  0527  1803               	skipnc
  2985  0528  0ACC               	incf	(main@B2+1)^(0+128),f
  2986  0529  0871               	movf	?___wmul+1,w
  2987  052A  07CC               	addwf	(main@B2+1)^(0+128),f
  2988  052B  084F               	movf	main@B1^(0+128),w
  2989  052C  07CB               	addwf	main@B2^(0+128),f
  2990  052D  1803               	skipnc
  2991  052E  0ACC               	incf	(main@B2+1)^(0+128),f
  2992  052F  0850               	movf	(main@B1+1)^(0+128),w
  2993  0530  07CC               	addwf	(main@B2+1)^(0+128),f
  2994                           
  2995                           ;eeprom_i2c.c: 420: dec=B2/10;
  2996  0531  300A               	movlw	10
  2997  0532  00F0               	movwf	?___lwdiv
  2998  0533  01F1               	clrf	?___lwdiv+1
  2999  0534  084C               	movf	(main@B2+1)^(0+128),w
  3000  0535  00F3               	movwf	?___lwdiv+3
  3001  0536  084B               	movf	main@B2^(0+128),w
  3002  0537  00F2               	movwf	?___lwdiv+2
  3003  0538  120A  118A  2063   	fcall	___lwdiv
      +       120A  118A         
  3004  053D  0871               	movf	?___lwdiv+1,w
  3005  053E  00CA               	movwf	(main@dec+1)^(0+128)
  3006  053F  0870               	movf	?___lwdiv,w
  3007  0540  00C9               	movwf	main@dec^(0+128)
  3008                           
  3009                           ;eeprom_i2c.c: 421: uni=B1-(mil*1000)-(cen*100)-(dec*10);
  3010  0541  084A               	movf	(main@dec+1)^(0+128),w
  3011  0542  00F1               	movwf	?___wmul+1
  3012  0543  0849               	movf	main@dec^(0+128),w
  3013  0544  00F0               	movwf	?___wmul
  3014  0545  30F6               	movlw	246
  3015  0546  00F2               	movwf	?___wmul+2
  3016  0547  30FF               	movlw	255
  3017  0548  00F3               	movwf	?___wmul+3
  3018  0549  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  3019  054E  0871               	movf	?___wmul+1,w
  3020  054F  00C6               	movwf	(main@uni+1)^(0+128)
  3021  0550  0870               	movf	?___wmul,w
  3022  0551  00C5               	movwf	main@uni^(0+128)
  3023  0552  084E               	movf	(main@cen+1)^(0+128),w
  3024  0553  00F1               	movwf	?___wmul+1
  3025  0554  084D               	movf	main@cen^(0+128),w
  3026  0555  00F0               	movwf	?___wmul
  3027  0556  309C               	movlw	156
  3028  0557  00F2               	movwf	?___wmul+2
  3029  0558  30FF               	movlw	255
  3030  0559  00F3               	movwf	?___wmul+3
  3031  055A  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  3032  055F  0870               	movf	?___wmul,w
  3033  0560  07C5               	addwf	main@uni^(0+128),f
  3034  0561  1803               	skipnc
  3035  0562  0AC6               	incf	(main@uni+1)^(0+128),f
  3036  0563  0871               	movf	?___wmul+1,w
  3037  0564  07C6               	addwf	(main@uni+1)^(0+128),f
  3038  0565  0848               	movf	(main@mil+1)^(0+128),w
  3039  0566  00F1               	movwf	?___wmul+1
  3040  0567  0847               	movf	main@mil^(0+128),w
  3041  0568  00F0               	movwf	?___wmul
  3042  0569  3018               	movlw	24
  3043  056A  00F2               	movwf	?___wmul+2
  3044  056B  30FC               	movlw	252
  3045  056C  00F3               	movwf	?___wmul+3
  3046  056D  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  3047  0572  0870               	movf	?___wmul,w
  3048  0573  07C5               	addwf	main@uni^(0+128),f
  3049  0574  1803               	skipnc
  3050  0575  0AC6               	incf	(main@uni+1)^(0+128),f
  3051  0576  0871               	movf	?___wmul+1,w
  3052  0577  07C6               	addwf	(main@uni+1)^(0+128),f
  3053  0578  084F               	movf	main@B1^(0+128),w
  3054  0579  07C5               	addwf	main@uni^(0+128),f
  3055  057A  1803               	skipnc
  3056  057B  0AC6               	incf	(main@uni+1)^(0+128),f
  3057  057C  0850               	movf	(main@B1+1)^(0+128),w
  3058  057D  07C6               	addwf	(main@uni+1)^(0+128),f
  3059                           
  3060                           ;eeprom_i2c.c: 422: putch(mil+48);
  3061  057E  0847               	movf	main@mil^(0+128),w
  3062  057F  3E30               	addlw	48
  3063  0580  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  3064                           
  3065                           ;eeprom_i2c.c: 423: putch(cen+48);
  3066  0585  1683               	bsf	3,5	;RP0=1, select bank1
  3067  0586  084D               	movf	main@cen^(0+128),w
  3068  0587  3E30               	addlw	48
  3069  0588  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  3070                           
  3071                           ;eeprom_i2c.c: 424: putch(dec+48);
  3072  058D  1683               	bsf	3,5	;RP0=1, select bank1
  3073  058E  0849               	movf	main@dec^(0+128),w
  3074  058F  3E30               	addlw	48
  3075  0590  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  3076                           
  3077                           ;eeprom_i2c.c: 425: putch(uni+48);
  3078  0595  1683               	bsf	3,5	;RP0=1, select bank1
  3079  0596  0845               	movf	main@uni^(0+128),w
  3080  0597  3E30               	addlw	48
  3081  0598  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  3082                           
  3083                           ;eeprom_i2c.c: 426: putch(0x0D);
  3084  059D  300D               	movlw	13
  3085  059E  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  3086                           
  3087                           ;eeprom_i2c.c: 427: putch(0x0A);
  3088  05A3  300A               	movlw	10
  3089  05A4  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  3090                           
  3091                           ;eeprom_i2c.c: 428: pause(250);
  3092  05A9  30FA               	movlw	250
  3093  05AA  00F0               	movwf	?_pause
  3094  05AB  01F1               	clrf	?_pause+1
  3095  05AC  160A  118A  24AD   	fcall	_pause
      +       120A  118A         
  3096                           
  3097                           ;eeprom_i2c.c: 430: B1=I2C_EEIN(cnt1,cnt2)*0.0196078431372*1000;
  3098  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  3099  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  3100  05B3  0844               	movf	main@cnt2^(0+128),w
  3101  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  3102  05B5  00AE               	movwf	?_I2C_EEIN+1
  3103  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  3104  05B7  0843               	movf	main@cnt1^(0+128),w
  3105  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3106  05B9  00AD               	movwf	?_I2C_EEIN
  3107  05BA  160A  118A  2429   	fcall	_I2C_EEIN
      +       120A  118A         
  3108  05BF  160A  118A  24C9   	fcall	___lbtoft
      +       120A  118A         
  3109  05C4  082D               	movf	?___lbtoft,w
  3110  05C5  00B4               	movwf	?___ftmul+3
  3111  05C6  082E               	movf	?___lbtoft+1,w
  3112  05C7  00B5               	movwf	?___ftmul+4
  3113  05C8  082F               	movf	?___lbtoft+2,w
  3114  05C9  00B6               	movwf	?___ftmul+5
  3115  05CA  30DD               	movlw	221
  3116  05CB  00B1               	movwf	?___ftmul
  3117  05CC  309C               	movlw	156
  3118  05CD  00B2               	movwf	?___ftmul+1
  3119  05CE  3041               	movlw	65
  3120  05CF  00B3               	movwf	?___ftmul+2
  3121  05D0  160A  118A  26EC   	fcall	___ftmul
      +       120A  118A         
  3122  05D5  0831               	movf	?___ftmul,w
  3123  05D6  00A0               	movwf	?___fttol
  3124  05D7  0832               	movf	?___ftmul+1,w
  3125  05D8  00A1               	movwf	?___fttol+1
  3126  05D9  0833               	movf	?___ftmul+2,w
  3127  05DA  00A2               	movwf	?___fttol+2
  3128  05DB  120A  158A  2509   	fcall	___fttol
      +       120A  118A         
  3129  05E0  0821               	movf	?___fttol+1,w
  3130  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  3131  05E2  00D0               	movwf	(main@B1+1)^(0+128)
  3132  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3133  05E4  0820               	movf	?___fttol,w
  3134  05E5  1683               	bsf	3,5	;RP0=1, select bank1
  3135  05E6  00CF               	movwf	main@B1^(0+128)
  3136                           
  3137                           ;eeprom_i2c.c: 431: mil=B1/1000;
  3138  05E7  30E8               	movlw	232
  3139  05E8  00F0               	movwf	?___lwdiv
  3140  05E9  3003               	movlw	3
  3141  05EA  00F1               	movwf	?___lwdiv+1
  3142  05EB  0850               	movf	(main@B1+1)^(0+128),w
  3143  05EC  00F3               	movwf	?___lwdiv+3
  3144  05ED  084F               	movf	main@B1^(0+128),w
  3145  05EE  00F2               	movwf	?___lwdiv+2
  3146  05EF  120A  118A  2063   	fcall	___lwdiv
      +       120A  118A         
  3147  05F4  0871               	movf	?___lwdiv+1,w
  3148  05F5  00C8               	movwf	(main@mil+1)^(0+128)
  3149  05F6  0870               	movf	?___lwdiv,w
  3150  05F7  00C7               	movwf	main@mil^(0+128)
  3151                           
  3152                           ;eeprom_i2c.c: 432: B2=B1-(mil*1000);
  3153  05F8  0848               	movf	(main@mil+1)^(0+128),w
  3154  05F9  00F1               	movwf	?___wmul+1
  3155  05FA  0847               	movf	main@mil^(0+128),w
  3156  05FB  00F0               	movwf	?___wmul
  3157  05FC  3018               	movlw	24
  3158  05FD  00F2               	movwf	?___wmul+2
  3159  05FE  30FC               	movlw	252
  3160  05FF  00F3               	movwf	?___wmul+3
  3161  0600  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  3162  0605  0871               	movf	?___wmul+1,w
  3163  0606  00CC               	movwf	(main@B2+1)^(0+128)
  3164  0607  0870               	movf	?___wmul,w
  3165  0608  00CB               	movwf	main@B2^(0+128)
  3166  0609  084F               	movf	main@B1^(0+128),w
  3167  060A  07CB               	addwf	main@B2^(0+128),f
  3168  060B  1803               	skipnc
  3169  060C  0ACC               	incf	(main@B2+1)^(0+128),f
  3170  060D  0850               	movf	(main@B1+1)^(0+128),w
  3171  060E  07CC               	addwf	(main@B2+1)^(0+128),f
  3172                           
  3173                           ;eeprom_i2c.c: 433: cen=B2/100;
  3174  060F  3064               	movlw	100
  3175  0610  00F0               	movwf	?___lwdiv
  3176  0611  01F1               	clrf	?___lwdiv+1
  3177  0612  084C               	movf	(main@B2+1)^(0+128),w
  3178  0613  00F3               	movwf	?___lwdiv+3
  3179  0614  084B               	movf	main@B2^(0+128),w
  3180  0615  00F2               	movwf	?___lwdiv+2
  3181  0616  120A  118A  2063   	fcall	___lwdiv
      +       120A  118A         
  3182  061B  0871               	movf	?___lwdiv+1,w
  3183  061C  00CE               	movwf	(main@cen+1)^(0+128)
  3184  061D  0870               	movf	?___lwdiv,w
  3185  061E  00CD               	movwf	main@cen^(0+128)
  3186                           
  3187                           ;eeprom_i2c.c: 434: B2=B1-(mil*1000)-(cen*100);
  3188  061F  084E               	movf	(main@cen+1)^(0+128),w
  3189  0620  00F1               	movwf	?___wmul+1
  3190  0621  084D               	movf	main@cen^(0+128),w
  3191  0622  00F0               	movwf	?___wmul
  3192  0623  309C               	movlw	156
  3193  0624  00F2               	movwf	?___wmul+2
  3194  0625  30FF               	movlw	255
  3195  0626  00F3               	movwf	?___wmul+3
  3196  0627  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  3197  062C  0871               	movf	?___wmul+1,w
  3198  062D  00CC               	movwf	(main@B2+1)^(0+128)
  3199  062E  0870               	movf	?___wmul,w
  3200  062F  00CB               	movwf	main@B2^(0+128)
  3201  0630  0848               	movf	(main@mil+1)^(0+128),w
  3202  0631  00F1               	movwf	?___wmul+1
  3203  0632  0847               	movf	main@mil^(0+128),w
  3204  0633  00F0               	movwf	?___wmul
  3205  0634  3018               	movlw	24
  3206  0635  00F2               	movwf	?___wmul+2
  3207  0636  30FC               	movlw	252
  3208  0637  00F3               	movwf	?___wmul+3
  3209  0638  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  3210  063D  0870               	movf	?___wmul,w
  3211  063E  07CB               	addwf	main@B2^(0+128),f
  3212  063F  1803               	skipnc
  3213  0640  0ACC               	incf	(main@B2+1)^(0+128),f
  3214  0641  0871               	movf	?___wmul+1,w
  3215  0642  07CC               	addwf	(main@B2+1)^(0+128),f
  3216  0643  084F               	movf	main@B1^(0+128),w
  3217  0644  07CB               	addwf	main@B2^(0+128),f
  3218  0645  1803               	skipnc
  3219  0646  0ACC               	incf	(main@B2+1)^(0+128),f
  3220  0647  0850               	movf	(main@B1+1)^(0+128),w
  3221  0648  07CC               	addwf	(main@B2+1)^(0+128),f
  3222                           
  3223                           ;eeprom_i2c.c: 435: dec=B2/10;
  3224  0649  300A               	movlw	10
  3225  064A  00F0               	movwf	?___lwdiv
  3226  064B  01F1               	clrf	?___lwdiv+1
  3227  064C  084C               	movf	(main@B2+1)^(0+128),w
  3228  064D  00F3               	movwf	?___lwdiv+3
  3229  064E  084B               	movf	main@B2^(0+128),w
  3230  064F  00F2               	movwf	?___lwdiv+2
  3231  0650  120A  118A  2063   	fcall	___lwdiv
      +       120A  118A         
  3232  0655  0871               	movf	?___lwdiv+1,w
  3233  0656  00CA               	movwf	(main@dec+1)^(0+128)
  3234  0657  0870               	movf	?___lwdiv,w
  3235  0658  00C9               	movwf	main@dec^(0+128)
  3236                           
  3237                           ;eeprom_i2c.c: 436: uni=B1-(mil*1000)-(cen*100)-(dec*10);
  3238  0659  084A               	movf	(main@dec+1)^(0+128),w
  3239  065A  00F1               	movwf	?___wmul+1
  3240  065B  0849               	movf	main@dec^(0+128),w
  3241  065C  00F0               	movwf	?___wmul
  3242  065D  30F6               	movlw	246
  3243  065E  00F2               	movwf	?___wmul+2
  3244  065F  30FF               	movlw	255
  3245  0660  00F3               	movwf	?___wmul+3
  3246  0661  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  3247  0666  0871               	movf	?___wmul+1,w
  3248  0667  00C6               	movwf	(main@uni+1)^(0+128)
  3249  0668  0870               	movf	?___wmul,w
  3250  0669  00C5               	movwf	main@uni^(0+128)
  3251  066A  084E               	movf	(main@cen+1)^(0+128),w
  3252  066B  00F1               	movwf	?___wmul+1
  3253  066C  084D               	movf	main@cen^(0+128),w
  3254  066D  00F0               	movwf	?___wmul
  3255  066E  309C               	movlw	156
  3256  066F  00F2               	movwf	?___wmul+2
  3257  0670  30FF               	movlw	255
  3258  0671  00F3               	movwf	?___wmul+3
  3259  0672  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  3260  0677  0870               	movf	?___wmul,w
  3261  0678  07C5               	addwf	main@uni^(0+128),f
  3262  0679  1803               	skipnc
  3263  067A  0AC6               	incf	(main@uni+1)^(0+128),f
  3264  067B  0871               	movf	?___wmul+1,w
  3265  067C  07C6               	addwf	(main@uni+1)^(0+128),f
  3266  067D  0848               	movf	(main@mil+1)^(0+128),w
  3267  067E  00F1               	movwf	?___wmul+1
  3268  067F  0847               	movf	main@mil^(0+128),w
  3269  0680  00F0               	movwf	?___wmul
  3270  0681  3018               	movlw	24
  3271  0682  00F2               	movwf	?___wmul+2
  3272  0683  30FC               	movlw	252
  3273  0684  00F3               	movwf	?___wmul+3
  3274  0685  120A  158A  24F0   	fcall	___wmul
      +       120A  118A         
  3275  068A  0870               	movf	?___wmul,w
  3276  068B  07C5               	addwf	main@uni^(0+128),f
  3277  068C  1803               	skipnc
  3278  068D  0AC6               	incf	(main@uni+1)^(0+128),f
  3279  068E  0871               	movf	?___wmul+1,w
  3280  068F  07C6               	addwf	(main@uni+1)^(0+128),f
  3281  0690  084F               	movf	main@B1^(0+128),w
  3282  0691  07C5               	addwf	main@uni^(0+128),f
  3283  0692  1803               	skipnc
  3284  0693  0AC6               	incf	(main@uni+1)^(0+128),f
  3285  0694  0850               	movf	(main@B1+1)^(0+128),w
  3286  0695  07C6               	addwf	(main@uni+1)^(0+128),f
  3287                           
  3288                           ;eeprom_i2c.c: 438: putch(mil+48);
  3289  0696  0847               	movf	main@mil^(0+128),w
  3290  0697  3E30               	addlw	48
  3291  0698  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  3292                           
  3293                           ;eeprom_i2c.c: 439: putch('.');
  3294  069D  302E               	movlw	46
  3295  069E  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  3296                           
  3297                           ;eeprom_i2c.c: 440: putch(cen+48);
  3298  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  3299  06A4  084D               	movf	main@cen^(0+128),w
  3300  06A5  3E30               	addlw	48
  3301  06A6  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  3302                           
  3303                           ;eeprom_i2c.c: 441: putch(dec+48);
  3304  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  3305  06AC  0849               	movf	main@dec^(0+128),w
  3306  06AD  3E30               	addlw	48
  3307  06AE  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  3308                           
  3309                           ;eeprom_i2c.c: 442: putch(uni+48);
  3310  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  3311  06B4  0845               	movf	main@uni^(0+128),w
  3312  06B5  3E30               	addlw	48
  3313  06B6  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  3314                           
  3315                           ;eeprom_i2c.c: 444: putch(0x0D);
  3316  06BB  300D               	movlw	13
  3317  06BC  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  3318                           
  3319                           ;eeprom_i2c.c: 445: putch(0x0A);
  3320  06C1  300A               	movlw	10
  3321  06C2  120A  118A  27F7   	fcall	_putch
      +       120A  118A         
  3322                           
  3323                           ;eeprom_i2c.c: 446: pause(250);
  3324  06C7  30FA               	movlw	250
  3325  06C8  00F0               	movwf	?_pause
  3326  06C9  01F1               	clrf	?_pause+1
  3327  06CA  160A  118A  24AD   	fcall	_pause
      +       120A  118A         
  3328                           
  3329                           ;eeprom_i2c.c: 448: cnt2=cnt2+1;
  3330  06CF  1683               	bsf	3,5	;RP0=1, select bank1
  3331  06D0  1303               	bcf	3,6	;RP1=0, select bank1
  3332  06D1  0AC4               	incf	main@cnt2^(0+128),f
  3333                           
  3334                           ;eeprom_i2c.c: 449: cntd=cntd+1;
  3335  06D2  0ABC               	incf	main@cntd^(0+128),f
  3336  06D3  1903               	skipnz
  3337  06D4  0ABD               	incf	(main@cntd+1)^(0+128),f
  3338                           
  3339                           ;eeprom_i2c.c: 450: cnt2i=cnt2i+1;
  3340  06D5  0AC1               	incf	main@cnt2i^(0+128),f
  3341  06D6  1903               	skipnz
  3342  06D7  0AC2               	incf	(main@cnt2i+1)^(0+128),f
  3343  06D8  2B1D               	goto	l6882
  3344  06D9                     l6884:	
  3345                           
  3346                           ;eeprom_i2c.c: 451: }
  3347                           ;eeprom_i2c.c: 452: cnt1i=cnt1i+1;
  3348  06D9  0ABF               	incf	main@cnt1i^(0+128),f
  3349  06DA  1903               	skipnz
  3350  06DB  0AC0               	incf	(main@cnt1i+1)^(0+128),f
  3351                           
  3352                           ;eeprom_i2c.c: 453: cnt1=cnt1+1;
  3353  06DC  0AC3               	incf	main@cnt1^(0+128),f
  3354  06DD  2B12               	goto	l6886
  3355  06DE                     l6888:	
  3356                           
  3357                           ;eeprom_i2c.c: 454: }
  3358                           ;eeprom_i2c.c: 455: lcd_clear();
  3359  06DE  160A  118A  2471   	fcall	_lcd_clear
      +       120A  118A         
  3360                           
  3361                           ;eeprom_i2c.c: 456: lcd_goto(0);
  3362  06E3  3000               	movlw	0
  3363  06E4  160A  118A  2402   	fcall	_lcd_goto
      +       120A  118A         
  3364                           
  3365                           ;eeprom_i2c.c: 457: lcd_puts("Memoria leida");
  3366  06E9  30A5               	movlw	low (STR_7-__stringbase)
  3367  06EA  00F6               	movwf	?_lcd_puts
  3368  06EB  3080               	movlw	128
  3369  06EC  00F7               	movwf	?_lcd_puts+1
  3370  06ED  160A  118A  247D   	fcall	_lcd_puts
      +       120A  118A         
  3371                           
  3372                           ;eeprom_i2c.c: 458: char_recibido=getch();
  3373  06F2  120A  118A  205F   	fcall	_getch
      +       120A  118A         
  3374  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  3375  06F8  00BE               	movwf	main@char_recibido^(0+128)
  3376  06F9                     l6894:	
  3377  06F9  083E               	movf	main@char_recibido^(0+128),w
  3378  06FA  3A4C               	xorlw	76
  3379  06FB  1903               	skipnz
  3380  06FC  2AFE               	goto	l6730
  3381  06FD  120A  118A  2800   	ljmp	start
  3382  0700                     __end_of_main:	
  3383                           
  3384                           	psect	text757
  3385  0835                     __ptext757:	
  3386 ;; =============== function _main ends ============
  3387                           
  3388                           
  3389 ;; *************** function _sprintf *****************
  3390 ;; Defined at:
  3391 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;  sp              1    wreg     PTR unsigned char 
  3394 ;;		 -> carac(5), 
  3395 ;;  f               1   54[BANK0 ] PTR const unsigned char 
  3396 ;;		 -> STR_5(6), 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  sp              1   18[BANK1 ] PTR unsigned char 
  3399 ;;		 -> carac(5), 
  3400 ;;  _val            4    8[BANK1 ] struct .
  3401 ;;  fval            3   19[BANK1 ] struct .
  3402 ;;  integ           3    5[BANK1 ] struct .
  3403 ;;  ival            3    0        struct .
  3404 ;;  prec            2   22[BANK1 ] int 
  3405 ;;  exp             2   16[BANK1 ] int 
  3406 ;;  width           2   14[BANK1 ] int 
  3407 ;;  flag            2   12[BANK1 ] unsigned short 
  3408 ;;  c               1   24[BANK1 ] char 
  3409 ;;  ap              1    4[BANK1 ] PTR void [1]
  3410 ;;		 -> ?_sprintf(2), 
  3411 ;;  d               1    0        unsigned char 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  2   54[BANK0 ] int 
  3414 ;; Registers used:
  3415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 60/0
  3418 ;;		On exit  : 160/20
  3419 ;;		Unchanged: FFE00/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3421 ;;      Params:         0       4       0       0       0
  3422 ;;      Locals:         0       0      25       0       0
  3423 ;;      Temps:          0       5       0       0       0
  3424 ;;      Totals:         0       9      25       0       0
  3425 ;;Total ram usage:       34 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    3
  3428 ;; This function calls:
  3429 ;;		_isdigit
  3430 ;;		___wmul
  3431 ;;		___ftge
  3432 ;;		___ftneg
  3433 ;;		___awdiv
  3434 ;;		_scale
  3435 ;;		___ftmul
  3436 ;;		_fround
  3437 ;;		___ftadd
  3438 ;;		___fttol
  3439 ;;		__div_to_l_
  3440 ;;		__tdiv_to_l_
  3441 ;;		___lltoft
  3442 ;;		___ftsub
  3443 ;;		___lldiv
  3444 ;;		___llmod
  3445 ;; This function is called by:
  3446 ;;		_main
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449  0835                     _sprintf:	
  3450                           
  3451                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3452                           ;sprintf@sp stored from wreg
  3453  0835  1683               	bsf	3,5	;RP0=1, select bank1
  3454  0836  00B2               	movwf	sprintf@sp^(0+128)
  3455  0837  3057               	movlw	(?_sprintf+1)& (0+255)
  3456  0838  00A4               	movwf	sprintf@ap^(0+128)
  3457  0839                     l6574:	
  3458  0839  1283               	bcf	3,5	;RP0=0, select bank0
  3459  083A  0856               	movf	sprintf@f,w
  3460  083B  0AD6               	incf	sprintf@f,f
  3461  083C  0084               	movwf	4
  3462  083D  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  3463  0842  1683               	bsf	3,5	;RP0=1, select bank1
  3464  0843  00B8               	movwf	sprintf@c^(0+128)
  3465  0844  08B8               	movf	sprintf@c^(0+128),f
  3466  0845  1903               	btfsc	3,2
  3467  0846  2CB1               	goto	l6576
  3468  0847  0838               	movf	sprintf@c^(0+128),w
  3469  0848  3A25               	xorlw	37
  3470  0849  1903               	skipnz
  3471  084A  284F               	goto	l6332
  3472  084B  0832               	movf	sprintf@sp^(0+128),w
  3473  084C  0084               	movwf	4
  3474  084D  0838               	movf	sprintf@c^(0+128),w
  3475  084E  2CAD               	goto	L5
  3476  084F                     l6332:	
  3477  084F  01AE               	clrf	sprintf@width^(0+128)
  3478  0850  01AF               	clrf	(sprintf@width+1)^(0+128)
  3479  0851  01AC               	clrf	sprintf@flag^(0+128)
  3480  0852  01AD               	clrf	(sprintf@flag+1)^(0+128)
  3481  0853  1283               	bcf	3,5	;RP0=0, select bank0
  3482  0854  0856               	movf	sprintf@f,w
  3483  0855  0084               	movwf	4
  3484  0856  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  3485  085B  24E2  120A  158A   	fcall	_isdigit
  3486  085E  1C03               	btfss	3,0
  3487  085F  2888               	goto	l6344
  3488  0860  1683               	bsf	3,5	;RP0=1, select bank1
  3489  0861  01AE               	clrf	sprintf@width^(0+128)
  3490  0862  01AF               	clrf	(sprintf@width+1)^(0+128)
  3491  0863                     l6338:	
  3492  0863  1683               	bsf	3,5	;RP0=1, select bank1
  3493  0864  082F               	movf	(sprintf@width+1)^(0+128),w
  3494  0865  00F1               	movwf	?___wmul+1
  3495  0866  082E               	movf	sprintf@width^(0+128),w
  3496  0867  00F0               	movwf	?___wmul
  3497  0868  300A               	movlw	10
  3498  0869  00F2               	movwf	?___wmul+2
  3499  086A  01F3               	clrf	?___wmul+3
  3500  086B  24F0               	fcall	___wmul
  3501  086C  1283               	bcf	3,5	;RP0=0, select bank0
  3502  086D  0856               	movf	sprintf@f,w
  3503  086E  0084               	movwf	4
  3504  086F  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  3505  0874  2779  120A  158A   	fcall	PL11	;call to abstracted procedure
  3506  0877  00AE               	movwf	sprintf@width^(0+128)
  3507  0878  27D2               	fcall	PL29	;call to abstracted procedure
  3508  0879  00AF               	movwf	(sprintf@width+1)^(0+128)
  3509  087A  1283               	bcf	3,5	;RP0=0, select bank0
  3510  087B  0AD6               	incf	sprintf@f,f
  3511  087C  0856               	movf	sprintf@f,w
  3512  087D  0084               	movwf	4
  3513  087E  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  3514  0883  24E2  120A  158A   	fcall	_isdigit
  3515  0886  1803               	btfsc	3,0
  3516  0887  2863               	goto	l6338
  3517  0888                     l6344:	
  3518  0888  0856               	movf	sprintf@f,w
  3519  0889  0084               	movwf	4
  3520  088A  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  3521  088F  3A2E               	xorlw	46
  3522  0890  1D03               	skipz
  3523  0891  28C2               	goto	l6358
  3524  0892  1683               	bsf	3,5	;RP0=1, select bank1
  3525  0893  172D               	bsf	(sprintf@flag^(0+128)+1),6
  3526  0894  1283               	bcf	3,5	;RP0=0, select bank0
  3527  0895  0AD6               	incf	sprintf@f,f
  3528  0896  1683               	bsf	3,5	;RP0=1, select bank1
  3529  0897  01B6               	clrf	sprintf@prec^(0+128)
  3530  0898  01B7               	clrf	(sprintf@prec+1)^(0+128)
  3531  0899                     l6356:	
  3532  0899  1283               	bcf	3,5	;RP0=0, select bank0
  3533  089A  0856               	movf	sprintf@f,w
  3534  089B  0084               	movwf	4
  3535  089C  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  3536  08A1  24E2  120A  158A   	fcall	_isdigit
  3537  08A4  1C03               	btfss	3,0
  3538  08A5  28C9               	goto	l6364
  3539  08A6  1683               	bsf	3,5	;RP0=1, select bank1
  3540  08A7  0837               	movf	(sprintf@prec+1)^(0+128),w
  3541  08A8  00F1               	movwf	?___wmul+1
  3542  08A9  0836               	movf	sprintf@prec^(0+128),w
  3543  08AA  00F0               	movwf	?___wmul
  3544  08AB  300A               	movlw	10
  3545  08AC  00F2               	movwf	?___wmul+2
  3546  08AD  01F3               	clrf	?___wmul+3
  3547  08AE  24F0               	fcall	___wmul
  3548  08AF  1283               	bcf	3,5	;RP0=0, select bank0
  3549  08B0  0856               	movf	sprintf@f,w
  3550  08B1  0084               	movwf	4
  3551  08B2  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  3552  08B7  2779  120A  158A   	fcall	PL11	;call to abstracted procedure
  3553  08BA  00B6               	movwf	sprintf@prec^(0+128)
  3554  08BB  27D2  120A  158A   	fcall	PL29	;call to abstracted procedure
  3555  08BE  00B7               	movwf	(sprintf@prec+1)^(0+128)
  3556  08BF  1283               	bcf	3,5	;RP0=0, select bank0
  3557  08C0  0AD6               	incf	sprintf@f,f
  3558  08C1  2899               	goto	l6356
  3559  08C2                     l6358:	
  3560  08C2  1683               	bsf	3,5	;RP0=1, select bank1
  3561  08C3  01B6               	clrf	sprintf@prec^(0+128)
  3562  08C4  01B7               	clrf	(sprintf@prec+1)^(0+128)
  3563  08C5  162D               	bsf	(sprintf@flag^(0+128)+1),4
  3564  08C6  28C9               	goto	l6364
  3565  08C7                     l1231:	
  3566  08C7  152D               	bsf	(sprintf@flag^(0+128)+1),2
  3567  08C8  28DB               	goto	l6366
  3568  08C9                     l6364:	
  3569  08C9  1283               	bcf	3,5	;RP0=0, select bank0
  3570  08CA  0856               	movf	sprintf@f,w
  3571  08CB  0AD6               	incf	sprintf@f,f
  3572  08CC  0084               	movwf	4
  3573  08CD  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  3574  08D2  1683               	bsf	3,5	;RP0=1, select bank1
  3575  08D3  00B8               	movwf	sprintf@c^(0+128)
  3576                           
  3577                           ; Switch size 1, requested type "space"
  3578                           ; Number of cases is 2, Range of values is 0 to 102
  3579                           ; switch strategies available:
  3580                           ; Name         Instructions Cycles
  3581                           ; simple_byte            7     4 (average)
  3582                           ; jumptable            260     6 (fixed)
  3583                           ; rangetable           107     6 (fixed)
  3584                           ; spacedrange          212     9 (fixed)
  3585                           ; locatedrange         103     3 (fixed)
  3586                           ;	Chosen strategy is simple_byte
  3587  08D4  3A00               	xorlw	0	; case 0
  3588  08D5  1903               	skipnz
  3589  08D6  2CB1               	goto	l6576
  3590  08D7  3A66               	xorlw	102	; case 102
  3591  08D8  1903               	skipnz
  3592  08D9  28C7               	goto	l1231
  3593  08DA  2839               	goto	l6574
  3594  08DB                     l6366:	
  3595  08DB  1283               	bcf	3,5	;RP0=0, select bank0
  3596  08DC  3007               	movlw	7
  3597  08DD  01DA               	clrf	??_sprintf
  3598  08DE  1683               	bsf	3,5	;RP0=1, select bank1
  3599  08DF  052D               	andwf	(sprintf@flag+1)^(0+128),w
  3600  08E0  1283               	bcf	3,5	;RP0=0, select bank0
  3601  08E1  00DB               	movwf	??_sprintf+1
  3602  08E2  045A               	iorwf	??_sprintf,w
  3603  08E3  1903               	skipnz
  3604  08E4  2C12               	goto	l6526
  3605  08E5  1683               	bsf	3,5	;RP0=1, select bank1
  3606  08E6  1E2D               	btfss	(sprintf@flag+1)^(0+128),4
  3607  08E7  28EB               	goto	l6372
  3608  08E8  3006               	movlw	6
  3609  08E9  00B6               	movwf	sprintf@prec^(0+128)
  3610  08EA  01B7               	clrf	(sprintf@prec+1)^(0+128)
  3611  08EB                     l6372:	
  3612  08EB  0824               	movf	sprintf@ap^(0+128),w
  3613  08EC  0084               	movwf	4
  3614  08ED  1383               	bcf	3,7	;select IRP bank0
  3615  08EE  0800               	movf	0,w
  3616  08EF  00B3               	movwf	sprintf@fval^(0+128)
  3617  08F0  0A84               	incf	4,f
  3618  08F1  0800               	movf	0,w
  3619  08F2  00B4               	movwf	(sprintf@fval+1)^(0+128)
  3620  08F3  0A84               	incf	4,f
  3621  08F4  0800               	movf	0,w
  3622  08F5  00B5               	movwf	(sprintf@fval+2)^(0+128)
  3623  08F6  3003               	movlw	3
  3624  08F7  07A4               	addwf	sprintf@ap^(0+128),f
  3625  08F8  0833               	movf	sprintf@fval^(0+128),w
  3626  08F9  00F0               	movwf	?___ftge
  3627  08FA  0834               	movf	(sprintf@fval+1)^(0+128),w
  3628  08FB  00F1               	movwf	?___ftge+1
  3629  08FC  0835               	movf	(sprintf@fval+2)^(0+128),w
  3630  08FD  00F2               	movwf	?___ftge+2
  3631  08FE  01F3               	clrf	?___ftge+3
  3632  08FF  01F4               	clrf	?___ftge+4
  3633  0900  01F5               	clrf	?___ftge+5
  3634  0901  24B6  120A  158A   	fcall	___ftge
  3635  0904  1803               	btfsc	3,0
  3636  0905  2917               	goto	l6382
  3637  0906  0833               	movf	sprintf@fval^(0+128),w
  3638  0907  00F0               	movwf	?___ftneg
  3639  0908  0834               	movf	(sprintf@fval+1)^(0+128),w
  3640  0909  00F1               	movwf	?___ftneg+1
  3641  090A  0835               	movf	(sprintf@fval+2)^(0+128),w
  3642  090B  00F2               	movwf	?___ftneg+2
  3643  090C  2662  120A  158A   	fcall	___ftneg
  3644  090F  0870               	movf	?___ftneg,w
  3645  0910  00B3               	movwf	sprintf@fval^(0+128)
  3646  0911  0871               	movf	?___ftneg+1,w
  3647  0912  00B4               	movwf	(sprintf@fval+1)^(0+128)
  3648  0913  0872               	movf	?___ftneg+2,w
  3649  0914  00B5               	movwf	(sprintf@fval+2)^(0+128)
  3650  0915  3003               	movlw	3
  3651  0916  04AC               	iorwf	sprintf@flag^(0+128),f
  3652  0917                     l6382:	
  3653  0917  01B0               	clrf	sprintf@exp^(0+128)
  3654  0918  01B1               	clrf	(sprintf@exp+1)^(0+128)
  3655  0919  0835               	movf	(sprintf@fval+2)^(0+128),w
  3656  091A  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  3657  091B  0433               	iorwf	sprintf@fval^(0+128),w
  3658  091C  1903               	skipnz
  3659  091D  29B0               	goto	l6414
  3660  091E  30B3               	movlw	low sprintf@fval
  3661  091F  0084               	movwf	4
  3662  0920  0800               	movf	0,w
  3663  0921  1283               	bcf	3,5	;RP0=0, select bank0
  3664  0922  00DA               	movwf	??_sprintf
  3665  0923  0A84               	incf	4,f
  3666  0924  0800               	movf	0,w
  3667  0925  00DB               	movwf	??_sprintf+1
  3668  0926  0A84               	incf	4,f
  3669  0927  0800               	movf	0,w
  3670  0928  00DC               	movwf	??_sprintf+2
  3671  0929  0A84               	incf	4,f
  3672  092A  0800               	movf	0,w
  3673  092B  00DD               	movwf	??_sprintf+3
  3674  092C  300F               	movlw	15
  3675  092D                     u3085:	
  3676  092D  1003               	clrc
  3677  092E  0CDD               	rrf	??_sprintf+3,f
  3678  092F  0CDC               	rrf	??_sprintf+2,f
  3679  0930  0CDB               	rrf	??_sprintf+1,f
  3680  0931  0CDA               	rrf	??_sprintf,f
  3681  0932  3EFF               	addlw	-1
  3682  0933  1D03               	skipz
  3683  0934  292D               	goto	u3085
  3684  0935  085B               	movf	??_sprintf+1,w
  3685  0936  1683               	bsf	3,5	;RP0=1, select bank1
  3686  0937  00B1               	movwf	(sprintf@exp+1)^(0+128)
  3687  0938  1283               	bcf	3,5	;RP0=0, select bank0
  3688  0939  085A               	movf	??_sprintf,w
  3689  093A  1683               	bsf	3,5	;RP0=1, select bank1
  3690  093B  00B0               	movwf	sprintf@exp^(0+128)
  3691  093C  3082               	movlw	-126
  3692  093D  01B1               	clrf	(sprintf@exp+1)^(0+128)
  3693  093E  07B0               	addwf	sprintf@exp^(0+128),f
  3694  093F  1C03               	skipc
  3695  0940  03B1               	decf	(sprintf@exp+1)^(0+128),f
  3696  0941  30FF               	movlw	-1
  3697  0942  07B0               	addwf	sprintf@exp^(0+128),f
  3698  0943  1C03               	skipc
  3699  0944  03B1               	decf	(sprintf@exp+1)^(0+128),f
  3700  0945  3003               	movlw	3
  3701  0946  00F0               	movwf	?___wmul
  3702  0947  01F1               	clrf	?___wmul+1
  3703  0948  0831               	movf	(sprintf@exp+1)^(0+128),w
  3704  0949  00F3               	movwf	?___wmul+3
  3705  094A  0830               	movf	sprintf@exp^(0+128),w
  3706  094B  00F2               	movwf	?___wmul+2
  3707  094C  24F0               	fcall	___wmul
  3708  094D  0871               	movf	?___wmul+1,w
  3709  094E  00B1               	movwf	(sprintf@exp+1)^(0+128)
  3710  094F  0870               	movf	?___wmul,w
  3711  0950  00B0               	movwf	sprintf@exp^(0+128)
  3712  0951  300A               	movlw	10
  3713  0952  00F6               	movwf	?___awdiv
  3714  0953  01F7               	clrf	?___awdiv+1
  3715  0954  0831               	movf	(sprintf@exp+1)^(0+128),w
  3716  0955  00F9               	movwf	?___awdiv+3
  3717  0956  0830               	movf	sprintf@exp^(0+128),w
  3718  0957  00F8               	movwf	?___awdiv+2
  3719  0958  160A  118A  266A   	fcall	___awdiv
      +       120A  158A         
  3720  095D  0877               	movf	?___awdiv+1,w
  3721  095E  00B1               	movwf	(sprintf@exp+1)^(0+128)
  3722  095F  0876               	movf	?___awdiv,w
  3723  0960  00B0               	movwf	sprintf@exp^(0+128)
  3724  0961  1FB1               	btfss	(sprintf@exp+1)^(0+128),7
  3725  0962  2967               	goto	l6402
  3726  0963  30FF               	movlw	-1
  3727  0964  07B0               	addwf	sprintf@exp^(0+128),f
  3728  0965  1C03               	skipc
  3729  0966  03B1               	decf	(sprintf@exp+1)^(0+128),f
  3730  0967                     l6402:	
  3731  0967  0330               	decf	sprintf@exp^(0+128),w
  3732  0968  3AFF               	xorlw	255
  3733  0969  160A  118A  24D8   	fcall	_scale
      +       120A  158A         
  3734  096E  276C  120A  158A   	fcall	PL10	;call to abstracted procedure
  3735  0971  278F               	fcall	PL13	;call to abstracted procedure
  3736  0972  1683               	bsf	3,5	;RP0=1, select bank1
  3737  0973  0825               	movf	sprintf@integ^(0+128),w
  3738  0974  1283               	bcf	3,5	;RP0=0, select bank0
  3739  0975  00B4               	movwf	?___ftmul+3
  3740  0976  1683               	bsf	3,5	;RP0=1, select bank1
  3741  0977  0826               	movf	(sprintf@integ+1)^(0+128),w
  3742  0978  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0979  00B5               	movwf	?___ftmul+4
  3744  097A  1683               	bsf	3,5	;RP0=1, select bank1
  3745  097B  0827               	movf	(sprintf@integ+2)^(0+128),w
  3746  097C  1283               	bcf	3,5	;RP0=0, select bank0
  3747  097D  00B6               	movwf	?___ftmul+5
  3748  097E  160A  118A  26EC   	fcall	___ftmul
      +       120A  158A         
  3749  0983  0831               	movf	?___ftmul,w
  3750  0984  1683               	bsf	3,5	;RP0=1, select bank1
  3751  0985  00A5               	movwf	sprintf@integ^(0+128)
  3752  0986  1283               	bcf	3,5	;RP0=0, select bank0
  3753  0987  0832               	movf	?___ftmul+1,w
  3754  0988  1683               	bsf	3,5	;RP0=1, select bank1
  3755  0989  00A6               	movwf	(sprintf@integ+1)^(0+128)
  3756  098A  1283               	bcf	3,5	;RP0=0, select bank0
  3757  098B  0833               	movf	?___ftmul+2,w
  3758  098C  1683               	bsf	3,5	;RP0=1, select bank1
  3759  098D  00A7               	movwf	(sprintf@integ+2)^(0+128)
  3760  098E  27CB  120A  158A   	fcall	PL22	;call to abstracted procedure
  3761  0991  3080               	movlw	128
  3762  0992  01F3               	clrf	?___ftge+3
  3763  0993  00F4               	movwf	?___ftge+4
  3764  0994  303F               	movlw	63
  3765  0995  00F5               	movwf	?___ftge+5
  3766  0996  24B6  120A  158A   	fcall	___ftge
  3767  0999  1803               	btfsc	3,0
  3768  099A  29A0               	goto	l6410
  3769  099B  30FF               	movlw	-1
  3770  099C  07B0               	addwf	sprintf@exp^(0+128),f
  3771  099D  1C03               	skipc
  3772  099E  03B1               	decf	(sprintf@exp+1)^(0+128),f
  3773  099F  29B0               	goto	l6414
  3774  09A0                     l6410:	
  3775  09A0  27CB  120A  158A   	fcall	PL22	;call to abstracted procedure
  3776  09A3  3020               	movlw	32
  3777  09A4  01F3               	clrf	?___ftge+3
  3778  09A5  00F4               	movwf	?___ftge+4
  3779  09A6  3041               	movlw	65
  3780  09A7  00F5               	movwf	?___ftge+5
  3781  09A8  24B6  120A  158A   	fcall	___ftge
  3782  09AB  1C03               	btfss	3,0
  3783  09AC  29B0               	goto	l6414
  3784  09AD  0AB0               	incf	sprintf@exp^(0+128),f
  3785  09AE  1903               	skipnz
  3786  09AF  0AB1               	incf	(sprintf@exp+1)^(0+128),f
  3787  09B0                     l6414:	
  3788  09B0  0837               	movf	(sprintf@prec+1)^(0+128),w
  3789  09B1  3A80               	xorlw	128
  3790  09B2  00FF               	movwf	127
  3791  09B3  3080               	movlw	128
  3792  09B4  027F               	subwf	127,w
  3793  09B5  1D03               	skipz
  3794  09B6  29B9               	goto	u3125
  3795  09B7  300D               	movlw	13
  3796  09B8  0236               	subwf	sprintf@prec^(0+128),w
  3797  09B9                     u3125:	
  3798  09B9  1803               	skipnc
  3799  09BA  29E2               	goto	l6418
  3800  09BB  27E7               	call	PL32	;select bank 1
  3801  09BC  0836               	movf	sprintf@prec^(0+128),w
  3802  09BD  120A  118A  208D   	fcall	_fround
      +       120A  158A         
  3803  09C2  084C               	movf	?_fround,w
  3804  09C3  00C0               	movwf	?___ftadd
  3805  09C4  084D               	movf	?_fround+1,w
  3806  09C5  00C1               	movwf	?___ftadd+1
  3807  09C6  084E               	movf	?_fround+2,w
  3808  09C7  00C2               	movwf	?___ftadd+2
  3809  09C8  1683               	bsf	3,5	;RP0=1, select bank1
  3810  09C9  0833               	movf	sprintf@fval^(0+128),w
  3811  09CA  1283               	bcf	3,5	;RP0=0, select bank0
  3812  09CB  00C3               	movwf	?___ftadd+3
  3813  09CC  1683               	bsf	3,5	;RP0=1, select bank1
  3814  09CD  0834               	movf	(sprintf@fval+1)^(0+128),w
  3815  09CE  1283               	bcf	3,5	;RP0=0, select bank0
  3816  09CF  00C4               	movwf	?___ftadd+4
  3817  09D0  1683               	bsf	3,5	;RP0=1, select bank1
  3818  09D1  0835               	movf	(sprintf@fval+2)^(0+128),w
  3819  09D2  1283               	bcf	3,5	;RP0=0, select bank0
  3820  09D3  00C5               	movwf	?___ftadd+5
  3821  09D4  266A  120A  158A   	fcall	___ftadd
  3822  09D7  0840               	movf	?___ftadd,w
  3823  09D8  1683               	bsf	3,5	;RP0=1, select bank1
  3824  09D9  00B3               	movwf	sprintf@fval^(0+128)
  3825  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3826  09DB  0841               	movf	?___ftadd+1,w
  3827  09DC  1683               	bsf	3,5	;RP0=1, select bank1
  3828  09DD  00B4               	movwf	(sprintf@fval+1)^(0+128)
  3829  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  3830  09DF  0842               	movf	?___ftadd+2,w
  3831  09E0  1683               	bsf	3,5	;RP0=1, select bank1
  3832  09E1  00B5               	movwf	(sprintf@fval+2)^(0+128)
  3833  09E2                     l6418:	
  3834  09E2  27E7               	call	PL32	;select bank 1
  3835  09E3  0831               	movf	(sprintf@exp+1)^(0+128),w
  3836  09E4  3A80               	xorlw	128
  3837  09E5  00FF               	movwf	127
  3838  09E6  3080               	movlw	128
  3839  09E7  027F               	subwf	127,w
  3840  09E8  1D03               	skipz
  3841  09E9  29EC               	goto	u3135
  3842  09EA  300A               	movlw	10
  3843  09EB  0230               	subwf	sprintf@exp^(0+128),w
  3844  09EC                     u3135:	
  3845  09EC  1803               	skipnc
  3846  09ED  2A0D               	goto	l6426
  3847  09EE  27E7               	call	PL32	;select bank 1
  3848  09EF  0835               	movf	(sprintf@fval+2)^(0+128),w
  3849  09F0  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  3850  09F1  0433               	iorwf	sprintf@fval^(0+128),w
  3851  09F2  1903               	skipnz
  3852  09F3  2A4E               	goto	l6442
  3853  09F4  0833               	movf	sprintf@fval^(0+128),w
  3854  09F5  2784  120A  158A   	fcall	PL12	;call to abstracted procedure
  3855  09F8  2509  120A  158A   	fcall	___fttol
  3856  09FB  0823               	movf	?___fttol+3,w
  3857  09FC  0422               	iorwf	?___fttol+2,w
  3858  09FD  0421               	iorwf	?___fttol+1,w
  3859  09FE  0420               	iorwf	?___fttol,w
  3860  09FF  1D03               	skipz
  3861  0A00  2A4E               	goto	l6442
  3862  0A01  1683               	bsf	3,5	;RP0=1, select bank1
  3863  0A02  0831               	movf	(sprintf@exp+1)^(0+128),w
  3864  0A03  3A80               	xorlw	128
  3865  0A04  00FF               	movwf	127
  3866  0A05  3080               	movlw	128
  3867  0A06  027F               	subwf	127,w
  3868  0A07  1D03               	skipz
  3869  0A08  2A0B               	goto	u3165
  3870  0A09  3002               	movlw	2
  3871  0A0A  0230               	subwf	sprintf@exp^(0+128),w
  3872  0A0B                     u3165:	
  3873  0A0B  1C03               	skipc
  3874  0A0C  2A4E               	goto	l6442
  3875  0A0D                     l6426:	
  3876  0A0D  27E7               	call	PL32	;select bank 1
  3877  0A0E  27CB  120A  158A   	fcall	PL22	;call to abstracted procedure
  3878  0A11  3070               	movlw	112
  3879  0A12  00F3               	movwf	?___ftge+3
  3880  0A13  3089               	movlw	137
  3881  0A14  00F4               	movwf	?___ftge+4
  3882  0A15  3040               	movlw	64
  3883  0A16  00F5               	movwf	?___ftge+5
  3884  0A17  24B6  120A  158A   	fcall	___ftge
  3885  0A1A  1803               	btfsc	3,0
  3886  0A1B  2A1E               	goto	l6430
  3887  0A1C  30F7               	movlw	-9
  3888  0A1D  2A1F               	goto	L2
  3889  0A1E                     l6430:	
  3890  0A1E  30F8               	movlw	-8
  3891  0A1F                     L2:	
  3892  0A1F  07B0               	addwf	sprintf@exp^(0+128),f
  3893  0A20  1C03               	skipc
  3894  0A21  03B1               	decf	(sprintf@exp+1)^(0+128),f
  3895  0A22  0830               	movf	sprintf@exp^(0+128),w
  3896  0A23  160A  118A  24D8   	fcall	_scale
      +       120A  158A         
  3897  0A28  276C  120A  158A   	fcall	PL10	;call to abstracted procedure
  3898  0A2B  00F0               	movwf	?__tdiv_to_l_
  3899  0A2C  0834               	movf	(sprintf@fval+1)^(0+128),w
  3900  0A2D  00F1               	movwf	?__tdiv_to_l_+1
  3901  0A2E  0835               	movf	(sprintf@fval+2)^(0+128),w
  3902  0A2F  00F2               	movwf	?__tdiv_to_l_+2
  3903  0A30  0825               	movf	sprintf@integ^(0+128),w
  3904  0A31  00F3               	movwf	?__tdiv_to_l_+3
  3905  0A32  0826               	movf	(sprintf@integ+1)^(0+128),w
  3906  0A33  00F4               	movwf	?__tdiv_to_l_+4
  3907  0A34  0827               	movf	(sprintf@integ+2)^(0+128),w
  3908  0A35  00F5               	movwf	?__tdiv_to_l_+5
  3909  0A36  25EA  120A  158A   	fcall	__tdiv_to_l_
  3910  0A39  0873               	movf	?__tdiv_to_l_+3,w
  3911  0A3A  1683               	bsf	3,5	;RP0=1, select bank1
  3912  0A3B  00A3               	movwf	(_sprintf$1936+3)^(0+128)
  3913  0A3C  0872               	movf	?__tdiv_to_l_+2,w
  3914  0A3D  00A2               	movwf	(_sprintf$1936+2)^(0+128)
  3915  0A3E  0871               	movf	?__tdiv_to_l_+1,w
  3916  0A3F  00A1               	movwf	(_sprintf$1936+1)^(0+128)
  3917  0A40  0870               	movf	?__tdiv_to_l_,w
  3918  0A41  00A0               	movwf	_sprintf$1936^(0+128)
  3919  0A42  0823               	movf	(_sprintf$1936+3)^(0+128),w
  3920  0A43  00AB               	movwf	(sprintf@_val+3)^(0+128)
  3921  0A44  0822               	movf	(_sprintf$1936+2)^(0+128),w
  3922  0A45  00AA               	movwf	(sprintf@_val+2)^(0+128)
  3923  0A46  0821               	movf	(_sprintf$1936+1)^(0+128),w
  3924  0A47  00A9               	movwf	(sprintf@_val+1)^(0+128)
  3925  0A48  0820               	movf	_sprintf$1936^(0+128),w
  3926  0A49  00A8               	movwf	sprintf@_val^(0+128)
  3927  0A4A  01B3               	clrf	sprintf@fval^(0+128)
  3928  0A4B  01B4               	clrf	(sprintf@fval+1)^(0+128)
  3929  0A4C  01B5               	clrf	(sprintf@fval+2)^(0+128)
  3930  0A4D  2A89               	goto	l6446
  3931  0A4E                     l6442:	
  3932  0A4E  27E7               	call	PL32	;select bank 1
  3933  0A4F  0833               	movf	sprintf@fval^(0+128),w
  3934  0A50  2784  120A  158A   	fcall	PL12	;call to abstracted procedure
  3935  0A53  2509  120A  158A   	fcall	___fttol
  3936  0A56  275E  120A  158A   	fcall	PL5	;call to abstracted procedure
  3937  0A59  1683               	bsf	3,5	;RP0=1, select bank1
  3938  0A5A  00A8               	movwf	sprintf@_val^(0+128)
  3939  0A5B  082B               	movf	(sprintf@_val+3)^(0+128),w
  3940  0A5C  00FB               	movwf	?___lltoft+3
  3941  0A5D  082A               	movf	(sprintf@_val+2)^(0+128),w
  3942  0A5E  00FA               	movwf	?___lltoft+2
  3943  0A5F  0829               	movf	(sprintf@_val+1)^(0+128),w
  3944  0A60  00F9               	movwf	?___lltoft+1
  3945  0A61  0828               	movf	sprintf@_val^(0+128),w
  3946  0A62  00F8               	movwf	?___lltoft
  3947  0A63  272C  120A  158A   	fcall	___lltoft
  3948  0A66  0878               	movf	?___lltoft,w
  3949  0A67  1283               	bcf	3,5	;RP0=0, select bank0
  3950  0A68  00CC               	movwf	?___ftsub
  3951  0A69  0879               	movf	?___lltoft+1,w
  3952  0A6A  00CD               	movwf	?___ftsub+1
  3953  0A6B  087A               	movf	?___lltoft+2,w
  3954  0A6C  00CE               	movwf	?___ftsub+2
  3955  0A6D  1683               	bsf	3,5	;RP0=1, select bank1
  3956  0A6E  0833               	movf	sprintf@fval^(0+128),w
  3957  0A6F  1283               	bcf	3,5	;RP0=0, select bank0
  3958  0A70  00CF               	movwf	?___ftsub+3
  3959  0A71  1683               	bsf	3,5	;RP0=1, select bank1
  3960  0A72  0834               	movf	(sprintf@fval+1)^(0+128),w
  3961  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  3962  0A74  00D0               	movwf	?___ftsub+4
  3963  0A75  1683               	bsf	3,5	;RP0=1, select bank1
  3964  0A76  0835               	movf	(sprintf@fval+2)^(0+128),w
  3965  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  3966  0A78  00D1               	movwf	?___ftsub+5
  3967  0A79  27EA  120A  158A   	fcall	___ftsub
  3968  0A7C  084C               	movf	?___ftsub,w
  3969  0A7D  1683               	bsf	3,5	;RP0=1, select bank1
  3970  0A7E  00B3               	movwf	sprintf@fval^(0+128)
  3971  0A7F  1283               	bcf	3,5	;RP0=0, select bank0
  3972  0A80  084D               	movf	?___ftsub+1,w
  3973  0A81  1683               	bsf	3,5	;RP0=1, select bank1
  3974  0A82  00B4               	movwf	(sprintf@fval+1)^(0+128)
  3975  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  3976  0A84  084E               	movf	?___ftsub+2,w
  3977  0A85  1683               	bsf	3,5	;RP0=1, select bank1
  3978  0A86  00B5               	movwf	(sprintf@fval+2)^(0+128)
  3979  0A87  01B0               	clrf	sprintf@exp^(0+128)
  3980  0A88  01B1               	clrf	(sprintf@exp+1)^(0+128)
  3981  0A89                     l6446:	
  3982  0A89  01B8               	clrf	sprintf@c^(0+128)
  3983  0A8A  0AB8               	incf	sprintf@c^(0+128),f
  3984  0A8B                     l6452:	
  3985  0A8B  274C               	fcall	PL3	;call to abstracted procedure
  3986  0A8C  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  3987  0A91  00DB               	movwf	??_sprintf+1
  3988  0A92  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  3989  0A97  00DC               	movwf	??_sprintf+2
  3990  0A98  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  3991  0A9D  00DD               	movwf	??_sprintf+3
  3992  0A9E  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  3993  0AA3  00DE               	movwf	??_sprintf+4
  3994  0AA4  1683               	bsf	3,5	;RP0=1, select bank1
  3995  0AA5  022B               	subwf	(sprintf@_val+3)^(0+128),w
  3996  0AA6  1D03               	skipz
  3997  0AA7  2AB8               	goto	u3185
  3998  0AA8  1283               	bcf	3,5	;RP0=0, select bank0
  3999  0AA9  085D               	movf	??_sprintf+3,w
  4000  0AAA  1683               	bsf	3,5	;RP0=1, select bank1
  4001  0AAB  022A               	subwf	(sprintf@_val+2)^(0+128),w
  4002  0AAC  1D03               	skipz
  4003  0AAD  2AB8               	goto	u3185
  4004  0AAE  1283               	bcf	3,5	;RP0=0, select bank0
  4005  0AAF  085C               	movf	??_sprintf+2,w
  4006  0AB0  1683               	bsf	3,5	;RP0=1, select bank1
  4007  0AB1  0229               	subwf	(sprintf@_val+1)^(0+128),w
  4008  0AB2  1D03               	skipz
  4009  0AB3  2AB8               	goto	u3185
  4010  0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  4011  0AB5  085B               	movf	??_sprintf+1,w
  4012  0AB6  1683               	bsf	3,5	;RP0=1, select bank1
  4013  0AB7  0228               	subwf	sprintf@_val^(0+128),w
  4014  0AB8                     u3185:	
  4015  0AB8  1C03               	btfss	3,0
  4016  0AB9  2ABF               	goto	l6460
  4017  0ABA  0AB8               	incf	sprintf@c^(0+128),f
  4018  0ABB  0838               	movf	sprintf@c^(0+128),w
  4019  0ABC  3A0A               	xorlw	10
  4020  0ABD  1D03               	skipz
  4021  0ABE  2A8B               	goto	l6452
  4022  0ABF                     l6460:	
  4023  0ABF  0836               	movf	sprintf@prec^(0+128),w
  4024  0AC0  0738               	addwf	sprintf@c^(0+128),w
  4025  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  4026  0AC2  00DA               	movwf	??_sprintf
  4027  0AC3  1683               	bsf	3,5	;RP0=1, select bank1
  4028  0AC4  0837               	movf	(sprintf@prec+1)^(0+128),w
  4029  0AC5  1803               	skipnc
  4030  0AC6  0A37               	incf	(sprintf@prec+1)^(0+128),w
  4031  0AC7  1BB8               	btfsc	sprintf@c^(0+128),7
  4032  0AC8  3EFF               	addlw	255
  4033  0AC9  1283               	bcf	3,5	;RP0=0, select bank0
  4034  0ACA  00DB               	movwf	??_sprintf+1
  4035  0ACB  1683               	bsf	3,5	;RP0=1, select bank1
  4036  0ACC  0830               	movf	sprintf@exp^(0+128),w
  4037  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  4038  0ACE  075A               	addwf	??_sprintf,w
  4039  0ACF  00DC               	movwf	??_sprintf+2
  4040  0AD0  1683               	bsf	3,5	;RP0=1, select bank1
  4041  0AD1  0831               	movf	(sprintf@exp+1)^(0+128),w
  4042  0AD2  1803               	skipnc
  4043  0AD3  0A31               	incf	(sprintf@exp+1)^(0+128),w
  4044  0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  4045  0AD5  075B               	addwf	??_sprintf+1,w
  4046  0AD6  00DD               	movwf	??_sprintf+3
  4047  0AD7  085C               	movf	??_sprintf+2,w
  4048  0AD8  1683               	bsf	3,5	;RP0=1, select bank1
  4049  0AD9  02AE               	subwf	sprintf@width^(0+128),f
  4050  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  4051  0ADB  085D               	movf	??_sprintf+3,w
  4052  0ADC  1683               	bsf	3,5	;RP0=1, select bank1
  4053  0ADD  1C03               	skipc
  4054  0ADE  03AF               	decf	(sprintf@width+1)^(0+128),f
  4055  0ADF  02AF               	subwf	(sprintf@width+1)^(0+128),f
  4056  0AE0  0837               	movf	(sprintf@prec+1)^(0+128),w
  4057  0AE1  0436               	iorwf	sprintf@prec^(0+128),w
  4058  0AE2  1903               	skipnz
  4059  0AE3  2AE8               	goto	l6466
  4060  0AE4  30FF               	movlw	-1
  4061  0AE5  07AE               	addwf	sprintf@width^(0+128),f
  4062  0AE6  1C03               	skipc
  4063  0AE7  03AF               	decf	(sprintf@width+1)^(0+128),f
  4064  0AE8                     l6466:	
  4065  0AE8  082C               	movf	sprintf@flag^(0+128),w
  4066  0AE9  3903               	andlw	3
  4067  0AEA  1D03               	btfss	3,2
  4068  0AEB  2AFE               	goto	l6468
  4069  0AEC                     l6476:	
  4070  0AEC  082F               	movf	(sprintf@width+1)^(0+128),w
  4071  0AED  3A80               	xorlw	128
  4072  0AEE  00FF               	movwf	127
  4073  0AEF  3080               	movlw	128
  4074  0AF0  027F               	subwf	127,w
  4075  0AF1  1D03               	skipz
  4076  0AF2  2AF5               	goto	u3225
  4077  0AF3  3001               	movlw	1
  4078  0AF4  022E               	subwf	sprintf@width^(0+128),w
  4079  0AF5                     u3225:	
  4080  0AF5  1C03               	btfss	3,0
  4081  0AF6  2B03               	goto	l6478
  4082  0AF7  27E7               	call	PL32	;select bank 1
  4083  0AF8  0832               	movf	sprintf@sp^(0+128),w
  4084  0AF9  0084               	movwf	4
  4085  0AFA  3020               	movlw	32
  4086  0AFB  1383               	bcf	3,7	;select IRP bank0
  4087  0AFC  0080               	movwf	0
  4088  0AFD  0AB2               	incf	sprintf@sp^(0+128),f
  4089  0AFE                     l6468:	
  4090  0AFE  30FF               	movlw	-1
  4091  0AFF  07AE               	addwf	sprintf@width^(0+128),f
  4092  0B00  1C03               	skipc
  4093  0B01  03AF               	decf	(sprintf@width+1)^(0+128),f
  4094  0B02  2AEC               	goto	l6476
  4095  0B03                     l6478:	
  4096  0B03  27E7               	call	PL32	;select bank 1
  4097  0B04  082C               	movf	sprintf@flag^(0+128),w
  4098  0B05  3903               	andlw	3
  4099  0B06  1903               	btfsc	3,2
  4100  0B07  2B3A               	goto	l6488
  4101  0B08  0832               	movf	sprintf@sp^(0+128),w
  4102  0B09  0084               	movwf	4
  4103  0B0A  302D               	movlw	45
  4104  0B0B  2B36               	goto	L6
  4105  0B0C                     l6484:	
  4106  0B0C  2756  120A  158A   	fcall	PL4	;call to abstracted procedure
  4107  0B0F  274C               	fcall	PL3	;call to abstracted procedure
  4108  0B10  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  4109  0B15  00F0               	movwf	?___lldiv
  4110  0B16  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  4111  0B1B  00F1               	movwf	?___lldiv+1
  4112  0B1C  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  4113  0B21  00F2               	movwf	?___lldiv+2
  4114  0B22  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  4115  0B27  279A  120A  158A   	fcall	PL14	;call to abstracted procedure
  4116  0B2A  25A2  120A  158A   	fcall	___lldiv
  4117  0B2D  27A5  120A  158A   	fcall	PL17	;call to abstracted procedure
  4118  0B30  2564  120A  158A   	fcall	___llmod
  4119  0B33  27B9  120A  158A   	fcall	PL20	;call to abstracted procedure
  4120  0B36                     L6:	
  4121  0B36  1383               	bcf	3,7	;select IRP bank0
  4122  0B37  0080               	movwf	0
  4123  0B38  1683               	bsf	3,5	;RP0=1, select bank1
  4124  0B39  0AB2               	incf	sprintf@sp^(0+128),f
  4125  0B3A                     l6488:	
  4126  0B3A  03B8               	decf	sprintf@c^(0+128),f
  4127  0B3B  0F38               	incfsz	sprintf@c^(0+128),w
  4128  0B3C  2B0C               	goto	l6484
  4129  0B3D                     l6496:	
  4130  0B3D  0831               	movf	(sprintf@exp+1)^(0+128),w
  4131  0B3E  3A80               	xorlw	128
  4132  0B3F  00FF               	movwf	127
  4133  0B40  3080               	movlw	128
  4134  0B41  027F               	subwf	127,w
  4135  0B42  1D03               	skipz
  4136  0B43  2B46               	goto	u3255
  4137  0B44  3001               	movlw	1
  4138  0B45  0230               	subwf	sprintf@exp^(0+128),w
  4139  0B46                     u3255:	
  4140  0B46  1C03               	btfss	3,0
  4141  0B47  2B51               	goto	l6498
  4142  0B48  27E7               	call	PL32	;select bank 1
  4143  0B49  0832               	movf	sprintf@sp^(0+128),w
  4144  0B4A  27E0  120A  158A   	fcall	PL31	;call to abstracted procedure
  4145  0B4D  07B0               	addwf	sprintf@exp^(0+128),f
  4146  0B4E  1C03               	skipc
  4147  0B4F  03B1               	decf	(sprintf@exp+1)^(0+128),f
  4148  0B50  2B3D               	goto	l6496
  4149  0B51                     l6498:	
  4150  0B51  27E7               	call	PL32	;select bank 1
  4151  0B52  0837               	movf	(sprintf@prec+1)^(0+128),w
  4152  0B53  3A80               	xorlw	128
  4153  0B54  00FF               	movwf	127
  4154  0B55  3080               	movlw	128
  4155  0B56  027F               	subwf	127,w
  4156  0B57  1D03               	skipz
  4157  0B58  2B5B               	goto	u3265
  4158  0B59  3009               	movlw	9
  4159  0B5A  0236               	subwf	sprintf@prec^(0+128),w
  4160  0B5B                     u3265:	
  4161  0B5B  1C03               	skipc
  4162  0B5C  2B60               	goto	l6502
  4163  0B5D  3008               	movlw	8
  4164  0B5E  27E7               	call	PL32	;select bank 1
  4165  0B5F  2B62               	goto	L3
  4166  0B60                     l6502:	
  4167  0B60  27E7               	call	PL32	;select bank 1
  4168  0B61  0836               	movf	sprintf@prec^(0+128),w
  4169  0B62                     L3:	
  4170  0B62  00B8               	movwf	sprintf@c^(0+128)
  4171  0B63  1283               	bcf	3,5	;RP0=0, select bank0
  4172  0B64  00DA               	movwf	??_sprintf
  4173  0B65  01DB               	clrf	??_sprintf+1
  4174  0B66  1BDA               	btfsc	??_sprintf,7
  4175  0B67  03DB               	decf	??_sprintf+1,f
  4176  0B68  1683               	bsf	3,5	;RP0=1, select bank1
  4177  0B69  02B6               	subwf	sprintf@prec^(0+128),f
  4178  0B6A  1283               	bcf	3,5	;RP0=0, select bank0
  4179  0B6B  085B               	movf	??_sprintf+1,w
  4180  0B6C  1683               	bsf	3,5	;RP0=1, select bank1
  4181  0B6D  1C03               	skipc
  4182  0B6E  03B7               	decf	(sprintf@prec+1)^(0+128),f
  4183  0B6F  02B7               	subwf	(sprintf@prec+1)^(0+128),f
  4184  0B70  0838               	movf	sprintf@c^(0+128),w
  4185  0B71  1903               	btfsc	3,2
  4186  0B72  2B79               	goto	l6508
  4187  0B73  0832               	movf	sprintf@sp^(0+128),w
  4188  0B74  0084               	movwf	4
  4189  0B75  302E               	movlw	46
  4190  0B76  1383               	bcf	3,7	;select IRP bank0
  4191  0B77  0080               	movwf	0
  4192  0B78  0AB2               	incf	sprintf@sp^(0+128),f
  4193  0B79                     l6508:	
  4194  0B79  0838               	movf	sprintf@c^(0+128),w
  4195  0B7A  160A  118A  24D8   	fcall	_scale
      +       120A  158A         
  4196  0B7F  0840               	movf	?_scale,w
  4197  0B80  00B4               	movwf	?___ftmul+3
  4198  0B81  0841               	movf	?_scale+1,w
  4199  0B82  00B5               	movwf	?___ftmul+4
  4200  0B83  0842               	movf	?_scale+2,w
  4201  0B84  00B6               	movwf	?___ftmul+5
  4202  0B85  1683               	bsf	3,5	;RP0=1, select bank1
  4203  0B86  0833               	movf	sprintf@fval^(0+128),w
  4204  0B87  278F               	fcall	PL13	;call to abstracted procedure
  4205  0B88  160A  118A  26EC   	fcall	___ftmul
      +       120A  158A         
  4206  0B8D  0831               	movf	?___ftmul,w
  4207  0B8E  00A0               	movwf	?___fttol
  4208  0B8F  0832               	movf	?___ftmul+1,w
  4209  0B90  00A1               	movwf	?___fttol+1
  4210  0B91  0833               	movf	?___ftmul+2,w
  4211  0B92  00A2               	movwf	?___fttol+2
  4212  0B93  2509  120A  158A   	fcall	___fttol
  4213  0B96  275E  120A  158A   	fcall	PL5	;call to abstracted procedure
  4214  0B99  2C01               	goto	L4
  4215  0B9A                     l6510:	
  4216  0B9A  2756  120A  158A   	fcall	PL4	;call to abstracted procedure
  4217  0B9D  274C               	fcall	PL3	;call to abstracted procedure
  4218  0B9E  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  4219  0BA3  00F0               	movwf	?___lldiv
  4220  0BA4  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  4221  0BA9  00F1               	movwf	?___lldiv+1
  4222  0BAA  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  4223  0BAF  00F2               	movwf	?___lldiv+2
  4224  0BB0  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  4225  0BB5  279A  120A  158A   	fcall	PL14	;call to abstracted procedure
  4226  0BB8  25A2  120A  158A   	fcall	___lldiv
  4227  0BBB  27A5  120A  158A   	fcall	PL17	;call to abstracted procedure
  4228  0BBE  2564  120A  158A   	fcall	___llmod
  4229  0BC1  27B9  120A  158A   	fcall	PL20	;call to abstracted procedure
  4230  0BC4  1383               	bcf	3,7	;select IRP bank0
  4231  0BC5  0080               	movwf	0
  4232  0BC6  1683               	bsf	3,5	;RP0=1, select bank1
  4233  0BC7  0AB2               	incf	sprintf@sp^(0+128),f
  4234  0BC8  274C               	fcall	PL3	;call to abstracted procedure
  4235  0BC9  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  4236  0BCE  00A0               	movwf	?___llmod
  4237  0BCF  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  4238  0BD4  00A1               	movwf	?___llmod+1
  4239  0BD5  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  4240  0BDA  00A2               	movwf	?___llmod+2
  4241  0BDB  120A  118A  2713   	fcall	stringdir
      +       120A  158A         
  4242  0BE0  00A3               	movwf	?___llmod+3
  4243  0BE1  1683               	bsf	3,5	;RP0=1, select bank1
  4244  0BE2  082B               	movf	(sprintf@_val+3)^(0+128),w
  4245  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  4246  0BE4  00A7               	movwf	?___llmod+7
  4247  0BE5  1683               	bsf	3,5	;RP0=1, select bank1
  4248  0BE6  082A               	movf	(sprintf@_val+2)^(0+128),w
  4249  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  4250  0BE8  00A6               	movwf	?___llmod+6
  4251  0BE9  1683               	bsf	3,5	;RP0=1, select bank1
  4252  0BEA  0829               	movf	(sprintf@_val+1)^(0+128),w
  4253  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  4254  0BEC  00A5               	movwf	?___llmod+5
  4255  0BED  1683               	bsf	3,5	;RP0=1, select bank1
  4256  0BEE  0828               	movf	sprintf@_val^(0+128),w
  4257  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  4258  0BF0  00A4               	movwf	?___llmod+4
  4259  0BF1  2564  120A  158A   	fcall	___llmod
  4260  0BF4  0823               	movf	?___llmod+3,w
  4261  0BF5  1683               	bsf	3,5	;RP0=1, select bank1
  4262  0BF6  00AB               	movwf	(sprintf@_val+3)^(0+128)
  4263  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  4264  0BF8  0822               	movf	?___llmod+2,w
  4265  0BF9  1683               	bsf	3,5	;RP0=1, select bank1
  4266  0BFA  00AA               	movwf	(sprintf@_val+2)^(0+128)
  4267  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  4268  0BFC  0821               	movf	?___llmod+1,w
  4269  0BFD  1683               	bsf	3,5	;RP0=1, select bank1
  4270  0BFE  00A9               	movwf	(sprintf@_val+1)^(0+128)
  4271  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  4272  0C00  0820               	movf	?___llmod,w
  4273  0C01                     L4:	
  4274  0C01  1683               	bsf	3,5	;RP0=1, select bank1
  4275  0C02  00A8               	movwf	sprintf@_val^(0+128)
  4276  0C03  03B8               	decf	sprintf@c^(0+128),f
  4277  0C04  0F38               	incfsz	sprintf@c^(0+128),w
  4278  0C05  2B9A               	goto	l6510
  4279  0C06                     l6524:	
  4280  0C06  0837               	movf	(sprintf@prec+1)^(0+128),w
  4281  0C07  0436               	iorwf	sprintf@prec^(0+128),w
  4282  0C08  1903               	btfsc	3,2
  4283  0C09  2839               	goto	l6574
  4284  0C0A  0832               	movf	sprintf@sp^(0+128),w
  4285  0C0B  27E0  120A  158A   	fcall	PL31	;call to abstracted procedure
  4286  0C0E  07B6               	addwf	sprintf@prec^(0+128),f
  4287  0C0F  1C03               	skipc
  4288  0C10  03B7               	decf	(sprintf@prec+1)^(0+128),f
  4289  0C11  2C06               	goto	l6524
  4290  0C12                     l6526:	
  4291  0C12  1683               	bsf	3,5	;RP0=1, select bank1
  4292  0C13  0837               	movf	(sprintf@prec+1)^(0+128),w
  4293  0C14  0436               	iorwf	sprintf@prec^(0+128),w
  4294  0C15  1D03               	skipz
  4295  0C16  2C1F               	goto	l6532
  4296  0C17  082B               	movf	(sprintf@_val+3)^(0+128),w
  4297  0C18  042A               	iorwf	(sprintf@_val+2)^(0+128),w
  4298  0C19  0429               	iorwf	(sprintf@_val+1)^(0+128),w
  4299  0C1A  0428               	iorwf	sprintf@_val^(0+128),w
  4300  0C1B  1903               	btfsc	3,2
  4301  0C1C  0AB6               	incf	sprintf@prec^(0+128),f
  4302  0C1D  1903               	skipnz
  4303  0C1E  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  4304  0C1F                     l6532:	
  4305  0C1F  0838               	movf	sprintf@c^(0+128),w
  4306  0C20  27AF  120A  158A   	fcall	PL19	;call to abstracted procedure
  4307  0C23  0837               	movf	(sprintf@prec+1)^(0+128),w
  4308  0C24  3A80               	xorlw	128
  4309  0C25  1283               	bcf	3,5	;RP0=0, select bank0
  4310  0C26  025C               	subwf	??_sprintf+2,w
  4311  0C27  1D03               	skipz
  4312  0C28  2C2D               	goto	u3325
  4313  0C29  1683               	bsf	3,5	;RP0=1, select bank1
  4314  0C2A  0836               	movf	sprintf@prec^(0+128),w
  4315  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  4316  0C2C  025A               	subwf	??_sprintf,w
  4317  0C2D                     u3325:	
  4318  0C2D  1803               	skipnc
  4319  0C2E  2C33               	goto	l6536
  4320  0C2F  27E7               	call	PL32	;select bank 1
  4321  0C30  0836               	movf	sprintf@prec^(0+128),w
  4322  0C31  00B8               	movwf	sprintf@c^(0+128)
  4323  0C32  2C4B               	goto	l6540
  4324  0C33                     l6536:	
  4325  0C33  1683               	bsf	3,5	;RP0=1, select bank1
  4326  0C34  27C2  120A  158A   	fcall	PL21	;call to abstracted procedure
  4327  0C37  0837               	movf	(sprintf@prec+1)^(0+128),w
  4328  0C38  3A80               	xorlw	128
  4329  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  4330  0C3A  00DC               	movwf	??_sprintf+2
  4331  0C3B  085B               	movf	??_sprintf+1,w
  4332  0C3C  3A80               	xorlw	128
  4333  0C3D  025C               	subwf	??_sprintf+2,w
  4334  0C3E  1D03               	skipz
  4335  0C3F  2C43               	goto	u3335
  4336  0C40  085A               	movf	??_sprintf,w
  4337  0C41  1683               	bsf	3,5	;RP0=1, select bank1
  4338  0C42  0236               	subwf	sprintf@prec^(0+128),w
  4339  0C43                     u3335:	
  4340  0C43  1803               	skipnc
  4341  0C44  2C4B               	goto	l6540
  4342  0C45  27E7               	call	PL32	;select bank 1
  4343  0C46  0838               	movf	sprintf@c^(0+128),w
  4344  0C47  00B6               	movwf	sprintf@prec^(0+128)
  4345  0C48  01B7               	clrf	(sprintf@prec+1)^(0+128)
  4346  0C49  1BB6               	btfsc	sprintf@prec^(0+128),7
  4347  0C4A  03B7               	decf	(sprintf@prec+1)^(0+128),f
  4348  0C4B                     l6540:	
  4349  0C4B  27E7               	call	PL32	;select bank 1
  4350  0C4C  082F               	movf	(sprintf@width+1)^(0+128),w
  4351  0C4D  042E               	iorwf	sprintf@width^(0+128),w
  4352  0C4E  1903               	skipnz
  4353  0C4F  2C58               	goto	l6546
  4354  0C50  082C               	movf	sprintf@flag^(0+128),w
  4355  0C51  3903               	andlw	3
  4356  0C52  1903               	btfsc	3,2
  4357  0C53  2C58               	goto	l6546
  4358  0C54  30FF               	movlw	-1
  4359  0C55  07AE               	addwf	sprintf@width^(0+128),f
  4360  0C56  1C03               	skipc
  4361  0C57  03AF               	decf	(sprintf@width+1)^(0+128),f
  4362  0C58                     l6546:	
  4363  0C58  1F2D               	btfss	(sprintf@flag+1)^(0+128),6
  4364  0C59  2C75               	goto	l6554
  4365  0C5A  0837               	movf	(sprintf@prec+1)^(0+128),w
  4366  0C5B  3A80               	xorlw	128
  4367  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  4368  0C5D  00DA               	movwf	??_sprintf
  4369  0C5E  1683               	bsf	3,5	;RP0=1, select bank1
  4370  0C5F  082F               	movf	(sprintf@width+1)^(0+128),w
  4371  0C60  3A80               	xorlw	128
  4372  0C61  1283               	bcf	3,5	;RP0=0, select bank0
  4373  0C62  025A               	subwf	??_sprintf,w
  4374  0C63  1D03               	skipz
  4375  0C64  2C68               	goto	u3375
  4376  0C65  1683               	bsf	3,5	;RP0=1, select bank1
  4377  0C66  082E               	movf	sprintf@width^(0+128),w
  4378  0C67  0236               	subwf	sprintf@prec^(0+128),w
  4379  0C68                     u3375:	
  4380  0C68  1803               	skipnc
  4381  0C69  2C72               	goto	l6552
  4382  0C6A  27E7               	call	PL32	;select bank 1
  4383  0C6B  0836               	movf	sprintf@prec^(0+128),w
  4384  0C6C  02AE               	subwf	sprintf@width^(0+128),f
  4385  0C6D  0837               	movf	(sprintf@prec+1)^(0+128),w
  4386  0C6E  1C03               	skipc
  4387  0C6F  03AF               	decf	(sprintf@width+1)^(0+128),f
  4388  0C70  02AF               	subwf	(sprintf@width+1)^(0+128),f
  4389  0C71  2C75               	goto	l6554
  4390  0C72                     l6552:	
  4391  0C72  27E7               	call	PL32	;select bank 1
  4392  0C73  01AE               	clrf	sprintf@width^(0+128)
  4393  0C74  01AF               	clrf	(sprintf@width+1)^(0+128)
  4394  0C75                     l6554:	
  4395  0C75  0838               	movf	sprintf@c^(0+128),w
  4396  0C76  27AF  120A  158A   	fcall	PL19	;call to abstracted procedure
  4397  0C79  082F               	movf	(sprintf@width+1)^(0+128),w
  4398  0C7A  3A80               	xorlw	128
  4399  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  4400  0C7C  025C               	subwf	??_sprintf+2,w
  4401  0C7D  1D03               	skipz
  4402  0C7E  2C83               	goto	u3385
  4403  0C7F  1683               	bsf	3,5	;RP0=1, select bank1
  4404  0C80  082E               	movf	sprintf@width^(0+128),w
  4405  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  4406  0C82  025A               	subwf	??_sprintf,w
  4407  0C83                     u3385:	
  4408  0C83  1803               	skipnc
  4409  0C84  2C91               	goto	l6558
  4410  0C85  1683               	bsf	3,5	;RP0=1, select bank1
  4411  0C86  27C2  120A  158A   	fcall	PL21	;call to abstracted procedure
  4412  0C89  02AE               	subwf	sprintf@width^(0+128),f
  4413  0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  4414  0C8B  085B               	movf	??_sprintf+1,w
  4415  0C8C  1683               	bsf	3,5	;RP0=1, select bank1
  4416  0C8D  1C03               	skipc
  4417  0C8E  03AF               	decf	(sprintf@width+1)^(0+128),f
  4418  0C8F  02AF               	subwf	(sprintf@width+1)^(0+128),f
  4419  0C90  2C94               	goto	l6560
  4420  0C91                     l6558:	
  4421  0C91  27E7               	call	PL32	;select bank 1
  4422  0C92  01AE               	clrf	sprintf@width^(0+128)
  4423  0C93  01AF               	clrf	(sprintf@width+1)^(0+128)
  4424  0C94                     l6560:	
  4425  0C94  082F               	movf	(sprintf@width+1)^(0+128),w
  4426  0C95  042E               	iorwf	sprintf@width^(0+128),w
  4427  0C96  1903               	skipnz
  4428  0C97  2CA6               	goto	l6568
  4429  0C98                     l6562:	
  4430  0C98  0832               	movf	sprintf@sp^(0+128),w
  4431  0C99  0084               	movwf	4
  4432  0C9A  3020               	movlw	32
  4433  0C9B  1383               	bcf	3,7	;select IRP bank0
  4434  0C9C  0080               	movwf	0
  4435  0C9D  30FF               	movlw	-1
  4436  0C9E  0AB2               	incf	sprintf@sp^(0+128),f
  4437  0C9F  07AE               	addwf	sprintf@width^(0+128),f
  4438  0CA0  1C03               	skipc
  4439  0CA1  03AF               	decf	(sprintf@width+1)^(0+128),f
  4440  0CA2  082F               	movf	(sprintf@width+1)^(0+128),w
  4441  0CA3  042E               	iorwf	sprintf@width^(0+128),w
  4442  0CA4  1D03               	skipz
  4443  0CA5  2C98               	goto	l6562
  4444  0CA6                     l6568:	
  4445  0CA6  082C               	movf	sprintf@flag^(0+128),w
  4446  0CA7  3903               	andlw	3
  4447  0CA8  1903               	btfsc	3,2
  4448  0CA9  2839               	goto	l6574
  4449  0CAA  0832               	movf	sprintf@sp^(0+128),w
  4450  0CAB  0084               	movwf	4
  4451  0CAC  302D               	movlw	45
  4452  0CAD                     L5:	
  4453  0CAD  1383               	bcf	3,7	;select IRP bank0
  4454  0CAE  0080               	movwf	0
  4455  0CAF  0AB2               	incf	sprintf@sp^(0+128),f
  4456  0CB0  2839               	goto	l6574
  4457  0CB1                     l6576:	
  4458  0CB1  0832               	movf	sprintf@sp^(0+128),w
  4459  0CB2  0084               	movwf	4
  4460  0CB3  1383               	bcf	3,7	;select IRP bank0
  4461  0CB4  0180               	clrf	0
  4462  0CB5  0008               	return
  4463  0CB6                     __end_of_sprintf:	
  4464  0CB6                     __ptext774:	
  4465 ;; =============== function ___lldiv ends ============
  4466                           
  4467                           
  4468 ;; *************** function ___ftge *****************
  4469 ;; Defined at:
  4470 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftge.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  ff1             3    0[COMMON] float 
  4473 ;;  ff2             3    3[COMMON] float 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;		None               void
  4478 ;; Registers used:
  4479 ;;		wreg, status,2, status,0
  4480 ;; Tracked objects:
  4481 ;;		On entry : 60/20
  4482 ;;		On exit  : 60/20
  4483 ;;		Unchanged: FFF9F/0
  4484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4485 ;;      Params:         6       0       0       0       0
  4486 ;;      Locals:         0       0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0
  4488 ;;      Totals:         6       0       0       0       0
  4489 ;;Total ram usage:        6 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_sprintf
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497  0CB6                     ___ftge:	
  4498                           
  4499                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  4500  0CB6  1FF2               	btfss	___ftge@ff1+2,7
  4501  0CB7  2CC5               	goto	l5960
  4502  0CB8  0870               	movf	___ftge@ff1,w
  4503  0CB9  3C00               	sublw	0
  4504  0CBA  00F0               	movwf	___ftge@ff1
  4505  0CBB  0871               	movf	___ftge@ff1+1,w
  4506  0CBC  1C03               	skipc
  4507  0CBD  0F71               	incfsz	___ftge@ff1+1,w
  4508  0CBE  3C00               	sublw	0
  4509  0CBF  00F1               	movwf	___ftge@ff1+1
  4510  0CC0  0872               	movf	___ftge@ff1+2,w
  4511  0CC1  1C03               	skipc
  4512  0CC2  0F72               	incfsz	___ftge@ff1+2,w
  4513  0CC3  3C80               	sublw	128
  4514  0CC4  00F2               	movwf	___ftge@ff1+2
  4515  0CC5                     l5960:	
  4516  0CC5  1FF5               	btfss	___ftge@ff2+2,7
  4517  0CC6  2CD4               	goto	l5964
  4518  0CC7  0873               	movf	___ftge@ff2,w
  4519  0CC8  3C00               	sublw	0
  4520  0CC9  00F3               	movwf	___ftge@ff2
  4521  0CCA  0874               	movf	___ftge@ff2+1,w
  4522  0CCB  1C03               	skipc
  4523  0CCC  0F74               	incfsz	___ftge@ff2+1,w
  4524  0CCD  3C00               	sublw	0
  4525  0CCE  00F4               	movwf	___ftge@ff2+1
  4526  0CCF  0875               	movf	___ftge@ff2+2,w
  4527  0CD0  1C03               	skipc
  4528  0CD1  0F75               	incfsz	___ftge@ff2+2,w
  4529  0CD2  3C80               	sublw	128
  4530  0CD3  00F5               	movwf	___ftge@ff2+2
  4531  0CD4                     l5964:	
  4532  0CD4  3080               	movlw	128
  4533  0CD5  06F2               	xorwf	___ftge@ff1+2,f
  4534  0CD6  06F5               	xorwf	___ftge@ff2+2,f
  4535  0CD7  0875               	movf	___ftge@ff2+2,w
  4536  0CD8  0272               	subwf	___ftge@ff1+2,w
  4537  0CD9  1D03               	skipz
  4538  0CDA  0008               	return
  4539  0CDB  0874               	movf	___ftge@ff2+1,w
  4540  0CDC  0271               	subwf	___ftge@ff1+1,w
  4541  0CDD  1D03               	skipz
  4542  0CDE  0008               	return
  4543  0CDF  0873               	movf	___ftge@ff2,w
  4544  0CE0  0270               	subwf	___ftge@ff1,w
  4545  0CE1  0008               	return
  4546  0CE2                     __end_of___ftge:	
  4547  0CE2                     __ptext787:	
  4548 ;; =============== function __tdiv_to_l_ ends ============
  4549                           
  4550                           
  4551 ;; *************** function _isdigit *****************
  4552 ;; Defined at:
  4553 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\isdigit.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  c               1    wreg     unsigned char 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  c               1    1[COMMON] unsigned char 
  4558 ;; Return value:  Size  Location     Type
  4559 ;;		None               void
  4560 ;; Registers used:
  4561 ;;		wreg, status,2, status,0
  4562 ;; Tracked objects:
  4563 ;;		On entry : 60/0
  4564 ;;		On exit  : 60/0
  4565 ;;		Unchanged: FFF9F/0
  4566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4567 ;;      Params:         0       0       0       0       0
  4568 ;;      Locals:         2       0       0       0       0
  4569 ;;      Temps:          0       0       0       0       0
  4570 ;;      Totals:         2       0       0       0       0
  4571 ;;Total ram usage:        2 bytes
  4572 ;; Hardware stack levels used:    1
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_sprintf
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579  0CE2                     _isdigit:	
  4580                           
  4581                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4582                           ;isdigit@c stored from wreg
  4583  0CE2  00F1               	movwf	isdigit@c
  4584  0CE3  303A               	movlw	58
  4585  0CE4  01F0               	clrf	_isdigit$2444
  4586  0CE5  0271               	subwf	isdigit@c,w
  4587  0CE6  1803               	skipnc
  4588  0CE7  2CEE               	goto	l5620
  4589  0CE8  3030               	movlw	48
  4590  0CE9  0271               	subwf	isdigit@c,w
  4591  0CEA  1C03               	skipc
  4592  0CEB  2CEE               	goto	l5620
  4593  0CEC  01F0               	clrf	_isdigit$2444
  4594  0CED  0AF0               	incf	_isdigit$2444,f
  4595  0CEE                     l5620:	
  4596  0CEE  0C70               	rrf	_isdigit$2444,w
  4597  0CEF  0008               	return
  4598  0CF0                     __end_of_isdigit:	
  4599  0CF0                     __ptext783:	
  4600 ;; =============== function ___lwdiv ends ============
  4601                           
  4602                           
  4603 ;; *************** function ___wmul *****************
  4604 ;; Defined at:
  4605 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;  multiplier      2    0[COMMON] unsigned int 
  4608 ;;  multiplicand    2    2[COMMON] unsigned int 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  product         2    4[COMMON] unsigned int 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  2    0[COMMON] unsigned int 
  4613 ;; Registers used:
  4614 ;;		wreg, status,2, status,0
  4615 ;; Tracked objects:
  4616 ;;		On entry : 60/20
  4617 ;;		On exit  : 60/20
  4618 ;;		Unchanged: FFF9F/0
  4619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4620 ;;      Params:         4       0       0       0       0
  4621 ;;      Locals:         2       0       0       0       0
  4622 ;;      Temps:          0       0       0       0       0
  4623 ;;      Totals:         6       0       0       0       0
  4624 ;;Total ram usage:        6 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; This function calls:
  4627 ;;		Nothing
  4628 ;; This function is called by:
  4629 ;;		_main
  4630 ;;		_fround
  4631 ;;		_scale
  4632 ;;		_sprintf
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635  0CF0                     ___wmul:	
  4636                           
  4637                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4638  0CF0  01F4               	clrf	___wmul@product
  4639  0CF1  01F5               	clrf	___wmul@product+1
  4640  0CF2                     l5736:	
  4641  0CF2  1C70               	btfss	___wmul@multiplier,0
  4642  0CF3  2CFA               	goto	l5740
  4643  0CF4  0872               	movf	___wmul@multiplicand,w
  4644  0CF5  07F4               	addwf	___wmul@product,f
  4645  0CF6  1803               	skipnc
  4646  0CF7  0AF5               	incf	___wmul@product+1,f
  4647  0CF8  0873               	movf	___wmul@multiplicand+1,w
  4648  0CF9  07F5               	addwf	___wmul@product+1,f
  4649  0CFA                     l5740:	
  4650  0CFA  1003               	clrc
  4651  0CFB  0DF2               	rlf	___wmul@multiplicand,f
  4652  0CFC  0DF3               	rlf	___wmul@multiplicand+1,f
  4653  0CFD  1003               	clrc
  4654  0CFE  0CF1               	rrf	___wmul@multiplier+1,f
  4655  0CFF  0CF0               	rrf	___wmul@multiplier,f
  4656  0D00  0871               	movf	___wmul@multiplier+1,w
  4657  0D01  0470               	iorwf	___wmul@multiplier,w
  4658  0D02  1D03               	skipz
  4659  0D03  2CF2               	goto	l5736
  4660  0D04  0875               	movf	___wmul@product+1,w
  4661  0D05  00F1               	movwf	?___wmul+1
  4662  0D06  0874               	movf	___wmul@product,w
  4663  0D07  00F0               	movwf	?___wmul
  4664  0D08  0008               	return
  4665  0D09                     __end_of___wmul:	
  4666  0D09                     __ptext778:	
  4667 ;; =============== function ___awdiv ends ============
  4668                           
  4669                           
  4670 ;; *************** function ___fttol *****************
  4671 ;; Defined at:
  4672 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fttol.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  f1              3    0[BANK0 ] float 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;  lval            4    8[BANK0 ] unsigned long 
  4677 ;;  exp1            1   12[BANK0 ] unsigned char 
  4678 ;;  sign1           1    7[BANK0 ] unsigned char 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  4    0[BANK0 ] long 
  4681 ;; Registers used:
  4682 ;;		wreg, status,2, status,0
  4683 ;; Tracked objects:
  4684 ;;		On entry : 60/0
  4685 ;;		On exit  : 60/0
  4686 ;;		Unchanged: FFF9F/0
  4687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4688 ;;      Params:         0       4       0       0       0
  4689 ;;      Locals:         0       6       0       0       0
  4690 ;;      Temps:          0       3       0       0       0
  4691 ;;      Totals:         0      13       0       0       0
  4692 ;;Total ram usage:       13 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; This function calls:
  4695 ;;		Nothing
  4696 ;; This function is called by:
  4697 ;;		_main
  4698 ;;		_sprintf
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701  0D09                     ___fttol:	
  4702                           
  4703                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4704  0D09  27D9  120A  158A   	fcall	PL30	;call to abstracted procedure
  4705  0D0C  1003               	clrc
  4706  0D0D  0D25               	rlf	??___fttol+1,w
  4707  0D0E  0D26               	rlf	??___fttol+2,w
  4708  0D0F  00AC               	movwf	___fttol@exp1
  4709  0D10  08AC               	movf	___fttol@exp1,f
  4710  0D11  1D03               	skipz
  4711  0D12  2D18               	goto	l5850
  4712  0D13                     l5848:	
  4713  0D13  01A0               	clrf	?___fttol
  4714  0D14  01A1               	clrf	?___fttol+1
  4715  0D15  01A2               	clrf	?___fttol+2
  4716  0D16  01A3               	clrf	?___fttol+3
  4717  0D17  0008               	return
  4718  0D18                     l5850:	
  4719  0D18  27D9  120A  158A   	fcall	PL30	;call to abstracted procedure
  4720  0D1B  3017               	movlw	23
  4721  0D1C                     u2285:	
  4722  0D1C  1003               	clrc
  4723  0D1D  0CA6               	rrf	??___fttol+2,f
  4724  0D1E  0CA5               	rrf	??___fttol+1,f
  4725  0D1F  0CA4               	rrf	??___fttol,f
  4726  0D20  3EFF               	addlw	-1
  4727  0D21  1D03               	skipz
  4728  0D22  2D1C               	goto	u2285
  4729  0D23  0824               	movf	??___fttol,w
  4730  0D24  00A7               	movwf	___fttol@sign1
  4731  0D25  17A1               	bsf	___fttol@f1+1,7
  4732  0D26  01A2               	clrf	___fttol@f1+2
  4733  0D27  0820               	movf	___fttol@f1,w
  4734  0D28  00A8               	movwf	___fttol@lval
  4735  0D29  0821               	movf	___fttol@f1+1,w
  4736  0D2A  00A9               	movwf	___fttol@lval+1
  4737  0D2B  0822               	movf	___fttol@f1+2,w
  4738  0D2C  00AA               	movwf	___fttol@lval+2
  4739  0D2D  308E               	movlw	142
  4740  0D2E  01AB               	clrf	___fttol@lval+3
  4741  0D2F  02AC               	subwf	___fttol@exp1,f
  4742  0D30  1FAC               	btfss	___fttol@exp1,7
  4743  0D31  2D3F               	goto	l5870
  4744  0D32  082C               	movf	___fttol@exp1,w
  4745  0D33  3A80               	xorlw	128
  4746  0D34  3E8F               	addlw	143
  4747  0D35  1C03               	btfss	3,0
  4748  0D36  2D13               	goto	l5848
  4749  0D37                     l5866:	
  4750  0D37  1003               	clrc
  4751  0D38  0CAB               	rrf	___fttol@lval+3,f
  4752  0D39  0CAA               	rrf	___fttol@lval+2,f
  4753  0D3A  0CA9               	rrf	___fttol@lval+1,f
  4754  0D3B  0CA8               	rrf	___fttol@lval,f
  4755  0D3C  0FAC               	incfsz	___fttol@exp1,f
  4756  0D3D  2D37               	goto	l5866
  4757  0D3E  2D4D               	goto	l5876
  4758  0D3F                     l5870:	
  4759  0D3F  3018               	movlw	24
  4760  0D40  022C               	subwf	___fttol@exp1,w
  4761  0D41  1803               	btfsc	3,0
  4762  0D42  2D13               	goto	l5848
  4763  0D43                     l2407:	
  4764  0D43  08AC               	movf	___fttol@exp1,f
  4765  0D44  1903               	btfsc	3,2
  4766  0D45  2D4D               	goto	l5876
  4767  0D46  1003               	clrc
  4768  0D47  0DA8               	rlf	___fttol@lval,f
  4769  0D48  0DA9               	rlf	___fttol@lval+1,f
  4770  0D49  0DAA               	rlf	___fttol@lval+2,f
  4771  0D4A  0DAB               	rlf	___fttol@lval+3,f
  4772  0D4B  03AC               	decf	___fttol@exp1,f
  4773  0D4C  2D43               	goto	l2407
  4774  0D4D                     l5876:	
  4775  0D4D  0827               	movf	___fttol@sign1,w
  4776  0D4E  1903               	btfsc	3,2
  4777  0D4F  2D5B               	goto	l5880
  4778  0D50  09A8               	comf	___fttol@lval,f
  4779  0D51  09A9               	comf	___fttol@lval+1,f
  4780  0D52  09AA               	comf	___fttol@lval+2,f
  4781  0D53  09AB               	comf	___fttol@lval+3,f
  4782  0D54  0AA8               	incf	___fttol@lval,f
  4783  0D55  1903               	skipnz
  4784  0D56  0AA9               	incf	___fttol@lval+1,f
  4785  0D57  1903               	skipnz
  4786  0D58  0AAA               	incf	___fttol@lval+2,f
  4787  0D59  1903               	skipnz
  4788  0D5A  0AAB               	incf	___fttol@lval+3,f
  4789  0D5B                     l5880:	
  4790  0D5B  082B               	movf	___fttol@lval+3,w
  4791  0D5C  00A3               	movwf	?___fttol+3
  4792  0D5D  082A               	movf	___fttol@lval+2,w
  4793  0D5E  00A2               	movwf	?___fttol+2
  4794  0D5F  0829               	movf	___fttol@lval+1,w
  4795  0D60  00A1               	movwf	?___fttol+1
  4796  0D61  0828               	movf	___fttol@lval,w
  4797  0D62  00A0               	movwf	?___fttol
  4798  0D63  0008               	return
  4799  0D64                     __end_of___fttol:	
  4800  0D64                     __ptext776:	
  4801 ;; =============== function ___ftneg ends ============
  4802                           
  4803                           
  4804 ;; *************** function ___llmod *****************
  4805 ;; Defined at:
  4806 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  divisor         4    0[BANK0 ] unsigned long 
  4809 ;;  dividend        4    4[BANK0 ] unsigned long 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;  counter         1   13[COMMON] unsigned char 
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  4    0[BANK0 ] unsigned long 
  4814 ;; Registers used:
  4815 ;;		wreg, status,2, status,0
  4816 ;; Tracked objects:
  4817 ;;		On entry : 60/0
  4818 ;;		On exit  : 60/0
  4819 ;;		Unchanged: FFF9F/0
  4820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4821 ;;      Params:         0       8       0       0       0
  4822 ;;      Locals:         1       0       0       0       0
  4823 ;;      Temps:          0       0       0       0       0
  4824 ;;      Totals:         1       8       0       0       0
  4825 ;;Total ram usage:        9 bytes
  4826 ;; Hardware stack levels used:    1
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_sprintf
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833  0D64                     ___llmod:	
  4834                           
  4835                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4836  0D64  0823               	movf	___llmod@divisor+3,w
  4837  0D65  0422               	iorwf	___llmod@divisor+2,w
  4838  0D66  0421               	iorwf	___llmod@divisor+1,w
  4839  0D67  0420               	iorwf	___llmod@divisor,w
  4840  0D68  1903               	skipnz
  4841  0D69  2D99               	goto	l5944
  4842  0D6A  01FD               	clrf	___llmod@counter
  4843  0D6B                     L13:	
  4844  0D6B  0AFD               	incf	___llmod@counter,f
  4845  0D6C  1BA3               	btfsc	___llmod@divisor+3,7
  4846  0D6D  2D74               	goto	l5936
  4847  0D6E  1003               	clrc
  4848  0D6F  0DA0               	rlf	___llmod@divisor,f
  4849  0D70  0DA1               	rlf	___llmod@divisor+1,f
  4850  0D71  0DA2               	rlf	___llmod@divisor+2,f
  4851  0D72  0DA3               	rlf	___llmod@divisor+3,f
  4852  0D73  2D6B               	goto	L13
  4853  0D74                     l5936:	
  4854  0D74  0823               	movf	___llmod@divisor+3,w
  4855  0D75  0227               	subwf	___llmod@dividend+3,w
  4856  0D76  1D03               	skipz
  4857  0D77  2D82               	goto	u2445
  4858  0D78  0822               	movf	___llmod@divisor+2,w
  4859  0D79  0226               	subwf	___llmod@dividend+2,w
  4860  0D7A  1D03               	skipz
  4861  0D7B  2D82               	goto	u2445
  4862  0D7C  0821               	movf	___llmod@divisor+1,w
  4863  0D7D  0225               	subwf	___llmod@dividend+1,w
  4864  0D7E  1D03               	skipz
  4865  0D7F  2D82               	goto	u2445
  4866  0D80  0820               	movf	___llmod@divisor,w
  4867  0D81  0224               	subwf	___llmod@dividend,w
  4868  0D82                     u2445:	
  4869  0D82  1C03               	skipc
  4870  0D83  2D93               	goto	L14
  4871  0D84  0820               	movf	___llmod@divisor,w
  4872  0D85  02A4               	subwf	___llmod@dividend,f
  4873  0D86  0821               	movf	___llmod@divisor+1,w
  4874  0D87  1C03               	skipc
  4875  0D88  0F21               	incfsz	___llmod@divisor+1,w
  4876  0D89  02A5               	subwf	___llmod@dividend+1,f
  4877  0D8A  0822               	movf	___llmod@divisor+2,w
  4878  0D8B  1C03               	skipc
  4879  0D8C  0F22               	incfsz	___llmod@divisor+2,w
  4880  0D8D  02A6               	subwf	___llmod@dividend+2,f
  4881  0D8E  0823               	movf	___llmod@divisor+3,w
  4882  0D8F  1C03               	skipc
  4883  0D90  0F23               	incfsz	___llmod@divisor+3,w
  4884  0D91  02A7               	subwf	___llmod@dividend+3,f
  4885  0D92  1003               	clrc
  4886  0D93                     L14:	
  4887  0D93  0CA3               	rrf	___llmod@divisor+3,f
  4888  0D94  0CA2               	rrf	___llmod@divisor+2,f
  4889  0D95  0CA1               	rrf	___llmod@divisor+1,f
  4890  0D96  0CA0               	rrf	___llmod@divisor,f
  4891  0D97  0BFD               	decfsz	___llmod@counter,f
  4892  0D98  2D74               	goto	l5936
  4893  0D99                     l5944:	
  4894  0D99  0827               	movf	___llmod@dividend+3,w
  4895  0D9A  00A3               	movwf	?___llmod+3
  4896  0D9B  0826               	movf	___llmod@dividend+2,w
  4897  0D9C  00A2               	movwf	?___llmod+2
  4898  0D9D  0825               	movf	___llmod@dividend+1,w
  4899  0D9E  00A1               	movwf	?___llmod+1
  4900  0D9F  0824               	movf	___llmod@dividend,w
  4901  0DA0  00A0               	movwf	?___llmod
  4902  0DA1  0008               	return
  4903  0DA2                     __end_of___llmod:	
  4904  0DA2                     __ptext773:	
  4905 ;; =============== function ___awmod ends ============
  4906                           
  4907                           
  4908 ;; *************** function ___lldiv *****************
  4909 ;; Defined at:
  4910 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  divisor         4    0[COMMON] unsigned long 
  4913 ;;  dividend        4    4[COMMON] unsigned long 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  quotient        4    8[COMMON] unsigned long 
  4916 ;;  counter         1   12[COMMON] unsigned char 
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  4    0[COMMON] unsigned long 
  4919 ;; Registers used:
  4920 ;;		wreg, status,2, status,0
  4921 ;; Tracked objects:
  4922 ;;		On entry : 60/20
  4923 ;;		On exit  : 60/20
  4924 ;;		Unchanged: FFF9F/0
  4925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4926 ;;      Params:         8       0       0       0       0
  4927 ;;      Locals:         5       0       0       0       0
  4928 ;;      Temps:          0       0       0       0       0
  4929 ;;      Totals:        13       0       0       0       0
  4930 ;;Total ram usage:       13 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_sprintf
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938  0DA2                     ___lldiv:	
  4939                           
  4940                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4941  0DA2  01F8               	clrf	___lldiv@quotient
  4942  0DA3  01F9               	clrf	___lldiv@quotient+1
  4943  0DA4  01FA               	clrf	___lldiv@quotient+2
  4944  0DA5  01FB               	clrf	___lldiv@quotient+3
  4945  0DA6  0873               	movf	___lldiv@divisor+3,w
  4946  0DA7  0472               	iorwf	___lldiv@divisor+2,w
  4947  0DA8  0471               	iorwf	___lldiv@divisor+1,w
  4948  0DA9  0470               	iorwf	___lldiv@divisor,w
  4949  0DAA  1903               	skipnz
  4950  0DAB  2DE1               	goto	l5998
  4951  0DAC  01FC               	clrf	___lldiv@counter
  4952  0DAD                     L10:	
  4953  0DAD  0AFC               	incf	___lldiv@counter,f
  4954  0DAE  1BF3               	btfsc	___lldiv@divisor+3,7
  4955  0DAF  2DB6               	goto	l5986
  4956  0DB0  1003               	clrc
  4957  0DB1  0DF0               	rlf	___lldiv@divisor,f
  4958  0DB2  0DF1               	rlf	___lldiv@divisor+1,f
  4959  0DB3  0DF2               	rlf	___lldiv@divisor+2,f
  4960  0DB4  0DF3               	rlf	___lldiv@divisor+3,f
  4961  0DB5  2DAD               	goto	L10
  4962  0DB6                     l5986:	
  4963  0DB6  1003               	clrc
  4964  0DB7  0DF8               	rlf	___lldiv@quotient,f
  4965  0DB8  0DF9               	rlf	___lldiv@quotient+1,f
  4966  0DB9  0DFA               	rlf	___lldiv@quotient+2,f
  4967  0DBA  0DFB               	rlf	___lldiv@quotient+3,f
  4968  0DBB  0873               	movf	___lldiv@divisor+3,w
  4969  0DBC  0277               	subwf	___lldiv@dividend+3,w
  4970  0DBD  1D03               	skipz
  4971  0DBE  2DC9               	goto	u2525
  4972  0DBF  0872               	movf	___lldiv@divisor+2,w
  4973  0DC0  0276               	subwf	___lldiv@dividend+2,w
  4974  0DC1  1D03               	skipz
  4975  0DC2  2DC9               	goto	u2525
  4976  0DC3  0871               	movf	___lldiv@divisor+1,w
  4977  0DC4  0275               	subwf	___lldiv@dividend+1,w
  4978  0DC5  1D03               	skipz
  4979  0DC6  2DC9               	goto	u2525
  4980  0DC7  0870               	movf	___lldiv@divisor,w
  4981  0DC8  0274               	subwf	___lldiv@dividend,w
  4982  0DC9                     u2525:	
  4983  0DC9  1C03               	skipc
  4984  0DCA  2DDB               	goto	L11
  4985  0DCB  0870               	movf	___lldiv@divisor,w
  4986  0DCC  02F4               	subwf	___lldiv@dividend,f
  4987  0DCD  0871               	movf	___lldiv@divisor+1,w
  4988  0DCE  1C03               	skipc
  4989  0DCF  0F71               	incfsz	___lldiv@divisor+1,w
  4990  0DD0  02F5               	subwf	___lldiv@dividend+1,f
  4991  0DD1  0872               	movf	___lldiv@divisor+2,w
  4992  0DD2  1C03               	skipc
  4993  0DD3  0F72               	incfsz	___lldiv@divisor+2,w
  4994  0DD4  02F6               	subwf	___lldiv@dividend+2,f
  4995  0DD5  0873               	movf	___lldiv@divisor+3,w
  4996  0DD6  1C03               	skipc
  4997  0DD7  0F73               	incfsz	___lldiv@divisor+3,w
  4998  0DD8  02F7               	subwf	___lldiv@dividend+3,f
  4999  0DD9  1478               	bsf	___lldiv@quotient,0
  5000  0DDA  1003               	clrc
  5001  0DDB                     L11:	
  5002  0DDB  0CF3               	rrf	___lldiv@divisor+3,f
  5003  0DDC  0CF2               	rrf	___lldiv@divisor+2,f
  5004  0DDD  0CF1               	rrf	___lldiv@divisor+1,f
  5005  0DDE  0CF0               	rrf	___lldiv@divisor,f
  5006  0DDF  0BFC               	decfsz	___lldiv@counter,f
  5007  0DE0  2DB6               	goto	l5986
  5008  0DE1                     l5998:	
  5009  0DE1  087B               	movf	___lldiv@quotient+3,w
  5010  0DE2  00F3               	movwf	?___lldiv+3
  5011  0DE3  087A               	movf	___lldiv@quotient+2,w
  5012  0DE4  00F2               	movwf	?___lldiv+2
  5013  0DE5  0879               	movf	___lldiv@quotient+1,w
  5014  0DE6  00F1               	movwf	?___lldiv+1
  5015  0DE7  0878               	movf	___lldiv@quotient,w
  5016  0DE8  00F0               	movwf	?___lldiv
  5017  0DE9  0008               	return
  5018  0DEA                     __end_of___lldiv:	
  5019  0DEA                     __ptext786:	
  5020 ;; =============== function __div_to_l_ ends ============
  5021                           
  5022                           
  5023 ;; *************** function __tdiv_to_l_ *****************
  5024 ;; Defined at:
  5025 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftdivl.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  f1              3    0[COMMON] float 
  5028 ;;  f2              3    3[COMMON] float 
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;  quot            4    0[BANK0 ] unsigned long 
  5031 ;;  exp1            1    5[BANK0 ] unsigned char 
  5032 ;;  cntr            1    4[BANK0 ] unsigned char 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  4    0[COMMON] unsigned long 
  5035 ;; Registers used:
  5036 ;;		wreg, status,2, status,0
  5037 ;; Tracked objects:
  5038 ;;		On entry : 60/20
  5039 ;;		On exit  : 60/0
  5040 ;;		Unchanged: FFF9F/0
  5041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5042 ;;      Params:         6       0       0       0       0
  5043 ;;      Locals:         0       6       0       0       0
  5044 ;;      Temps:          3       0       0       0       0
  5045 ;;      Totals:         9       6       0       0       0
  5046 ;;Total ram usage:       15 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_sprintf
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054  0DEA                     __tdiv_to_l_:	
  5055                           
  5056                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5057  0DEA  0870               	movf	__tdiv_to_l_@f1,w
  5058  0DEB  00F6               	movwf	??__tdiv_to_l_
  5059  0DEC  0871               	movf	__tdiv_to_l_@f1+1,w
  5060  0DED  00F7               	movwf	??__tdiv_to_l_+1
  5061  0DEE  0872               	movf	__tdiv_to_l_@f1+2,w
  5062  0DEF  00F8               	movwf	??__tdiv_to_l_+2
  5063  0DF0  1003               	clrc
  5064  0DF1  0D77               	rlf	??__tdiv_to_l_+1,w
  5065  0DF2  0D78               	rlf	??__tdiv_to_l_+2,w
  5066  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  5067  0DF4  00A5               	movwf	__tdiv_to_l_@exp1
  5068  0DF5  08A5               	movf	__tdiv_to_l_@exp1,f
  5069  0DF6  1D03               	skipz
  5070  0DF7  2DFD               	goto	l5628
  5071  0DF8                     l5626:	
  5072  0DF8  01F0               	clrf	?__tdiv_to_l_
  5073  0DF9  01F1               	clrf	?__tdiv_to_l_+1
  5074  0DFA  01F2               	clrf	?__tdiv_to_l_+2
  5075  0DFB  01F3               	clrf	?__tdiv_to_l_+3
  5076  0DFC  0008               	return
  5077  0DFD                     l5628:	
  5078  0DFD  0873               	movf	__tdiv_to_l_@f2,w
  5079  0DFE  00F6               	movwf	??__tdiv_to_l_
  5080  0DFF  0874               	movf	__tdiv_to_l_@f2+1,w
  5081  0E00  00F7               	movwf	??__tdiv_to_l_+1
  5082  0E01  0875               	movf	__tdiv_to_l_@f2+2,w
  5083  0E02  00F8               	movwf	??__tdiv_to_l_+2
  5084  0E03  1003               	clrc
  5085  0E04  0D77               	rlf	??__tdiv_to_l_+1,w
  5086  0E05  0D78               	rlf	??__tdiv_to_l_+2,w
  5087  0E06  00A4               	movwf	__tdiv_to_l_@cntr
  5088  0E07  08A4               	movf	__tdiv_to_l_@cntr,f
  5089  0E08  1903               	btfsc	3,2
  5090  0E09  2DF8               	goto	l5626
  5091  0E0A  307F               	movlw	127
  5092  0E0B  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5093  0E0C  01F2               	clrf	__tdiv_to_l_@f1+2
  5094  0E0D  17F4               	bsf	__tdiv_to_l_@f2+1,7
  5095  0E0E  01F5               	clrf	__tdiv_to_l_@f2+2
  5096  0E0F  01A0               	clrf	__tdiv_to_l_@quot
  5097  0E10  01A1               	clrf	__tdiv_to_l_@quot+1
  5098  0E11  01A2               	clrf	__tdiv_to_l_@quot+2
  5099  0E12  01A3               	clrf	__tdiv_to_l_@quot+3
  5100  0E13  02A5               	subwf	__tdiv_to_l_@exp1,f
  5101  0E14  3098               	movlw	152
  5102  0E15  0724               	addwf	__tdiv_to_l_@cntr,w
  5103  0E16  00F6               	movwf	??__tdiv_to_l_
  5104  0E17  02A5               	subwf	__tdiv_to_l_@exp1,f
  5105  0E18  3018               	movlw	24
  5106  0E19  00A4               	movwf	__tdiv_to_l_@cntr
  5107  0E1A                     l5642:	
  5108  0E1A  1003               	clrc
  5109  0E1B  0DA0               	rlf	__tdiv_to_l_@quot,f
  5110  0E1C  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5111  0E1D  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5112  0E1E  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5113  0E1F  0875               	movf	__tdiv_to_l_@f2+2,w
  5114  0E20  0272               	subwf	__tdiv_to_l_@f1+2,w
  5115  0E21  1D03               	skipz
  5116  0E22  2E29               	goto	u1895
  5117  0E23  0874               	movf	__tdiv_to_l_@f2+1,w
  5118  0E24  0271               	subwf	__tdiv_to_l_@f1+1,w
  5119  0E25  1D03               	skipz
  5120  0E26  2E29               	goto	u1895
  5121  0E27  0873               	movf	__tdiv_to_l_@f2,w
  5122  0E28  0270               	subwf	__tdiv_to_l_@f1,w
  5123  0E29                     u1895:	
  5124  0E29  1C03               	skipc
  5125  0E2A  2E37               	goto	L21
  5126  0E2B  0873               	movf	__tdiv_to_l_@f2,w
  5127  0E2C  02F0               	subwf	__tdiv_to_l_@f1,f
  5128  0E2D  0874               	movf	__tdiv_to_l_@f2+1,w
  5129  0E2E  1C03               	skipc
  5130  0E2F  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  5131  0E30  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5132  0E31  0875               	movf	__tdiv_to_l_@f2+2,w
  5133  0E32  1C03               	skipc
  5134  0E33  0A75               	incf	__tdiv_to_l_@f2+2,w
  5135  0E34  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5136  0E35  1420               	bsf	__tdiv_to_l_@quot,0
  5137  0E36  1003               	clrc
  5138  0E37                     L21:	
  5139  0E37  0DF0               	rlf	__tdiv_to_l_@f1,f
  5140  0E38  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5141  0E39  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5142  0E3A  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  5143  0E3B  2E1A               	goto	l5642
  5144  0E3C  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5145  0E3D  2E4B               	goto	l5662
  5146  0E3E  0825               	movf	__tdiv_to_l_@exp1,w
  5147  0E3F  3A80               	xorlw	128
  5148  0E40  3E97               	addlw	151
  5149  0E41  1C03               	btfss	3,0
  5150  0E42  2DF8               	goto	l5626
  5151  0E43                     l5658:	
  5152  0E43  1003               	clrc
  5153  0E44  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5154  0E45  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5155  0E46  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5156  0E47  0CA0               	rrf	__tdiv_to_l_@quot,f
  5157  0E48  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  5158  0E49  2E43               	goto	l5658
  5159  0E4A  2E59               	goto	l5668
  5160  0E4B                     l5662:	
  5161  0E4B  3018               	movlw	24
  5162  0E4C  0225               	subwf	__tdiv_to_l_@exp1,w
  5163  0E4D  1803               	btfsc	3,0
  5164  0E4E  2DF8               	goto	l5626
  5165  0E4F                     l2545:	
  5166  0E4F  08A5               	movf	__tdiv_to_l_@exp1,f
  5167  0E50  1903               	btfsc	3,2
  5168  0E51  2E59               	goto	l5668
  5169  0E52  1003               	clrc
  5170  0E53  0DA0               	rlf	__tdiv_to_l_@quot,f
  5171  0E54  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5172  0E55  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5173  0E56  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5174  0E57  03A5               	decf	__tdiv_to_l_@exp1,f
  5175  0E58  2E4F               	goto	l2545
  5176  0E59                     l5668:	
  5177  0E59  0823               	movf	__tdiv_to_l_@quot+3,w
  5178  0E5A  00F3               	movwf	?__tdiv_to_l_+3
  5179  0E5B  0822               	movf	__tdiv_to_l_@quot+2,w
  5180  0E5C  00F2               	movwf	?__tdiv_to_l_+2
  5181  0E5D  0821               	movf	__tdiv_to_l_@quot+1,w
  5182  0E5E  00F1               	movwf	?__tdiv_to_l_+1
  5183  0E5F  0820               	movf	__tdiv_to_l_@quot,w
  5184  0E60  00F0               	movwf	?__tdiv_to_l_
  5185  0E61  0008               	return
  5186  0E62                     __end_of__tdiv_to_l_:	
  5187  0E62                     __ptext775:	
  5188 ;; =============== function ___ftge ends ============
  5189                           
  5190                           
  5191 ;; *************** function ___ftneg *****************
  5192 ;; Defined at:
  5193 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftneg.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  f1              3    0[COMMON] float 
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;		None
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  3    0[COMMON] float 
  5200 ;; Registers used:
  5201 ;;		wreg
  5202 ;; Tracked objects:
  5203 ;;		On entry : 160/20
  5204 ;;		On exit  : 160/20
  5205 ;;		Unchanged: FFE9F/0
  5206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5207 ;;      Params:         3       0       0       0       0
  5208 ;;      Locals:         0       0       0       0       0
  5209 ;;      Temps:          0       0       0       0       0
  5210 ;;      Totals:         3       0       0       0       0
  5211 ;;Total ram usage:        3 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_sprintf
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219  0E62                     ___ftneg:	
  5220                           
  5221                           ; Regs used in ___ftneg: [wreg]
  5222  0E62  0872               	movf	___ftneg@f1+2,w
  5223  0E63  0471               	iorwf	___ftneg@f1+1,w
  5224  0E64  0470               	iorwf	___ftneg@f1,w
  5225  0E65  1903               	skipnz
  5226  0E66  0008               	return
  5227  0E67  3080               	movlw	128
  5228  0E68  06F2               	xorwf	___ftneg@f1+2,f
  5229  0E69  0008               	return
  5230  0E6A                     __end_of___ftneg:	
  5231  0E6A                     __ptext769:	
  5232 ;; =============== function ___ftmul ends ============
  5233                           
  5234                           
  5235 ;; *************** function ___ftadd *****************
  5236 ;; Defined at:
  5237 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftadd.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  f1              3   32[BANK0 ] float 
  5240 ;;  f2              3   35[BANK0 ] float 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;  exp1            1   43[BANK0 ] unsigned char 
  5243 ;;  exp2            1   42[BANK0 ] unsigned char 
  5244 ;;  sign            1   41[BANK0 ] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  3   32[BANK0 ] float 
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0, pclath, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 60/0
  5251 ;;		On exit  : 60/0
  5252 ;;		Unchanged: FFF9F/0
  5253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5254 ;;      Params:         0       6       0       0       0
  5255 ;;      Locals:         0       3       0       0       0
  5256 ;;      Temps:          0       3       0       0       0
  5257 ;;      Totals:         0      12       0       0       0
  5258 ;;Total ram usage:       12 bytes
  5259 ;; Hardware stack levels used:    1
  5260 ;; Hardware stack levels required when called:    1
  5261 ;; This function calls:
  5262 ;;		___ftpack
  5263 ;; This function is called by:
  5264 ;;		_sprintf
  5265 ;;		___ftsub
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268  0E6A                     ___ftadd:	
  5269                           
  5270                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5271  0E6A  0840               	movf	___ftadd@f1,w
  5272  0E6B  00C6               	movwf	??___ftadd
  5273  0E6C  0841               	movf	___ftadd@f1+1,w
  5274  0E6D  00C7               	movwf	??___ftadd+1
  5275  0E6E  0842               	movf	___ftadd@f1+2,w
  5276  0E6F  00C8               	movwf	??___ftadd+2
  5277  0E70  1003               	clrc
  5278  0E71  0D47               	rlf	??___ftadd+1,w
  5279  0E72  0D48               	rlf	??___ftadd+2,w
  5280  0E73  00CB               	movwf	___ftadd@exp1
  5281  0E74  0843               	movf	___ftadd@f2,w
  5282  0E75  00C6               	movwf	??___ftadd
  5283  0E76  0844               	movf	___ftadd@f2+1,w
  5284  0E77  00C7               	movwf	??___ftadd+1
  5285  0E78  0845               	movf	___ftadd@f2+2,w
  5286  0E79  00C8               	movwf	??___ftadd+2
  5287  0E7A  1003               	clrc
  5288  0E7B  0D47               	rlf	??___ftadd+1,w
  5289  0E7C  0D48               	rlf	??___ftadd+2,w
  5290  0E7D  00CA               	movwf	___ftadd@exp2
  5291  0E7E  084B               	movf	___ftadd@exp1,w
  5292  0E7F  1903               	btfsc	3,2
  5293  0E80  2E8D               	goto	l6074
  5294  0E81  084A               	movf	___ftadd@exp2,w
  5295  0E82  024B               	subwf	___ftadd@exp1,w
  5296  0E83  084A               	movf	___ftadd@exp2,w
  5297  0E84  1803               	skipnc
  5298  0E85  2E95               	goto	L7
  5299  0E86  00C6               	movwf	??___ftadd
  5300  0E87  084B               	movf	___ftadd@exp1,w
  5301  0E88  02C6               	subwf	??___ftadd,f
  5302  0E89  3019               	movlw	25
  5303  0E8A  0246               	subwf	??___ftadd,w
  5304  0E8B  1C03               	skipc
  5305  0E8C  2E94               	goto	l6078
  5306  0E8D                     l6074:	
  5307  0E8D  0843               	movf	___ftadd@f2,w
  5308  0E8E  00C0               	movwf	?___ftadd
  5309  0E8F  0844               	movf	___ftadd@f2+1,w
  5310  0E90  00C1               	movwf	?___ftadd+1
  5311  0E91  0845               	movf	___ftadd@f2+2,w
  5312  0E92  00C2               	movwf	?___ftadd+2
  5313  0E93  0008               	return
  5314  0E94                     l6078:	
  5315  0E94  084A               	movf	___ftadd@exp2,w
  5316  0E95                     L7:	
  5317  0E95  1903               	btfsc	3,2
  5318  0E96  0008               	return
  5319  0E97  084B               	movf	___ftadd@exp1,w
  5320  0E98  024A               	subwf	___ftadd@exp2,w
  5321  0E99  1803               	skipnc
  5322  0E9A  2EA3               	goto	l6084
  5323  0E9B  084B               	movf	___ftadd@exp1,w
  5324  0E9C  00C6               	movwf	??___ftadd
  5325  0E9D  084A               	movf	___ftadd@exp2,w
  5326  0E9E  02C6               	subwf	??___ftadd,f
  5327  0E9F  3019               	movlw	25
  5328  0EA0  0246               	subwf	??___ftadd,w
  5329  0EA1  1803               	btfsc	3,0
  5330  0EA2  0008               	return
  5331  0EA3                     l6084:	
  5332  0EA3  3006               	movlw	6
  5333  0EA4  00C9               	movwf	___ftadd@sign
  5334  0EA5  1BC2               	btfsc	___ftadd@f1+2,7
  5335  0EA6  17C9               	bsf	___ftadd@sign,7
  5336  0EA7  1BC5               	btfsc	___ftadd@f2+2,7
  5337  0EA8  1749               	bsf	___ftadd@sign,6
  5338  0EA9  17C1               	bsf	___ftadd@f1+1,7
  5339  0EAA  01C2               	clrf	___ftadd@f1+2
  5340  0EAB  17C4               	bsf	___ftadd@f2+1,7
  5341  0EAC  01C5               	clrf	___ftadd@f2+2
  5342  0EAD  084A               	movf	___ftadd@exp2,w
  5343  0EAE  024B               	subwf	___ftadd@exp1,w
  5344  0EAF  1803               	skipnc
  5345  0EB0  2ECA               	goto	l6106
  5346  0EB1                     l6096:	
  5347  0EB1  1003               	clrc
  5348  0EB2  0DC3               	rlf	___ftadd@f2,f
  5349  0EB3  0DC4               	rlf	___ftadd@f2+1,f
  5350  0EB4  0DC5               	rlf	___ftadd@f2+2,f
  5351  0EB5  03CA               	decf	___ftadd@exp2,f
  5352  0EB6  084A               	movf	___ftadd@exp2,w
  5353  0EB7  064B               	xorwf	___ftadd@exp1,w
  5354  0EB8  1903               	skipnz
  5355  0EB9  2EC5               	goto	l6104
  5356  0EBA  03C9               	decf	___ftadd@sign,f
  5357  0EBB  0849               	movf	___ftadd@sign,w
  5358  0EBC  3907               	andlw	7
  5359  0EBD  1903               	btfsc	3,2
  5360  0EBE  2EC5               	goto	l6104
  5361  0EBF  2EB1               	goto	l6096
  5362  0EC0                     l6102:	
  5363  0EC0  1003               	clrc
  5364  0EC1  0CC2               	rrf	___ftadd@f1+2,f
  5365  0EC2  0CC1               	rrf	___ftadd@f1+1,f
  5366  0EC3  0CC0               	rrf	___ftadd@f1,f
  5367  0EC4  0ACB               	incf	___ftadd@exp1,f
  5368  0EC5                     l6104:	
  5369  0EC5  084B               	movf	___ftadd@exp1,w
  5370  0EC6  064A               	xorwf	___ftadd@exp2,w
  5371  0EC7  1903               	btfsc	3,2
  5372  0EC8  2EE6               	goto	l2351
  5373  0EC9  2EC0               	goto	l6102
  5374  0ECA                     l6106:	
  5375  0ECA  084B               	movf	___ftadd@exp1,w
  5376  0ECB  024A               	subwf	___ftadd@exp2,w
  5377  0ECC  1803               	skipnc
  5378  0ECD  2EE6               	goto	l2351
  5379  0ECE                     l6108:	
  5380  0ECE  1003               	clrc
  5381  0ECF  0DC0               	rlf	___ftadd@f1,f
  5382  0ED0  0DC1               	rlf	___ftadd@f1+1,f
  5383  0ED1  0DC2               	rlf	___ftadd@f1+2,f
  5384  0ED2  03CB               	decf	___ftadd@exp1,f
  5385  0ED3  084A               	movf	___ftadd@exp2,w
  5386  0ED4  064B               	xorwf	___ftadd@exp1,w
  5387  0ED5  1903               	skipnz
  5388  0ED6  2EE2               	goto	l6116
  5389  0ED7  03C9               	decf	___ftadd@sign,f
  5390  0ED8  0849               	movf	___ftadd@sign,w
  5391  0ED9  3907               	andlw	7
  5392  0EDA  1903               	btfsc	3,2
  5393  0EDB  2EE2               	goto	l6116
  5394  0EDC  2ECE               	goto	l6108
  5395  0EDD                     l6114:	
  5396  0EDD  1003               	clrc
  5397  0EDE  0CC5               	rrf	___ftadd@f2+2,f
  5398  0EDF  0CC4               	rrf	___ftadd@f2+1,f
  5399  0EE0  0CC3               	rrf	___ftadd@f2,f
  5400  0EE1  0ACA               	incf	___ftadd@exp2,f
  5401  0EE2                     l6116:	
  5402  0EE2  084B               	movf	___ftadd@exp1,w
  5403  0EE3  064A               	xorwf	___ftadd@exp2,w
  5404  0EE4  1D03               	skipz
  5405  0EE5  2EDD               	goto	l6114
  5406  0EE6                     l2351:	
  5407  0EE6  1FC9               	btfss	___ftadd@sign,7
  5408  0EE7  2EF1               	goto	l6122
  5409  0EE8  30FF               	movlw	255
  5410  0EE9  06C0               	xorwf	___ftadd@f1,f
  5411  0EEA  06C1               	xorwf	___ftadd@f1+1,f
  5412  0EEB  06C2               	xorwf	___ftadd@f1+2,f
  5413  0EEC  0AC0               	incf	___ftadd@f1,f
  5414  0EED  1903               	skipnz
  5415  0EEE  0AC1               	incf	___ftadd@f1+1,f
  5416  0EEF  1903               	skipnz
  5417  0EF0  0AC2               	incf	___ftadd@f1+2,f
  5418  0EF1                     l6122:	
  5419  0EF1  1F49               	btfss	___ftadd@sign,6
  5420  0EF2  2EFC               	goto	l6128
  5421  0EF3  30FF               	movlw	255
  5422  0EF4  06C3               	xorwf	___ftadd@f2,f
  5423  0EF5  06C4               	xorwf	___ftadd@f2+1,f
  5424  0EF6  06C5               	xorwf	___ftadd@f2+2,f
  5425  0EF7  0AC3               	incf	___ftadd@f2,f
  5426  0EF8  1903               	skipnz
  5427  0EF9  0AC4               	incf	___ftadd@f2+1,f
  5428  0EFA  1903               	skipnz
  5429  0EFB  0AC5               	incf	___ftadd@f2+2,f
  5430  0EFC                     l6128:	
  5431  0EFC  01C9               	clrf	___ftadd@sign
  5432  0EFD  0840               	movf	___ftadd@f1,w
  5433  0EFE  07C3               	addwf	___ftadd@f2,f
  5434  0EFF  0841               	movf	___ftadd@f1+1,w
  5435  0F00  1103               	clrz
  5436  0F01  1803               	skipnc
  5437  0F02  0A41               	incf	___ftadd@f1+1,w
  5438  0F03  1D03               	btfss	3,2
  5439  0F04  07C4               	addwf	___ftadd@f2+1,f
  5440  0F05  0842               	movf	___ftadd@f1+2,w
  5441  0F06  1103               	clrz
  5442  0F07  1803               	skipnc
  5443  0F08  0A42               	incf	___ftadd@f1+2,w
  5444  0F09  1D03               	btfss	3,2
  5445  0F0A  07C5               	addwf	___ftadd@f2+2,f
  5446  0F0B  1FC5               	btfss	___ftadd@f2+2,7
  5447  0F0C  2F18               	goto	l6140
  5448  0F0D  30FF               	movlw	255
  5449  0F0E  06C3               	xorwf	___ftadd@f2,f
  5450  0F0F  06C4               	xorwf	___ftadd@f2+1,f
  5451  0F10  06C5               	xorwf	___ftadd@f2+2,f
  5452  0F11  0AC3               	incf	___ftadd@f2,f
  5453  0F12  1903               	skipnz
  5454  0F13  0AC4               	incf	___ftadd@f2+1,f
  5455  0F14  1903               	skipnz
  5456  0F15  0AC5               	incf	___ftadd@f2+2,f
  5457  0F16  01C9               	clrf	___ftadd@sign
  5458  0F17  0AC9               	incf	___ftadd@sign,f
  5459  0F18                     l6140:	
  5460  0F18  0843               	movf	___ftadd@f2,w
  5461  0F19  00F0               	movwf	?___ftpack
  5462  0F1A  0844               	movf	___ftadd@f2+1,w
  5463  0F1B  00F1               	movwf	?___ftpack+1
  5464  0F1C  0845               	movf	___ftadd@f2+2,w
  5465  0F1D  00F2               	movwf	?___ftpack+2
  5466  0F1E  084B               	movf	___ftadd@exp1,w
  5467  0F1F  00F3               	movwf	?___ftpack+3
  5468  0F20  0849               	movf	___ftadd@sign,w
  5469  0F21  00F4               	movwf	?___ftpack+4
  5470  0F22  160A  118A  2769   	fcall	___ftpack
  5471  0F25  0870               	movf	?___ftpack,w
  5472  0F26  00C0               	movwf	?___ftadd
  5473  0F27  0871               	movf	?___ftpack+1,w
  5474  0F28  00C1               	movwf	?___ftadd+1
  5475  0F29  0872               	movf	?___ftpack+2,w
  5476  0F2A  00C2               	movwf	?___ftadd+2
  5477  0F2B  0008               	return
  5478  0F2C                     __end_of___ftadd:	
  5479  0F2C                     __ptext766:	
  5480 ;; =============== function _I2C_EEOUT ends ============
  5481                           
  5482                           
  5483 ;; *************** function ___lltoft *****************
  5484 ;; Defined at:
  5485 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lltoft.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  c               4    8[COMMON] unsigned long 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  exp             1   12[COMMON] unsigned char 
  5490 ;; Return value:  Size  Location     Type
  5491 ;;                  3    8[COMMON] float 
  5492 ;; Registers used:
  5493 ;;		wreg, status,2, status,0, pclath, cstack
  5494 ;; Tracked objects:
  5495 ;;		On entry : 60/20
  5496 ;;		On exit  : 60/20
  5497 ;;		Unchanged: FFF9F/0
  5498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5499 ;;      Params:         4       0       0       0       0
  5500 ;;      Locals:         1       0       0       0       0
  5501 ;;      Temps:          0       0       0       0       0
  5502 ;;      Totals:         5       0       0       0       0
  5503 ;;Total ram usage:        5 bytes
  5504 ;; Hardware stack levels used:    1
  5505 ;; Hardware stack levels required when called:    1
  5506 ;; This function calls:
  5507 ;;		___ftpack
  5508 ;; This function is called by:
  5509 ;;		_sprintf
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512  0F2C                     ___lltoft:	
  5513                           
  5514                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5515  0F2C  308E               	movlw	142
  5516  0F2D  00FC               	movwf	___lltoft@exp
  5517  0F2E                     l6208:	
  5518  0F2E  30FF               	movlw	255
  5519  0F2F  057B               	andwf	___lltoft@c+3,w
  5520  0F30  1903               	btfsc	3,2
  5521  0F31  2F39               	goto	l6210
  5522  0F32  1003               	clrc
  5523  0F33  0CFB               	rrf	___lltoft@c+3,f
  5524  0F34  0CFA               	rrf	___lltoft@c+2,f
  5525  0F35  0CF9               	rrf	___lltoft@c+1,f
  5526  0F36  0CF8               	rrf	___lltoft@c,f
  5527  0F37  0AFC               	incf	___lltoft@exp,f
  5528  0F38  2F2E               	goto	l6208
  5529  0F39                     l6210:	
  5530  0F39  0878               	movf	___lltoft@c,w
  5531  0F3A  00F0               	movwf	?___ftpack
  5532  0F3B  0879               	movf	___lltoft@c+1,w
  5533  0F3C  00F1               	movwf	?___ftpack+1
  5534  0F3D  087A               	movf	___lltoft@c+2,w
  5535  0F3E  00F2               	movwf	?___ftpack+2
  5536  0F3F  087C               	movf	___lltoft@exp,w
  5537  0F40  00F3               	movwf	?___ftpack+3
  5538  0F41  01F4               	clrf	?___ftpack+4
  5539  0F42  160A  118A  2769   	fcall	___ftpack
  5540  0F45  0870               	movf	?___ftpack,w
  5541  0F46  00F8               	movwf	?___lltoft
  5542  0F47  0871               	movf	?___ftpack+1,w
  5543  0F48  00F9               	movwf	?___lltoft+1
  5544  0F49  0872               	movf	?___ftpack+2,w
  5545  0F4A  00FA               	movwf	?___lltoft+2
  5546  0F4B  0008               	return
  5547  0F4C                     __end_of___lltoft:	
  5548  0F4C                     PL3:	
  5549  0F4C  0838               	movf	sprintf@c^(0+128),w
  5550  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  5551  0F4E  00DA               	movwf	??_sprintf
  5552  0F4F  1003               	clrc
  5553  0F50  0DDA               	rlf	??_sprintf,f
  5554  0F51  1003               	clrc
  5555  0F52  0D5A               	rlf	??_sprintf,w
  5556  0F53  3E4F               	addlw	low (_dpowers-__stringbase)
  5557  0F54  0084               	movwf	4
  5558  0F55  0008               	return
  5559  0F56                     PL4:	
  5560  0F56  300A               	movlw	10
  5561  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  5562  0F58  00A0               	movwf	?___llmod
  5563  0F59  01A1               	clrf	?___llmod+1
  5564  0F5A  01A2               	clrf	?___llmod+2
  5565  0F5B  01A3               	clrf	?___llmod+3
  5566  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  5567  0F5D  0008               	return
  5568  0F5E                     PL5:	
  5569  0F5E  0823               	movf	?___fttol+3,w
  5570  0F5F  1683               	bsf	3,5	;RP0=1, select bank1
  5571  0F60  00AB               	movwf	(sprintf@_val+3)^(0+128)
  5572  0F61  1283               	bcf	3,5	;RP0=0, select bank0
  5573  0F62  0822               	movf	?___fttol+2,w
  5574  0F63  1683               	bsf	3,5	;RP0=1, select bank1
  5575  0F64  00AA               	movwf	(sprintf@_val+2)^(0+128)
  5576  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  5577  0F66  0821               	movf	?___fttol+1,w
  5578  0F67  1683               	bsf	3,5	;RP0=1, select bank1
  5579  0F68  00A9               	movwf	(sprintf@_val+1)^(0+128)
  5580  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  5581  0F6A  0820               	movf	?___fttol,w
  5582  0F6B  0008               	return
  5583  0F6C                     PL10:	
  5584  0F6C  0840               	movf	?_scale,w
  5585  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  5586  0F6E  00A5               	movwf	sprintf@integ^(0+128)
  5587  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  5588  0F70  0841               	movf	?_scale+1,w
  5589  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  5590  0F72  00A6               	movwf	(sprintf@integ+1)^(0+128)
  5591  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  5592  0F74  0842               	movf	?_scale+2,w
  5593  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  5594  0F76  00A7               	movwf	(sprintf@integ+2)^(0+128)
  5595  0F77  0833               	movf	sprintf@fval^(0+128),w
  5596  0F78  0008               	return
  5597  0F79                     PL11:	
  5598  0F79  0770               	addwf	?___wmul,w
  5599  0F7A  00DA               	movwf	??_sprintf
  5600  0F7B  3000               	movlw	0
  5601  0F7C  1803               	skipnc
  5602  0F7D  3001               	movlw	1
  5603  0F7E  0771               	addwf	?___wmul+1,w
  5604  0F7F  00DB               	movwf	??_sprintf+1
  5605  0F80  085A               	movf	??_sprintf,w
  5606  0F81  3ED0               	addlw	208
  5607  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  5608  0F83  0008               	return
  5609  0F84                     PL12:	
  5610  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  5611  0F85  00A0               	movwf	?___fttol
  5612  0F86  1683               	bsf	3,5	;RP0=1, select bank1
  5613  0F87  0834               	movf	(sprintf@fval+1)^(0+128),w
  5614  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  5615  0F89  00A1               	movwf	?___fttol+1
  5616  0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  5617  0F8B  0835               	movf	(sprintf@fval+2)^(0+128),w
  5618  0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  5619  0F8D  00A2               	movwf	?___fttol+2
  5620  0F8E  0008               	return
  5621  0F8F                     PL13:	
  5622  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  5623  0F90  00B1               	movwf	?___ftmul
  5624  0F91  1683               	bsf	3,5	;RP0=1, select bank1
  5625  0F92  0834               	movf	(sprintf@fval+1)^(0+128),w
  5626  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  5627  0F94  00B2               	movwf	?___ftmul+1
  5628  0F95  1683               	bsf	3,5	;RP0=1, select bank1
  5629  0F96  0835               	movf	(sprintf@fval+2)^(0+128),w
  5630  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  5631  0F98  00B3               	movwf	?___ftmul+2
  5632  0F99  0008               	return
  5633  0F9A                     PL14:	
  5634  0F9A  00F3               	movwf	?___lldiv+3
  5635  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  5636  0F9C  082B               	movf	(sprintf@_val+3)^(0+128),w
  5637  0F9D  00F7               	movwf	?___lldiv+7
  5638  0F9E  082A               	movf	(sprintf@_val+2)^(0+128),w
  5639  0F9F  00F6               	movwf	?___lldiv+6
  5640  0FA0  0829               	movf	(sprintf@_val+1)^(0+128),w
  5641  0FA1  00F5               	movwf	?___lldiv+5
  5642  0FA2  0828               	movf	sprintf@_val^(0+128),w
  5643  0FA3  00F4               	movwf	?___lldiv+4
  5644  0FA4  0008               	return
  5645  0FA5                     PL17:	
  5646  0FA5  0873               	movf	?___lldiv+3,w
  5647  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  5648  0FA7  00A7               	movwf	?___llmod+7
  5649  0FA8  0872               	movf	?___lldiv+2,w
  5650  0FA9  00A6               	movwf	?___llmod+6
  5651  0FAA  0871               	movf	?___lldiv+1,w
  5652  0FAB  00A5               	movwf	?___llmod+5
  5653  0FAC  0870               	movf	?___lldiv,w
  5654  0FAD  00A4               	movwf	?___llmod+4
  5655  0FAE  0008               	return
  5656  0FAF                     PL19:	
  5657  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  5658  0FB0  00DA               	movwf	??_sprintf
  5659  0FB1  01DB               	clrf	??_sprintf+1
  5660  0FB2  1BDA               	btfsc	??_sprintf,7
  5661  0FB3  03DB               	decf	??_sprintf+1,f
  5662  0FB4  085B               	movf	??_sprintf+1,w
  5663  0FB5  3A80               	xorlw	128
  5664  0FB6  00DC               	movwf	??_sprintf+2
  5665  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  5666  0FB8  0008               	return
  5667  0FB9                     PL20:	
  5668  0FB9  0820               	movf	?___llmod,w
  5669  0FBA  3E30               	addlw	48
  5670  0FBB  00DB               	movwf	??_sprintf+1
  5671  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  5672  0FBD  0832               	movf	sprintf@sp^(0+128),w
  5673  0FBE  0084               	movwf	4
  5674  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  5675  0FC0  085B               	movf	??_sprintf+1,w
  5676  0FC1  0008               	return
  5677  0FC2                     PL21:	
  5678  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  5679  0FC3  0838               	movf	sprintf@c^(0+128),w
  5680  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  5681  0FC5  00DA               	movwf	??_sprintf
  5682  0FC6  01DB               	clrf	??_sprintf+1
  5683  0FC7  1BDA               	btfsc	??_sprintf,7
  5684  0FC8  03DB               	decf	??_sprintf+1,f
  5685  0FC9  1683               	bsf	3,5	;RP0=1, select bank1
  5686  0FCA  0008               	return
  5687  0FCB                     PL22:	
  5688  0FCB  0825               	movf	sprintf@integ^(0+128),w
  5689  0FCC  00F0               	movwf	?___ftge
  5690  0FCD  0826               	movf	(sprintf@integ+1)^(0+128),w
  5691  0FCE  00F1               	movwf	?___ftge+1
  5692  0FCF  0827               	movf	(sprintf@integ+2)^(0+128),w
  5693  0FD0  00F2               	movwf	?___ftge+2
  5694  0FD1  0008               	return
  5695  0FD2                     PL29:	
  5696  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  5697  0FD3  085B               	movf	??_sprintf+1,w
  5698  0FD4  1803               	skipnc
  5699  0FD5  3E01               	addlw	1
  5700  0FD6  3EFF               	addlw	255
  5701  0FD7  1683               	bsf	3,5	;RP0=1, select bank1
  5702  0FD8  0008               	return
  5703  0FD9                     PL30:	
  5704  0FD9  0820               	movf	___fttol@f1,w
  5705  0FDA  00A4               	movwf	??___fttol
  5706  0FDB  0821               	movf	___fttol@f1+1,w
  5707  0FDC  00A5               	movwf	??___fttol+1
  5708  0FDD  0822               	movf	___fttol@f1+2,w
  5709  0FDE  00A6               	movwf	??___fttol+2
  5710  0FDF  0008               	return
  5711  0FE0                     PL31:	
  5712  0FE0  0084               	movwf	4
  5713  0FE1  3030               	movlw	48
  5714  0FE2  1383               	bcf	3,7	;select IRP bank0
  5715  0FE3  0080               	movwf	0
  5716  0FE4  30FF               	movlw	-1
  5717  0FE5  0AB2               	incf	sprintf@sp^(0+128),f
  5718  0FE6  0008               	return
  5719  0FE7                     PL32:	
  5720  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  5721  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  5722  0FE9  0008               	return
  5723  0FEA                     __ptext761:	
  5724 ;; =============== function _lcd_clear ends ============
  5725                           
  5726                           
  5727 ;; *************** function ___ftsub *****************
  5728 ;; Defined at:
  5729 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftsub.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;  f2              3   44[BANK0 ] float 
  5732 ;;  f1              3   47[BANK0 ] float 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;		None
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  3   44[BANK0 ] float 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0, pclath, cstack
  5739 ;; Tracked objects:
  5740 ;;		On entry : 60/0
  5741 ;;		On exit  : 60/0
  5742 ;;		Unchanged: FFF9F/0
  5743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5744 ;;      Params:         0       6       0       0       0
  5745 ;;      Locals:         0       0       0       0       0
  5746 ;;      Temps:          0       0       0       0       0
  5747 ;;      Totals:         0       6       0       0       0
  5748 ;;Total ram usage:        6 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:    2
  5751 ;; This function calls:
  5752 ;;		___ftadd
  5753 ;; This function is called by:
  5754 ;;		_sprintf
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757  0FEA                     ___ftsub:	
  5758                           
  5759                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5760  0FEA  3080               	movlw	128
  5761  0FEB  06CE               	xorwf	___ftsub@f2+2,f
  5762  0FEC  084F               	movf	___ftsub@f1,w
  5763  0FED  00C0               	movwf	?___ftadd
  5764  0FEE  0850               	movf	___ftsub@f1+1,w
  5765  0FEF  00C1               	movwf	?___ftadd+1
  5766  0FF0  0851               	movf	___ftsub@f1+2,w
  5767  0FF1  00C2               	movwf	?___ftadd+2
  5768  0FF2  084C               	movf	___ftsub@f2,w
  5769  0FF3  00C3               	movwf	?___ftadd+3
  5770  0FF4  084D               	movf	___ftsub@f2+1,w
  5771  0FF5  00C4               	movwf	?___ftadd+4
  5772  0FF6  084E               	movf	___ftsub@f2+2,w
  5773  0FF7  00C5               	movwf	?___ftadd+5
  5774  0FF8  266A               	fcall	___ftadd
  5775  0FF9  0840               	movf	?___ftadd,w
  5776  0FFA  00CC               	movwf	?___ftsub
  5777  0FFB  0841               	movf	?___ftadd+1,w
  5778  0FFC  00CD               	movwf	?___ftsub+1
  5779  0FFD  0842               	movf	?___ftadd+2,w
  5780  0FFE  00CE               	movwf	?___ftsub+2
  5781  0FFF  0008               	return
  5782  1000                     __end_of___ftsub:	
  5783                           
  5784                           	psect	text758
  5785  1402                     __ptext758:	
  5786 ;; =============== function _sprintf ends ============
  5787                           
  5788                           
  5789 ;; *************** function _lcd_goto *****************
  5790 ;; Defined at:
  5791 ;;		line 244 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  pos             1    wreg     unsigned char 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;  pos             1    6[COMMON] unsigned char 
  5796 ;; Return value:  Size  Location     Type
  5797 ;;		None               void
  5798 ;; Registers used:
  5799 ;;		wreg, status,2, status,0, pclath, cstack
  5800 ;; Tracked objects:
  5801 ;;		On entry : 0/0
  5802 ;;		On exit  : 60/0
  5803 ;;		Unchanged: FFF9F/0
  5804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5805 ;;      Params:         0       0       0       0       0
  5806 ;;      Locals:         1       0       0       0       0
  5807 ;;      Temps:          0       0       0       0       0
  5808 ;;      Totals:         1       0       0       0       0
  5809 ;;Total ram usage:        1 bytes
  5810 ;; Hardware stack levels used:    1
  5811 ;; Hardware stack levels required when called:    3
  5812 ;; This function calls:
  5813 ;;		_lcd_write
  5814 ;; This function is called by:
  5815 ;;		_main
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818  1402                     _lcd_goto:	
  5819                           
  5820                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  5821                           ;lcd_goto@pos stored from wreg
  5822  1402  00F6               	movwf	lcd_goto@pos
  5823                           
  5824                           ;eeprom_i2c.c: 245: RE2=0;
  5825  1403  1283               	bcf	3,5	;RP0=0, select bank0
  5826  1404  1303               	bcf	3,6	;RP1=0, select bank0
  5827  1405  1109               	bcf	9,2
  5828                           
  5829                           ;eeprom_i2c.c: 246: lcd_write(0x80+pos);
  5830  1406  0876               	movf	lcd_goto@pos,w
  5831  1407  00F4               	movwf	?_lcd_write
  5832  1408  3080               	movlw	128
  5833  1409  01F5               	clrf	?_lcd_write+1
  5834  140A  07F4               	addwf	?_lcd_write,f
  5835  140B  1803               	skipnc
  5836  140C  0AF5               	incf	?_lcd_write+1,f
  5837  140D  2C9C               	ljmp	l6226
  5838  140E                     __end_of_lcd_goto:	
  5839  140E                     __ptext765:	
  5840 ;; =============== function _lcd_write ends ============
  5841                           
  5842                           
  5843 ;; *************** function _I2C_EEOUT *****************
  5844 ;; Defined at:
  5845 ;;		line 184 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  address1        1    wreg     unsigned char 
  5848 ;;  address2        1    4[COMMON] unsigned char 
  5849 ;;  data            1    5[COMMON] unsigned char 
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;  address1        1    6[COMMON] unsigned char 
  5852 ;; Return value:  Size  Location     Type
  5853 ;;		None               void
  5854 ;; Registers used:
  5855 ;;		wreg, status,2, status,0, pclath, cstack
  5856 ;; Tracked objects:
  5857 ;;		On entry : 7F/20
  5858 ;;		On exit  : 1F/0
  5859 ;;		Unchanged: FFF80/0
  5860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5861 ;;      Params:         2       0       0       0       0
  5862 ;;      Locals:         1       0       0       0       0
  5863 ;;      Temps:          0       0       0       0       0
  5864 ;;      Totals:         3       0       0       0       0
  5865 ;;Total ram usage:        3 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:    2
  5868 ;; This function calls:
  5869 ;;		_i2c_start
  5870 ;;		_i2c_write
  5871 ;;		_i2c_stop
  5872 ;;		_pause
  5873 ;; This function is called by:
  5874 ;;		_main
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877  140E                     _I2C_EEOUT:	
  5878                           
  5879                           ; Regs used in _I2C_EEOUT: [wreg+status,2+status,0+pclath+cstack]
  5880                           ;I2C_EEOUT@address1 stored from wreg
  5881  140E  00F6               	movwf	I2C_EEOUT@address1
  5882                           
  5883                           ;eeprom_i2c.c: 185: i2c_start();
  5884  140F  2452  160A  118A   	fcall	_i2c_start
  5885                           
  5886                           ;eeprom_i2c.c: 186: i2c_write(0xa0);
  5887  1412  30A0               	movlw	160
  5888  1413  244A  160A  118A   	fcall	_i2c_write
  5889                           
  5890                           ;eeprom_i2c.c: 187: i2c_write(address1);
  5891  1416  0876               	movf	I2C_EEOUT@address1,w
  5892  1417  244A  160A  118A   	fcall	_i2c_write
  5893                           
  5894                           ;eeprom_i2c.c: 188: i2c_write(address2);
  5895  141A  0874               	movf	I2C_EEOUT@address2,w
  5896  141B  244A  160A  118A   	fcall	_i2c_write
  5897                           
  5898                           ;eeprom_i2c.c: 189: i2c_write(data);
  5899  141E  0875               	movf	I2C_EEOUT@data,w
  5900  141F  244A  160A  118A   	fcall	_i2c_write
  5901                           
  5902                           ;eeprom_i2c.c: 190: i2c_stop();
  5903  1422  2457  160A  118A   	fcall	_i2c_stop
  5904                           
  5905                           ;eeprom_i2c.c: 191: pause(11);
  5906  1425  300B               	movlw	11
  5907  1426  00F0               	movwf	?_pause
  5908  1427  01F1               	clrf	?_pause+1
  5909  1428  2CAD               	ljmp	l6038
  5910  1429                     __end_of_I2C_EEOUT:	
  5911  1429                     __ptext770:	
  5912 ;; =============== function ___ftadd ends ============
  5913                           
  5914                           
  5915 ;; *************** function _I2C_EEIN *****************
  5916 ;; Defined at:
  5917 ;;		line 200 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  address1        1   13[BANK0 ] unsigned char 
  5920 ;;  address2        1   14[BANK0 ] unsigned char 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;  data            1   15[BANK0 ] unsigned char 
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  1    wreg      unsigned char 
  5925 ;; Registers used:
  5926 ;;		wreg, status,2, status,0, pclath, cstack
  5927 ;; Tracked objects:
  5928 ;;		On entry : 60/0
  5929 ;;		On exit  : 60/0
  5930 ;;		Unchanged: FFF9F/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5932 ;;      Params:         0       2       0       0       0
  5933 ;;      Locals:         0       1       0       0       0
  5934 ;;      Temps:          0       0       0       0       0
  5935 ;;      Totals:         0       3       0       0       0
  5936 ;;Total ram usage:        3 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:    1
  5939 ;; This function calls:
  5940 ;;		_i2c_start
  5941 ;;		_i2c_write
  5942 ;;		_i2c_restart
  5943 ;;		_i2c_read
  5944 ;;		_I2C_nack
  5945 ;;		_i2c_stop
  5946 ;; This function is called by:
  5947 ;;		_main
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950  1429                     _I2C_EEIN:	
  5951                           
  5952                           ;eeprom_i2c.c: 201: unsigned char data;
  5953                           ;eeprom_i2c.c: 202: i2c_start();
  5954                           
  5955                           ; Regs used in _I2C_EEIN: [wreg+status,2+status,0+pclath+cstack]
  5956  1429  2452  160A  118A   	fcall	_i2c_start
  5957                           
  5958                           ;eeprom_i2c.c: 203: i2c_write(0xa0);
  5959  142C  30A0               	movlw	160
  5960  142D  244A  160A  118A   	fcall	_i2c_write
  5961                           
  5962                           ;eeprom_i2c.c: 204: i2c_write(address1);
  5963  1430  082D               	movf	I2C_EEIN@address1,w
  5964  1431  244A  160A  118A   	fcall	_i2c_write
  5965                           
  5966                           ;eeprom_i2c.c: 205: i2c_write(address2);
  5967  1434  082E               	movf	I2C_EEIN@address2,w
  5968  1435  244A  160A  118A   	fcall	_i2c_write
  5969                           
  5970                           ;eeprom_i2c.c: 206: i2c_restart();
  5971  1438  245C  160A  118A   	fcall	_i2c_restart
  5972                           
  5973                           ;eeprom_i2c.c: 207: i2c_write(0xa1);
  5974  143B  30A1               	movlw	161
  5975  143C  244A  160A  118A   	fcall	_i2c_write
  5976                           
  5977                           ;eeprom_i2c.c: 208: data=i2c_read();
  5978  143F  2461  160A  118A   	fcall	_i2c_read
  5979  1442  00AF               	movwf	I2C_EEIN@data
  5980                           
  5981                           ;eeprom_i2c.c: 209: I2C_nack();
  5982  1443  2469  160A  118A   	fcall	_I2C_nack
  5983                           
  5984                           ;eeprom_i2c.c: 210: i2c_stop();
  5985  1446  2457               	fcall	_i2c_stop
  5986                           
  5987                           ;eeprom_i2c.c: 211: return(data);
  5988  1447  1283               	bcf	3,5	;RP0=0, select bank0
  5989  1448  082F               	movf	I2C_EEIN@data,w
  5990  1449  0008               	return
  5991  144A                     __end_of_I2C_EEIN:	
  5992  144A                     __ptext788:	
  5993 ;; =============== function _isdigit ends ============
  5994                           
  5995                           
  5996 ;; *************** function _i2c_write *****************
  5997 ;; Defined at:
  5998 ;;		line 172 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;  I2C_data        1    wreg     unsigned char 
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;  I2C_data        1    0[COMMON] unsigned char 
  6003 ;; Return value:  Size  Location     Type
  6004 ;;		None               void
  6005 ;; Registers used:
  6006 ;;		wreg
  6007 ;; Tracked objects:
  6008 ;;		On entry : 40/20
  6009 ;;		On exit  : 60/0
  6010 ;;		Unchanged: FFF9F/0
  6011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6012 ;;      Params:         0       0       0       0       0
  6013 ;;      Locals:         1       0       0       0       0
  6014 ;;      Temps:          0       0       0       0       0
  6015 ;;      Totals:         1       0       0       0       0
  6016 ;;Total ram usage:        1 bytes
  6017 ;; Hardware stack levels used:    1
  6018 ;; This function calls:
  6019 ;;		Nothing
  6020 ;; This function is called by:
  6021 ;;		_I2C_EEOUT
  6022 ;;		_I2C_EEIN
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025  144A                     _i2c_write:	
  6026                           
  6027                           ; Regs used in _i2c_write: [wreg]
  6028                           ;i2c_write@I2C_data stored from wreg
  6029  144A  00F0               	movwf	i2c_write@I2C_data
  6030                           
  6031                           ;eeprom_i2c.c: 173: PIR1bits.SSPIF=0;
  6032  144B  1283               	bcf	3,5	;RP0=0, select bank0
  6033  144C  118C               	bcf	12,3	;volatile
  6034                           
  6035                           ;eeprom_i2c.c: 174: SSPBUF=I2C_data;
  6036  144D  0870               	movf	i2c_write@I2C_data,w
  6037  144E  0093               	movwf	19	;volatile
  6038  144F                     l1128:	
  6039                           ;eeprom_i2c.c: 175: while(PIR1bits.SSPIF==0);
  6040                           
  6041  144F  198C               	btfsc	12,3	;volatile
  6042  1450  0008               	return
  6043  1451  2C4F               	goto	l1128
  6044  1452                     __end_of_i2c_write:	
  6045  1452                     __ptext793:	
  6046 ;; =============== function _i2c_restart ends ============
  6047                           
  6048                           
  6049 ;; *************** function _i2c_start *****************
  6050 ;; Defined at:
  6051 ;;		line 118 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;		None
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;		None               void
  6058 ;; Registers used:
  6059 ;;		None
  6060 ;; Tracked objects:
  6061 ;;		On entry : 40/20
  6062 ;;		On exit  : 60/20
  6063 ;;		Unchanged: FFF9F/0
  6064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6065 ;;      Params:         0       0       0       0       0
  6066 ;;      Locals:         0       0       0       0       0
  6067 ;;      Temps:          0       0       0       0       0
  6068 ;;      Totals:         0       0       0       0       0
  6069 ;;Total ram usage:        0 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_I2C_EEOUT
  6075 ;;		_I2C_EEIN
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078  1452                     _i2c_start:	
  6079                           
  6080                           ;eeprom_i2c.c: 119: SSPCON2bits.SEN=1;
  6081                           
  6082                           ; Regs used in _i2c_start: []
  6083  1452  1683               	bsf	3,5	;RP0=1, select bank1
  6084  1453  1411               	bsf	17,0	;volatile
  6085  1454                     l1092:	
  6086                           ;eeprom_i2c.c: 120: while(SSPCON2bits.SEN==1);
  6087                           
  6088  1454  1C11               	btfss	17,0	;volatile
  6089  1455  0008               	return
  6090  1456  2C54               	goto	l1092
  6091  1457                     __end_of_i2c_start:	
  6092  1457                     __ptext791:	
  6093 ;; =============== function _i2c_read ends ============
  6094                           
  6095                           
  6096 ;; *************** function _i2c_stop *****************
  6097 ;; Defined at:
  6098 ;;		line 134 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;		None
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;		None
  6103 ;; Return value:  Size  Location     Type
  6104 ;;		None               void
  6105 ;; Registers used:
  6106 ;;		None
  6107 ;; Tracked objects:
  6108 ;;		On entry : 60/0
  6109 ;;		On exit  : 60/20
  6110 ;;		Unchanged: FFF9F/0
  6111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6112 ;;      Params:         0       0       0       0       0
  6113 ;;      Locals:         0       0       0       0       0
  6114 ;;      Temps:          0       0       0       0       0
  6115 ;;      Totals:         0       0       0       0       0
  6116 ;;Total ram usage:        0 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_I2C_EEOUT
  6122 ;;		_I2C_EEIN
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125  1457                     _i2c_stop:	
  6126                           
  6127                           ;eeprom_i2c.c: 135: SSPCON2bits.PEN=1;
  6128                           
  6129                           ; Regs used in _i2c_stop: []
  6130  1457  1683               	bsf	3,5	;RP0=1, select bank1
  6131  1458  1511               	bsf	17,2	;volatile
  6132  1459                     l1104:	
  6133                           ;eeprom_i2c.c: 136: while(SSPCON2bits.PEN==1);
  6134                           
  6135  1459  1D11               	btfss	17,2	;volatile
  6136  145A  0008               	return
  6137  145B  2C59               	goto	l1104
  6138  145C                     __end_of_i2c_stop:	
  6139  145C                     __ptext792:	
  6140 ;; =============== function _i2c_stop ends ============
  6141                           
  6142                           
  6143 ;; *************** function _i2c_restart *****************
  6144 ;; Defined at:
  6145 ;;		line 126 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;		None
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;		None
  6150 ;; Return value:  Size  Location     Type
  6151 ;;		None               void
  6152 ;; Registers used:
  6153 ;;		None
  6154 ;; Tracked objects:
  6155 ;;		On entry : 60/0
  6156 ;;		On exit  : 60/20
  6157 ;;		Unchanged: FFF9F/0
  6158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6159 ;;      Params:         0       0       0       0       0
  6160 ;;      Locals:         0       0       0       0       0
  6161 ;;      Temps:          0       0       0       0       0
  6162 ;;      Totals:         0       0       0       0       0
  6163 ;;Total ram usage:        0 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_I2C_EEIN
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171  145C                     _i2c_restart:	
  6172                           
  6173                           ;eeprom_i2c.c: 127: SSPCON2bits.RSEN=1;
  6174                           
  6175                           ; Regs used in _i2c_restart: []
  6176  145C  1683               	bsf	3,5	;RP0=1, select bank1
  6177  145D  1491               	bsf	17,1	;volatile
  6178  145E                     l1098:	
  6179                           ;eeprom_i2c.c: 128: while(SSPCON2bits.RSEN==1);
  6180                           
  6181  145E  1C91               	btfss	17,1	;volatile
  6182  145F  0008               	return
  6183  1460  2C5E               	goto	l1098
  6184  1461                     __end_of_i2c_restart:	
  6185  1461                     __ptext790:	
  6186 ;; =============== function _I2C_nack ends ============
  6187                           
  6188                           
  6189 ;; *************** function _i2c_read *****************
  6190 ;; Defined at:
  6191 ;;		line 142 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;		None
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;		None
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1    wreg      unsigned char 
  6198 ;; Registers used:
  6199 ;;		wreg
  6200 ;; Tracked objects:
  6201 ;;		On entry : 60/0
  6202 ;;		On exit  : 60/0
  6203 ;;		Unchanged: FFF9F/0
  6204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6205 ;;      Params:         0       0       0       0       0
  6206 ;;      Locals:         0       0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0
  6208 ;;      Totals:         0       0       0       0       0
  6209 ;;Total ram usage:        0 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		_I2C_EEIN
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217  1461                     _i2c_read:	
  6218                           
  6219                           ;eeprom_i2c.c: 143: PIR1bits.SSPIF=0;
  6220                           
  6221                           ; Regs used in _i2c_read: [wreg]
  6222  1461  118C               	bcf	12,3	;volatile
  6223                           
  6224                           ;eeprom_i2c.c: 144: SSPCON2bits.RCEN=1;
  6225  1462  1683               	bsf	3,5	;RP0=1, select bank1
  6226  1463  1591               	bsf	17,3	;volatile
  6227  1464                     l1110:	
  6228                           ;eeprom_i2c.c: 145: while(PIR1bits.SSPIF==0);
  6229                           
  6230  1464  1283               	bcf	3,5	;RP0=0, select bank0
  6231  1465  1D8C               	btfss	12,3	;volatile
  6232  1466  2C64               	goto	l1110
  6233                           
  6234                           ;eeprom_i2c.c: 146: return SSPBUF;
  6235  1467  0813               	movf	19,w	;volatile
  6236  1468  0008               	return
  6237  1469                     __end_of_i2c_read:	
  6238  1469                     __ptext789:	
  6239 ;; =============== function _i2c_write ends ============
  6240                           
  6241                           
  6242 ;; *************** function _I2C_nack *****************
  6243 ;; Defined at:
  6244 ;;		line 162 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;		None               void
  6251 ;; Registers used:
  6252 ;;		None
  6253 ;; Tracked objects:
  6254 ;;		On entry : 60/0
  6255 ;;		On exit  : 60/0
  6256 ;;		Unchanged: FFF9F/0
  6257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6258 ;;      Params:         0       0       0       0       0
  6259 ;;      Locals:         0       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0
  6261 ;;      Totals:         0       0       0       0       0
  6262 ;;Total ram usage:        0 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; This function calls:
  6265 ;;		Nothing
  6266 ;; This function is called by:
  6267 ;;		_I2C_EEIN
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270  1469                     _I2C_nack:	
  6271                           
  6272                           ;eeprom_i2c.c: 163: PIR1bits.SSPIF=0;
  6273                           
  6274                           ; Regs used in _I2C_nack: []
  6275  1469  118C               	bcf	12,3	;volatile
  6276                           
  6277                           ;eeprom_i2c.c: 164: SSPCON2bits.ACKDT=1;
  6278  146A  1683               	bsf	3,5	;RP0=1, select bank1
  6279  146B  1691               	bsf	17,5	;volatile
  6280                           
  6281                           ;eeprom_i2c.c: 165: SSPCON2bits.ACKEN=1;
  6282  146C  1611               	bsf	17,4	;volatile
  6283  146D                     l1122:	
  6284                           ;eeprom_i2c.c: 166: while(PIR1bits.SSPIF==0);
  6285                           
  6286  146D  1283               	bcf	3,5	;RP0=0, select bank0
  6287  146E  198C               	btfsc	12,3	;volatile
  6288  146F  0008               	return
  6289  1470  2C6D               	goto	l1122
  6290  1471                     __end_of_I2C_nack:	
  6291  1471                     __ptext760:	
  6292 ;; =============== function _lcd_puts ends ============
  6293                           
  6294                           
  6295 ;; *************** function _lcd_clear *****************
  6296 ;; Defined at:
  6297 ;;		line 224 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;		None
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;		None
  6302 ;; Return value:  Size  Location     Type
  6303 ;;		None               void
  6304 ;; Registers used:
  6305 ;;		wreg, status,2, status,0, pclath, cstack
  6306 ;; Tracked objects:
  6307 ;;		On entry : 40/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: FFF9F/0
  6310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6311 ;;      Params:         0       0       0       0       0
  6312 ;;      Locals:         0       0       0       0       0
  6313 ;;      Temps:          0       0       0       0       0
  6314 ;;      Totals:         0       0       0       0       0
  6315 ;;Total ram usage:        0 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; Hardware stack levels required when called:    3
  6318 ;; This function calls:
  6319 ;;		_lcd_write
  6320 ;;		_pause
  6321 ;; This function is called by:
  6322 ;;		_main
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325  1471                     _lcd_clear:	
  6326                           
  6327                           ;eeprom_i2c.c: 225: RE2=0;
  6328                           
  6329                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  6330  1471  1283               	bcf	3,5	;RP0=0, select bank0
  6331  1472  1109               	bcf	9,2
  6332                           
  6333                           ;eeprom_i2c.c: 226: lcd_write(0x1);
  6334  1473  01F4               	clrf	?_lcd_write
  6335  1474  0AF4               	incf	?_lcd_write,f
  6336  1475  01F5               	clrf	?_lcd_write+1
  6337  1476  249C  160A  118A   	fcall	_lcd_write
  6338                           
  6339                           ;eeprom_i2c.c: 227: pause(2);
  6340  1479  3002               	movlw	2
  6341  147A  00F0               	movwf	?_pause
  6342  147B  01F1               	clrf	?_pause+1
  6343  147C  2CAD               	ljmp	l6038
  6344  147D                     __end_of_lcd_clear:	
  6345  147D                     __ptext759:	
  6346 ;; =============== function _lcd_goto ends ============
  6347                           
  6348                           
  6349 ;; *************** function _lcd_puts *****************
  6350 ;; Defined at:
  6351 ;;		line 231 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  s               2    6[COMMON] PTR const unsigned char 
  6354 ;;		 -> STR_7(14), STR_6(3), carac(5), STR_4(11), 
  6355 ;;		 -> STR_3(16), STR_2(15), STR_1(15), 
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;		None
  6358 ;; Return value:  Size  Location     Type
  6359 ;;		None               void
  6360 ;; Registers used:
  6361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6362 ;; Tracked objects:
  6363 ;;		On entry : 60/0
  6364 ;;		On exit  : 60/0
  6365 ;;		Unchanged: FFE9F/0
  6366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6367 ;;      Params:         2       0       0       0       0
  6368 ;;      Locals:         0       0       0       0       0
  6369 ;;      Temps:          0       0       0       0       0
  6370 ;;      Totals:         2       0       0       0       0
  6371 ;;Total ram usage:        2 bytes
  6372 ;; Hardware stack levels used:    1
  6373 ;; Hardware stack levels required when called:    3
  6374 ;; This function calls:
  6375 ;;		_lcd_write
  6376 ;; This function is called by:
  6377 ;;		_main
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380  147D                     _lcd_puts:	
  6381                           
  6382                           ;eeprom_i2c.c: 232: RE2=1;
  6383                           
  6384                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6385  147D  1509               	bsf	9,2
  6386  147E                     l6318:	
  6387                           ;eeprom_i2c.c: 233: while(*s)
  6388                           
  6389  147E  0877               	movf	lcd_puts@s+1,w
  6390  147F  00FF               	movwf	127
  6391  1480  0876               	movf	lcd_puts@s,w
  6392  1481  0084               	movwf	4
  6393  1482  120A  118A  2709   	fcall	stringtab
      +       160A  118A         
  6394  1487  3800               	iorlw	0
  6395  1488  1903               	btfsc	3,2
  6396  1489  0008               	return
  6397                           
  6398                           ;eeprom_i2c.c: 234: lcd_write(*s++);
  6399  148A  0877               	movf	lcd_puts@s+1,w
  6400  148B  00FF               	movwf	127
  6401  148C  0876               	movf	lcd_puts@s,w
  6402  148D  0084               	movwf	4
  6403  148E  120A  118A  2709   	fcall	stringtab
      +       160A  118A         
  6404  1493  00F4               	movwf	?_lcd_write
  6405  1494  01F5               	clrf	?_lcd_write+1
  6406  1495  249C  160A  118A   	fcall	_lcd_write
  6407  1498  0AF6               	incf	lcd_puts@s,f
  6408  1499  1903               	skipnz
  6409  149A  0AF7               	incf	lcd_puts@s+1,f
  6410  149B  2C7E               	goto	l6318
  6411  149C                     __end_of_lcd_puts:	
  6412  149C                     __ptext764:	
  6413 ;; =============== function _fround ends ============
  6414                           
  6415                           
  6416 ;; *************** function _lcd_write *****************
  6417 ;; Defined at:
  6418 ;;		line 215 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  c               2    4[COMMON] unsigned int 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;		None               void
  6425 ;; Registers used:
  6426 ;;		wreg, status,2, status,0, pclath, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 60/0
  6430 ;;		Unchanged: FFF9F/0
  6431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6432 ;;      Params:         2       0       0       0       0
  6433 ;;      Locals:         0       0       0       0       0
  6434 ;;      Temps:          0       0       0       0       0
  6435 ;;      Totals:         2       0       0       0       0
  6436 ;;Total ram usage:        2 bytes
  6437 ;; Hardware stack levels used:    1
  6438 ;; Hardware stack levels required when called:    2
  6439 ;; This function calls:
  6440 ;;		_pause
  6441 ;; This function is called by:
  6442 ;;		_lcd_clear
  6443 ;;		_lcd_puts
  6444 ;;		_lcd_goto
  6445 ;;		_main
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448  149C                     _lcd_write:	
  6449  149C                     l6226:	
  6450                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  6451                           
  6452                           
  6453                           ;eeprom_i2c.c: 216: pause(1);
  6454  149C  01F0               	clrf	?_pause
  6455  149D  0AF0               	incf	?_pause,f
  6456  149E  01F1               	clrf	?_pause+1
  6457  149F  24AD               	fcall	_pause
  6458                           
  6459                           ;eeprom_i2c.c: 217: PORTD=((c >> 4) & 0x0F);
  6460  14A0  0E74               	swapf	lcd_write@c,w
  6461  14A1  390F               	andlw	15
  6462  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  6463  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  6464  14A4  0088               	movwf	8	;volatile
  6465                           
  6466                           ;eeprom_i2c.c: 218: ((RE1=1),(RE1=0));
  6467  14A5  1489               	bsf	9,1
  6468  14A6  1089               	bcf	9,1
  6469                           
  6470                           ;eeprom_i2c.c: 219: PORTD=(c & 0x0F);
  6471  14A7  0874               	movf	lcd_write@c,w
  6472  14A8  390F               	andlw	15
  6473  14A9  0088               	movwf	8	;volatile
  6474                           
  6475                           ;eeprom_i2c.c: 220: ((RE1=1),(RE1=0));
  6476  14AA  1489               	bsf	9,1
  6477  14AB  1089               	bcf	9,1
  6478  14AC  0008               	return
  6479  14AD                     __end_of_lcd_write:	
  6480  14AD                     __ptext771:	
  6481 ;; =============== function _I2C_EEIN ends ============
  6482                           
  6483                           
  6484 ;; *************** function _pause *****************
  6485 ;; Defined at:
  6486 ;;		line 87 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  usvalue         2    0[COMMON] unsigned short 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  x               2    2[COMMON] unsigned short 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;		None               void
  6493 ;; Registers used:
  6494 ;;		wreg, status,2, status,0, pclath, cstack
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: FFF9F/0
  6499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6500 ;;      Params:         2       0       0       0       0
  6501 ;;      Locals:         2       0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0
  6503 ;;      Totals:         4       0       0       0       0
  6504 ;;Total ram usage:        4 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:    1
  6507 ;; This function calls:
  6508 ;;		_msecbase
  6509 ;; This function is called by:
  6510 ;;		_I2C_EEOUT
  6511 ;;		_lcd_write
  6512 ;;		_lcd_clear
  6513 ;;		_main
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516  14AD                     _pause:	
  6517  14AD                     l6038:	
  6518                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  6519                           
  6520                           
  6521                           ;eeprom_i2c.c: 88: unsigned short x;
  6522                           ;eeprom_i2c.c: 90: for (x=0; x<=usvalue; x++)
  6523  14AD  01F2               	clrf	pause@x
  6524  14AE  01F3               	clrf	pause@x+1
  6525  14AF                     l6044:	
  6526  14AF  0873               	movf	pause@x+1,w
  6527  14B0  0271               	subwf	pause@usvalue+1,w
  6528  14B1  1D03               	skipz
  6529  14B2  2CB5               	goto	u2615
  6530  14B3  0872               	movf	pause@x,w
  6531  14B4  0270               	subwf	pause@usvalue,w
  6532  14B5                     u2615:	
  6533  14B5  1C03               	btfss	3,0
  6534  14B6  0008               	return
  6535                           
  6536                           ;eeprom_i2c.c: 91: {
  6537                           ;eeprom_i2c.c: 92: msecbase();
  6538  14B7  24BE  160A  118A   	fcall	_msecbase
  6539  14BA  0AF2               	incf	pause@x,f
  6540  14BB  1903               	skipnz
  6541  14BC  0AF3               	incf	pause@x+1,f
  6542  14BD  2CAF               	goto	l6044
  6543  14BE                     __end_of_pause:	
  6544  14BE                     __ptext795:	
  6545 ;; =============== function _i2c_init ends ============
  6546                           
  6547                           
  6548 ;; *************** function _msecbase *****************
  6549 ;; Defined at:
  6550 ;;		line 78 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;		None
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;		None
  6555 ;; Return value:  Size  Location     Type
  6556 ;;		None               void
  6557 ;; Registers used:
  6558 ;;		wreg
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: FFF9F/0
  6563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6564 ;;      Params:         0       0       0       0       0
  6565 ;;      Locals:         0       0       0       0       0
  6566 ;;      Temps:          0       0       0       0       0
  6567 ;;      Totals:         0       0       0       0       0
  6568 ;;Total ram usage:        0 bytes
  6569 ;; Hardware stack levels used:    1
  6570 ;; This function calls:
  6571 ;;		Nothing
  6572 ;; This function is called by:
  6573 ;;		_pause
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576  14BE                     _msecbase:	
  6577                           
  6578                           ;eeprom_i2c.c: 79: OPTION_REG = 0b00000001;
  6579                           
  6580                           ; Regs used in _msecbase: [wreg]
  6581  14BE  3001               	movlw	1
  6582  14BF  1683               	bsf	3,5	;RP0=1, select bank1
  6583  14C0  1303               	bcf	3,6	;RP1=0, select bank1
  6584  14C1  0081               	movwf	1	;volatile
  6585                           
  6586                           ;eeprom_i2c.c: 80: TMR0 = 0xD;
  6587  14C2  300D               	movlw	13
  6588  14C3  1283               	bcf	3,5	;RP0=0, select bank0
  6589  14C4  0081               	movwf	1	;volatile
  6590  14C5                     l1077:	
  6591                           ;eeprom_i2c.c: 81: while(!T0IF);
  6592                           
  6593  14C5  1D0B               	btfss	11,2
  6594  14C6  2CC5               	goto	l1077
  6595                           
  6596                           ;eeprom_i2c.c: 82: T0IF = 0;
  6597  14C7  110B               	bcf	11,2
  6598  14C8  0008               	return
  6599  14C9                     __end_of_msecbase:	
  6600                           
  6601                           	psect	text763
  6602  008D                     __ptext763:	
  6603 ;; =============== function _scale ends ============
  6604                           
  6605                           
  6606 ;; *************** function _fround *****************
  6607 ;; Defined at:
  6608 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  prec            1    wreg     unsigned char 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;  prec            1   53[BANK0 ] unsigned char 
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  3   44[BANK0 ] unsigned char 
  6615 ;; Registers used:
  6616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6617 ;; Tracked objects:
  6618 ;;		On entry : 60/20
  6619 ;;		On exit  : 60/0
  6620 ;;		Unchanged: FFF9F/0
  6621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6622 ;;      Params:         0       3       0       0       0
  6623 ;;      Locals:         0       7       0       0       0
  6624 ;;      Temps:          0       0       0       0       0
  6625 ;;      Totals:         0      10       0       0       0
  6626 ;;Total ram usage:       10 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    2
  6629 ;; This function calls:
  6630 ;;		___lbmod
  6631 ;;		___bmul
  6632 ;;		___lbdiv
  6633 ;;		___ftmul
  6634 ;; This function is called by:
  6635 ;;		_sprintf
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638  008D                     _fround:	
  6639                           
  6640                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6641                           ;fround@prec stored from wreg
  6642  008D  1283               	bcf	3,5	;RP0=0, select bank0
  6643  008E  00D5               	movwf	fround@prec
  6644  008F  306E               	movlw	110
  6645  0090  0255               	subwf	fround@prec,w
  6646  0091  1C03               	skipc
  6647  0092  2918               	goto	l6250
  6648  0093  3003               	movlw	3
  6649  0094  00F9               	movwf	?___bmul
  6650  0095  300A               	movlw	10
  6651  0096  00F5               	movwf	?___lbdiv
  6652  0097  3064               	movlw	100
  6653  0098  00F0               	movwf	?___lbmod
  6654  0099  0855               	movf	fround@prec,w
  6655  009A  21AD  120A  118A   	fcall	___lbmod
  6656  009D  2192               	fcall	___lbdiv
  6657  009E  160A  118A  275B   	fcall	___bmul
      +       120A  118A         
  6658  00A3  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6659  00A4  0084               	movwf	4
  6660  00A5  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6661  00AA  00B1               	movwf	?___ftmul
  6662  00AB  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6663  00B0  00B2               	movwf	?___ftmul+1
  6664  00B1  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6665  00B6  00B3               	movwf	?___ftmul+2
  6666  00B7  3003               	movlw	3
  6667  00B8  00F9               	movwf	?___bmul
  6668  00B9  3064               	movlw	100
  6669  00BA  00F5               	movwf	?___lbdiv
  6670  00BB  0855               	movf	fround@prec,w
  6671  00BC  2192               	fcall	___lbdiv
  6672  00BD  160A  118A  275B   	fcall	___bmul
      +       120A  118A         
  6673  00C2  3E37               	addlw	low ((__npowers_-__stringbase+54))
  6674  00C3  0084               	movwf	4
  6675  00C4  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6676  00C9  00B4               	movwf	?___ftmul+3
  6677  00CA  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6678  00CF  00B5               	movwf	?___ftmul+4
  6679  00D0  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6680  00D5  00B6               	movwf	?___ftmul+5
  6681  00D6  160A  118A  26EC   	fcall	___ftmul
      +       120A  118A         
  6682  00DB  21D8  120A  118A   	fcall	PL28	;call to abstracted procedure
  6683  00DE  3003               	movlw	3
  6684  00DF  00F9               	movwf	?___bmul
  6685  00E0  300A               	movlw	10
  6686  00E1  00F0               	movwf	?___lbmod
  6687  00E2  0855               	movf	fround@prec,w
  6688  00E3  21AD               	fcall	___lbmod
  6689  00E4  160A  118A  275B   	fcall	___bmul
      +       120A  118A         
  6690  00E9  3E01               	addlw	low (__npowers_-__stringbase)
  6691  00EA  0084               	movwf	4
  6692  00EB  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6693  00F0  00B1               	movwf	?___ftmul
  6694  00F1  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6695  00F6  00B2               	movwf	?___ftmul+1
  6696  00F7  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6697  00FC  21D0               	fcall	PL25	;call to abstracted procedure
  6698  00FD  160A  118A  26EC   	fcall	___ftmul
      +       120A  118A         
  6699  0102  0831               	movf	?___ftmul,w
  6700  0103  00CF               	movwf	_fround$2961
  6701  0104  0832               	movf	?___ftmul+1,w
  6702  0105  00D0               	movwf	_fround$2961+1
  6703  0106  0833               	movf	?___ftmul+2,w
  6704  0107  00D1               	movwf	_fround$2961+2
  6705  0108  303F               	movlw	63
  6706  0109  01B1               	clrf	?___ftmul
  6707  010A  01B2               	clrf	?___ftmul+1
  6708  010B  00B3               	movwf	?___ftmul+2
  6709  010C  084F               	movf	_fround$2961,w
  6710  010D  00B4               	movwf	?___ftmul+3
  6711  010E  0850               	movf	_fround$2961+1,w
  6712  010F  00B5               	movwf	?___ftmul+4
  6713  0110  0851               	movf	_fround$2961+2,w
  6714  0111  00B6               	movwf	?___ftmul+5
  6715  0112  160A  118A  26EC   	fcall	___ftmul
      +       120A  118A         
  6716  0117  29C9               	ljmp	PL16	;call to abstracted procedure
  6717  0118                     l6250:	
  6718  0118  300B               	movlw	11
  6719  0119  0255               	subwf	fround@prec,w
  6720  011A  1C03               	skipc
  6721  011B  296C               	goto	l6258
  6722  011C  3003               	movlw	3
  6723  011D  00F9               	movwf	?___bmul
  6724  011E  300A               	movlw	10
  6725  011F  00F0               	movwf	?___lbmod
  6726  0120  0855               	movf	fround@prec,w
  6727  0121  21AD               	fcall	___lbmod
  6728  0122  160A  118A  275B   	fcall	___bmul
      +       120A  118A         
  6729  0127  3E01               	addlw	low (__npowers_-__stringbase)
  6730  0128  0084               	movwf	4
  6731  0129  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6732  012E  00B1               	movwf	?___ftmul
  6733  012F  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6734  0134  00B2               	movwf	?___ftmul+1
  6735  0135  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6736  013A  00B3               	movwf	?___ftmul+2
  6737  013B  3003               	movlw	3
  6738  013C  00F9               	movwf	?___bmul
  6739  013D  300A               	movlw	10
  6740  013E  00F5               	movwf	?___lbdiv
  6741  013F  0855               	movf	fround@prec,w
  6742  0140  2192               	fcall	___lbdiv
  6743  0141  160A  118A  275B   	fcall	___bmul
      +       120A  118A         
  6744  0146  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6745  0147  0084               	movwf	4
  6746  0148  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6747  014D  00B4               	movwf	?___ftmul+3
  6748  014E  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6749  0153  00B5               	movwf	?___ftmul+4
  6750  0154  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6751  0159  00B6               	movwf	?___ftmul+5
  6752  015A  160A  118A  26EC   	fcall	___ftmul
      +       120A  118A         
  6753  015F  21D8  120A  118A   	fcall	PL28	;call to abstracted procedure
  6754  0162  303F               	movlw	63
  6755  0163  01B1               	clrf	?___ftmul
  6756  0164  01B2               	clrf	?___ftmul+1
  6757  0165  21D0               	fcall	PL25	;call to abstracted procedure
  6758  0166  160A  118A  26EC   	fcall	___ftmul
      +       120A  118A         
  6759  016B  29C9               	ljmp	PL16	;call to abstracted procedure
  6760  016C                     l6258:	
  6761  016C  303F               	movlw	63
  6762  016D  01B1               	clrf	?___ftmul
  6763  016E  01B2               	clrf	?___ftmul+1
  6764  016F  00B3               	movwf	?___ftmul+2
  6765  0170  3003               	movlw	3
  6766  0171  00F9               	movwf	?___bmul
  6767  0172  0855               	movf	fround@prec,w
  6768  0173  160A  118A  275B   	fcall	___bmul
      +       120A  118A         
  6769  0178  3E01               	addlw	low (__npowers_-__stringbase)
  6770  0179  0084               	movwf	4
  6771  017A  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6772  017F  00B4               	movwf	?___ftmul+3
  6773  0180  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6774  0185  00B5               	movwf	?___ftmul+4
  6775  0186  120A  118A  2713   	fcall	stringdir
      +       120A  118A         
  6776  018B  00B6               	movwf	?___ftmul+5
  6777  018C  160A  118A  26EC   	fcall	___ftmul
      +       120A  118A         
  6778  0191  29C9               	ljmp	PL16	;call to abstracted procedure
  6779  0192                     __end_of_fround:	
  6780  0192                     __ptext781:	
  6781 ;; =============== function ___lbmod ends ============
  6782                           
  6783                           
  6784 ;; *************** function ___lbdiv *****************
  6785 ;; Defined at:
  6786 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbdiv.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  dividend        1    wreg     unsigned char 
  6789 ;;  divisor         1    5[COMMON] unsigned char 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  dividend        1    6[COMMON] unsigned char 
  6792 ;;  quotient        1    8[COMMON] unsigned char 
  6793 ;;  counter         1    7[COMMON] unsigned char 
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  1    wreg      unsigned char 
  6796 ;; Registers used:
  6797 ;;		wreg, status,2, status,0
  6798 ;; Tracked objects:
  6799 ;;		On entry : 60/0
  6800 ;;		On exit  : 60/0
  6801 ;;		Unchanged: FFF9F/0
  6802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6803 ;;      Params:         1       0       0       0       0
  6804 ;;      Locals:         3       0       0       0       0
  6805 ;;      Temps:          0       0       0       0       0
  6806 ;;      Totals:         4       0       0       0       0
  6807 ;;Total ram usage:        4 bytes
  6808 ;; Hardware stack levels used:    1
  6809 ;; This function calls:
  6810 ;;		Nothing
  6811 ;; This function is called by:
  6812 ;;		_fround
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815  0192                     ___lbdiv:	
  6816                           
  6817                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  6818                           ;___lbdiv@dividend stored from wreg
  6819  0192  00F6               	movwf	___lbdiv@dividend
  6820  0193  01F8               	clrf	___lbdiv@quotient
  6821  0194  0875               	movf	___lbdiv@divisor,w
  6822  0195  1903               	btfsc	3,2
  6823  0196  29AB               	goto	l5796
  6824  0197  01F7               	clrf	___lbdiv@counter
  6825  0198                     l5782:	
  6826  0198  0AF7               	incf	___lbdiv@counter,f
  6827  0199  1BF5               	btfsc	___lbdiv@divisor,7
  6828  019A  299E               	goto	l2320
  6829  019B  1003               	clrc
  6830  019C  0DF5               	rlf	___lbdiv@divisor,f
  6831  019D  2998               	goto	l5782
  6832  019E                     l2320:	
  6833  019E  1003               	clrc
  6834  019F  0DF8               	rlf	___lbdiv@quotient,f
  6835  01A0  0875               	movf	___lbdiv@divisor,w
  6836  01A1  0276               	subwf	___lbdiv@dividend,w
  6837  01A2  1C03               	skipc
  6838  01A3  29A8               	goto	L18
  6839  01A4  0875               	movf	___lbdiv@divisor,w
  6840  01A5  02F6               	subwf	___lbdiv@dividend,f
  6841  01A6  1478               	bsf	___lbdiv@quotient,0
  6842  01A7  1003               	clrc
  6843  01A8                     L18:	
  6844  01A8  0CF5               	rrf	___lbdiv@divisor,f
  6845  01A9  0BF7               	decfsz	___lbdiv@counter,f
  6846  01AA  299E               	goto	l2320
  6847  01AB                     l5796:	
  6848  01AB  0878               	movf	___lbdiv@quotient,w
  6849  01AC  0008               	return
  6850  01AD                     __end_of___lbdiv:	
  6851  01AD                     __ptext780:	
  6852 ;; =============== function ___ftpack ends ============
  6853                           
  6854                           
  6855 ;; *************** function ___lbmod *****************
  6856 ;; Defined at:
  6857 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbmod.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  dividend        1    wreg     unsigned char 
  6860 ;;  divisor         1    0[COMMON] unsigned char 
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;  dividend        1    2[COMMON] unsigned char 
  6863 ;;  rem             1    4[COMMON] unsigned char 
  6864 ;;  counter         1    3[COMMON] unsigned char 
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  1    wreg      unsigned char 
  6867 ;; Registers used:
  6868 ;;		wreg, status,2, status,0
  6869 ;; Tracked objects:
  6870 ;;		On entry : 60/0
  6871 ;;		On exit  : 60/0
  6872 ;;		Unchanged: FFF9F/0
  6873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6874 ;;      Params:         1       0       0       0       0
  6875 ;;      Locals:         3       0       0       0       0
  6876 ;;      Temps:          1       0       0       0       0
  6877 ;;      Totals:         5       0       0       0       0
  6878 ;;Total ram usage:        5 bytes
  6879 ;; Hardware stack levels used:    1
  6880 ;; This function calls:
  6881 ;;		Nothing
  6882 ;; This function is called by:
  6883 ;;		_fround
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886  01AD                     ___lbmod:	
  6887                           
  6888                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  6889                           ;___lbmod@dividend stored from wreg
  6890  01AD  00F2               	movwf	___lbmod@dividend
  6891  01AE  3008               	movlw	8
  6892  01AF  00F3               	movwf	___lbmod@counter
  6893  01B0  01F4               	clrf	___lbmod@rem
  6894  01B1                     l5804:	
  6895  01B1  0872               	movf	___lbmod@dividend,w
  6896  01B2  00F1               	movwf	??___lbmod
  6897  01B3  3007               	movlw	7
  6898  01B4  1003               	clrc
  6899  01B5                     L17:	
  6900  01B5  0CF1               	rrf	??___lbmod,f
  6901  01B6  3EFF               	addlw	-1
  6902  01B7  1003               	clrc
  6903  01B8  1D03               	skipz
  6904  01B9  29B5               	goto	L17
  6905  01BA  0D74               	rlf	___lbmod@rem,w
  6906  01BB  0471               	iorwf	??___lbmod,w
  6907  01BC  00F4               	movwf	___lbmod@rem
  6908  01BD  1003               	clrc
  6909  01BE  0DF2               	rlf	___lbmod@dividend,f
  6910  01BF  0870               	movf	___lbmod@divisor,w
  6911  01C0  0274               	subwf	___lbmod@rem,w
  6912  01C1  1C03               	skipc
  6913  01C2  29C5               	goto	l5812
  6914  01C3  0870               	movf	___lbmod@divisor,w
  6915  01C4  02F4               	subwf	___lbmod@rem,f
  6916  01C5                     l5812:	
  6917  01C5  0BF3               	decfsz	___lbmod@counter,f
  6918  01C6  29B1               	goto	l5804
  6919  01C7  0874               	movf	___lbmod@rem,w
  6920  01C8  0008               	return
  6921  01C9                     __end_of___lbmod:	
  6922  01C9                     PL16:	
  6923  01C9  0831               	movf	?___ftmul,w
  6924  01CA  00CC               	movwf	?_fround
  6925  01CB  0832               	movf	?___ftmul+1,w
  6926  01CC  00CD               	movwf	?_fround+1
  6927  01CD  0833               	movf	?___ftmul+2,w
  6928  01CE  00CE               	movwf	?_fround+2
  6929  01CF  0008               	return
  6930  01D0                     PL25:	
  6931  01D0  00B3               	movwf	?___ftmul+2
  6932  01D1  0852               	movf	_fround$2960,w
  6933  01D2  00B4               	movwf	?___ftmul+3
  6934  01D3  0853               	movf	_fround$2960+1,w
  6935  01D4  00B5               	movwf	?___ftmul+4
  6936  01D5  0854               	movf	_fround$2960+2,w
  6937  01D6  00B6               	movwf	?___ftmul+5
  6938  01D7  0008               	return
  6939  01D8                     PL28:	
  6940  01D8  0831               	movf	?___ftmul,w
  6941  01D9  00D2               	movwf	_fround$2960
  6942  01DA  0832               	movf	?___ftmul+1,w
  6943  01DB  00D3               	movwf	_fround$2960+1
  6944  01DC  0833               	movf	?___ftmul+2,w
  6945  01DD  00D4               	movwf	_fround$2960+2
  6946  01DE  0008               	return
  6947                           
  6948                           	psect	text767
  6949  14C9                     __ptext767:	
  6950 ;; =============== function ___lltoft ends ============
  6951                           
  6952                           
  6953 ;; *************** function ___lbtoft *****************
  6954 ;; Defined at:
  6955 ;;		line 28 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbtoft.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;  c               1    wreg     unsigned char 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;  c               1   16[BANK0 ] unsigned char 
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  3   13[BANK0 ] float 
  6962 ;; Registers used:
  6963 ;;		wreg, status,2, status,0, pclath, cstack
  6964 ;; Tracked objects:
  6965 ;;		On entry : 60/0
  6966 ;;		On exit  : 60/0
  6967 ;;		Unchanged: FFF9F/0
  6968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6969 ;;      Params:         0       3       0       0       0
  6970 ;;      Locals:         0       1       0       0       0
  6971 ;;      Temps:          0       0       0       0       0
  6972 ;;      Totals:         0       4       0       0       0
  6973 ;;Total ram usage:        4 bytes
  6974 ;; Hardware stack levels used:    1
  6975 ;; Hardware stack levels required when called:    1
  6976 ;; This function calls:
  6977 ;;		___ftpack
  6978 ;; This function is called by:
  6979 ;;		_main
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982  14C9                     ___lbtoft:	
  6983                           
  6984                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  6985                           ;___lbtoft@c stored from wreg
  6986  14C9  00B0               	movwf	___lbtoft@c
  6987  14CA  00F0               	movwf	?___ftpack
  6988  14CB  308E               	movlw	142
  6989  14CC  01F1               	clrf	?___ftpack+1
  6990  14CD  01F2               	clrf	?___ftpack+2
  6991  14CE  00F3               	movwf	?___ftpack+3
  6992  14CF  01F4               	clrf	?___ftpack+4
  6993  14D0  2769               	fcall	___ftpack
  6994  14D1  0870               	movf	?___ftpack,w
  6995  14D2  00AD               	movwf	?___lbtoft
  6996  14D3  0871               	movf	?___ftpack+1,w
  6997  14D4  00AE               	movwf	?___lbtoft+1
  6998  14D5  0872               	movf	?___ftpack+2,w
  6999  14D6  00AF               	movwf	?___lbtoft+2
  7000  14D7  0008               	return
  7001  14D8                     __end_of___lbtoft:	
  7002  14D8                     __ptext762:	
  7003 ;; =============== function ___ftsub ends ============
  7004                           
  7005                           
  7006 ;; *************** function _scale *****************
  7007 ;; Defined at:
  7008 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;  scl             1    wreg     char 
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;  scl             1   42[BANK0 ] char 
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  3   32[BANK0 ] char 
  7015 ;; Registers used:
  7016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7017 ;; Tracked objects:
  7018 ;;		On entry : 60/20
  7019 ;;		On exit  : 60/0
  7020 ;;		Unchanged: FFF9F/0
  7021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7022 ;;      Params:         0       3       0       0       0
  7023 ;;      Locals:         0       4       0       0       0
  7024 ;;      Temps:          0       4       0       0       0
  7025 ;;      Totals:         0      11       0       0       0
  7026 ;;Total ram usage:       11 bytes
  7027 ;; Hardware stack levels used:    1
  7028 ;; Hardware stack levels required when called:    2
  7029 ;; This function calls:
  7030 ;;		___awmod
  7031 ;;		___awdiv
  7032 ;;		___ftmul
  7033 ;;		___bmul
  7034 ;; This function is called by:
  7035 ;;		_sprintf
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038  14D8                     _scale:	
  7039                           
  7040                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7041                           ;scale@scl stored from wreg
  7042  14D8  1283               	bcf	3,5	;RP0=0, select bank0
  7043  14D9  00CA               	movwf	scale@scl
  7044  14DA  1FCA               	btfss	scale@scl,7
  7045  14DB  2DA4               	goto	l6284
  7046  14DC  09CA               	comf	scale@scl,f
  7047  14DD  0ACA               	incf	scale@scl,f
  7048  14DE  084A               	movf	scale@scl,w
  7049  14DF  3A80               	xorlw	128
  7050  14E0  3E12               	addlw	-238
  7051  14E1  1C03               	skipc
  7052  14E2  2D48               	goto	l6274
  7053  14E3  300A               	movlw	10
  7054  14E4  27CB  160A  118A   	fcall	PL15	;call to abstracted procedure
  7055  14E7  26AF  160A  118A   	fcall	___awmod
  7056  14EA  0871               	movf	?___awmod+1,w
  7057  14EB  00F9               	movwf	?___awdiv+3
  7058  14EC  0870               	movf	?___awmod,w
  7059  14ED  00F8               	movwf	?___awdiv+2
  7060  14EE  266A  160A  118A   	fcall	___awdiv
  7061  14F1  27E0               	fcall	PL23	;call to abstracted procedure
  7062  14F2  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  7063  14F3  0084               	movwf	4
  7064  14F4  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7065  14F9  00B1               	movwf	?___ftmul
  7066  14FA  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7067  14FF  00B2               	movwf	?___ftmul+1
  7068  1500  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7069  1505  27E8  160A  118A   	fcall	PL24	;call to abstracted procedure
  7070  1508  1BF8               	btfsc	?___awdiv+2,7
  7071  1509  03F9               	decf	?___awdiv+3,f
  7072  150A  266A  160A  118A   	fcall	___awdiv
  7073  150D  27AF               	fcall	PL7	;call to abstracted procedure
  7074  150E  3E37               	addlw	low ((__npowers_-__stringbase+54))
  7075  150F  0084               	movwf	4
  7076  1510  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7077  1515  00B4               	movwf	?___ftmul+3
  7078  1516  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7079  151B  00B5               	movwf	?___ftmul+4
  7080  151C  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7081  1521  00B6               	movwf	?___ftmul+5
  7082  1522  26EC  160A  118A   	fcall	___ftmul
  7083  1525  27BE  160A  118A   	fcall	PL9	;call to abstracted procedure
  7084  1528  1BF2               	btfsc	?___awmod+2,7
  7085  1529  03F3               	decf	?___awmod+3,f
  7086  152A  26AF  160A  118A   	fcall	___awmod
  7087  152D  27A7               	fcall	PL6	;call to abstracted procedure
  7088  152E  3E01               	addlw	low (__npowers_-__stringbase)
  7089  152F  0084               	movwf	4
  7090  1530  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7091  1535  00B1               	movwf	?___ftmul
  7092  1536  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7093  153B  00B2               	movwf	?___ftmul+1
  7094  153C  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7095  1541  27F0  160A  118A   	fcall	PL26	;call to abstracted procedure
  7096  1544  26EC  160A  118A   	fcall	___ftmul
  7097  1547  2FB7               	ljmp	PL8	;call to abstracted procedure
  7098  1548                     l6274:	
  7099  1548  084A               	movf	scale@scl,w
  7100  1549  3A80               	xorlw	128
  7101  154A  3E75               	addlw	-139
  7102  154B  1C03               	skipc
  7103  154C  2D8D               	goto	l6280
  7104  154D  300A               	movlw	10
  7105  154E  00F0               	movwf	?___awmod
  7106  154F  01F1               	clrf	?___awmod+1
  7107  1550  084A               	movf	scale@scl,w
  7108  1551  00F2               	movwf	?___awmod+2
  7109  1552  01F3               	clrf	?___awmod+3
  7110  1553  1BF2               	btfsc	?___awmod+2,7
  7111  1554  03F3               	decf	?___awmod+3,f
  7112  1555  26AF  160A  118A   	fcall	___awmod
  7113  1558  27A7               	fcall	PL6	;call to abstracted procedure
  7114  1559  3E01               	addlw	low (__npowers_-__stringbase)
  7115  155A  0084               	movwf	4
  7116  155B  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7117  1560  00B1               	movwf	?___ftmul
  7118  1561  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7119  1566  00B2               	movwf	?___ftmul+1
  7120  1567  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7121  156C  27F8  160A  118A   	fcall	PL27	;call to abstracted procedure
  7122  156F  1BF8               	btfsc	?___awdiv+2,7
  7123  1570  03F9               	decf	?___awdiv+3,f
  7124  1571  266A  160A  118A   	fcall	___awdiv
  7125  1574  27AF               	fcall	PL7	;call to abstracted procedure
  7126  1575  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  7127  1576  0084               	movwf	4
  7128  1577  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7129  157C  00B4               	movwf	?___ftmul+3
  7130  157D  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7131  1582  00B5               	movwf	?___ftmul+4
  7132  1583  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7133  1588  00B6               	movwf	?___ftmul+5
  7134  1589  26EC  160A  118A   	fcall	___ftmul
  7135  158C  2FB7               	ljmp	PL8	;call to abstracted procedure
  7136  158D                     l6280:	
  7137  158D  3003               	movlw	3
  7138  158E  00F9               	movwf	?___bmul
  7139  158F  084A               	movf	scale@scl,w
  7140  1590  275B               	fcall	___bmul
  7141  1591  3E01               	addlw	low (__npowers_-__stringbase)
  7142  1592  0084               	movwf	4
  7143  1593  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7144  1598  00C0               	movwf	?_scale
  7145  1599  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7146  159E  00C1               	movwf	?_scale+1
  7147  159F  120A  118A  2713   	fcall	stringdir
  7148  15A2  00C2               	movwf	?_scale+2
  7149  15A3  0008               	return
  7150  15A4                     l6284:	
  7151  15A4  084A               	movf	scale@scl,w
  7152  15A5  3A80               	xorlw	128
  7153  15A6  3E12               	addlw	-238
  7154  15A7  1C03               	skipc
  7155  15A8  2E0E               	goto	l6292
  7156  15A9  300A               	movlw	10
  7157  15AA  27CB  160A  118A   	fcall	PL15	;call to abstracted procedure
  7158  15AD  26AF  160A  118A   	fcall	___awmod
  7159  15B0  0871               	movf	?___awmod+1,w
  7160  15B1  00F9               	movwf	?___awdiv+3
  7161  15B2  0870               	movf	?___awmod,w
  7162  15B3  00F8               	movwf	?___awdiv+2
  7163  15B4  266A  160A  118A   	fcall	___awdiv
  7164  15B7  27E0               	fcall	PL23	;call to abstracted procedure
  7165  15B8  3E43               	addlw	low ((__powers_-__stringbase+27))
  7166  15B9  0084               	movwf	4
  7167  15BA  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7168  15BF  00B1               	movwf	?___ftmul
  7169  15C0  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7170  15C5  00B2               	movwf	?___ftmul+1
  7171  15C6  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7172  15CB  27E8  160A  118A   	fcall	PL24	;call to abstracted procedure
  7173  15CE  1BF8               	btfsc	?___awdiv+2,7
  7174  15CF  03F9               	decf	?___awdiv+3,f
  7175  15D0  266A  160A  118A   	fcall	___awdiv
  7176  15D3  27AF               	fcall	PL7	;call to abstracted procedure
  7177  15D4  3E5E               	addlw	low ((__powers_-__stringbase+54))
  7178  15D5  0084               	movwf	4
  7179  15D6  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7180  15DB  00B4               	movwf	?___ftmul+3
  7181  15DC  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7182  15E1  00B5               	movwf	?___ftmul+4
  7183  15E2  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7184  15E7  00B6               	movwf	?___ftmul+5
  7185  15E8  26EC  160A  118A   	fcall	___ftmul
  7186  15EB  27BE  160A  118A   	fcall	PL9	;call to abstracted procedure
  7187  15EE  1BF2               	btfsc	?___awmod+2,7
  7188  15EF  03F3               	decf	?___awmod+3,f
  7189  15F0  26AF  160A  118A   	fcall	___awmod
  7190  15F3  27A7               	fcall	PL6	;call to abstracted procedure
  7191  15F4  3E28               	addlw	low (__powers_-__stringbase)
  7192  15F5  0084               	movwf	4
  7193  15F6  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7194  15FB  00B1               	movwf	?___ftmul
  7195  15FC  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7196  1601  00B2               	movwf	?___ftmul+1
  7197  1602  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7198  1607  27F0  160A  118A   	fcall	PL26	;call to abstracted procedure
  7199  160A  26EC  160A  118A   	fcall	___ftmul
  7200  160D  2FB7               	ljmp	PL8	;call to abstracted procedure
  7201  160E                     l6292:	
  7202  160E  084A               	movf	scale@scl,w
  7203  160F  3A80               	xorlw	128
  7204  1610  3E75               	addlw	-139
  7205  1611  1C03               	skipc
  7206  1612  2E53               	goto	l6298
  7207  1613  300A               	movlw	10
  7208  1614  00F0               	movwf	?___awmod
  7209  1615  01F1               	clrf	?___awmod+1
  7210  1616  084A               	movf	scale@scl,w
  7211  1617  00F2               	movwf	?___awmod+2
  7212  1618  01F3               	clrf	?___awmod+3
  7213  1619  1BF2               	btfsc	?___awmod+2,7
  7214  161A  03F3               	decf	?___awmod+3,f
  7215  161B  26AF  160A  118A   	fcall	___awmod
  7216  161E  27A7               	fcall	PL6	;call to abstracted procedure
  7217  161F  3E28               	addlw	low (__powers_-__stringbase)
  7218  1620  0084               	movwf	4
  7219  1621  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7220  1626  00B1               	movwf	?___ftmul
  7221  1627  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7222  162C  00B2               	movwf	?___ftmul+1
  7223  162D  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7224  1632  27F8  160A  118A   	fcall	PL27	;call to abstracted procedure
  7225  1635  1BF8               	btfsc	?___awdiv+2,7
  7226  1636  03F9               	decf	?___awdiv+3,f
  7227  1637  266A  160A  118A   	fcall	___awdiv
  7228  163A  27AF               	fcall	PL7	;call to abstracted procedure
  7229  163B  3E43               	addlw	low ((__powers_-__stringbase+27))
  7230  163C  0084               	movwf	4
  7231  163D  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7232  1642  00B4               	movwf	?___ftmul+3
  7233  1643  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7234  1648  00B5               	movwf	?___ftmul+4
  7235  1649  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7236  164E  00B6               	movwf	?___ftmul+5
  7237  164F  26EC  160A  118A   	fcall	___ftmul
  7238  1652  2FB7               	ljmp	PL8	;call to abstracted procedure
  7239  1653                     l6298:	
  7240  1653  3003               	movlw	3
  7241  1654  00F9               	movwf	?___bmul
  7242  1655  084A               	movf	scale@scl,w
  7243  1656  275B               	fcall	___bmul
  7244  1657  3E28               	addlw	low (__powers_-__stringbase)
  7245  1658  0084               	movwf	4
  7246  1659  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7247  165E  00C0               	movwf	?_scale
  7248  165F  120A  118A  2713   	fcall	stringdir
      +       160A  118A         
  7249  1664  00C1               	movwf	?_scale+1
  7250  1665  120A  118A  2713   	fcall	stringdir
  7251  1668  00C2               	movwf	?_scale+2
  7252  1669  0008               	return
  7253  166A                     __end_of_scale:	
  7254  166A                     __ptext777:	
  7255 ;; =============== function ___llmod ends ============
  7256                           
  7257                           
  7258 ;; *************** function ___awdiv *****************
  7259 ;; Defined at:
  7260 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;  divisor         2    6[COMMON] int 
  7263 ;;  dividend        2    8[COMMON] int 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  quotient        2   12[COMMON] int 
  7266 ;;  sign            1   11[COMMON] unsigned char 
  7267 ;;  counter         1   10[COMMON] unsigned char 
  7268 ;; Return value:  Size  Location     Type
  7269 ;;                  2    6[COMMON] int 
  7270 ;; Registers used:
  7271 ;;		wreg, status,2, status,0
  7272 ;; Tracked objects:
  7273 ;;		On entry : 40/20
  7274 ;;		On exit  : 40/20
  7275 ;;		Unchanged: FFFBF/0
  7276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7277 ;;      Params:         4       0       0       0       0
  7278 ;;      Locals:         4       0       0       0       0
  7279 ;;      Temps:          0       0       0       0       0
  7280 ;;      Totals:         8       0       0       0       0
  7281 ;;Total ram usage:        8 bytes
  7282 ;; Hardware stack levels used:    1
  7283 ;; This function calls:
  7284 ;;		Nothing
  7285 ;; This function is called by:
  7286 ;;		_scale
  7287 ;;		_sprintf
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290  166A                     ___awdiv:	
  7291                           
  7292                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7293  166A  01FB               	clrf	___awdiv@sign
  7294  166B  1FF7               	btfss	___awdiv@divisor+1,7
  7295  166C  2E74               	goto	l5892
  7296  166D  09F6               	comf	___awdiv@divisor,f
  7297  166E  09F7               	comf	___awdiv@divisor+1,f
  7298  166F  0AF6               	incf	___awdiv@divisor,f
  7299  1670  1903               	skipnz
  7300  1671  0AF7               	incf	___awdiv@divisor+1,f
  7301  1672  01FB               	clrf	___awdiv@sign
  7302  1673  0AFB               	incf	___awdiv@sign,f
  7303  1674                     l5892:	
  7304  1674  1FF9               	btfss	___awdiv@dividend+1,7
  7305  1675  2E7D               	goto	l5898
  7306  1676  09F8               	comf	___awdiv@dividend,f
  7307  1677  09F9               	comf	___awdiv@dividend+1,f
  7308  1678  0AF8               	incf	___awdiv@dividend,f
  7309  1679  1903               	skipnz
  7310  167A  0AF9               	incf	___awdiv@dividend+1,f
  7311  167B  3001               	movlw	1
  7312  167C  06FB               	xorwf	___awdiv@sign,f
  7313  167D                     l5898:	
  7314  167D  01FC               	clrf	___awdiv@quotient
  7315  167E  01FD               	clrf	___awdiv@quotient+1
  7316  167F  0877               	movf	___awdiv@divisor+1,w
  7317  1680  0476               	iorwf	___awdiv@divisor,w
  7318  1681  1903               	skipnz
  7319  1682  2EA2               	goto	l5920
  7320  1683  01FA               	clrf	___awdiv@counter
  7321  1684                     L15:	
  7322  1684  0AFA               	incf	___awdiv@counter,f
  7323  1685  1BF7               	btfsc	___awdiv@divisor+1,7
  7324  1686  2E8B               	goto	l5908
  7325  1687  1003               	clrc
  7326  1688  0DF6               	rlf	___awdiv@divisor,f
  7327  1689  0DF7               	rlf	___awdiv@divisor+1,f
  7328  168A  2E84               	goto	L15
  7329  168B                     l5908:	
  7330  168B  1003               	clrc
  7331  168C  0DFC               	rlf	___awdiv@quotient,f
  7332  168D  0DFD               	rlf	___awdiv@quotient+1,f
  7333  168E  0877               	movf	___awdiv@divisor+1,w
  7334  168F  0279               	subwf	___awdiv@dividend+1,w
  7335  1690  1D03               	skipz
  7336  1691  2E94               	goto	u2395
  7337  1692  0876               	movf	___awdiv@divisor,w
  7338  1693  0278               	subwf	___awdiv@dividend,w
  7339  1694                     u2395:	
  7340  1694  1C03               	skipc
  7341  1695  2E9E               	goto	L16
  7342  1696  0876               	movf	___awdiv@divisor,w
  7343  1697  02F8               	subwf	___awdiv@dividend,f
  7344  1698  0877               	movf	___awdiv@divisor+1,w
  7345  1699  1C03               	skipc
  7346  169A  03F9               	decf	___awdiv@dividend+1,f
  7347  169B  02F9               	subwf	___awdiv@dividend+1,f
  7348  169C  147C               	bsf	___awdiv@quotient,0
  7349  169D  1003               	clrc
  7350  169E                     L16:	
  7351  169E  0CF7               	rrf	___awdiv@divisor+1,f
  7352  169F  0CF6               	rrf	___awdiv@divisor,f
  7353  16A0  0BFA               	decfsz	___awdiv@counter,f
  7354  16A1  2E8B               	goto	l5908
  7355  16A2                     l5920:	
  7356  16A2  087B               	movf	___awdiv@sign,w
  7357  16A3  1903               	btfsc	3,2
  7358  16A4  2EAA               	goto	l5924
  7359  16A5  09FC               	comf	___awdiv@quotient,f
  7360  16A6  09FD               	comf	___awdiv@quotient+1,f
  7361  16A7  0AFC               	incf	___awdiv@quotient,f
  7362  16A8  1903               	skipnz
  7363  16A9  0AFD               	incf	___awdiv@quotient+1,f
  7364  16AA                     l5924:	
  7365  16AA  087D               	movf	___awdiv@quotient+1,w
  7366  16AB  00F7               	movwf	?___awdiv+1
  7367  16AC  087C               	movf	___awdiv@quotient,w
  7368  16AD  00F6               	movwf	?___awdiv
  7369  16AE  0008               	return
  7370  16AF                     __end_of___awdiv:	
  7371  16AF                     __ptext772:	
  7372 ;; =============== function _pause ends ============
  7373                           
  7374                           
  7375 ;; *************** function ___awmod *****************
  7376 ;; Defined at:
  7377 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;  divisor         2    0[COMMON] int 
  7380 ;;  dividend        2    2[COMMON] int 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  sign            1    5[COMMON] unsigned char 
  7383 ;;  counter         1    4[COMMON] unsigned char 
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  2    0[COMMON] int 
  7386 ;; Registers used:
  7387 ;;		wreg, status,2, status,0
  7388 ;; Tracked objects:
  7389 ;;		On entry : 60/0
  7390 ;;		On exit  : 60/0
  7391 ;;		Unchanged: FFF9F/0
  7392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7393 ;;      Params:         4       0       0       0       0
  7394 ;;      Locals:         2       0       0       0       0
  7395 ;;      Temps:          0       0       0       0       0
  7396 ;;      Totals:         6       0       0       0       0
  7397 ;;Total ram usage:        6 bytes
  7398 ;; Hardware stack levels used:    1
  7399 ;; This function calls:
  7400 ;;		Nothing
  7401 ;; This function is called by:
  7402 ;;		_scale
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405  16AF                     ___awmod:	
  7406                           
  7407                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7408  16AF  01F5               	clrf	___awmod@sign
  7409  16B0  1FF3               	btfss	___awmod@dividend+1,7
  7410  16B1  2EB9               	goto	l6010
  7411  16B2  09F2               	comf	___awmod@dividend,f
  7412  16B3  09F3               	comf	___awmod@dividend+1,f
  7413  16B4  0AF2               	incf	___awmod@dividend,f
  7414  16B5  1903               	skipnz
  7415  16B6  0AF3               	incf	___awmod@dividend+1,f
  7416  16B7  01F5               	clrf	___awmod@sign
  7417  16B8  0AF5               	incf	___awmod@sign,f
  7418  16B9                     l6010:	
  7419  16B9  1FF1               	btfss	___awmod@divisor+1,7
  7420  16BA  2EC0               	goto	l6014
  7421  16BB  09F0               	comf	___awmod@divisor,f
  7422  16BC  09F1               	comf	___awmod@divisor+1,f
  7423  16BD  0AF0               	incf	___awmod@divisor,f
  7424  16BE  1903               	skipnz
  7425  16BF  0AF1               	incf	___awmod@divisor+1,f
  7426  16C0                     l6014:	
  7427  16C0  0871               	movf	___awmod@divisor+1,w
  7428  16C1  0470               	iorwf	___awmod@divisor,w
  7429  16C2  1903               	skipnz
  7430  16C3  2EDF               	goto	l6030
  7431  16C4  01F4               	clrf	___awmod@counter
  7432  16C5                     L8:	
  7433  16C5  0AF4               	incf	___awmod@counter,f
  7434  16C6  1BF1               	btfsc	___awmod@divisor+1,7
  7435  16C7  2ECC               	goto	l6022
  7436  16C8  1003               	clrc
  7437  16C9  0DF0               	rlf	___awmod@divisor,f
  7438  16CA  0DF1               	rlf	___awmod@divisor+1,f
  7439  16CB  2EC5               	goto	L8
  7440  16CC                     l6022:	
  7441  16CC  0871               	movf	___awmod@divisor+1,w
  7442  16CD  0273               	subwf	___awmod@dividend+1,w
  7443  16CE  1D03               	skipz
  7444  16CF  2ED2               	goto	u2585
  7445  16D0  0870               	movf	___awmod@divisor,w
  7446  16D1  0272               	subwf	___awmod@dividend,w
  7447  16D2                     u2585:	
  7448  16D2  1C03               	skipc
  7449  16D3  2EDB               	goto	L9
  7450  16D4  0870               	movf	___awmod@divisor,w
  7451  16D5  02F2               	subwf	___awmod@dividend,f
  7452  16D6  0871               	movf	___awmod@divisor+1,w
  7453  16D7  1C03               	skipc
  7454  16D8  03F3               	decf	___awmod@dividend+1,f
  7455  16D9  02F3               	subwf	___awmod@dividend+1,f
  7456  16DA  1003               	clrc
  7457  16DB                     L9:	
  7458  16DB  0CF1               	rrf	___awmod@divisor+1,f
  7459  16DC  0CF0               	rrf	___awmod@divisor,f
  7460  16DD  0BF4               	decfsz	___awmod@counter,f
  7461  16DE  2ECC               	goto	l6022
  7462  16DF                     l6030:	
  7463  16DF  0875               	movf	___awmod@sign,w
  7464  16E0  1903               	btfsc	3,2
  7465  16E1  2EE7               	goto	l6034
  7466  16E2  09F2               	comf	___awmod@dividend,f
  7467  16E3  09F3               	comf	___awmod@dividend+1,f
  7468  16E4  0AF2               	incf	___awmod@dividend,f
  7469  16E5  1903               	skipnz
  7470  16E6  0AF3               	incf	___awmod@dividend+1,f
  7471  16E7                     l6034:	
  7472  16E7  0873               	movf	___awmod@dividend+1,w
  7473  16E8  00F1               	movwf	?___awmod+1
  7474  16E9  0872               	movf	___awmod@dividend,w
  7475  16EA  00F0               	movwf	?___awmod
  7476  16EB  0008               	return
  7477  16EC                     __end_of___awmod:	
  7478  16EC                     __ptext768:	
  7479 ;; =============== function ___lbtoft ends ============
  7480                           
  7481                           
  7482 ;; *************** function ___ftmul *****************
  7483 ;; Defined at:
  7484 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  f1              3   17[BANK0 ] float 
  7487 ;;  f2              3   20[BANK0 ] float 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  7490 ;;  sign            1   31[BANK0 ] unsigned char 
  7491 ;;  cntr            1   30[BANK0 ] unsigned char 
  7492 ;;  exp             1   26[BANK0 ] unsigned char 
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  3   17[BANK0 ] float 
  7495 ;; Registers used:
  7496 ;;		wreg, status,2, status,0, pclath, cstack
  7497 ;; Tracked objects:
  7498 ;;		On entry : 60/0
  7499 ;;		On exit  : 60/0
  7500 ;;		Unchanged: FFF9F/0
  7501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7502 ;;      Params:         0       6       0       0       0
  7503 ;;      Locals:         0       6       0       0       0
  7504 ;;      Temps:          0       3       0       0       0
  7505 ;;      Totals:         0      15       0       0       0
  7506 ;;Total ram usage:       15 bytes
  7507 ;; Hardware stack levels used:    1
  7508 ;; Hardware stack levels required when called:    1
  7509 ;; This function calls:
  7510 ;;		___ftpack
  7511 ;; This function is called by:
  7512 ;;		_main
  7513 ;;		_fround
  7514 ;;		_scale
  7515 ;;		_sprintf
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518  16EC                     ___ftmul:	
  7519                           
  7520                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7521  16EC  0831               	movf	___ftmul@f1,w
  7522  16ED  00B7               	movwf	??___ftmul
  7523  16EE  0832               	movf	___ftmul@f1+1,w
  7524  16EF  00B8               	movwf	??___ftmul+1
  7525  16F0  0833               	movf	___ftmul@f1+2,w
  7526  16F1  00B9               	movwf	??___ftmul+2
  7527  16F2  1003               	clrc
  7528  16F3  0D38               	rlf	??___ftmul+1,w
  7529  16F4  0D39               	rlf	??___ftmul+2,w
  7530  16F5  00BA               	movwf	___ftmul@exp
  7531  16F6  08BA               	movf	___ftmul@exp,f
  7532  16F7  1D03               	skipz
  7533  16F8  2EFD               	goto	l6150
  7534  16F9  01B1               	clrf	?___ftmul
  7535  16FA  01B2               	clrf	?___ftmul+1
  7536  16FB  01B3               	clrf	?___ftmul+2
  7537  16FC  0008               	return
  7538  16FD                     l6150:	
  7539  16FD  0834               	movf	___ftmul@f2,w
  7540  16FE  00B7               	movwf	??___ftmul
  7541  16FF  0835               	movf	___ftmul@f2+1,w
  7542  1700  00B8               	movwf	??___ftmul+1
  7543  1701  0836               	movf	___ftmul@f2+2,w
  7544  1702  00B9               	movwf	??___ftmul+2
  7545  1703  1003               	clrc
  7546  1704  0D38               	rlf	??___ftmul+1,w
  7547  1705  0D39               	rlf	??___ftmul+2,w
  7548  1706  00BF               	movwf	___ftmul@sign
  7549  1707  08BF               	movf	___ftmul@sign,f
  7550  1708  1D03               	skipz
  7551  1709  2F0E               	goto	l6156
  7552  170A  01B1               	clrf	?___ftmul
  7553  170B  01B2               	clrf	?___ftmul+1
  7554  170C  01B3               	clrf	?___ftmul+2
  7555  170D  0008               	return
  7556  170E                     l6156:	
  7557  170E  083F               	movf	___ftmul@sign,w
  7558  170F  3E7B               	addlw	123
  7559  1710  07BA               	addwf	___ftmul@exp,f
  7560  1711  0833               	movf	___ftmul@f1+2,w
  7561  1712  00BF               	movwf	___ftmul@sign
  7562  1713  0836               	movf	___ftmul@f2+2,w
  7563  1714  06BF               	xorwf	___ftmul@sign,f
  7564  1715  3080               	movlw	128
  7565  1716  05BF               	andwf	___ftmul@sign,f
  7566  1717  3007               	movlw	7
  7567  1718  17B2               	bsf	___ftmul@f1+1,7
  7568  1719  17B5               	bsf	___ftmul@f2+1,7
  7569  171A  01B6               	clrf	___ftmul@f2+2
  7570  171B  01BB               	clrf	___ftmul@f3_as_product
  7571  171C  01BC               	clrf	___ftmul@f3_as_product+1
  7572  171D  01BD               	clrf	___ftmul@f3_as_product+2
  7573  171E  00BE               	movwf	___ftmul@cntr
  7574  171F                     l6174:	
  7575  171F  1C31               	btfss	___ftmul@f1,0
  7576  1720  2F29               	goto	l6178
  7577  1721  0834               	movf	___ftmul@f2,w
  7578  1722  27D6  160A  118A   	fcall	PL18	;call to abstracted procedure
  7579  1725  1803               	skipnc
  7580  1726  0A36               	incf	___ftmul@f2+2,w
  7581  1727  1D03               	btfss	3,2
  7582  1728  07BD               	addwf	___ftmul@f3_as_product+2,f
  7583  1729                     l6178:	
  7584  1729  1003               	clrc
  7585  172A  0CB3               	rrf	___ftmul@f1+2,f
  7586  172B  0CB2               	rrf	___ftmul@f1+1,f
  7587  172C  0CB1               	rrf	___ftmul@f1,f
  7588  172D  1003               	clrc
  7589  172E  0DB4               	rlf	___ftmul@f2,f
  7590  172F  0DB5               	rlf	___ftmul@f2+1,f
  7591  1730  0DB6               	rlf	___ftmul@f2+2,f
  7592  1731  0BBE               	decfsz	___ftmul@cntr,f
  7593  1732  2F1F               	goto	l6174
  7594  1733  3009               	movlw	9
  7595  1734  00BE               	movwf	___ftmul@cntr
  7596  1735                     l6186:	
  7597  1735  1C31               	btfss	___ftmul@f1,0
  7598  1736  2F3F               	goto	l6190
  7599  1737  0834               	movf	___ftmul@f2,w
  7600  1738  27D6  160A  118A   	fcall	PL18	;call to abstracted procedure
  7601  173B  1803               	skipnc
  7602  173C  0A36               	incf	___ftmul@f2+2,w
  7603  173D  1D03               	btfss	3,2
  7604  173E  07BD               	addwf	___ftmul@f3_as_product+2,f
  7605  173F                     l6190:	
  7606  173F  1003               	clrc
  7607  1740  0CB3               	rrf	___ftmul@f1+2,f
  7608  1741  0CB2               	rrf	___ftmul@f1+1,f
  7609  1742  0CB1               	rrf	___ftmul@f1,f
  7610  1743  1003               	clrc
  7611  1744  0CBD               	rrf	___ftmul@f3_as_product+2,f
  7612  1745  0CBC               	rrf	___ftmul@f3_as_product+1,f
  7613  1746  0CBB               	rrf	___ftmul@f3_as_product,f
  7614  1747  0BBE               	decfsz	___ftmul@cntr,f
  7615  1748  2F35               	goto	l6186
  7616  1749  083B               	movf	___ftmul@f3_as_product,w
  7617  174A  00F0               	movwf	?___ftpack
  7618  174B  083C               	movf	___ftmul@f3_as_product+1,w
  7619  174C  00F1               	movwf	?___ftpack+1
  7620  174D  083D               	movf	___ftmul@f3_as_product+2,w
  7621  174E  00F2               	movwf	?___ftpack+2
  7622  174F  083A               	movf	___ftmul@exp,w
  7623  1750  00F3               	movwf	?___ftpack+3
  7624  1751  083F               	movf	___ftmul@sign,w
  7625  1752  00F4               	movwf	?___ftpack+4
  7626  1753  2769               	fcall	___ftpack
  7627  1754  0870               	movf	?___ftpack,w
  7628  1755  00B1               	movwf	?___ftmul
  7629  1756  0871               	movf	?___ftpack+1,w
  7630  1757  00B2               	movwf	?___ftmul+1
  7631  1758  0872               	movf	?___ftpack+2,w
  7632  1759  00B3               	movwf	?___ftmul+2
  7633  175A  0008               	return
  7634  175B                     __end_of___ftmul:	
  7635  175B                     __ptext784:	
  7636 ;; =============== function ___wmul ends ============
  7637                           
  7638                           
  7639 ;; *************** function ___bmul *****************
  7640 ;; Defined at:
  7641 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\bmul.c"
  7642 ;; Parameters:    Size  Location     Type
  7643 ;;  multiplier      1    wreg     unsigned char 
  7644 ;;  multiplicand    1    9[COMMON] unsigned char 
  7645 ;; Auto vars:     Size  Location     Type
  7646 ;;  multiplier      1   11[COMMON] unsigned char 
  7647 ;;  product         1   10[COMMON] unsigned char 
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  1    wreg      unsigned char 
  7650 ;; Registers used:
  7651 ;;		wreg, status,2, status,0
  7652 ;; Tracked objects:
  7653 ;;		On entry : 60/0
  7654 ;;		On exit  : 60/0
  7655 ;;		Unchanged: FFF9F/0
  7656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7657 ;;      Params:         1       0       0       0       0
  7658 ;;      Locals:         2       0       0       0       0
  7659 ;;      Temps:          0       0       0       0       0
  7660 ;;      Totals:         3       0       0       0       0
  7661 ;;Total ram usage:        3 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; This function calls:
  7664 ;;		Nothing
  7665 ;; This function is called by:
  7666 ;;		_fround
  7667 ;;		_scale
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670  175B                     ___bmul:	
  7671                           
  7672                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7673                           ;___bmul@multiplier stored from wreg
  7674  175B  00FB               	movwf	___bmul@multiplier
  7675  175C  01FA               	clrf	___bmul@product
  7676  175D                     l5720:	
  7677  175D  0879               	movf	___bmul@multiplicand,w
  7678  175E  187B               	btfsc	___bmul@multiplier,0
  7679  175F  07FA               	addwf	___bmul@product,f
  7680  1760  1003               	clrc
  7681  1761  0DF9               	rlf	___bmul@multiplicand,f
  7682  1762  1003               	clrc
  7683  1763  0CFB               	rrf	___bmul@multiplier,f
  7684  1764  08FB               	movf	___bmul@multiplier,f
  7685  1765  1D03               	skipz
  7686  1766  2F5D               	goto	l5720
  7687  1767  087A               	movf	___bmul@product,w
  7688  1768  0008               	return
  7689  1769                     __end_of___bmul:	
  7690  1769                     __ptext779:	
  7691 ;; =============== function ___fttol ends ============
  7692                           
  7693                           
  7694 ;; *************** function ___ftpack *****************
  7695 ;; Defined at:
  7696 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;  arg             3    0[COMMON] unsigned um
  7699 ;;  exp             1    3[COMMON] unsigned char 
  7700 ;;  sign            1    4[COMMON] unsigned char 
  7701 ;; Auto vars:     Size  Location     Type
  7702 ;;		None
  7703 ;; Return value:  Size  Location     Type
  7704 ;;                  3    0[COMMON] float 
  7705 ;; Registers used:
  7706 ;;		wreg, status,2, status,0
  7707 ;; Tracked objects:
  7708 ;;		On entry : 40/20
  7709 ;;		On exit  : 40/20
  7710 ;;		Unchanged: FFFBF/0
  7711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7712 ;;      Params:         5       0       0       0       0
  7713 ;;      Locals:         0       0       0       0       0
  7714 ;;      Temps:          3       0       0       0       0
  7715 ;;      Totals:         8       0       0       0       0
  7716 ;;Total ram usage:        8 bytes
  7717 ;; Hardware stack levels used:    1
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		___ftadd
  7722 ;;		___ftmul
  7723 ;;		___lbtoft
  7724 ;;		___lltoft
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727  1769                     ___ftpack:	
  7728                           
  7729                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7730  1769  0873               	movf	___ftpack@exp,w
  7731  176A  1903               	btfsc	3,2
  7732  176B  2F71               	goto	l5822
  7733  176C  0872               	movf	___ftpack@arg+2,w
  7734  176D  0471               	iorwf	___ftpack@arg+1,w
  7735  176E  0470               	iorwf	___ftpack@arg,w
  7736  176F  1D03               	skipz
  7737  1770  2F7A               	goto	l5828
  7738  1771                     l5822:	
  7739  1771  01F0               	clrf	?___ftpack
  7740  1772  01F1               	clrf	?___ftpack+1
  7741  1773  01F2               	clrf	?___ftpack+2
  7742  1774  0008               	return
  7743  1775                     l5826:	
  7744  1775  0AF3               	incf	___ftpack@exp,f
  7745  1776  1003               	clrc
  7746  1777  0CF2               	rrf	___ftpack@arg+2,f
  7747  1778  0CF1               	rrf	___ftpack@arg+1,f
  7748  1779  0CF0               	rrf	___ftpack@arg,f
  7749  177A                     l5828:	
  7750  177A  30FE               	movlw	254
  7751  177B  0572               	andwf	___ftpack@arg+2,w
  7752  177C  1903               	btfsc	3,2
  7753  177D  2F89               	goto	l5832
  7754  177E  2F75               	goto	l5826
  7755  177F                     l5830:	
  7756  177F  0AF3               	incf	___ftpack@exp,f
  7757  1780  0AF0               	incf	___ftpack@arg,f
  7758  1781  1903               	skipnz
  7759  1782  0AF1               	incf	___ftpack@arg+1,f
  7760  1783  1903               	skipnz
  7761  1784  0AF2               	incf	___ftpack@arg+2,f
  7762  1785  1003               	clrc
  7763  1786  0CF2               	rrf	___ftpack@arg+2,f
  7764  1787  0CF1               	rrf	___ftpack@arg+1,f
  7765  1788  0CF0               	rrf	___ftpack@arg,f
  7766  1789                     l5832:	
  7767  1789  30FF               	movlw	255
  7768  178A  0572               	andwf	___ftpack@arg+2,w
  7769  178B  1903               	btfsc	3,2
  7770  178C  2F93               	goto	l5836
  7771  178D  2F7F               	goto	l5830
  7772  178E                     l5834:	
  7773  178E  03F3               	decf	___ftpack@exp,f
  7774  178F  1003               	clrc
  7775  1790  0DF0               	rlf	___ftpack@arg,f
  7776  1791  0DF1               	rlf	___ftpack@arg+1,f
  7777  1792  0DF2               	rlf	___ftpack@arg+2,f
  7778  1793                     l5836:	
  7779  1793  1FF1               	btfss	___ftpack@arg+1,7
  7780  1794  2F8E               	goto	l5834
  7781  1795  1C73               	btfss	___ftpack@exp,0
  7782  1796  13F1               	bcf	___ftpack@arg+1,7
  7783  1797  1003               	clrc
  7784  1798  0CF3               	rrf	___ftpack@exp,f
  7785  1799  0873               	movf	___ftpack@exp,w
  7786  179A  00F7               	movwf	??___ftpack+2
  7787  179B  01F6               	clrf	??___ftpack+1
  7788  179C  01F5               	clrf	??___ftpack
  7789  179D  0875               	movf	??___ftpack,w
  7790  179E  04F0               	iorwf	___ftpack@arg,f
  7791  179F  0876               	movf	??___ftpack+1,w
  7792  17A0  04F1               	iorwf	___ftpack@arg+1,f
  7793  17A1  0877               	movf	??___ftpack+2,w
  7794  17A2  04F2               	iorwf	___ftpack@arg+2,f
  7795  17A3  0874               	movf	___ftpack@sign,w
  7796  17A4  1D03               	skipz
  7797  17A5  17F2               	bsf	___ftpack@arg+2,7
  7798  17A6  0008               	return
  7799  17A7                     __end_of___ftpack:	
  7800  17A7                     PL6:	
  7801  17A7  0870               	movf	?___awmod,w
  7802  17A8  00C3               	movwf	??_scale
  7803  17A9  0871               	movf	?___awmod+1,w
  7804  17AA  00C4               	movwf	??_scale+1
  7805  17AB  0843               	movf	??_scale,w
  7806  17AC  0743               	addwf	??_scale,w
  7807  17AD  0743               	addwf	??_scale,w
  7808  17AE  0008               	return
  7809  17AF                     PL7:	
  7810  17AF  0876               	movf	?___awdiv,w
  7811  17B0  00C5               	movwf	??_scale+2
  7812  17B1  0877               	movf	?___awdiv+1,w
  7813  17B2  00C6               	movwf	??_scale+3
  7814  17B3  0845               	movf	??_scale+2,w
  7815  17B4  0745               	addwf	??_scale+2,w
  7816  17B5  0745               	addwf	??_scale+2,w
  7817  17B6  0008               	return
  7818  17B7                     PL8:	
  7819  17B7  0831               	movf	?___ftmul,w
  7820  17B8  00C0               	movwf	?_scale
  7821  17B9  0832               	movf	?___ftmul+1,w
  7822  17BA  00C1               	movwf	?_scale+1
  7823  17BB  0833               	movf	?___ftmul+2,w
  7824  17BC  00C2               	movwf	?_scale+2
  7825  17BD  0008               	return
  7826  17BE                     PL9:	
  7827  17BE  0831               	movf	?___ftmul,w
  7828  17BF  00C7               	movwf	_scale$2962
  7829  17C0  0832               	movf	?___ftmul+1,w
  7830  17C1  00C8               	movwf	_scale$2962+1
  7831  17C2  0833               	movf	?___ftmul+2,w
  7832  17C3  00C9               	movwf	_scale$2962+2
  7833  17C4  300A               	movlw	10
  7834  17C5  00F0               	movwf	?___awmod
  7835  17C6  01F1               	clrf	?___awmod+1
  7836  17C7  084A               	movf	scale@scl,w
  7837  17C8  00F2               	movwf	?___awmod+2
  7838  17C9  01F3               	clrf	?___awmod+3
  7839  17CA  0008               	return
  7840  17CB                     PL15:	
  7841  17CB  00F6               	movwf	?___awdiv
  7842  17CC  01F7               	clrf	?___awdiv+1
  7843  17CD  084A               	movf	scale@scl,w
  7844  17CE  00F2               	movwf	?___awmod+2
  7845  17CF  01F3               	clrf	?___awmod+3
  7846  17D0  1BF2               	btfsc	?___awmod+2,7
  7847  17D1  03F3               	decf	?___awmod+3,f
  7848  17D2  3064               	movlw	100
  7849  17D3  00F0               	movwf	?___awmod
  7850  17D4  01F1               	clrf	?___awmod+1
  7851  17D5  0008               	return
  7852  17D6                     PL18:	
  7853  17D6  07BB               	addwf	___ftmul@f3_as_product,f
  7854  17D7  0835               	movf	___ftmul@f2+1,w
  7855  17D8  1103               	clrz
  7856  17D9  1803               	skipnc
  7857  17DA  0A35               	incf	___ftmul@f2+1,w
  7858  17DB  1D03               	btfss	3,2
  7859  17DC  07BC               	addwf	___ftmul@f3_as_product+1,f
  7860  17DD  0836               	movf	___ftmul@f2+2,w
  7861  17DE  1103               	clrz
  7862  17DF  0008               	return
  7863  17E0                     PL23:	
  7864  17E0  0876               	movf	?___awdiv,w
  7865  17E1  00C3               	movwf	??_scale
  7866  17E2  0877               	movf	?___awdiv+1,w
  7867  17E3  00C4               	movwf	??_scale+1
  7868  17E4  0843               	movf	??_scale,w
  7869  17E5  0743               	addwf	??_scale,w
  7870  17E6  0743               	addwf	??_scale,w
  7871  17E7  0008               	return
  7872  17E8                     PL24:	
  7873  17E8  00B3               	movwf	?___ftmul+2
  7874  17E9  3064               	movlw	100
  7875  17EA  00F6               	movwf	?___awdiv
  7876  17EB  01F7               	clrf	?___awdiv+1
  7877  17EC  084A               	movf	scale@scl,w
  7878  17ED  00F8               	movwf	?___awdiv+2
  7879  17EE  01F9               	clrf	?___awdiv+3
  7880  17EF  0008               	return
  7881  17F0                     PL26:	
  7882  17F0  00B3               	movwf	?___ftmul+2
  7883  17F1  0847               	movf	_scale$2962,w
  7884  17F2  00B4               	movwf	?___ftmul+3
  7885  17F3  0848               	movf	_scale$2962+1,w
  7886  17F4  00B5               	movwf	?___ftmul+4
  7887  17F5  0849               	movf	_scale$2962+2,w
  7888  17F6  00B6               	movwf	?___ftmul+5
  7889  17F7  0008               	return
  7890  17F8                     PL27:	
  7891  17F8  00B3               	movwf	?___ftmul+2
  7892  17F9  300A               	movlw	10
  7893  17FA  00F6               	movwf	?___awdiv
  7894  17FB  01F7               	clrf	?___awdiv+1
  7895  17FC  084A               	movf	scale@scl,w
  7896  17FD  00F8               	movwf	?___awdiv+2
  7897  17FE  01F9               	clrf	?___awdiv+3
  7898  17FF  0008               	return
  7899                           
  7900                           	psect	text782
  7901  0063                     __ptext782:	
  7902 ;; =============== function ___lbdiv ends ============
  7903                           
  7904                           
  7905 ;; *************** function ___lwdiv *****************
  7906 ;; Defined at:
  7907 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;  divisor         2    0[COMMON] unsigned int 
  7910 ;;  dividend        2    2[COMMON] unsigned int 
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;  quotient        2    4[COMMON] unsigned int 
  7913 ;;  counter         1    6[COMMON] unsigned char 
  7914 ;; Return value:  Size  Location     Type
  7915 ;;                  2    0[COMMON] unsigned int 
  7916 ;; Registers used:
  7917 ;;		wreg, status,2, status,0
  7918 ;; Tracked objects:
  7919 ;;		On entry : 60/20
  7920 ;;		On exit  : 60/20
  7921 ;;		Unchanged: FFF9F/0
  7922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7923 ;;      Params:         4       0       0       0       0
  7924 ;;      Locals:         3       0       0       0       0
  7925 ;;      Temps:          0       0       0       0       0
  7926 ;;      Totals:         7       0       0       0       0
  7927 ;;Total ram usage:        7 bytes
  7928 ;; Hardware stack levels used:    1
  7929 ;; This function calls:
  7930 ;;		Nothing
  7931 ;; This function is called by:
  7932 ;;		_main
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935  0063                     ___lwdiv:	
  7936                           
  7937                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7938  0063  01F4               	clrf	___lwdiv@quotient
  7939  0064  01F5               	clrf	___lwdiv@quotient+1
  7940  0065  0871               	movf	___lwdiv@divisor+1,w
  7941  0066  0470               	iorwf	___lwdiv@divisor,w
  7942  0067  1903               	skipnz
  7943  0068  2888               	goto	l5772
  7944  0069  01F6               	clrf	___lwdiv@counter
  7945  006A                     L19:	
  7946  006A  0AF6               	incf	___lwdiv@counter,f
  7947  006B  1BF1               	btfsc	___lwdiv@divisor+1,7
  7948  006C  2871               	goto	l5760
  7949  006D  1003               	clrc
  7950  006E  0DF0               	rlf	___lwdiv@divisor,f
  7951  006F  0DF1               	rlf	___lwdiv@divisor+1,f
  7952  0070  286A               	goto	L19
  7953  0071                     l5760:	
  7954  0071  1003               	clrc
  7955  0072  0DF4               	rlf	___lwdiv@quotient,f
  7956  0073  0DF5               	rlf	___lwdiv@quotient+1,f
  7957  0074  0871               	movf	___lwdiv@divisor+1,w
  7958  0075  0273               	subwf	___lwdiv@dividend+1,w
  7959  0076  1D03               	skipz
  7960  0077  287A               	goto	u2115
  7961  0078  0870               	movf	___lwdiv@divisor,w
  7962  0079  0272               	subwf	___lwdiv@dividend,w
  7963  007A                     u2115:	
  7964  007A  1C03               	skipc
  7965  007B  2884               	goto	L20
  7966  007C  0870               	movf	___lwdiv@divisor,w
  7967  007D  02F2               	subwf	___lwdiv@dividend,f
  7968  007E  0871               	movf	___lwdiv@divisor+1,w
  7969  007F  1C03               	skipc
  7970  0080  03F3               	decf	___lwdiv@dividend+1,f
  7971  0081  02F3               	subwf	___lwdiv@dividend+1,f
  7972  0082  1474               	bsf	___lwdiv@quotient,0
  7973  0083  1003               	clrc
  7974  0084                     L20:	
  7975  0084  0CF1               	rrf	___lwdiv@divisor+1,f
  7976  0085  0CF0               	rrf	___lwdiv@divisor,f
  7977  0086  0BF6               	decfsz	___lwdiv@counter,f
  7978  0087  2871               	goto	l5760
  7979  0088                     l5772:	
  7980  0088  0875               	movf	___lwdiv@quotient+1,w
  7981  0089  00F1               	movwf	?___lwdiv+1
  7982  008A  0874               	movf	___lwdiv@quotient,w
  7983  008B  00F0               	movwf	?___lwdiv
  7984  008C  0008               	return
  7985  008D                     __end_of___lwdiv:	
  7986                           
  7987                           	psect	text785
  7988  1340                     __ptext785:	
  7989 ;; =============== function ___bmul ends ============
  7990                           
  7991                           
  7992 ;; *************** function __div_to_l_ *****************
  7993 ;; Defined at:
  7994 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fldivl.c"
  7995 ;; Parameters:    Size  Location     Type
  7996 ;;  f1              3    0[COMMON] unsigned char 
  7997 ;;  f2              3    3[COMMON] unsigned char 
  7998 ;; Auto vars:     Size  Location     Type
  7999 ;;  quot            4    0[BANK0 ] unsigned long 
  8000 ;;  exp1            1    5[BANK0 ] unsigned char 
  8001 ;;  cntr            1    4[BANK0 ] unsigned char 
  8002 ;; Return value:  Size  Location     Type
  8003 ;;                  4    0[COMMON] unsigned long 
  8004 ;; Registers used:
  8005 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 60/0
  8009 ;;		Unchanged: FFF9F/0
  8010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8011 ;;      Params:         6       0       0       0       0
  8012 ;;      Locals:         0       6       0       0       0
  8013 ;;      Temps:          8       0       0       0       0
  8014 ;;      Totals:        14       6       0       0       0
  8015 ;;Total ram usage:       20 bytes
  8016 ;; Hardware stack levels used:    1
  8017 ;; This function calls:
  8018 ;;		Nothing
  8019 ;; This function is called by:
  8020 ;;		_sprintf
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023  1340                     __div_to_l_:	
  8024                           
  8025                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  8026  1340  3070               	movlw	low __div_to_l_@f1
  8027  1341  23F5  160A  118A   	fcall	PL2	;call to abstracted procedure
  8028  1344  1003               	clrc
  8029  1345  0D78               	rlf	??__div_to_l_+2,w
  8030  1346  0D79               	rlf	??__div_to_l_+3,w
  8031  1347  1283               	bcf	3,5	;RP0=0, select bank0
  8032  1348  1303               	bcf	3,6	;RP1=0, select bank0
  8033  1349  00A5               	movwf	__div_to_l_@exp1
  8034  134A  08A5               	movf	__div_to_l_@exp1,f
  8035  134B  1D03               	skipz
  8036  134C  2B52               	goto	l5676
  8037  134D                     l5674:	
  8038  134D  01F0               	clrf	?__div_to_l_
  8039  134E  01F1               	clrf	?__div_to_l_+1
  8040  134F  01F2               	clrf	?__div_to_l_+2
  8041  1350  01F3               	clrf	?__div_to_l_+3
  8042  1351  0008               	return
  8043  1352                     l5676:	
  8044  1352  3073               	movlw	low __div_to_l_@f2
  8045  1353  23F5  160A  118A   	fcall	PL2	;call to abstracted procedure
  8046  1356  1003               	clrc
  8047  1357  0D78               	rlf	??__div_to_l_+2,w
  8048  1358  0D79               	rlf	??__div_to_l_+3,w
  8049  1359  00A4               	movwf	__div_to_l_@cntr
  8050  135A  08A4               	movf	__div_to_l_@cntr,f
  8051  135B  1903               	btfsc	3,2
  8052  135C  2B4D               	goto	l5674
  8053  135D  3070               	movlw	low __div_to_l_@f1
  8054  135E  0084               	movwf	4
  8055  135F  3080               	movlw	128
  8056  1360  0A84               	incf	4,f
  8057  1361  0A84               	incf	4,f
  8058  1362  0480               	iorwf	0,f
  8059  1363  3070               	movlw	low __div_to_l_@f1
  8060  1364  0A84               	incf	4,f
  8061  1365  0084               	movwf	4
  8062  1366  3073               	movlw	low __div_to_l_@f2
  8063  1367  0A84               	incf	4,f
  8064  1368  0A84               	incf	4,f
  8065  1369  0A84               	incf	4,f
  8066  136A  0180               	clrf	0
  8067  136B  0084               	movwf	4
  8068  136C  3080               	movlw	128
  8069  136D  0A84               	incf	4,f
  8070  136E  0A84               	incf	4,f
  8071  136F  0480               	iorwf	0,f
  8072  1370  3073               	movlw	low __div_to_l_@f2
  8073  1371  0A84               	incf	4,f
  8074  1372  0084               	movwf	4
  8075  1373  307F               	movlw	127
  8076  1374  0A84               	incf	4,f
  8077  1375  0A84               	incf	4,f
  8078  1376  0A84               	incf	4,f
  8079  1377  0180               	clrf	0
  8080  1378  01A0               	clrf	__div_to_l_@quot
  8081  1379  01A1               	clrf	__div_to_l_@quot+1
  8082  137A  01A2               	clrf	__div_to_l_@quot+2
  8083  137B  01A3               	clrf	__div_to_l_@quot+3
  8084  137C  02A5               	subwf	__div_to_l_@exp1,f
  8085  137D  30A0               	movlw	160
  8086  137E  0724               	addwf	__div_to_l_@cntr,w
  8087  137F  00F6               	movwf	??__div_to_l_
  8088  1380  02A5               	subwf	__div_to_l_@exp1,f
  8089  1381  3020               	movlw	32
  8090  1382  00A4               	movwf	__div_to_l_@cntr
  8091  1383                     l5690:	
  8092  1383  3073               	movlw	low __div_to_l_@f2
  8093  1384  1003               	clrc
  8094  1385  0DA0               	rlf	__div_to_l_@quot,f
  8095  1386  0DA1               	rlf	__div_to_l_@quot+1,f
  8096  1387  0DA2               	rlf	__div_to_l_@quot+2,f
  8097  1388  0DA3               	rlf	__div_to_l_@quot+3,f
  8098  1389  23F5  160A  118A   	fcall	PL2	;call to abstracted procedure
  8099  138C  3070               	movlw	low __div_to_l_@f1
  8100  138D  0084               	movwf	4
  8101  138E  0800               	movf	0,w
  8102  138F  00FA               	movwf	??__div_to_l_+4
  8103  1390  0A84               	incf	4,f
  8104  1391  0800               	movf	0,w
  8105  1392  00FB               	movwf	??__div_to_l_+5
  8106  1393  0A84               	incf	4,f
  8107  1394  0800               	movf	0,w
  8108  1395  00FC               	movwf	??__div_to_l_+6
  8109  1396  0A84               	incf	4,f
  8110  1397  0800               	movf	0,w
  8111  1398  00FD               	movwf	??__div_to_l_+7
  8112  1399  0879               	movf	??__div_to_l_+3,w
  8113  139A  027D               	subwf	??__div_to_l_+7,w
  8114  139B  1D03               	skipz
  8115  139C  2BA7               	goto	u1985
  8116  139D  0878               	movf	??__div_to_l_+2,w
  8117  139E  027C               	subwf	??__div_to_l_+6,w
  8118  139F  1D03               	skipz
  8119  13A0  2BA7               	goto	u1985
  8120  13A1  0877               	movf	??__div_to_l_+1,w
  8121  13A2  027B               	subwf	??__div_to_l_+5,w
  8122  13A3  1D03               	skipz
  8123  13A4  2BA7               	goto	u1985
  8124  13A5  0876               	movf	??__div_to_l_,w
  8125  13A6  027A               	subwf	??__div_to_l_+4,w
  8126  13A7                     u1985:	
  8127  13A7  1C03               	skipc
  8128  13A8  2BC3               	goto	l2580
  8129  13A9  3073               	movlw	low __div_to_l_@f2
  8130  13AA  23F5  160A  118A   	fcall	PL2	;call to abstracted procedure
  8131  13AD  3070               	movlw	low __div_to_l_@f1
  8132  13AE  0084               	movwf	4
  8133  13AF  0876               	movf	??__div_to_l_,w
  8134  13B0  0280               	subwf	0,f
  8135  13B1  0A84               	incf	4,f
  8136  13B2  0877               	movf	??__div_to_l_+1,w
  8137  13B3  1C03               	skipc
  8138  13B4  0F77               	incfsz	??__div_to_l_+1,w
  8139  13B5  0280               	subwf	0,f
  8140  13B6  0A84               	incf	4,f
  8141  13B7  0878               	movf	??__div_to_l_+2,w
  8142  13B8  1C03               	skipc
  8143  13B9  0F78               	incfsz	??__div_to_l_+2,w
  8144  13BA  0280               	subwf	0,f
  8145  13BB  0A84               	incf	4,f
  8146  13BC  0879               	movf	??__div_to_l_+3,w
  8147  13BD  1C03               	skipc
  8148  13BE  0A79               	incf	??__div_to_l_+3,w
  8149  13BF  0280               	subwf	0,f
  8150  13C0  3003               	movlw	3
  8151  13C1  0284               	subwf	4,f
  8152  13C2  1420               	bsf	__div_to_l_@quot,0
  8153  13C3                     l2580:	
  8154  13C3  3070               	movlw	low __div_to_l_@f1
  8155  13C4  0084               	movwf	4
  8156  13C5  1003               	clrc
  8157  13C6  0D80               	rlf	0,f
  8158  13C7  0A84               	incf	4,f
  8159  13C8  0D80               	rlf	0,f
  8160  13C9  0A84               	incf	4,f
  8161  13CA  0D80               	rlf	0,f
  8162  13CB  0A84               	incf	4,f
  8163  13CC  0D80               	rlf	0,f
  8164  13CD  0BA4               	decfsz	__div_to_l_@cntr,f
  8165  13CE  2B83               	goto	l5690
  8166  13CF  1FA5               	btfss	__div_to_l_@exp1,7
  8167  13D0  2BDE               	goto	l5708
  8168  13D1  0825               	movf	__div_to_l_@exp1,w
  8169  13D2  3A80               	xorlw	128
  8170  13D3  3E9F               	addlw	159
  8171  13D4  1C03               	btfss	3,0
  8172  13D5  2B4D               	goto	l5674
  8173  13D6                     l5704:	
  8174  13D6  1003               	clrc
  8175  13D7  0CA3               	rrf	__div_to_l_@quot+3,f
  8176  13D8  0CA2               	rrf	__div_to_l_@quot+2,f
  8177  13D9  0CA1               	rrf	__div_to_l_@quot+1,f
  8178  13DA  0CA0               	rrf	__div_to_l_@quot,f
  8179  13DB  0FA5               	incfsz	__div_to_l_@exp1,f
  8180  13DC  2BD6               	goto	l5704
  8181  13DD  2BEC               	goto	l5714
  8182  13DE                     l5708:	
  8183  13DE  3020               	movlw	32
  8184  13DF  0225               	subwf	__div_to_l_@exp1,w
  8185  13E0  1803               	btfsc	3,0
  8186  13E1  2B4D               	goto	l5674
  8187  13E2                     l2588:	
  8188  13E2  08A5               	movf	__div_to_l_@exp1,f
  8189  13E3  1903               	btfsc	3,2
  8190  13E4  2BEC               	goto	l5714
  8191  13E5  1003               	clrc
  8192  13E6  0DA0               	rlf	__div_to_l_@quot,f
  8193  13E7  0DA1               	rlf	__div_to_l_@quot+1,f
  8194  13E8  0DA2               	rlf	__div_to_l_@quot+2,f
  8195  13E9  0DA3               	rlf	__div_to_l_@quot+3,f
  8196  13EA  03A5               	decf	__div_to_l_@exp1,f
  8197  13EB  2BE2               	goto	l2588
  8198  13EC                     l5714:	
  8199  13EC  0823               	movf	__div_to_l_@quot+3,w
  8200  13ED  00F3               	movwf	?__div_to_l_+3
  8201  13EE  0822               	movf	__div_to_l_@quot+2,w
  8202  13EF  00F2               	movwf	?__div_to_l_+2
  8203  13F0  0821               	movf	__div_to_l_@quot+1,w
  8204  13F1  00F1               	movwf	?__div_to_l_+1
  8205  13F2  0820               	movf	__div_to_l_@quot,w
  8206  13F3  00F0               	movwf	?__div_to_l_
  8207  13F4  0008               	return
  8208  13F5                     __end_of__div_to_l_:	
  8209  13F5                     PL2:	
  8210  13F5  0084               	movwf	4
  8211  13F6  0800               	movf	0,w
  8212  13F7  00F6               	movwf	??__div_to_l_
  8213  13F8  0A84               	incf	4,f
  8214  13F9  0800               	movf	0,w
  8215  13FA  00F7               	movwf	??__div_to_l_+1
  8216  13FB  0A84               	incf	4,f
  8217  13FC  0800               	movf	0,w
  8218  13FD  00F8               	movwf	??__div_to_l_+2
  8219  13FE  0A84               	incf	4,f
  8220  13FF  0800               	movf	0,w
  8221  1400  00F9               	movwf	??__div_to_l_+3
  8222  1401  0008               	return
  8223                           
  8224                           	psect	text794
  8225  07DF                     __ptext794:	
  8226 ;; =============== function _i2c_start ends ============
  8227                           
  8228                           
  8229 ;; *************** function _i2c_init *****************
  8230 ;; Defined at:
  8231 ;;		line 97 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;		None
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;		None
  8236 ;; Return value:  Size  Location     Type
  8237 ;;		None               void
  8238 ;; Registers used:
  8239 ;;		wreg, status,2
  8240 ;; Tracked objects:
  8241 ;;		On entry : 7F/0
  8242 ;;		On exit  : 7F/20
  8243 ;;		Unchanged: FFF80/0
  8244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8245 ;;      Params:         0       0       0       0       0
  8246 ;;      Locals:         0       0       0       0       0
  8247 ;;      Temps:          0       0       0       0       0
  8248 ;;      Totals:         0       0       0       0       0
  8249 ;;Total ram usage:        0 bytes
  8250 ;; Hardware stack levels used:    1
  8251 ;; This function calls:
  8252 ;;		Nothing
  8253 ;; This function is called by:
  8254 ;;		_main
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257  07DF                     _i2c_init:	
  8258                           
  8259                           ;eeprom_i2c.c: 98: TRISCbits.TRISC3=1;
  8260                           
  8261                           ; Regs used in _i2c_init: [wreg+status,2]
  8262  07DF  1683               	bsf	3,5	;RP0=1, select bank1
  8263  07E0  1587               	bsf	7,3	;volatile
  8264                           
  8265                           ;eeprom_i2c.c: 99: TRISCbits.TRISC4=1;
  8266  07E1  1607               	bsf	7,4	;volatile
  8267                           
  8268                           ;eeprom_i2c.c: 100: SSPSTAT=0b10000000;
  8269  07E2  3080               	movlw	128
  8270  07E3  0094               	movwf	20	;volatile
  8271                           
  8272                           ;eeprom_i2c.c: 101: SSPCON =0b00101000;
  8273  07E4  3028               	movlw	40
  8274  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  8275  07E6  0094               	movwf	20	;volatile
  8276                           
  8277                           ;eeprom_i2c.c: 102: SSPCON2 =0;
  8278  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  8279  07E8  0191               	clrf	17	;volatile
  8280                           
  8281                           ;eeprom_i2c.c: 105: SSPADD = ((4000000/(4UL*100000UL))-1);
  8282  07E9  3009               	movlw	9
  8283  07EA  0093               	movwf	19	;volatile
  8284  07EB  0008               	return
  8285  07EC                     __end_of_i2c_init:	
  8286                           
  8287                           	psect	text796
  8288  005F                     __ptext796:	
  8289 ;; =============== function _msecbase ends ============
  8290                           
  8291                           
  8292 ;; *************** function _getch *****************
  8293 ;; Defined at:
  8294 ;;		line 48 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;		None
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;		None
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  1    wreg      unsigned char 
  8301 ;; Registers used:
  8302 ;;		wreg
  8303 ;; Tracked objects:
  8304 ;;		On entry : 60/0
  8305 ;;		On exit  : 60/0
  8306 ;;		Unchanged: FFF9F/0
  8307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8308 ;;      Params:         0       0       0       0       0
  8309 ;;      Locals:         0       0       0       0       0
  8310 ;;      Temps:          0       0       0       0       0
  8311 ;;      Totals:         0       0       0       0       0
  8312 ;;Total ram usage:        0 bytes
  8313 ;; Hardware stack levels used:    1
  8314 ;; This function calls:
  8315 ;;		Nothing
  8316 ;; This function is called by:
  8317 ;;		_main
  8318 ;; This function uses a non-reentrant model
  8319 ;;
  8320  005F                     _getch:	
  8321  005F                     l1054:	
  8322                           ;eeprom_i2c.c: 49: while(!RCIF) continue;
  8323                           
  8324                           ; Regs used in _getch: [wreg]
  8325                           
  8326  005F  1E8C               	btfss	12,5
  8327  0060  285F               	goto	l1054
  8328                           
  8329                           ;eeprom_i2c.c: 50: return RCREG;
  8330  0061  081A               	movf	26,w	;volatile
  8331  0062  0008               	return
  8332  0063                     __end_of_getch:	
  8333                           
  8334                           	psect	text797
  8335  07F7                     __ptext797:	
  8336 ;; =============== function _getch ends ============
  8337                           
  8338                           
  8339 ;; *************** function _putch *****************
  8340 ;; Defined at:
  8341 ;;		line 42 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;  dato            1    wreg     unsigned char 
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;  dato            1    0[COMMON] unsigned char 
  8346 ;; Return value:  Size  Location     Type
  8347 ;;		None               void
  8348 ;; Registers used:
  8349 ;;		wreg
  8350 ;; Tracked objects:
  8351 ;;		On entry : 40/20
  8352 ;;		On exit  : 60/0
  8353 ;;		Unchanged: FFF9F/0
  8354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8355 ;;      Params:         0       0       0       0       0
  8356 ;;      Locals:         1       0       0       0       0
  8357 ;;      Temps:          0       0       0       0       0
  8358 ;;      Totals:         1       0       0       0       0
  8359 ;;Total ram usage:        1 bytes
  8360 ;; Hardware stack levels used:    1
  8361 ;; This function calls:
  8362 ;;		Nothing
  8363 ;; This function is called by:
  8364 ;;		_main
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367  07F7                     _putch:	
  8368                           
  8369                           ; Regs used in _putch: [wreg]
  8370                           ;putch@dato stored from wreg
  8371  07F7  00F0               	movwf	putch@dato
  8372  07F8                     l1048:	
  8373                           ;eeprom_i2c.c: 43: while(!TXIF) continue;
  8374                           
  8375  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  8376  07F9  1E0C               	btfss	12,4
  8377  07FA  2FF8               	goto	l1048
  8378                           
  8379                           ;eeprom_i2c.c: 44: TXREG=dato;
  8380  07FB  0870               	movf	putch@dato,w
  8381  07FC  0099               	movwf	25	;volatile
  8382  07FD  0008               	return
  8383  07FE                     __end_of_putch:	
  8384                           
  8385 ;; =============== function _putch ends ============
  8386  0001                     
  8387                           	psect	functab
  8388  0700                     __pfunctab:	
  8389  0700                     fptable:	
  8390  0700  00FF               	movwf	(btemp+1)& (0+127)
  8391  0701  3007               	movlw	high fptable
  8392  0702  008A               	movwf	10
  8393  0703  087F               	movf	(btemp+1)& (0+127),w
  8394  0704  0782               	addwf	2,f
  8395  0705                     fpbase:	
  8396  0705  2F05               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  8397  0706                     fp__I2C_EEIN:	
  8398  0706                     entry__I2C_EEIN:	
  8399  0706  160A  118A  2C29   	ljmp	_I2C_EEIN
  8400  007E                     btemp	set	126	;btemp
  8401  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Wed Nov 27 20:26:50 2019

                    pc 0002         ___bmul@product 007A           ___awdiv@sign 007B                     fsr 0004  
  ___wmul@multiplicand 0072           ___ftadd@exp1 004B           ___ftadd@exp2 004A           ___ftadd@sign 0049  
                  _RE0 0048                    _RE1 0049                    _RE2 004A                    _PR2 0092  
                  _nin 00D1                    fsr0 0004                    indf 0000           ___awmod@sign 0075  
          lcd_goto@pos 0076                   l1101 0000                   l1110 1464                   l1104 1459  
                 l1113 0000                   l1122 146D                   l1051 0000                   l1107 0000  
                 l1131 0000                   l1140 0000                   l1125 0000                   l1054 005F  
                 l1134 0000                   l1143 0000                   l1231 08C7                   l1048 07F8  
                 l1080 0000                   l1128 144F                   l1057 0000                   l1137 0000  
                 l1155 0000                   l1092 1454                   l1077 14C5                   l1149 0000  
                 l1086 0000                   l1095 0000                   l2303 0000                   l1167 02C2  
                 l2320 019E                   l1089 0000                   l1098 145E                   l2323 0000  
                 l1292 0000                   l2407 0D43                   l2351 0EE6                   l2415 0000  
                 l2440 0000                   l2329 0000                   l2450 0000                   l2530 0000  
                 l2508 0000                   l2277 0000                   l2293 0000                   l2373 0000  
                 l2454 0000                   l2287 0000                   l2545 0E4F                   l2538 0000  
                 l6010 16B9                   l6002 0000                   l2580 13C3                   l6004 0000  
                 l2581 0000                   l2469 0000                   l6022 16CC                   l6030 16DF  
                 l6014 16C0                   l6110 0000                   l6102 0EC0                   l6032 0000  
                 l6008 0000                   l6120 0000                   l6104 0EC5                   l6200 0000  
                 l6034 16E7                   l6042 0000                   l6050 0000                   l6130 0000  
                 l6122 0EF1                   l6114 0EDD                   l6106 0ECA                   l6210 0F39  
                 l2588 13E2                   l6028 0000                   l6044 14AF                   l6060 0000  
                 l6052 0000                   l6140 0F18                   l6132 0000                   l6116 0EE2  
                 l6108 0ECE                   l6204 0000                   l6220 0000                   l6038 14AD  
                 l6062 0000                   l6054 0000                   l6046 0000                   l6126 0000  
                 l6070 0000                   l6150 16FD                   l6222 0000                   l6214 0000  
                 l6230 0000                   l6302 0000                   l6310 0000                   l5600 0000  
                 l6056 0000                   l6048 0000                   l6136 0000                   l6128 0EFC  
                 l6080 0000                   l6160 0000                   l6144 0000                   l6208 0F2E  
                 l6224 0000                   l6216 0000                   l6232 0000                   l6240 0000  
                 l6304 0000                   l6312 0000                   l6320 0000                   l5610 0000  
                 l6058 0000                   l6138 0000                   l6074 0E8D                   l6066 0000  
                 l6170 0000                   l6162 0000                   l6218 0000                   l6234 0000  
                 l6226 149C                   l6250 0118                   l6322 0000                   l6410 09A0  
                 l6402 0967                   l5620 0CEE                   l5612 0000                   l6092 0000  
                 l6084 0EA3                   l6068 0000                   l6180 0000                   l6172 0000  
                 l6164 0000                   l6156 170E                   l6236 0000                   l6228 0000  
                 l6244 0000                   l6308 0000                   l6316 0000                   l6404 0000  
                 l6340 0000                   l6332 084F                   l6324 0000                   l5606 0000  
                 l5614 0000                   l6094 0000                   l6086 0000                   l6078 0E94  
                 l6190 173F                   l6182 0000                   l6174 171F                   l6166 0000  
                 l6158 0000                   l6238 0000                   l6254 0000                   l6262 0000  
                 l6318 147E                   l6510 0B9A                   l6502 0B60                   l6430 0A1E  
                 l6406 0000                   l6414 09B0                   l6350 0000                   l6342 0000  
                 l6334 0000                   l5608 0000                   l5640 0000                   l5632 0000  
                 l5624 0000                   l5704 13D6                   l5720 175D                   l5800 0000  
                 l6096 0EB1                   l6192 0000                   l6184 0000                   l6168 0000  
                 l6280 158D                   l6520 0000                   l6512 0000                   l6504 0000  
                 l6440 0000                   l6360 0000                   l6344 0888                   l6600 0000  
                 l5642 0E1A                   l5634 0000                   l5626 0DF8                   l5714 13EC  
                 l5706 0000                   l5802 0000                   l6098 0000                   l6194 0000  
                 l6186 1735                   l6178 1729                   l6258 016C                   l6274 1548  
                 l6266 0000                   l6522 0000                   l6514 0000                   l6506 0000  
                 l6442 0A4E                   l6426 0A0D                   l6418 09E2                   l6354 0000  
                 l6338 0863                   l6610 0000                   l6602 0000                   l5660 0000  
                 l5652 0000                   l5644 0000                   l5636 0000                   l5628 0DFD  
                 l5708 13DE                   l5740 0CFA                   l5812 01C5                   l5804 01B1  
                 l5820 0000                   l5900 0000                   l6196 0000                   l6292 160E  
                 l6284 15A4                   l6540 0C4B                   l6532 0C1F                   l6524 0C06  
                 l6508 0B79                   l6460 0ABF                   l6452 0A8B                   l6444 0000  
                 l6436 0000                   l6380 0000                   l6372 08EB                   l6364 08C9  
                 l6356 0899                   l6348 0000                   l6620 0000                   l6612 0000  
                 l6604 0000                   l5574 0000                   l5590 0000                   l5662 0E4B  
                 l5638 0000                   l5726 0000                   l5718 0000                   l5742 0000  
                 l5734 0000                   l5750 0000                   l5814 0000                   l5806 0000  
                 l5830 177F                   l5822 1771                   l5910 0000                   l6462 0000  
                 l6446 0A89                   l6438 0000                   l6390 0000                   l6382 0917  
                 l6374 0000                   l6526 0C12                   l6366 08DB                   l6358 08C2  
                 l6710 0000                   l6702 0000                   l6630 0000                   l6622 0000  
                 l6614 0000                   l6606 01FB                   l5584 0000                   l5592 0000  
                 l5648 0000                   l5672 0000                   l5728 0000                   l5744 0000  
                 l5736 0CF2                   l5760 0071                   l5752 0000                   l5808 0000  
                 l5840 0000                   l5832 1789                   l5920 16A2                   l6560 0C94  
                 l6552 0C72                   l6536 0C33                   l6472 0000                   l6392 0000  
                 l6384 0000                   l6376 0000                   l6800 0000                   l6720 0000  
                 l6704 0000                   l6712 02B7                   l6640 0000                   l6632 0000  
                 l6624 0000                   l6616 0000                   l6608 0000                   l5578 0000  
                 l5586 0000                   l5594 0000                   l5658 0E43                   l5690 1383  
                 l5682 0000                   l5674 134D                   l5770 0000                   l5762 0000  
                 l5842 0000                   l5834 178E                   l5826 1775                   l5818 0000  
                 l5850 0D18                   l5922 0000                   l5914 0000                   l6298 1653  
                 l6562 0C98                   l6554 0C75                   l6546 0C58                   l6466 0AE8  
                 l6458 0000                   l6394 0000                   l6810 0000                   l6802 0000  
                 l6730 02FE                   l6722 0000                   l6714 02E5                   l6706 0000  
                 l6650 0000                   l6642 0000                   l6634 0000                   l6626 0000  
                 l6618 0000                   l5588 0000                   l5596 0000                   l5668 0E59  
                 l5692 0000                   l5684 0000                   l5676 1352                   l5772 0088  
                 l5780 0000                   l5844 0000                   l5836 1793                   l5828 177A  
                 l5860 0000                   l5852 0000                   l5924 16AA                   l5908 168B  
                 l6564 0000                   l6492 0000                   l6484 0B0C                   l6468 0AFE  
                 l6476 0AEC                   l6396 0000                   l6388 0000                   l6820 0000  
                 l6812 0000                   l6804 0000                   l6740 0000                   l6732 0000  
                 l6724 0000                   l6708 0000                   l6716 02AD                   l6660 0000  
                 l6652 0000                   l6644 0000                   l6636 0000                   l6628 0000  
                 l6580 0000                   l5598 0000                   l5686 0000                   l5766 0000  
                 l5790 0000                   l5782 0198                   l5870 0D3F                   l5854 0000  
                 l5846 0000                   l5918 0000                   l5942 0000                   l6566 0000  
                 l6558 0C91                   l6494 0000                   l6478 0B03                   l6398 0000  
                 l6574 0839                   l6830 0000                   l6822 0000                   l6814 0000  
                 l6806 0000                   l6750 0000                   l6742 0000                   l6718 02EA  
                 l6670 0000                   l6662 0000                   l6654 0000                   l6646 0000  
                 l6638 0000                   l6590 0000                   l6582 0000                   l5696 0000  
                 l5688 0000                   l5776 0000                   l5880 0D5B                   l5856 0000  
                 l5848 0D13                   l5936 0D74                   l5944 0D99                   l5928 0000  
                 l5960 0CC5                   l6568 0CA6                   l6496 0B3D                   l6488 0B3A  
                 l6576 0CB1                   l6840 0000                   l6832 0000                   l6824 0000  
                 l6816 0000                   l6808 0000                   l6760 0000                   l6752 0000  
                 l6744 0000                   l6680 0000                   l6672 0000                   l6664 0000  
                 l6656 0000                   l6648 0000                   l6592 0000                   l6584 0000  
                 l5698 0000                   l5794 0000                   l5786 0000                   l5778 0000  
                 l5866 0D37                   l5858 0000                   l5890 0000                   l6498 0B51  
                 l6850 0000                   l6842 0000                   l6834 0000                   l6826 0000  
                 l6818 0000                   l6770 0000                   l6762 0000                   l6754 0000  
                 l6746 0000                   l6738 0000                   l6690 0000                   l6682 0000  
                 l6666 0000                   l6658 0000                   l6594 0000                   l6586 0000  
                 l5796 01AB                   l5876 0D4D                   l5868 0000                   l5892 1674  
                 l5884 0000                   l5948 0000                   l5964 0CD4                   l5956 0000  
                 l6860 0000                   l6852 0000                   l6844 0000                   l6836 0000  
                 l6828 0000                   l6780 0000                   l6772 0000                   l6764 0000  
                 l6756 0000                   l6748 0000                   l6692 0000                   l6684 0000  
                 l6668 0000                   l6596 0000                   l6588 0000                   l5878 0000  
                 l5886 0000                   l5966 0000                   l6870 0000                   l6862 0000  
                 l6854 0000                   l6846 0000                   l6838 0000                   l6790 0000  
                 l6782 0000                   l6774 0000                   l6766 0000                   l6758 0000  
                 l6686 0000                   l6678 0000                   l6598 0000                   l5896 0000  
                 l5968 0000                   l5992 0000                   l5976 0000                   l6880 0000  
                 l6872 0000                   l6864 0000                   l6856 0000                   l6848 0000  
                 l6792 0000                   l6784 0000                   l6776 0000                   l6768 0000  
                 l6688 0000                   l5898 167D                   l5986 0DB6                   l5978 0000  
                 l6890 0000                   l6874 0000                   l6866 0000                   l6858 0000  
                 l6794 0000                   l6786 0000                   l6778 0000                   l6882 031D  
                 l6698 0000                   l5996 0000                   l5988 0000                   l6892 0000  
                 l6884 06D9                   l6876 0000                   l6868 0000                   l6796 0000  
                 l6788 0000                   l5998 0DE1                   l6878 0000                   l6798 0000  
                 l6886 0312                   l6894 06F9                   l6888 06DE                   STR_1 07AE  
                 STR_2 079F                   STR_3 078F                   STR_4 07CB                   STR_5 07D6  
                 STR_6 07DC                   STR_7 07BD                   _T0IF 005A                   u2115 007A  
                 u3125 09B9                   u3135 09EC                   u2280 0000                   u3080 0000  
                 u3225 0AF5                   u2285 0D1C                   u2445 0D82                   u2525 0DC9  
                 u3325 0C2D                   u3165 0A0B                   u3085 092D                   u2615 14B5  
                 u3335 0C43                   u3255 0B46                   u3265 0B5B                   u3185 0AB8  
                 u2395 1694                   u3375 0C68                   u2585 16D2                   u3385 0C83  
                 u1895 0E29                   u1985 13A7                   _RCIF 0065                   _PIR1 000C  
                 _TMR0 0001                   _TXIF 0064       __end_of_I2C_EEIN 144A                   _main 01DF  
         ___ftpack@arg 0070           ___ftpack@exp 0073                   btemp 007E       __end_of_I2C_nack 1471  
                 start 0000           _sprintf$1936 00A0      ___bmul@multiplier 007B           ___ftmul@cntr 003E  
        ??_i2c_restart 0070           ___ftmul@sign 003F           ___fttol@exp1 002C           ___fttol@lval 0028  
                ?_main 0070        __end_of___awdiv 16AF        __end_of___lbdiv 01AD        __end_of___ftadd 0F2C  
      __end_of___awmod 16EC        __end_of___lbmod 01C9        __end_of___ftneg 0E6A                  _ANSEL 0188  
      __end_of___lldiv 0DEA        __end_of___ftmul 175B        ___awdiv@divisor 0076        __end_of___llmod 0DA2  
      __end_of___ftsub 1000        __end_of___fttol 0D64                  _T2CON 0012        __end_of___lwdiv 008D  
      ___awdiv@counter 007A                  _RCREG 001A                  _RCSTA 0018                  _SPBRG 0099  
                _PORTA 0005                  _PORTB 0006                  _PORTD 0008                  _TRISA 0085  
                _TRISB 0086                  _TRISC 0087                  _TRISD 0088                  _TRISE 0089  
                _TXREG 0019                  _TXSTA 0098           ___lltoft@exp 007C      __end_of_I2C_EEOUT 1429  
                _carac 00D2                  _getch 005F                  _scale 14D8        __end_of_isdigit 0CF0  
                _pause 14AD          ___ftpack@sign 0074                  _putch 07F7                  fpbase 0705  
                pclath 000A                  status 0003                  wtemp0 007E        __end_of_sprintf 0CB6  
      ___lbdiv@divisor 0075        ___lbdiv@counter 0077           __end_of_main 0700       __end_of_i2c_init 07EC  
     __end_of_i2c_read 1469       __end_of_i2c_stop 145C    __end_of_i2c_restart 1461                 ??_main 005F  
        ___fttol@sign1 0027   __size_of__tdiv_to_l_ 0078                 ?_getch 0070                 _ADCON0 001F  
     ___llmod@dividend 0024                 ?_scale 0040                 _ADRESH 001E                 _ADRESL 009E  
         I2C_EEIN@data 002F                 _CCPR1L 0015                 ?_pause 0070                 _CCPR2L 001B  
     ___awdiv@dividend 0078                 ?_putch 0070       __end_of___ftpack 17A7                 _ANSELH 0189  
     __end_of___lbtoft 14D8       __end_of___lltoft 0F4C                 _OSCCON 008F                 _SSPADD 0093  
               _TRISC1 0439                 _TRISC2 043A                 _TRISC6 043E                 _TRISC7 043F  
               _SSPCON 0014                 _SSPBUF 0013     __size_of_i2c_start 0005     __size_of_i2c_write 0008  
     __end_of_lcd_goto 140E                 ___bmul 175B       __end_of_lcd_puts 149C                 ___ftge 0CB6  
               ___wmul 0CF0              ??___awdiv 007A              ??___lbdiv 0076              ??___ftadd 0046  
            ??___awmod 0074              ??___lbmod 0071              ??___ftneg 0073              ??___lldiv 0078  
            ??___ftmul 0037              ??___llmod 007D              ??___ftsub 007E              ??___fttol 0024  
            ??___lwdiv 0074                 _fround 008D       ___awdiv@quotient 007C        ___awmod@divisor 0070  
               main@B1 00CF                 main@B2 00CB        ___awmod@counter 0074       __end_of_msecbase 14C9  
            ?_I2C_EEIN 002D  ___ftmul@f3_as_product 003B                 fptable 0700                 fptotal 0001  
            ??_isdigit 0070                 pause@x 0072              ?_I2C_nack 0070              ??_sprintf 005A  
     ___lbdiv@dividend 0076        ___lbmod@divisor 0070        ___lbmod@counter 0073             ___ftadd@f1 0040  
           ___ftadd@f2 0043             ___ftge@ff1 0070             ___ftge@ff2 0073             ___ftneg@f1 0070  
           ___lbtoft@c 0030    ___bmul@multiplicand 0079             ___ftmul@f1 0031             ___ftmul@f2 0034  
           ___ftsub@f1 004F             ___ftsub@f2 004C             ___fttol@f1 0020         __pcstackCOMMON 0070  
          _i2c_restart 145C             ___lltoft@c 0078          __end_of_getch 0063          __end_of_scale 166A  
        __end_of_pause 14BE          __end_of_putch 07FE       ___lbdiv@quotient 0078      main@char_recibido 00BE  
           ??_I2C_EEIN 007E      __end_of_i2c_start 1457      __end_of_i2c_write 1452             __div_to_l_ 1340  
           ??_I2C_nack 0070     __size_of_lcd_clear 000C                ??_getch 0070        __div_to_l_@exp1 0025  
   __size_of_lcd_write 0011        __div_to_l_@cntr 0024           sprintf@integ 00A5                ??_scale 0043  
              ??_pause 0072        __div_to_l_@quot 0020           sprintf@width 00AE                ??_putch 0070  
           __pbssBANK1 00D1              ?_i2c_init 0070              ?_i2c_read 0070              ?_i2c_stop 0070  
        __div_to_l_@f1 0070          __div_to_l_@f2 0073             __pmaintext 01DF                ?___bmul 0079  
              ?___ftge 0070                ?___wmul 0070                _CCP1CON 0017                _CCP2CON 001D  
              _BAUDCTL 0187                ?_fround 004C              ?___ftpack 0070              ?___lbtoft 002D  
            ?___lltoft 0078                _GO_DONE 00F9          I2C_EEOUT@data 0075                _SSPCON2 0091  
            ?_lcd_goto 0070                _SSPSTAT 0094              ?_lcd_puts 0076              _I2C_EEOUT 140E  
           ??_i2c_init 0070             ??_i2c_read 0070             ??_i2c_stop 0070              ?_msecbase 0070  
           _scale$2962 0047      __end_of_lcd_clear 147D        __size_of___bmul 000E        __size_of___ftge 002C  
              ___awdiv 166A                ___lbdiv 0192                ___ftadd 0E6A                ___awmod 16AF  
              ___lbmod 01AD      __end_of_lcd_write 14AD                ___ftneg 0E62                ___lldiv 0DA2  
      __size_of___wmul 0019                ___ftmul 16EC                ___llmod 0D64                ___ftsub 0FEA  
              ___fttol 0D09                ___lwdiv 0063             ??___ftpack 0075             ??___lbtoft 007E  
      __size_of_fround 0105             ??___lltoft 007C            ?__div_to_l_ 0070                _dpowers 0767  
              _isdigit 0CE2       ___awmod@dividend 0072                main@dec 00C9                main@cen 00CD  
              _sprintf 0835                main@mil 00C7                main@uni 00C5             ??_lcd_goto 0076  
           ??_lcd_puts 0078   end_of_initialization 07F3             ?_I2C_EEOUT 0074             ??_msecbase 0070  
      ___lldiv@divisor 0070        ___lldiv@counter 007C         __tdiv_to_l_@f1 0070         __tdiv_to_l_@f2 0073  
        ??__tdiv_to_l_ 0076       ___lbmod@dividend 0072      __size_of_I2C_EEIN 0021              _TRISCbits 0087  
       entry__I2C_EEIN 0706      __size_of_I2C_nack 0008            ___lbmod@rem 0074    __size_of__div_to_l_ 00B5  
           lcd_write@c 0074            ___ftmul@exp 003A           ?_i2c_restart 0070         __end_of___bmul 1769  
       __end_of___ftge 0CE2         __end_of___wmul 0D09         __end_of_fround 0192    start_initialization 07EC  
  __end_of__tdiv_to_l_ 0E62              _i2c_start 1452              _i2c_write 144A            ??_I2C_EEOUT 0076  
      ___llmod@divisor 0020        ___llmod@counter 007D      __size_of_i2c_init 000D      __size_of_i2c_read 0008  
    __size_of_i2c_stop 0005               ??___bmul 007A               ??___ftge 0076               ??___wmul 0074  
             ??_fround 007E             fround@prec 0055      __size_of___ftpack 003E      __size_of___lbtoft 000F  
         pause@usvalue 0070      __size_of___lltoft 0020          __pcstackBANK0 0020          __pcstackBANK1 00A0  
           ?_i2c_start 0070             ?_i2c_write 0070           _isdigit$2444 0070      __size_of_lcd_goto 000C  
          sprintf@_val 00A8            sprintf@flag 00AC      __size_of_lcd_puts 001F            sprintf@fval 00B3  
          sprintf@prec 00B6              _main$2959 00B9       ___lwdiv@dividend 0072              __pfunctab 0700  
    __size_of_msecbase 000B               ?___awdiv 0076               ?___lbdiv 0075               ?___ftadd 0040  
             ?___awmod 0070               ?___lbmod 0070              __ptext760 1471              __ptext761 0FEA  
            __ptext770 1429              __ptext762 14D8              __ptext771 14AD              __ptext763 008D  
            __ptext780 01AD              __ptext772 16AF              __ptext764 149C              __ptext781 0192  
            __ptext773 0DA2              __ptext765 140E              __ptext757 0835              __ptext790 1461  
            __ptext782 0063              __ptext774 0CB6              __ptext766 0F2C              __ptext758 1402  
            __ptext791 1457              __ptext783 0CF0              __ptext775 0E62              __ptext767 14C9  
            __ptext759 147D              __ptext792 145C              __ptext784 175B              __ptext776 0D64  
            __ptext768 16EC              __ptext793 1452              __ptext785 1340              __ptext777 166A  
            __ptext769 0E6A              __ptext794 07DF              __ptext786 0DEA              __ptext778 0D09  
            __ptext795 14BE              __ptext787 0CE2              __ptext779 1769              __ptext796 005F  
            __ptext788 144A              __ptext797 07F7              __ptext789 1469               ?___ftneg 0070  
             ?___lldiv 0070               ?___ftmul 0031               ?___llmod 0020               ?___ftsub 004C  
            __npowers_ 0719               ?___fttol 0020               ?___lwdiv 0070              _lcd_clear 1471  
            __pstrings 0709            __tdiv_to_l_ 0DEA              _lcd_write 149C               _I2C_EEIN 1429  
         ??__div_to_l_ 0076               ?_isdigit 0070               _I2C_nack 1469       ___lwdiv@quotient 0074  
       __size_of_getch 0004               ?_sprintf 0056         __size_of_scale 0192         __size_of_pause 0011  
       __size_of_putch 0007         ___wmul@product 0074               _PIR1bits 000C     __end_of__div_to_l_ 13F5  
 __size_of_i2c_restart 0005             ?_lcd_clear 0070            __stringbase 0718             ?_lcd_write 0074  
    ___wmul@multiplier 0070              main@cnt1i 00BF              main@cnt2i 00C1              lcd_puts@s 0076  
          ??_i2c_start 0070            ??_i2c_write 0070       I2C_EEIN@address1 002D       I2C_EEIN@address2 002E  
             _i2c_init 07DF               _i2c_read 1461               _i2c_stop 1457      i2c_write@I2C_data 0070  
     __size_of___awdiv 0045       __size_of___lbdiv 001B       __size_of___ftadd 00C2       __size_of___awmod 003D  
     __size_of___lbmod 001C       __size_of___ftneg 0008       __size_of___lldiv 0048       __size_of___ftmul 006F  
     __size_of___llmod 003E       __size_of___ftsub 0016       __size_of___fttol 005B       __size_of___lwdiv 002A  
             ___ftpack 1769               ___lbtoft 14C9            _fround$2960 0052            _fround$2961 004F  
             ___lltoft 0F2C             sprintf@exp 00B0       __size_of_isdigit 000E        ___lwdiv@divisor 0070  
      ___lwdiv@counter 0076               __powers_ 0740               _lcd_goto 1402            fp__I2C_EEIN 0706  
             _lcd_puts 147D       __size_of_sprintf 0481          __size_of_main 0521               _msecbase 14BE  
             main@cnt1 00C3               main@cnt2 00C4            ??_lcd_clear 0076               main@cntd 00BC  
          ??_lcd_write 0076              putch@dato 0070      I2C_EEOUT@address1 0076      I2C_EEOUT@address2 0074  
             isdigit@c 0071               scale@scl 004A              sprintf@ap 00A4       __tdiv_to_l_@exp1 0025  
     __tdiv_to_l_@cntr 0024              sprintf@sp 00B2       __tdiv_to_l_@quot 0020       ___lldiv@dividend 0074  
            stringcode 0713           ?__tdiv_to_l_ 0070             _OPTION_REG 0081               sprintf@c 00B8  
             sprintf@f 0056       ___lldiv@quotient 0078               stringdir 0713               stringtab 0709  
          _SSPCON2bits 0091     __size_of_I2C_EEOUT 001B  
