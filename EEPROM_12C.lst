

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Wed Nov 27 18:38:39 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text719,local,class=CODE,delta=2
    13                           	psect	text720,local,class=CODE,delta=2
    14                           	psect	text725,local,class=CODE,delta=2
    15                           	psect	text729,local,class=CODE,delta=2
    16                           	psect	text731,local,class=CODE,delta=2
    17                           	psect	text746,local,class=CODE,delta=2
    18                           	psect	text747,local,class=CODE,delta=2
    19                           	psect	text755,local,class=CODE,delta=2
    20                           	psect	text757,local,class=CODE,delta=2
    21                           	psect	text758,local,class=CODE,delta=2
    22                           	psect	pa_nodes,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  000A                     	;#
    25                           
    26                           	psect	config
    27  2007  E8D4               	dw	59604	;#
    28  2008  FFFF               	dw	65535	;#
    29                           
    30                           	psect	strings
    31  0800                     __pstrings:	
    32  0800                     stringtab:	
    33                           ;	global	stringdir,stringtab,__stringbase
    34                           
    35                           
    36                           ;	String table - string pointers are 1 byte each
    37  0800  1BFF               	btfsc	btemp+1,7
    38  0801  280A               	ljmp	stringcode
    39  0802  1383               	bcf	3,7
    40  0803  187F               	btfsc	btemp+1,0
    41  0804  1783               	bsf	3,7
    42  0805  0800               	movf	0,w
    43  0806  0A84               	incf	4,f
    44  0807  1903               	skipnz
    45  0808  0AFF               	incf	btemp+1,f
    46  0809  0008               	return
    47  080A                     stringcode:	
    48  080A                     stringdir:	
    49  080A  3008               	movlw	high stringdir
    50  080B  008A               	movwf	10
    51  080C  0804               	movf	4,w
    52  080D  0A84               	incf	4,f
    53  080E  0782               	addwf	2,f
    54  080F                     __stringbase:	
    55  080F  3400               	retlw	0
    56  0810                     __npowers_:	
    57  0810  3400               	retlw	0
    58  0811  3480               	retlw	128
    59  0812  343F               	retlw	63
    60  0813  34CD               	retlw	205
    61  0814  34CC               	retlw	204
    62  0815  343D               	retlw	61
    63  0816  34D7               	retlw	215
    64  0817  3423               	retlw	35
    65  0818  343C               	retlw	60
    66  0819  3412               	retlw	18
    67  081A  3483               	retlw	131
    68  081B  343A               	retlw	58
    69  081C  34B7               	retlw	183
    70  081D  34D1               	retlw	209
    71  081E  3438               	retlw	56
    72  081F  34C6               	retlw	198
    73  0820  3427               	retlw	39
    74  0821  3437               	retlw	55
    75  0822  3438               	retlw	56
    76  0823  3486               	retlw	134
    77  0824  3435               	retlw	53
    78  0825  34C0               	retlw	192
    79  0826  34D6               	retlw	214
    80  0827  3433               	retlw	51
    81  0828  34CC               	retlw	204
    82  0829  342B               	retlw	43
    83  082A  3432               	retlw	50
    84  082B  3470               	retlw	112
    85  082C  3489               	retlw	137
    86  082D  3430               	retlw	48
    87  082E  34E7               	retlw	231
    88  082F  34DB               	retlw	219
    89  0830  342E               	retlw	46
    90  0831  34E5               	retlw	229
    91  0832  343C               	retlw	60
    92  0833  341E               	retlw	30
    93  0834  3442               	retlw	66
    94  0835  34A2               	retlw	162
    95  0836  340D               	retlw	13
    96  0837                     __powers_:	
    97  0837  3400               	retlw	0
    98  0838  3480               	retlw	128
    99  0839  343F               	retlw	63
   100  083A  3400               	retlw	0
   101  083B  3420               	retlw	32
   102  083C  3441               	retlw	65
   103  083D  3400               	retlw	0
   104  083E  34C8               	retlw	200
   105  083F  3442               	retlw	66
   106  0840  3400               	retlw	0
   107  0841  347A               	retlw	122
   108  0842  3444               	retlw	68
   109  0843  3440               	retlw	64
   110  0844  341C               	retlw	28
   111  0845  3446               	retlw	70
   112  0846  3450               	retlw	80
   113  0847  34C3               	retlw	195
   114  0848  3447               	retlw	71
   115  0849  3424               	retlw	36
   116  084A  3474               	retlw	116
   117  084B  3449               	retlw	73
   118  084C  3497               	retlw	151
   119  084D  3418               	retlw	24
   120  084E  344B               	retlw	75
   121  084F  34BC               	retlw	188
   122  0850  34BE               	retlw	190
   123  0851  344C               	retlw	76
   124  0852  346B               	retlw	107
   125  0853  346E               	retlw	110
   126  0854  344E               	retlw	78
   127  0855  3403               	retlw	3
   128  0856  3415               	retlw	21
   129  0857  3450               	retlw	80
   130  0858  3479               	retlw	121
   131  0859  34AD               	retlw	173
   132  085A  3460               	retlw	96
   133  085B  34F3               	retlw	243
   134  085C  3449               	retlw	73
   135  085D  3471               	retlw	113
   136  085E                     _dpowers:	
   137  085E  3401               	retlw	1
   138  085F  3400               	retlw	0
   139  0860  3400               	retlw	0
   140  0861  3400               	retlw	0
   141  0862  340A               	retlw	10
   142  0863  3400               	retlw	0
   143  0864  3400               	retlw	0
   144  0865  3400               	retlw	0
   145  0866  3464               	retlw	100
   146  0867  3400               	retlw	0
   147  0868  3400               	retlw	0
   148  0869  3400               	retlw	0
   149  086A  34E8               	retlw	232
   150  086B  3403               	retlw	3
   151  086C  3400               	retlw	0
   152  086D  3400               	retlw	0
   153  086E  3410               	retlw	16
   154  086F  3427               	retlw	39
   155  0870  3400               	retlw	0
   156  0871  3400               	retlw	0
   157  0872  34A0               	retlw	160
   158  0873  3486               	retlw	134
   159  0874  3401               	retlw	1
   160  0875  3400               	retlw	0
   161  0876  3440               	retlw	64
   162  0877  3442               	retlw	66
   163  0878  340F               	retlw	15
   164  0879  3400               	retlw	0
   165  087A  3480               	retlw	128
   166  087B  3496               	retlw	150
   167  087C  3498               	retlw	152
   168  087D  3400               	retlw	0
   169  087E  3400               	retlw	0
   170  087F  34E1               	retlw	225
   171  0880  34F5               	retlw	245
   172  0881  3405               	retlw	5
   173  0882  3400               	retlw	0
   174  0883  34CA               	retlw	202
   175  0884  349A               	retlw	154
   176  0885  343B               	retlw	59
   177  001F                     _ADCON0	set	31
   178  001E                     _ADRESH	set	30
   179  0017                     _CCP1CON	set	23
   180  001D                     _CCP2CON	set	29
   181  0015                     _CCPR1L	set	21
   182  001B                     _CCPR2L	set	27
   183  000C                     _PIR1	set	12
   184  000C                     _PIR1bits	set	12
   185  0006                     _PORTB	set	6
   186  0008                     _PORTD	set	8
   187  0018                     _RCSTA	set	24
   188  0013                     _SSPBUF	set	19
   189  0014                     _SSPCON	set	20
   190  0012                     _T2CON	set	18
   191  0001                     _TMR0	set	1
   192  0019                     _TXREG	set	25
   193  00F9                     _GO_DONE	set	249
   194  0048                     _RE0	set	72
   195  0049                     _RE1	set	73
   196  004A                     _RE2	set	74
   197  005A                     _T0IF	set	90
   198  0064                     _TXIF	set	100
   199  009E                     _ADRESL	set	158
   200  0081                     _OPTION_REG	set	129
   201  008F                     _OSCCON	set	143
   202  0092                     _PR2	set	146
   203  0099                     _SPBRG	set	153
   204  0093                     _SSPADD	set	147
   205  0091                     _SSPCON2	set	145
   206  0091                     _SSPCON2bits	set	145
   207  0094                     _SSPSTAT	set	148
   208  0085                     _TRISA	set	133
   209  0086                     _TRISB	set	134
   210  0087                     _TRISC	set	135
   211  0087                     _TRISCbits	set	135
   212  0088                     _TRISD	set	136
   213  0089                     _TRISE	set	137
   214  0098                     _TXSTA	set	152
   215  047D                     _IRCF1	set	1149
   216  047E                     _IRCF2	set	1150
   217  0478                     _SCS	set	1144
   218  04A7                     _SMP	set	1191
   219  0439                     _TRISC1	set	1081
   220  043A                     _TRISC2	set	1082
   221  043E                     _TRISC6	set	1086
   222  043F                     _TRISC7	set	1087
   223  0188                     _ANSEL	set	392
   224  0189                     _ANSELH	set	393
   225  0187                     _BAUDCTL	set	391
   226  0005                     _PORTA	set	5
   227  0886                     STR_1:	
   228  0886  3445               	retlw	69	;'E'
   229  0887  3473               	retlw	115	;'s'
   230  0888  3463               	retlw	99	;'c'
   231  0889  3472               	retlw	114	;'r'
   232  088A  3469               	retlw	105	;'i'
   233  088B  3462               	retlw	98	;'b'
   234  088C  3469               	retlw	105	;'i'
   235  088D  3465               	retlw	101	;'e'
   236  088E  346E               	retlw	110	;'n'
   237  088F  3464               	retlw	100	;'d'
   238  0890  346F               	retlw	111	;'o'
   239  0891  342E               	retlw	46	;'.'
   240  0892  342E               	retlw	46	;'.'
   241  0893  342E               	retlw	46	;'.'
   242  0894  3400               	retlw	0
   243  0895                     STR_7:	
   244  0895  3444               	retlw	68	;'D'
   245  0896  3469               	retlw	105	;'i'
   246  0897  3472               	retlw	114	;'r'
   247  0898  343A               	retlw	58	;':'
   248  0899  3425               	retlw	37	;'%'
   249  089A  3469               	retlw	105	;'i'
   250  089B  3409               	retlw	9
   251  089C  3456               	retlw	86	;'V'
   252  089D  343A               	retlw	58	;':'
   253  089E  3425               	retlw	37	;'%'
   254  089F  3473               	retlw	115	;'s'
   255  08A0  3400               	retlw	0
   256  08A1                     STR_2:	
   257  08A1  344C               	retlw	76	;'L'
   258  08A2  3465               	retlw	101	;'e'
   259  08A3  3479               	retlw	121	;'y'
   260  08A4  3465               	retlw	101	;'e'
   261  08A5  346E               	retlw	110	;'n'
   262  08A6  3464               	retlw	100	;'d'
   263  08A7  346F               	retlw	111	;'o'
   264  08A8  342E               	retlw	46	;'.'
   265  08A9  342E               	retlw	46	;'.'
   266  08AA  342E               	retlw	46	;'.'
   267  08AB  3400               	retlw	0
   268  08AC                     STR_8:	
   269  08AC  3428               	retlw	40	;'('
   270  08AD  346E               	retlw	110	;'n'
   271  08AE  3475               	retlw	117	;'u'
   272  08AF  346C               	retlw	108	;'l'
   273  08B0  346C               	retlw	108	;'l'
   274  08B1  3429               	retlw	41	;')'
   275  08B2  3400               	retlw	0
   276  08B3                     STR_5:	
   277  08B3  3420               	retlw	32	;' '
   278  08B4  3444               	retlw	68	;'D'
   279  08B5  3469               	retlw	105	;'i'
   280  08B6  3472               	retlw	114	;'r'
   281  08B7  343A               	retlw	58	;':'
   282  08B8  3400               	retlw	0
   283  08B9                     STR_3:	
   284  08B9  3425               	retlw	37	;'%'
   285  08BA  3431               	retlw	49	;'1'
   286  08BB  342E               	retlw	46	;'.'
   287  08BC  3433               	retlw	51	;'3'
   288  08BD  3466               	retlw	102	;'f'
   289  08BE  3400               	retlw	0
   290  08BF                     STR_4:	
   291  08BF  3456               	retlw	86	;'V'
   292  08C0  343A               	retlw	58	;':'
   293  08C1  3400               	retlw	0
   294  08C2                     STR_6:	
   295  08C2  3425               	retlw	37	;'%'
   296  08C3  3469               	retlw	105	;'i'
   297  08C4  3400               	retlw	0
   298                           
   299                           	psect	cinit
   300  0051                     start_initialization:	
   301                           
   302                           ; Clear objects allocated to BANK1
   303  0051  1683               	bsf	3,5	;RP0=1, select bank1
   304  0052  01D0               	clrf	__pbssBANK1& (0+127)
   305  0053  01D1               	clrf	(__pbssBANK1+1)& (0+127)
   306  0054  01D2               	clrf	(__pbssBANK1+2)& (0+127)
   307  0055  01D3               	clrf	(__pbssBANK1+3)& (0+127)
   308  0056  01D4               	clrf	(__pbssBANK1+4)& (0+127)
   309  0057  01D5               	clrf	(__pbssBANK1+5)& (0+127)
   310  0058  01D6               	clrf	(__pbssBANK1+6)& (0+127)
   311  0059  01D7               	clrf	(__pbssBANK1+7)& (0+127)
   312  005A  01D8               	clrf	(__pbssBANK1+8)& (0+127)
   313  005B  01D9               	clrf	(__pbssBANK1+9)& (0+127)
   314  005C  01DA               	clrf	(__pbssBANK1+10)& (0+127)
   315  005D                     end_of_initialization:	
   316                           ;End of C runtime variable initialization code
   317                           
   318  005D  0183               	clrf	3
   319  005E  120A  158A  2AD1   	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	bssBANK1
   322  00D0                     __pbssBANK1:	
   323  00D0                     _nin:	
   324  00D0                     	ds	1
   325  00D1                     _carac:	
   326  00D1                     	ds	5
   327  00D6                     _carac1:	
   328  00D6                     	ds	5
   329                           
   330                           	psect	cstackBANK1
   331  00A0                     __pcstackBANK1:	
   332  00A0                     _sprintf$1943:	
   333                           
   334                           ; 4 bytes @ 0x0
   335  00A0                     	ds	4
   336  00A4                     sprintf@ap:	
   337                           
   338                           ; 1 bytes @ 0x4
   339  00A4                     	ds	1
   340  00A5                     sprintf@integ:	
   341                           
   342                           ; 3 bytes @ 0x5
   343  00A5                     	ds	3
   344  00A8                     sprintf@flag:	
   345                           
   346                           ; 2 bytes @ 0x8
   347  00A8                     	ds	2
   348  00AA                     sprintf@width:	
   349                           
   350                           ; 2 bytes @ 0xA
   351  00AA                     	ds	2
   352  00AC                     sprintf@exp:	
   353                           
   354                           ; 2 bytes @ 0xC
   355  00AC                     	ds	2
   356  00AE                     sprintf@fval:	
   357                           
   358                           ; 3 bytes @ 0xE
   359  00AE                     	ds	3
   360  00B1                     sprintf@sp:	
   361                           
   362                           ; 1 bytes @ 0x11
   363  00B1                     	ds	1
   364  00B2                     sprintf@prec:	
   365                           
   366                           ; 2 bytes @ 0x12
   367  00B2                     	ds	2
   368  00B4                     sprintf@c:	
   369                           
   370                           ; 1 bytes @ 0x14
   371  00B4                     	ds	1
   372  00B5                     sprintf@_val:	
   373                           
   374                           ; 4 bytes @ 0x15
   375  00B5                     	ds	4
   376  00B9                     main@buffer:	
   377                           
   378                           ; 15 bytes @ 0x19
   379  00B9                     	ds	15
   380  00C8                     _main$2941:	
   381                           
   382                           ; 3 bytes @ 0x28
   383  00C8                     	ds	3
   384  00CB                     main@cnum:	
   385                           
   386                           ; 2 bytes @ 0x2B
   387  00CB                     	ds	2
   388  00CD                     main@x:	
   389                           
   390                           ; 1 bytes @ 0x2D
   391  00CD                     	ds	1
   392  00CE                     main@cnt2:	
   393                           
   394                           ; 1 bytes @ 0x2E
   395  00CE                     	ds	1
   396  00CF                     main@cnt1:	
   397                           
   398                           ; 1 bytes @ 0x2F
   399  00CF                     	ds	1
   400                           
   401                           	psect	cstackCOMMON
   402  0070                     __pcstackCOMMON:	
   403  0070                     ?_isdigit:	
   404  0070                     ??_isdigit:	
   405                           ; 1 bit 
   406                           
   407  0070                     ?_putch:	
   408                           ; 0 bytes @ 0x0
   409                           
   410  0070                     ??_putch:	
   411                           ; 0 bytes @ 0x0
   412                           
   413  0070                     ?_msecbase:	
   414                           ; 0 bytes @ 0x0
   415                           
   416  0070                     ??_msecbase:	
   417                           ; 0 bytes @ 0x0
   418                           
   419  0070                     ?_pause:	
   420                           ; 0 bytes @ 0x0
   421                           
   422  0070                     ?_i2c_init:	
   423                           ; 0 bytes @ 0x0
   424                           
   425  0070                     ??_i2c_init:	
   426                           ; 0 bytes @ 0x0
   427                           
   428  0070                     ?_i2c_start:	
   429                           ; 0 bytes @ 0x0
   430                           
   431  0070                     ??_i2c_start:	
   432                           ; 0 bytes @ 0x0
   433                           
   434  0070                     ?_i2c_restart:	
   435                           ; 0 bytes @ 0x0
   436                           
   437  0070                     ??_i2c_restart:	
   438                           ; 0 bytes @ 0x0
   439                           
   440  0070                     ?_i2c_stop:	
   441                           ; 0 bytes @ 0x0
   442                           
   443  0070                     ??_i2c_stop:	
   444                           ; 0 bytes @ 0x0
   445                           
   446  0070                     ??_i2c_read:	
   447                           ; 0 bytes @ 0x0
   448                           
   449  0070                     ?_I2C_nack:	
   450                           ; 0 bytes @ 0x0
   451                           
   452  0070                     ??_I2C_nack:	
   453                           ; 0 bytes @ 0x0
   454                           
   455  0070                     ?_i2c_write:	
   456                           ; 0 bytes @ 0x0
   457                           
   458  0070                     ??_i2c_write:	
   459                           ; 0 bytes @ 0x0
   460                           
   461  0070                     ?_lcd_clear:	
   462                           ; 0 bytes @ 0x0
   463                           
   464  0070                     ?_lcd_goto:	
   465                           ; 0 bytes @ 0x0
   466                           
   467  0070                     ?_main:	
   468                           ; 0 bytes @ 0x0
   469                           
   470  0070                     ?___ftge:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  0070                     ?_i2c_read:	
   474                           ; 1 bit 
   475                           
   476  0070                     ?___lbmod:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?___wmul:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?___awmod:	
   483                           ; 2 bytes @ 0x0
   484                           
   485  0070                     ?___ftpack:	
   486                           ; 2 bytes @ 0x0
   487                           
   488  0070                     ?___ftneg:	
   489                           ; 3 bytes @ 0x0
   490                           
   491  0070                     ?__tdiv_to_l_:	
   492                           ; 3 bytes @ 0x0
   493                           
   494  0070                     ?__div_to_l_:	
   495                           ; 4 bytes @ 0x0
   496                           
   497  0070                     ?___lldiv:	
   498                           ; 4 bytes @ 0x0
   499                           
   500  0070                     putch@dato:	
   501                           ; 4 bytes @ 0x0
   502                           
   503  0070                     i2c_write@I2C_data:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     _isdigit$2451:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ___lbmod@divisor:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     pause@usvalue:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ___wmul@multiplier:	
   516                           ; 2 bytes @ 0x0
   517                           
   518  0070                     ___awmod@divisor:	
   519                           ; 2 bytes @ 0x0
   520                           
   521  0070                     ___ftneg@f1:	
   522                           ; 2 bytes @ 0x0
   523                           
   524  0070                     ___ftge@ff1:	
   525                           ; 3 bytes @ 0x0
   526                           
   527  0070                     __tdiv_to_l_@f1:	
   528                           ; 3 bytes @ 0x0
   529                           
   530  0070                     __div_to_l_@f1:	
   531                           ; 3 bytes @ 0x0
   532                           
   533  0070                     ___ftpack@arg:	
   534                           ; 3 bytes @ 0x0
   535                           
   536  0070                     ___lldiv@divisor:	
   537                           ; 3 bytes @ 0x0
   538                           
   539                           
   540                           ; 4 bytes @ 0x0
   541  0070                     	ds	1
   542  0071                     ??___lbmod:	
   543  0071                     ?_I2C_EEIN:	
   544                           ; 0 bytes @ 0x1
   545                           
   546  0071                     I2C_EEIN@address2:	
   547                           ; 1 bytes @ 0x1
   548                           
   549  0071                     isdigit@c:	
   550                           ; 1 bytes @ 0x1
   551                           
   552                           
   553                           ; 1 bytes @ 0x1
   554  0071                     	ds	1
   555  0072                     ??_pause:	
   556  0072                     ??_I2C_EEIN:	
   557                           ; 0 bytes @ 0x2
   558                           
   559  0072                     I2C_EEIN@address1:	
   560                           ; 0 bytes @ 0x2
   561                           
   562  0072                     ___lbmod@dividend:	
   563                           ; 1 bytes @ 0x2
   564                           
   565  0072                     pause@x:	
   566                           ; 1 bytes @ 0x2
   567                           
   568  0072                     ___wmul@multiplicand:	
   569                           ; 2 bytes @ 0x2
   570                           
   571  0072                     ___awmod@dividend:	
   572                           ; 2 bytes @ 0x2
   573                           
   574                           
   575                           ; 2 bytes @ 0x2
   576  0072                     	ds	1
   577  0073                     ??___ftneg:	
   578  0073                     I2C_EEIN@data:	
   579                           ; 0 bytes @ 0x3
   580                           
   581  0073                     ___lbmod@counter:	
   582                           ; 1 bytes @ 0x3
   583                           
   584  0073                     ___ftpack@exp:	
   585                           ; 1 bytes @ 0x3
   586                           
   587  0073                     ___ftge@ff2:	
   588                           ; 1 bytes @ 0x3
   589                           
   590  0073                     __tdiv_to_l_@f2:	
   591                           ; 3 bytes @ 0x3
   592                           
   593  0073                     __div_to_l_@f2:	
   594                           ; 3 bytes @ 0x3
   595                           
   596                           
   597                           ; 3 bytes @ 0x3
   598  0073                     	ds	1
   599  0074                     ?_I2C_EEOUT:	
   600  0074                     ?_lcd_write:	
   601                           ; 0 bytes @ 0x4
   602                           
   603  0074                     ??___wmul:	
   604                           ; 0 bytes @ 0x4
   605                           
   606  0074                     ??___awmod:	
   607                           ; 0 bytes @ 0x4
   608                           
   609  0074                     I2C_EEOUT@address2:	
   610                           ; 0 bytes @ 0x4
   611                           
   612  0074                     ___lbmod@rem:	
   613                           ; 1 bytes @ 0x4
   614                           
   615  0074                     ___awmod@counter:	
   616                           ; 1 bytes @ 0x4
   617                           
   618  0074                     ___ftpack@sign:	
   619                           ; 1 bytes @ 0x4
   620                           
   621  0074                     lcd_write@c:	
   622                           ; 1 bytes @ 0x4
   623                           
   624  0074                     ___wmul@product:	
   625                           ; 2 bytes @ 0x4
   626                           
   627  0074                     ___lldiv@dividend:	
   628                           ; 2 bytes @ 0x4
   629                           
   630                           
   631                           ; 4 bytes @ 0x4
   632  0074                     	ds	1
   633  0075                     ??___ftpack:	
   634  0075                     ?___lbdiv:	
   635                           ; 0 bytes @ 0x5
   636                           
   637  0075                     I2C_EEOUT@data:	
   638                           ; 1 bytes @ 0x5
   639                           
   640  0075                     ___lbdiv@divisor:	
   641                           ; 1 bytes @ 0x5
   642                           
   643  0075                     ___awmod@sign:	
   644                           ; 1 bytes @ 0x5
   645                           
   646                           
   647                           ; 1 bytes @ 0x5
   648  0075                     	ds	1
   649  0076                     ??__tdiv_to_l_:	
   650  0076                     ??__div_to_l_:	
   651                           ; 0 bytes @ 0x6
   652                           
   653  0076                     ??_I2C_EEOUT:	
   654                           ; 0 bytes @ 0x6
   655                           
   656  0076                     ??_lcd_write:	
   657                           ; 0 bytes @ 0x6
   658                           
   659  0076                     ??_lcd_clear:	
   660                           ; 0 bytes @ 0x6
   661                           
   662  0076                     ?_lcd_puts:	
   663                           ; 0 bytes @ 0x6
   664                           
   665  0076                     ??_lcd_goto:	
   666                           ; 0 bytes @ 0x6
   667                           
   668  0076                     ??___lbdiv:	
   669                           ; 0 bytes @ 0x6
   670                           
   671  0076                     ??___ftge:	
   672                           ; 0 bytes @ 0x6
   673                           
   674  0076                     ?___awdiv:	
   675                           ; 0 bytes @ 0x6
   676                           
   677  0076                     I2C_EEOUT@address1:	
   678                           ; 2 bytes @ 0x6
   679                           
   680  0076                     lcd_goto@pos:	
   681                           ; 1 bytes @ 0x6
   682                           
   683  0076                     ___lbdiv@dividend:	
   684                           ; 1 bytes @ 0x6
   685                           
   686  0076                     lcd_puts@s:	
   687                           ; 1 bytes @ 0x6
   688                           
   689  0076                     ___awdiv@divisor:	
   690                           ; 2 bytes @ 0x6
   691                           
   692                           
   693                           ; 2 bytes @ 0x6
   694  0076                     	ds	1
   695  0077                     ___lbdiv@counter:	
   696                           
   697                           ; 1 bytes @ 0x7
   698  0077                     	ds	1
   699  0078                     ??_lcd_puts:	
   700  0078                     ??___lldiv:	
   701                           ; 0 bytes @ 0x8
   702                           
   703  0078                     ?___lbtoft:	
   704                           ; 0 bytes @ 0x8
   705                           
   706  0078                     ?___lltoft:	
   707                           ; 3 bytes @ 0x8
   708                           
   709  0078                     ___lbdiv@quotient:	
   710                           ; 3 bytes @ 0x8
   711                           
   712  0078                     ___awdiv@dividend:	
   713                           ; 1 bytes @ 0x8
   714                           
   715  0078                     ___lldiv@quotient:	
   716                           ; 2 bytes @ 0x8
   717                           
   718  0078                     ___lltoft@c:	
   719                           ; 4 bytes @ 0x8
   720                           
   721                           
   722                           ; 4 bytes @ 0x8
   723  0078                     	ds	1
   724  0079                     ?___bmul:	
   725  0079                     ___bmul@multiplicand:	
   726                           ; 1 bytes @ 0x9
   727                           
   728                           
   729                           ; 1 bytes @ 0x9
   730  0079                     	ds	1
   731  007A                     ??___bmul:	
   732  007A                     ??___awdiv:	
   733                           ; 0 bytes @ 0xA
   734                           
   735  007A                     ___bmul@product:	
   736                           ; 0 bytes @ 0xA
   737                           
   738  007A                     ___awdiv@counter:	
   739                           ; 1 bytes @ 0xA
   740                           
   741                           
   742                           ; 1 bytes @ 0xA
   743  007A                     	ds	1
   744  007B                     ??___lbtoft:	
   745  007B                     ___bmul@multiplier:	
   746                           ; 0 bytes @ 0xB
   747                           
   748  007B                     ___lbtoft@c:	
   749                           ; 1 bytes @ 0xB
   750                           
   751  007B                     ___awdiv@sign:	
   752                           ; 1 bytes @ 0xB
   753                           
   754                           
   755                           ; 1 bytes @ 0xB
   756  007B                     	ds	1
   757  007C                     ??___lltoft:	
   758  007C                     ___lldiv@counter:	
   759                           ; 0 bytes @ 0xC
   760                           
   761  007C                     ___lltoft@exp:	
   762                           ; 1 bytes @ 0xC
   763                           
   764  007C                     ___awdiv@quotient:	
   765                           ; 1 bytes @ 0xC
   766                           
   767                           
   768                           ; 2 bytes @ 0xC
   769  007C                     	ds	1
   770  007D                     ??___llmod:	
   771  007D                     ___llmod@counter:	
   772                           ; 0 bytes @ 0xD
   773                           
   774                           
   775                           ; 1 bytes @ 0xD
   776  007D                     	ds	1
   777  007E                     ??_fround:	
   778  007E                     ??___ftsub:	
   779                           ; 0 bytes @ 0xE
   780                           
   781                           
   782                           	psect	cstackBANK0
   783  0020                     __pcstackBANK0:	
   784                           ; 0 bytes @ 0xE
   785                           
   786  0020                     ?___fttol:	
   787  0020                     ?___llmod:	
   788                           ; 4 bytes @ 0x0
   789                           
   790  0020                     ___fttol@f1:	
   791                           ; 4 bytes @ 0x0
   792                           
   793  0020                     ___llmod@divisor:	
   794                           ; 3 bytes @ 0x0
   795                           
   796  0020                     __tdiv_to_l_@quot:	
   797                           ; 4 bytes @ 0x0
   798                           
   799  0020                     __div_to_l_@quot:	
   800                           ; 4 bytes @ 0x0
   801                           
   802                           
   803                           ; 4 bytes @ 0x0
   804  0020                     	ds	4
   805  0024                     ??___fttol:	
   806  0024                     __tdiv_to_l_@cntr:	
   807                           ; 0 bytes @ 0x4
   808                           
   809  0024                     __div_to_l_@cntr:	
   810                           ; 1 bytes @ 0x4
   811                           
   812  0024                     ___llmod@dividend:	
   813                           ; 1 bytes @ 0x4
   814                           
   815                           
   816                           ; 4 bytes @ 0x4
   817  0024                     	ds	1
   818  0025                     __tdiv_to_l_@exp1:	
   819  0025                     __div_to_l_@exp1:	
   820                           ; 1 bytes @ 0x5
   821                           
   822                           
   823                           ; 1 bytes @ 0x5
   824  0025                     	ds	2
   825  0027                     ___fttol@sign1:	
   826                           
   827                           ; 1 bytes @ 0x7
   828  0027                     	ds	1
   829  0028                     ___fttol@lval:	
   830                           
   831                           ; 4 bytes @ 0x8
   832  0028                     	ds	4
   833  002C                     ___fttol@exp1:	
   834                           
   835                           ; 1 bytes @ 0xC
   836  002C                     	ds	1
   837  002D                     ?___ftmul:	
   838  002D                     ___ftmul@f1:	
   839                           ; 3 bytes @ 0xD
   840                           
   841                           
   842                           ; 3 bytes @ 0xD
   843  002D                     	ds	3
   844  0030                     ___ftmul@f2:	
   845                           
   846                           ; 3 bytes @ 0x10
   847  0030                     	ds	3
   848  0033                     ??___ftmul:	
   849                           
   850                           ; 0 bytes @ 0x13
   851  0033                     	ds	3
   852  0036                     ___ftmul@exp:	
   853                           
   854                           ; 1 bytes @ 0x16
   855  0036                     	ds	1
   856  0037                     ___ftmul@f3_as_product:	
   857                           
   858                           ; 3 bytes @ 0x17
   859  0037                     	ds	3
   860  003A                     ___ftmul@cntr:	
   861                           
   862                           ; 1 bytes @ 0x1A
   863  003A                     	ds	1
   864  003B                     ___ftmul@sign:	
   865                           
   866                           ; 1 bytes @ 0x1B
   867  003B                     	ds	1
   868  003C                     ?_scale:	
   869  003C                     ?___ftadd:	
   870                           ; 3 bytes @ 0x1C
   871                           
   872  003C                     ___ftadd@f1:	
   873                           ; 3 bytes @ 0x1C
   874                           
   875                           
   876                           ; 3 bytes @ 0x1C
   877  003C                     	ds	3
   878  003F                     ??_scale:	
   879  003F                     ___ftadd@f2:	
   880                           ; 0 bytes @ 0x1F
   881                           
   882                           
   883                           ; 3 bytes @ 0x1F
   884  003F                     	ds	3
   885  0042                     ??___ftadd:	
   886                           
   887                           ; 0 bytes @ 0x22
   888  0042                     	ds	1
   889  0043                     _scale$2944:	
   890                           
   891                           ; 3 bytes @ 0x23
   892  0043                     	ds	2
   893  0045                     ___ftadd@sign:	
   894                           
   895                           ; 1 bytes @ 0x25
   896  0045                     	ds	1
   897  0046                     scale@scl:	
   898  0046                     ___ftadd@exp2:	
   899                           ; 1 bytes @ 0x26
   900                           
   901                           
   902                           ; 1 bytes @ 0x26
   903  0046                     	ds	1
   904  0047                     ___ftadd@exp1:	
   905                           
   906                           ; 1 bytes @ 0x27
   907  0047                     	ds	1
   908  0048                     ?_fround:	
   909  0048                     ?___ftsub:	
   910                           ; 3 bytes @ 0x28
   911                           
   912  0048                     ___ftsub@f2:	
   913                           ; 3 bytes @ 0x28
   914                           
   915                           
   916                           ; 3 bytes @ 0x28
   917  0048                     	ds	3
   918  004B                     ___ftsub@f1:	
   919  004B                     _fround$2943:	
   920                           ; 3 bytes @ 0x2B
   921                           
   922                           
   923                           ; 3 bytes @ 0x2B
   924  004B                     	ds	3
   925  004E                     _fround$2942:	
   926                           
   927                           ; 3 bytes @ 0x2E
   928  004E                     	ds	3
   929  0051                     fround@prec:	
   930                           
   931                           ; 1 bytes @ 0x31
   932  0051                     	ds	1
   933  0052                     ?_sprintf:	
   934  0052                     sprintf@f:	
   935                           ; 2 bytes @ 0x32
   936                           
   937                           
   938                           ; 1 bytes @ 0x32
   939  0052                     	ds	4
   940  0056                     ??_sprintf:	
   941                           
   942                           ; 0 bytes @ 0x36
   943  0056                     	ds	5
   944  005B                     ??_main:	
   945                           
   946                           ; 0 bytes @ 0x3B
   947  005B                     	ds	1
   948                           
   949                           	psect	maintext
   950  0AD1                     __pmaintext:	
   951 ;;Data sizes: Strings 63, constant 118, data 0, bss 11, persistent 0 stack 0
   952 ;;Auto spaces:   Size  Autos    Used
   953 ;; COMMON          14     14      14
   954 ;; BANK0           80     60      60
   955 ;; BANK1           80     48      59
   956 ;; BANK3           96      0       0
   957 ;; BANK2           96      0       0
   958 ;;
   959 ;; Pointer list with targets:
   960 ;; ?___lbtoft	float  size(1) Largest target is 0
   961 ;;
   962 ;; ?___ftpack	float  size(1) Largest target is 5
   963 ;;		 -> carac(BANK1[5]), 
   964 ;;
   965 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   966 ;;
   967 ;; ?___llmod	unsigned long  size(1) Largest target is 5
   968 ;;		 -> carac(BANK1[5]), 
   969 ;;
   970 ;; ?___ftsub	float  size(1) Largest target is 0
   971 ;;
   972 ;; ?___lltoft	float  size(1) Largest target is 0
   973 ;;
   974 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   975 ;;
   976 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   977 ;;
   978 ;; ?___fttol	long  size(1) Largest target is 5
   979 ;;		 -> carac(BANK1[5]), 
   980 ;;
   981 ;; ?___ftadd	float  size(1) Largest target is 5
   982 ;;		 -> carac(BANK1[5]), 
   983 ;;
   984 ;; ?___ftneg	float  size(1) Largest target is 5
   985 ;;		 -> carac(BANK1[5]), 
   986 ;;
   987 ;; ?___awmod	int  size(2) Largest target is 40
   988 ;;		 -> dpowers(CODE[40]), carac(BANK1[5]), 
   989 ;;
   990 ;; ?___awdiv	int  size(1) Largest target is 0
   991 ;;
   992 ;; ?_scale	int  size(1) Largest target is 0
   993 ;;
   994 ;; ?_fround	int  size(1) Largest target is 0
   995 ;;
   996 ;; ?___ftmul	float  size(1) Largest target is 0
   997 ;;
   998 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   999 ;;
  1000 ;; sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 7
  1001 ;;		 -> STR_8(CODE[7]), carac(BANK1[5]), 
  1002 ;;
  1003 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 12
  1004 ;;		 -> STR_7(CODE[12]), STR_6(CODE[3]), STR_3(CODE[6]), 
  1005 ;;
  1006 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 15
  1007 ;;		 -> main@buffer(BANK1[15]), carac1(BANK1[5]), carac(BANK1[5]), 
  1008 ;;
  1009 ;; ?_sprintf	int  size(1) Largest target is 5
  1010 ;;		 -> carac(BANK1[5]), 
  1011 ;;
  1012 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1013 ;;		 -> ?_sprintf(BANK0[2]), 
  1014 ;;
  1015 ;; S1928$_cp	PTR const unsigned char  size(2) Largest target is 7
  1016 ;;		 -> STR_8(CODE[7]), carac(BANK1[5]), 
  1017 ;;
  1018 ;; _val._str._cp	PTR const unsigned char  size(2) Largest target is 7
  1019 ;;		 -> STR_8(CODE[7]), carac(BANK1[5]), 
  1020 ;;
  1021 ;; lcd_puts@s	PTR const unsigned char  size(2) Largest target is 15
  1022 ;;		 -> carac1(BANK1[5]), STR_5(CODE[6]), STR_4(CODE[3]), carac(BANK1[5]), 
  1023 ;;		 -> STR_2(CODE[11]), STR_1(CODE[15]), 
  1024 ;;
  1025 ;; pa	PTR unsigned char  size(1) Largest target is 1
  1026 ;;		 -> PORTA(BITSFR0[1]), 
  1027 ;;
  1028 ;;
  1029 ;; Critical Paths under _main in COMMON
  1030 ;;
  1031 ;;   _sprintf->___awdiv
  1032 ;;   _sprintf->__div_to_l_
  1033 ;;   _sprintf->___llmod
  1034 ;;   _lcd_goto->_lcd_write
  1035 ;;   _lcd_puts->_lcd_write
  1036 ;;   _lcd_clear->_lcd_write
  1037 ;;   _scale->___awdiv
  1038 ;;   _lcd_write->_pause
  1039 ;;   _I2C_EEOUT->_pause
  1040 ;;   ___lltoft->___ftpack
  1041 ;;   ___lbtoft->___ftpack
  1042 ;;   ___ftmul->___awdiv
  1043 ;;   _I2C_EEIN->_i2c_write
  1044 ;;   ___llmod->___lldiv
  1045 ;;   ___awdiv->___awmod
  1046 ;;   ___fttol->___awdiv
  1047 ;;   ___lbdiv->___lbmod
  1048 ;;   ___bmul->___lbdiv
  1049 ;;
  1050 ;; Critical Paths under _main in BANK0
  1051 ;;
  1052 ;;   _main->_sprintf
  1053 ;;   _sprintf->_fround
  1054 ;;   ___ftsub->___ftadd
  1055 ;;   _scale->___ftmul
  1056 ;;   _fround->___ftadd
  1057 ;;   ___ftmul->___fttol
  1058 ;;   ___ftadd->___ftmul
  1059 ;;
  1060 ;; Critical Paths under _main in BANK1
  1061 ;;
  1062 ;;   _main->_sprintf
  1063 ;;
  1064 ;; Critical Paths under _main in BANK3
  1065 ;;
  1066 ;;   None.
  1067 ;;
  1068 ;; Critical Paths under _main in BANK2
  1069 ;;
  1070 ;;   None.
  1071 ;;
  1072 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1073 ;;
  1074 ;;
  1075 ;;Call Graph Tables:
  1076 ;;
  1077 ;; ---------------------------------------------------------------------------------
  1078 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1079 ;; ---------------------------------------------------------------------------------
  1080 ;; (0) _main                                                41    41      0   12918
  1081 ;;                                             59 BANK0      1     1      0
  1082 ;;                                             25 BANK1     23    23      0
  1083 ;;                              _pause
  1084 ;;                          _lcd_write
  1085 ;;                          _lcd_clear
  1086 ;;                           _lcd_goto
  1087 ;;                           _lcd_puts
  1088 ;;                           _i2c_init
  1089 ;;                             ___wmul
  1090 ;;                           ___lbtoft
  1091 ;;                            ___ftmul
  1092 ;;                          _I2C_EEOUT
  1093 ;;                           _I2C_EEIN
  1094 ;;                            _sprintf
  1095 ;;                              _putch
  1096 ;; ---------------------------------------------------------------------------------
  1097 ;; (1) _sprintf                                             38    34      4   10852
  1098 ;;                                             50 BANK0      9     5      4
  1099 ;;                                              0 BANK1     25    25      0
  1100 ;;                            _isdigit
  1101 ;;                             ___wmul
  1102 ;;                             ___ftge
  1103 ;;                            ___ftneg
  1104 ;;                            ___awdiv
  1105 ;;                              _scale
  1106 ;;                            ___ftmul
  1107 ;;                             _fround
  1108 ;;                            ___ftadd
  1109 ;;                            ___fttol
  1110 ;;                         __div_to_l_
  1111 ;;                        __tdiv_to_l_
  1112 ;;                           ___lltoft
  1113 ;;                            ___ftsub
  1114 ;;                            ___lldiv
  1115 ;;                            ___llmod
  1116 ;;                           ___lbtoft (ARG)
  1117 ;;                           _I2C_EEIN (ARG)
  1118 ;; ---------------------------------------------------------------------------------
  1119 ;; (1) _lcd_goto                                             1     1      0     112
  1120 ;;                                              6 COMMON     1     1      0
  1121 ;;                          _lcd_write
  1122 ;; ---------------------------------------------------------------------------------
  1123 ;; (1) _lcd_puts                                             2     0      2     135
  1124 ;;                                              6 COMMON     2     0      2
  1125 ;;                          _lcd_write
  1126 ;; ---------------------------------------------------------------------------------
  1127 ;; (1) _lcd_clear                                            0     0      0     136
  1128 ;;                          _lcd_write
  1129 ;;                              _pause
  1130 ;; ---------------------------------------------------------------------------------
  1131 ;; (2) ___ftsub                                              6     0      6    1094
  1132 ;;                                             40 BANK0      6     0      6
  1133 ;;                            ___ftadd
  1134 ;;                           ___lltoft (ARG)
  1135 ;; ---------------------------------------------------------------------------------
  1136 ;; (2) _scale                                               14    11      3    1688
  1137 ;;                                             28 BANK0     11     8      3
  1138 ;;                            ___awmod
  1139 ;;                            ___awdiv
  1140 ;;                            ___ftmul
  1141 ;;                             ___bmul
  1142 ;;                            ___fttol (ARG)
  1143 ;; ---------------------------------------------------------------------------------
  1144 ;; (2) _fround                                              13    10      3    1215
  1145 ;;                                             40 BANK0     10     7      3
  1146 ;;                            ___lbmod
  1147 ;;                             ___bmul
  1148 ;;                            ___lbdiv
  1149 ;;                            ___ftmul
  1150 ;;                            ___ftadd (ARG)
  1151 ;; ---------------------------------------------------------------------------------
  1152 ;; (2) _lcd_write                                            2     0      2      90
  1153 ;;                                              4 COMMON     2     0      2
  1154 ;;                              _pause
  1155 ;; ---------------------------------------------------------------------------------
  1156 ;; (1) _I2C_EEOUT                                            3     1      2     134
  1157 ;;                                              4 COMMON     3     1      2
  1158 ;;                          _i2c_start
  1159 ;;                          _i2c_write
  1160 ;;                           _i2c_stop
  1161 ;;                              _pause
  1162 ;; ---------------------------------------------------------------------------------
  1163 ;; (2) ___lltoft                                             5     1      4     278
  1164 ;;                                              8 COMMON     5     1      4
  1165 ;;                           ___ftpack
  1166 ;; ---------------------------------------------------------------------------------
  1167 ;; (1) ___lbtoft                                             4     1      3     231
  1168 ;;                                              8 COMMON     4     1      3
  1169 ;;                           ___ftpack
  1170 ;; ---------------------------------------------------------------------------------
  1171 ;; (3) ___ftmul                                             15     9      6     535
  1172 ;;                                             13 BANK0     15     9      6
  1173 ;;                           ___ftpack
  1174 ;;                           ___lbtoft (ARG)
  1175 ;;                           _I2C_EEIN (ARG)
  1176 ;;                            ___fttol (ARG)
  1177 ;;                            ___awdiv (ARG)
  1178 ;;                            ___awmod (ARG)
  1179 ;;                             ___bmul (ARG)
  1180 ;;                            ___lbdiv (ARG)
  1181 ;;                            ___lbmod (ARG)
  1182 ;; ---------------------------------------------------------------------------------
  1183 ;; (3) ___ftadd                                             12     6      6    1049
  1184 ;;                                             28 BANK0     12     6      6
  1185 ;;                           ___ftpack
  1186 ;;                            ___lbmod (ARG)
  1187 ;;                             ___bmul (ARG)
  1188 ;;                            ___lbdiv (ARG)
  1189 ;;                            ___ftmul (ARG)
  1190 ;; ---------------------------------------------------------------------------------
  1191 ;; (1) _I2C_EEIN                                             3     2      1      89
  1192 ;;                                              1 COMMON     3     2      1
  1193 ;;                          _i2c_start
  1194 ;;                          _i2c_write
  1195 ;;                        _i2c_restart
  1196 ;;                           _i2c_read
  1197 ;;                           _I2C_nack
  1198 ;;                           _i2c_stop
  1199 ;; ---------------------------------------------------------------------------------
  1200 ;; (2) _pause                                                4     2      2      46
  1201 ;;                                              0 COMMON     4     2      2
  1202 ;;                           _msecbase
  1203 ;; ---------------------------------------------------------------------------------
  1204 ;; (3) ___awmod                                              6     2      4     296
  1205 ;;                                              0 COMMON     6     2      4
  1206 ;; ---------------------------------------------------------------------------------
  1207 ;; (2) ___lldiv                                             13     5      8     162
  1208 ;;                                              0 COMMON    13     5      8
  1209 ;; ---------------------------------------------------------------------------------
  1210 ;; (2) ___ftge                                               6     0      6     136
  1211 ;;                                              0 COMMON     6     0      6
  1212 ;; ---------------------------------------------------------------------------------
  1213 ;; (2) ___ftneg                                              3     0      3      45
  1214 ;;                                              0 COMMON     3     0      3
  1215 ;; ---------------------------------------------------------------------------------
  1216 ;; (2) ___llmod                                              9     1      8     159
  1217 ;;                                             13 COMMON     1     1      0
  1218 ;;                                              0 BANK0      8     0      8
  1219 ;;                            ___lldiv (ARG)
  1220 ;; ---------------------------------------------------------------------------------
  1221 ;; (3) ___awdiv                                              8     4      4     300
  1222 ;;                                              6 COMMON     8     4      4
  1223 ;;                            ___awmod (ARG)
  1224 ;; ---------------------------------------------------------------------------------
  1225 ;; (2) ___fttol                                             13     9      4     252
  1226 ;;                                              0 BANK0     13     9      4
  1227 ;;                           ___ftpack (ARG)
  1228 ;;                            ___awmod (ARG)
  1229 ;;                            ___awdiv (ARG)
  1230 ;;                             ___bmul (ARG)
  1231 ;; ---------------------------------------------------------------------------------
  1232 ;; (4) ___ftpack                                             8     3      5     209
  1233 ;;                                              0 COMMON     8     3      5
  1234 ;; ---------------------------------------------------------------------------------
  1235 ;; (3) ___lbmod                                              5     4      1     159
  1236 ;;                                              0 COMMON     5     4      1
  1237 ;; ---------------------------------------------------------------------------------
  1238 ;; (3) ___lbdiv                                              4     3      1     162
  1239 ;;                                              5 COMMON     4     3      1
  1240 ;;                            ___lbmod (ARG)
  1241 ;; ---------------------------------------------------------------------------------
  1242 ;; (2) ___wmul                                               6     2      4      92
  1243 ;;                                              0 COMMON     6     2      4
  1244 ;; ---------------------------------------------------------------------------------
  1245 ;; (3) ___bmul                                               3     2      1      68
  1246 ;;                                              9 COMMON     3     2      1
  1247 ;;                            ___lbmod (ARG)
  1248 ;;                            ___lbdiv (ARG)
  1249 ;; ---------------------------------------------------------------------------------
  1250 ;; (2) __div_to_l_                                          20    14      6     446
  1251 ;;                                              0 COMMON    14     8      6
  1252 ;;                                              0 BANK0      6     6      0
  1253 ;; ---------------------------------------------------------------------------------
  1254 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1255 ;;                                              0 COMMON     9     3      6
  1256 ;;                                              0 BANK0      6     6      0
  1257 ;; ---------------------------------------------------------------------------------
  1258 ;; (2) _isdigit                                              2     2      0      68
  1259 ;;                                              0 COMMON     2     2      0
  1260 ;; ---------------------------------------------------------------------------------
  1261 ;; (2) _i2c_write                                            1     1      0      22
  1262 ;;                                              0 COMMON     1     1      0
  1263 ;; ---------------------------------------------------------------------------------
  1264 ;; (2) _I2C_nack                                             0     0      0       0
  1265 ;; ---------------------------------------------------------------------------------
  1266 ;; (2) _i2c_read                                             0     0      0       0
  1267 ;; ---------------------------------------------------------------------------------
  1268 ;; (2) _i2c_stop                                             0     0      0       0
  1269 ;; ---------------------------------------------------------------------------------
  1270 ;; (2) _i2c_restart                                          0     0      0       0
  1271 ;; ---------------------------------------------------------------------------------
  1272 ;; (2) _i2c_start                                            0     0      0       0
  1273 ;; ---------------------------------------------------------------------------------
  1274 ;; (1) _i2c_init                                             0     0      0       0
  1275 ;; ---------------------------------------------------------------------------------
  1276 ;; (3) _msecbase                                             0     0      0       0
  1277 ;; ---------------------------------------------------------------------------------
  1278 ;; (1) _putch                                                1     1      0      22
  1279 ;;                                              0 COMMON     1     1      0
  1280 ;; ---------------------------------------------------------------------------------
  1281 ;; Estimated maximum stack depth 4
  1282 ;; ---------------------------------------------------------------------------------
  1283 ;; Call Graph Graphs:
  1284 ;; _main (ROOT)
  1285 ;;   _pause
  1286 ;;     _msecbase
  1287 ;;   _lcd_write
  1288 ;;     _pause
  1289 ;;       _msecbase
  1290 ;;   _lcd_clear
  1291 ;;     _lcd_write
  1292 ;;       _pause
  1293 ;;         _msecbase
  1294 ;;     _pause
  1295 ;;       _msecbase
  1296 ;;   _lcd_goto
  1297 ;;     _lcd_write
  1298 ;;       _pause
  1299 ;;         _msecbase
  1300 ;;   _lcd_puts
  1301 ;;     _lcd_write
  1302 ;;       _pause
  1303 ;;         _msecbase
  1304 ;;   _i2c_init
  1305 ;;   ___wmul
  1306 ;;   ___lbtoft
  1307 ;;     ___ftpack
  1308 ;;   ___ftmul
  1309 ;;     ___ftpack
  1310 ;;     ___lbtoft (ARG)
  1311 ;;       ___ftpack
  1312 ;;     _I2C_EEIN (ARG)
  1313 ;;       _i2c_start
  1314 ;;       _i2c_write
  1315 ;;       _i2c_restart
  1316 ;;       _i2c_read
  1317 ;;       _I2C_nack
  1318 ;;       _i2c_stop
  1319 ;;     ___fttol (ARG)
  1320 ;;       ___ftpack (ARG)
  1321 ;;       ___awmod (ARG)
  1322 ;;       ___awdiv (ARG)
  1323 ;;         ___awmod (ARG)
  1324 ;;       ___bmul (ARG)
  1325 ;;         ___lbmod (ARG)
  1326 ;;         ___lbdiv (ARG)
  1327 ;;           ___lbmod (ARG)
  1328 ;;     ___awdiv (ARG)
  1329 ;;       ___awmod (ARG)
  1330 ;;     ___awmod (ARG)
  1331 ;;     ___bmul (ARG)
  1332 ;;       ___lbmod (ARG)
  1333 ;;       ___lbdiv (ARG)
  1334 ;;         ___lbmod (ARG)
  1335 ;;     ___lbdiv (ARG)
  1336 ;;       ___lbmod (ARG)
  1337 ;;     ___lbmod (ARG)
  1338 ;;   _I2C_EEOUT
  1339 ;;     _i2c_start
  1340 ;;     _i2c_write
  1341 ;;     _i2c_stop
  1342 ;;     _pause
  1343 ;;       _msecbase
  1344 ;;   _I2C_EEIN
  1345 ;;     _i2c_start
  1346 ;;     _i2c_write
  1347 ;;     _i2c_restart
  1348 ;;     _i2c_read
  1349 ;;     _I2C_nack
  1350 ;;     _i2c_stop
  1351 ;;   _sprintf
  1352 ;;     _isdigit
  1353 ;;     ___wmul
  1354 ;;     ___ftge
  1355 ;;     ___ftneg
  1356 ;;     ___awdiv
  1357 ;;       ___awmod (ARG)
  1358 ;;     _scale
  1359 ;;       ___awmod
  1360 ;;       ___awdiv
  1361 ;;         ___awmod (ARG)
  1362 ;;       ___ftmul
  1363 ;;         ___ftpack
  1364 ;;         ___lbtoft (ARG)
  1365 ;;           ___ftpack
  1366 ;;         _I2C_EEIN (ARG)
  1367 ;;           _i2c_start
  1368 ;;           _i2c_write
  1369 ;;           _i2c_restart
  1370 ;;           _i2c_read
  1371 ;;           _I2C_nack
  1372 ;;           _i2c_stop
  1373 ;;         ___fttol (ARG)
  1374 ;;           ___ftpack (ARG)
  1375 ;;           ___awmod (ARG)
  1376 ;;           ___awdiv (ARG)
  1377 ;;             ___awmod (ARG)
  1378 ;;           ___bmul (ARG)
  1379 ;;             ___lbmod (ARG)
  1380 ;;             ___lbdiv (ARG)
  1381 ;;               ___lbmod (ARG)
  1382 ;;         ___awdiv (ARG)
  1383 ;;           ___awmod (ARG)
  1384 ;;         ___awmod (ARG)
  1385 ;;         ___bmul (ARG)
  1386 ;;           ___lbmod (ARG)
  1387 ;;           ___lbdiv (ARG)
  1388 ;;             ___lbmod (ARG)
  1389 ;;         ___lbdiv (ARG)
  1390 ;;           ___lbmod (ARG)
  1391 ;;         ___lbmod (ARG)
  1392 ;;       ___bmul
  1393 ;;         ___lbmod (ARG)
  1394 ;;         ___lbdiv (ARG)
  1395 ;;           ___lbmod (ARG)
  1396 ;;       ___fttol (ARG)
  1397 ;;         ___ftpack (ARG)
  1398 ;;         ___awmod (ARG)
  1399 ;;         ___awdiv (ARG)
  1400 ;;           ___awmod (ARG)
  1401 ;;         ___bmul (ARG)
  1402 ;;           ___lbmod (ARG)
  1403 ;;           ___lbdiv (ARG)
  1404 ;;             ___lbmod (ARG)
  1405 ;;     ___ftmul
  1406 ;;       ___ftpack
  1407 ;;       ___lbtoft (ARG)
  1408 ;;         ___ftpack
  1409 ;;       _I2C_EEIN (ARG)
  1410 ;;         _i2c_start
  1411 ;;         _i2c_write
  1412 ;;         _i2c_restart
  1413 ;;         _i2c_read
  1414 ;;         _I2C_nack
  1415 ;;         _i2c_stop
  1416 ;;       ___fttol (ARG)
  1417 ;;         ___ftpack (ARG)
  1418 ;;         ___awmod (ARG)
  1419 ;;         ___awdiv (ARG)
  1420 ;;           ___awmod (ARG)
  1421 ;;         ___bmul (ARG)
  1422 ;;           ___lbmod (ARG)
  1423 ;;           ___lbdiv (ARG)
  1424 ;;             ___lbmod (ARG)
  1425 ;;       ___awdiv (ARG)
  1426 ;;         ___awmod (ARG)
  1427 ;;       ___awmod (ARG)
  1428 ;;       ___bmul (ARG)
  1429 ;;         ___lbmod (ARG)
  1430 ;;         ___lbdiv (ARG)
  1431 ;;           ___lbmod (ARG)
  1432 ;;       ___lbdiv (ARG)
  1433 ;;         ___lbmod (ARG)
  1434 ;;       ___lbmod (ARG)
  1435 ;;     _fround
  1436 ;;       ___lbmod
  1437 ;;       ___bmul
  1438 ;;         ___lbmod (ARG)
  1439 ;;         ___lbdiv (ARG)
  1440 ;;           ___lbmod (ARG)
  1441 ;;       ___lbdiv
  1442 ;;         ___lbmod (ARG)
  1443 ;;       ___ftmul
  1444 ;;         ___ftpack
  1445 ;;         ___lbtoft (ARG)
  1446 ;;           ___ftpack
  1447 ;;         _I2C_EEIN (ARG)
  1448 ;;           _i2c_start
  1449 ;;           _i2c_write
  1450 ;;           _i2c_restart
  1451 ;;           _i2c_read
  1452 ;;           _I2C_nack
  1453 ;;           _i2c_stop
  1454 ;;         ___fttol (ARG)
  1455 ;;           ___ftpack (ARG)
  1456 ;;           ___awmod (ARG)
  1457 ;;           ___awdiv (ARG)
  1458 ;;             ___awmod (ARG)
  1459 ;;           ___bmul (ARG)
  1460 ;;             ___lbmod (ARG)
  1461 ;;             ___lbdiv (ARG)
  1462 ;;               ___lbmod (ARG)
  1463 ;;         ___awdiv (ARG)
  1464 ;;           ___awmod (ARG)
  1465 ;;         ___awmod (ARG)
  1466 ;;         ___bmul (ARG)
  1467 ;;           ___lbmod (ARG)
  1468 ;;           ___lbdiv (ARG)
  1469 ;;             ___lbmod (ARG)
  1470 ;;         ___lbdiv (ARG)
  1471 ;;           ___lbmod (ARG)
  1472 ;;         ___lbmod (ARG)
  1473 ;;       ___ftadd (ARG)
  1474 ;;         ___ftpack
  1475 ;;         ___lbmod (ARG)
  1476 ;;         ___bmul (ARG)
  1477 ;;           ___lbmod (ARG)
  1478 ;;           ___lbdiv (ARG)
  1479 ;;             ___lbmod (ARG)
  1480 ;;         ___lbdiv (ARG)
  1481 ;;           ___lbmod (ARG)
  1482 ;;         ___ftmul (ARG)
  1483 ;;           ___ftpack
  1484 ;;           ___lbtoft (ARG)
  1485 ;;             ___ftpack
  1486 ;;           _I2C_EEIN (ARG)
  1487 ;;             _i2c_start
  1488 ;;             _i2c_write
  1489 ;;             _i2c_restart
  1490 ;;             _i2c_read
  1491 ;;             _I2C_nack
  1492 ;;             _i2c_stop
  1493 ;;           ___fttol (ARG)
  1494 ;;             ___ftpack (ARG)
  1495 ;;             ___awmod (ARG)
  1496 ;;             ___awdiv (ARG)
  1497 ;;               ___awmod (ARG)
  1498 ;;             ___bmul (ARG)
  1499 ;;               ___lbmod (ARG)
  1500 ;;               ___lbdiv (ARG)
  1501 ;;                 ___lbmod (ARG)
  1502 ;;           ___awdiv (ARG)
  1503 ;;             ___awmod (ARG)
  1504 ;;           ___awmod (ARG)
  1505 ;;           ___bmul (ARG)
  1506 ;;             ___lbmod (ARG)
  1507 ;;             ___lbdiv (ARG)
  1508 ;;               ___lbmod (ARG)
  1509 ;;           ___lbdiv (ARG)
  1510 ;;             ___lbmod (ARG)
  1511 ;;           ___lbmod (ARG)
  1512 ;;     ___ftadd
  1513 ;;       ___ftpack
  1514 ;;       ___lbmod (ARG)
  1515 ;;       ___bmul (ARG)
  1516 ;;         ___lbmod (ARG)
  1517 ;;         ___lbdiv (ARG)
  1518 ;;           ___lbmod (ARG)
  1519 ;;       ___lbdiv (ARG)
  1520 ;;         ___lbmod (ARG)
  1521 ;;       ___ftmul (ARG)
  1522 ;;         ___ftpack
  1523 ;;         ___lbtoft (ARG)
  1524 ;;           ___ftpack
  1525 ;;         _I2C_EEIN (ARG)
  1526 ;;           _i2c_start
  1527 ;;           _i2c_write
  1528 ;;           _i2c_restart
  1529 ;;           _i2c_read
  1530 ;;           _I2C_nack
  1531 ;;           _i2c_stop
  1532 ;;         ___fttol (ARG)
  1533 ;;           ___ftpack (ARG)
  1534 ;;           ___awmod (ARG)
  1535 ;;           ___awdiv (ARG)
  1536 ;;             ___awmod (ARG)
  1537 ;;           ___bmul (ARG)
  1538 ;;             ___lbmod (ARG)
  1539 ;;             ___lbdiv (ARG)
  1540 ;;               ___lbmod (ARG)
  1541 ;;         ___awdiv (ARG)
  1542 ;;           ___awmod (ARG)
  1543 ;;         ___awmod (ARG)
  1544 ;;         ___bmul (ARG)
  1545 ;;           ___lbmod (ARG)
  1546 ;;           ___lbdiv (ARG)
  1547 ;;             ___lbmod (ARG)
  1548 ;;         ___lbdiv (ARG)
  1549 ;;           ___lbmod (ARG)
  1550 ;;         ___lbmod (ARG)
  1551 ;;     ___fttol
  1552 ;;       ___ftpack (ARG)
  1553 ;;       ___awmod (ARG)
  1554 ;;       ___awdiv (ARG)
  1555 ;;         ___awmod (ARG)
  1556 ;;       ___bmul (ARG)
  1557 ;;         ___lbmod (ARG)
  1558 ;;         ___lbdiv (ARG)
  1559 ;;           ___lbmod (ARG)
  1560 ;;     __div_to_l_
  1561 ;;     __tdiv_to_l_
  1562 ;;     ___lltoft
  1563 ;;       ___ftpack
  1564 ;;     ___ftsub
  1565 ;;       ___ftadd
  1566 ;;         ___ftpack
  1567 ;;         ___lbmod (ARG)
  1568 ;;         ___bmul (ARG)
  1569 ;;           ___lbmod (ARG)
  1570 ;;           ___lbdiv (ARG)
  1571 ;;             ___lbmod (ARG)
  1572 ;;         ___lbdiv (ARG)
  1573 ;;           ___lbmod (ARG)
  1574 ;;         ___ftmul (ARG)
  1575 ;;           ___ftpack
  1576 ;;           ___lbtoft (ARG)
  1577 ;;             ___ftpack
  1578 ;;           _I2C_EEIN (ARG)
  1579 ;;             _i2c_start
  1580 ;;             _i2c_write
  1581 ;;             _i2c_restart
  1582 ;;             _i2c_read
  1583 ;;             _I2C_nack
  1584 ;;             _i2c_stop
  1585 ;;           ___fttol (ARG)
  1586 ;;             ___ftpack (ARG)
  1587 ;;             ___awmod (ARG)
  1588 ;;             ___awdiv (ARG)
  1589 ;;               ___awmod (ARG)
  1590 ;;             ___bmul (ARG)
  1591 ;;               ___lbmod (ARG)
  1592 ;;               ___lbdiv (ARG)
  1593 ;;                 ___lbmod (ARG)
  1594 ;;           ___awdiv (ARG)
  1595 ;;             ___awmod (ARG)
  1596 ;;           ___awmod (ARG)
  1597 ;;           ___bmul (ARG)
  1598 ;;             ___lbmod (ARG)
  1599 ;;             ___lbdiv (ARG)
  1600 ;;               ___lbmod (ARG)
  1601 ;;           ___lbdiv (ARG)
  1602 ;;             ___lbmod (ARG)
  1603 ;;           ___lbmod (ARG)
  1604 ;;       ___lltoft (ARG)
  1605 ;;         ___ftpack
  1606 ;;     ___lldiv
  1607 ;;     ___llmod
  1608 ;;       ___lldiv (ARG)
  1609 ;;     ___lbtoft (ARG)
  1610 ;;       ___ftpack
  1611 ;;     _I2C_EEIN (ARG)
  1612 ;;       _i2c_start
  1613 ;;       _i2c_write
  1614 ;;       _i2c_restart
  1615 ;;       _i2c_read
  1616 ;;       _I2C_nack
  1617 ;;       _i2c_stop
  1618 ;;   _putch
  1619 ;;
  1620 ;; Address spaces:
  1621 ;;Name               Size   Autos  Total    Cost      Usage
  1622 ;;BITCOMMON            E      0       0       0        0.0%
  1623 ;;EEDATA             100      0       0       0        0.0%
  1624 ;;NULL                 0      0       0       0        0.0%
  1625 ;;CODE                 0      0       0       0        0.0%
  1626 ;;COMMON               E      E       E       1      100.0%
  1627 ;;BITSFR0              0      0       0       1        0.0%
  1628 ;;SFR0                 0      0       0       1        0.0%
  1629 ;;BITSFR1              0      0       0       2        0.0%
  1630 ;;SFR1                 0      0       0       2        0.0%
  1631 ;;STACK                0      0       4       2        0.0%
  1632 ;;ABS                  0      0      85       3        0.0%
  1633 ;;BITBANK0            50      0       0       4        0.0%
  1634 ;;BITSFR3              0      0       0       4        0.0%
  1635 ;;SFR3                 0      0       0       4        0.0%
  1636 ;;BANK0               50     3C      3C       5       75.0%
  1637 ;;BITSFR2              0      0       0       5        0.0%
  1638 ;;SFR2                 0      0       0       5        0.0%
  1639 ;;BITBANK1            50      0       0       6        0.0%
  1640 ;;BANK1               50     30      3B       7       73.8%
  1641 ;;BITBANK3            60      0       0       8        0.0%
  1642 ;;BANK3               60      0       0       9        0.0%
  1643 ;;BITBANK2            60      0       0      10        0.0%
  1644 ;;BANK2               60      0       0      11        0.0%
  1645 ;;DATA                 0      0      89      12        0.0%
  1646                           
  1647                           
  1648 ;; *************** function _main *****************
  1649 ;; Defined at:
  1650 ;;		line 252 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  x               1   45[BANK1 ] unsigned char 
  1655 ;;  buffer         15   25[BANK1 ] unsigned char [15]
  1656 ;;  cnum            2   43[BANK1 ] unsigned int 
  1657 ;;  numi            2    0        unsigned int 
  1658 ;;  cntd            2    0        unsigned int 
  1659 ;;  uni             2    0        unsigned int 
  1660 ;;  cen             2    0        unsigned int 
  1661 ;;  dec             2    0        unsigned int 
  1662 ;;  mil             2    0        unsigned int 
  1663 ;;  B2              2    0        unsigned int 
  1664 ;;  B1              2    0        unsigned int 
  1665 ;;  cnt1            1   47[BANK1 ] unsigned char 
  1666 ;;  cnt2            1   46[BANK1 ] unsigned char 
  1667 ;;  ct              1    0        unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;		None               void
  1670 ;; Registers used:
  1671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 17F/0
  1674 ;;		On exit  : 160/20
  1675 ;;		Unchanged: FFE00/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         0       0       0       0       0
  1678 ;;      Locals:         0       0      23       0       0
  1679 ;;      Temps:          0       1       0       0       0
  1680 ;;      Totals:         0       1      23       0       0
  1681 ;;Total ram usage:       24 bytes
  1682 ;; Hardware stack levels required when called:    4
  1683 ;; This function calls:
  1684 ;;		_pause
  1685 ;;		_lcd_write
  1686 ;;		_lcd_clear
  1687 ;;		_lcd_goto
  1688 ;;		_lcd_puts
  1689 ;;		_i2c_init
  1690 ;;		___wmul
  1691 ;;		___lbtoft
  1692 ;;		___ftmul
  1693 ;;		_I2C_EEOUT
  1694 ;;		_I2C_EEIN
  1695 ;;		_sprintf
  1696 ;;		_putch
  1697 ;; This function is called by:
  1698 ;;		Startup code after reset
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701  0AD1                     _main:	
  1702                           
  1703                           ;eeprom_i2c.c: 253: ANSEL=3;
  1704                           
  1705                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1706  0AD1  3003               	movlw	3
  1707  0AD2  1683               	bsf	3,5	;RP0=1, select bank3
  1708  0AD3  1703               	bsf	3,6	;RP1=1, select bank3
  1709  0AD4  0088               	movwf	8	;volatile
  1710                           
  1711                           ;eeprom_i2c.c: 254: ANSELH=0;
  1712  0AD5  0189               	clrf	9	;volatile
  1713                           
  1714                           ;eeprom_i2c.c: 255: OSCCON=0xC0;
  1715  0AD6  30C0               	movlw	192
  1716  0AD7  1303               	bcf	3,6	;RP1=0, select bank1
  1717  0AD8  008F               	movwf	15	;volatile
  1718                           
  1719                           ;eeprom_i2c.c: 256: TRISA=3;
  1720  0AD9  3003               	movlw	3
  1721  0ADA  0085               	movwf	5	;volatile
  1722                           
  1723                           ;eeprom_i2c.c: 257: TRISB=0;
  1724  0ADB  0186               	clrf	6	;volatile
  1725                           
  1726                           ;eeprom_i2c.c: 258: TRISC=6;
  1727  0ADC  3006               	movlw	6
  1728  0ADD  0087               	movwf	7	;volatile
  1729                           
  1730                           ;eeprom_i2c.c: 259: TRISD=0;
  1731  0ADE  0188               	clrf	8	;volatile
  1732                           
  1733                           ;eeprom_i2c.c: 260: TRISE=0;
  1734  0ADF  0189               	clrf	9	;volatile
  1735  0AE0  30FC               	movlw	252
  1736                           
  1737                           ;eeprom_i2c.c: 262: IRCF1 = 1;
  1738  0AE1  168F               	bsf	15,5
  1739                           
  1740                           ;eeprom_i2c.c: 263: IRCF1 = 1;
  1741  0AE2  168F               	bsf	15,5
  1742                           
  1743                           ;eeprom_i2c.c: 264: IRCF2 = 1;
  1744  0AE3  170F               	bsf	15,6
  1745  0AE4  140F               	bsf	15,0
  1746                           
  1747                           ;eeprom_i2c.c: 267: PR2=0xFC;
  1748  0AE5  0092               	movwf	18	;volatile
  1749                           
  1750                           ;eeprom_i2c.c: 268: CCP2CON=0x0C;
  1751  0AE6  300C               	movlw	12
  1752  0AE7  1283               	bcf	3,5	;RP0=0, select bank0
  1753  0AE8  009D               	movwf	29	;volatile
  1754                           
  1755                           ;eeprom_i2c.c: 269: CCP1CON=0x0C;
  1756  0AE9  0097               	movwf	23	;volatile
  1757                           
  1758                           ;eeprom_i2c.c: 270: CCPR1L=0x80;
  1759  0AEA  3080               	movlw	128
  1760  0AEB  0095               	movwf	21	;volatile
  1761                           
  1762                           ;eeprom_i2c.c: 271: CCPR2L=0x80;
  1763  0AEC  009B               	movwf	27	;volatile
  1764                           
  1765                           ;eeprom_i2c.c: 272: PIR1=0;
  1766  0AED  018C               	clrf	12	;volatile
  1767                           
  1768                           ;eeprom_i2c.c: 273: T2CON=0X07;
  1769  0AEE  3007               	movlw	7
  1770  0AEF  0092               	movwf	18	;volatile
  1771  0AF0                     l6163:	
  1772                           ;eeprom_i2c.c: 274: while(PIR1);
  1773                           
  1774  0AF0  088C               	movf	12,f
  1775  0AF1  1D03               	skipz
  1776  0AF2  2AF0               	goto	l6163
  1777                           
  1778                           ;eeprom_i2c.c: 275: TRISC1=0;
  1779  0AF3  1683               	bsf	3,5	;RP0=1, select bank1
  1780  0AF4  1087               	bcf	7,1
  1781                           
  1782                           ;eeprom_i2c.c: 276: TRISC2=0;
  1783  0AF5  1107               	bcf	7,2
  1784                           
  1785                           ;eeprom_i2c.c: 277: RE0=0;
  1786  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0AF7  300F               	movlw	15
  1788  0AF8  1009               	bcf	9,0
  1789                           
  1790                           ;eeprom_i2c.c: 278: RE2=0;
  1791  0AF9  1109               	bcf	9,2
  1792                           
  1793                           ;eeprom_i2c.c: 279: RE1=0;
  1794  0AFA  1089               	bcf	9,1
  1795                           
  1796                           ;eeprom_i2c.c: 280: pause(15);
  1797  0AFB  00F0               	movwf	?_pause
  1798  0AFC  01F1               	clrf	?_pause+1
  1799  0AFD  160A  118A  27E4   	fcall	_pause
      +       120A  158A         
  1800                           
  1801                           ;eeprom_i2c.c: 281: PORTD=init_value;
  1802  0B02  3003               	movlw	3
  1803  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  1804  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  1805  0B05  0088               	movwf	8	;volatile
  1806  0B06  300A               	movlw	10
  1807                           
  1808                           ;eeprom_i2c.c: 282: ((RE2=1),(RE2=0));
  1809  0B07  1509               	bsf	9,2
  1810  0B08  1109               	bcf	9,2
  1811                           
  1812                           ;eeprom_i2c.c: 283: pause(10);
  1813  0B09  00F0               	movwf	?_pause
  1814  0B0A  01F1               	clrf	?_pause+1
  1815  0B0B  160A  118A  27E4   	fcall	_pause
      +       120A  158A         
  1816                           
  1817                           ;eeprom_i2c.c: 284: ((RE2=1),(RE2=0));
  1818  0B10  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0B11  1303               	bcf	3,6	;RP1=0, select bank0
  1820  0B12  300A               	movlw	10
  1821  0B13  1509               	bsf	9,2
  1822  0B14  1109               	bcf	9,2
  1823                           
  1824                           ;eeprom_i2c.c: 285: pause(10);
  1825  0B15  00F0               	movwf	?_pause
  1826  0B16  01F1               	clrf	?_pause+1
  1827  0B17  160A  118A  27E4   	fcall	_pause
      +       120A  158A         
  1828                           
  1829                           ;eeprom_i2c.c: 286: ((RE2=1),(RE2=0));
  1830  0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  1831  0B1D  1303               	bcf	3,6	;RP1=0, select bank0
  1832  0B1E  300A               	movlw	10
  1833  0B1F  1509               	bsf	9,2
  1834  0B20  1109               	bcf	9,2
  1835                           
  1836                           ;eeprom_i2c.c: 287: pause(10);
  1837  0B21  00F0               	movwf	?_pause
  1838  0B22  01F1               	clrf	?_pause+1
  1839  0B23  160A  118A  27E4   	fcall	_pause
      +       120A  158A         
  1840                           
  1841                           ;eeprom_i2c.c: 288: PORTD=2;
  1842  0B28  3002               	movlw	2
  1843  0B29  1283               	bcf	3,5	;RP0=0, select bank0
  1844  0B2A  1303               	bcf	3,6	;RP1=0, select bank0
  1845  0B2B  0088               	movwf	8	;volatile
  1846  0B2C  3028               	movlw	40
  1847                           
  1848                           ;eeprom_i2c.c: 289: ((RE2=1),(RE2=0));
  1849  0B2D  1509               	bsf	9,2
  1850  0B2E  1109               	bcf	9,2
  1851                           
  1852                           ;eeprom_i2c.c: 290: lcd_write(0x28);
  1853  0B2F  00F4               	movwf	?_lcd_write
  1854  0B30  01F5               	clrf	?_lcd_write+1
  1855  0B31  160A  118A  27D3   	fcall	_lcd_write
      +       120A  158A         
  1856                           
  1857                           ;eeprom_i2c.c: 291: lcd_write(0xC);
  1858  0B36  300C               	movlw	12
  1859  0B37  00F4               	movwf	?_lcd_write
  1860  0B38  01F5               	clrf	?_lcd_write+1
  1861  0B39  160A  118A  27D3   	fcall	_lcd_write
      +       120A  158A         
  1862                           
  1863                           ;eeprom_i2c.c: 292: lcd_clear();
  1864  0B3E  160A  118A  27A8   	fcall	_lcd_clear
      +       120A  158A         
  1865                           
  1866                           ;eeprom_i2c.c: 293: lcd_write(0x06);
  1867  0B43  3006               	movlw	6
  1868  0B44  00F4               	movwf	?_lcd_write
  1869  0B45  01F5               	clrf	?_lcd_write+1
  1870  0B46  160A  118A  27D3   	fcall	_lcd_write
      +       120A  158A         
  1871                           
  1872                           ;eeprom_i2c.c: 294: PORTB=0;
  1873  0B4B  0186               	clrf	6	;volatile
  1874                           
  1875                           ;eeprom_i2c.c: 298: lcd_goto(0);
  1876  0B4C  3000               	movlw	0
  1877  0B4D  160A  118A  273B   	fcall	_lcd_goto
      +       120A  158A         
  1878                           
  1879                           ;eeprom_i2c.c: 299: lcd_puts("Escribiendo...");
  1880  0B52  3077               	movlw	low (STR_1-__stringbase)
  1881  0B53  00F6               	movwf	?_lcd_puts
  1882  0B54  3080               	movlw	128
  1883  0B55  00F7               	movwf	?_lcd_puts+1
  1884  0B56  160A  118A  27B3   	fcall	_lcd_puts
      +       120A  158A         
  1885                           
  1886                           ;eeprom_i2c.c: 300: i2c_init();
  1887  0B5B  120A  118A  2043   	fcall	_i2c_init
      +       120A  158A         
  1888                           
  1889                           ;eeprom_i2c.c: 301: PORTB=0;
  1890  0B60  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0B61  0186               	clrf	6	;volatile
  1892                           
  1893                           ;eeprom_i2c.c: 302: cnt1=0;
  1894  0B62  1683               	bsf	3,5	;RP0=1, select bank1
  1895  0B63  01CF               	clrf	main@cnt1^(0+128)
  1896                           
  1897                           ;eeprom_i2c.c: 313: cntd=0;
  1898                           
  1899                           ;eeprom_i2c.c: 310: while(cnt1<1)
  1900  0B64  01CE               	clrf	main@cnt2^(0+128)
  1901  0B65                     l6219:	
  1902                           ;eeprom_i2c.c: 314: while(cnt2<300)
  1903                           
  1904                           
  1905                           ;eeprom_i2c.c: 315: {
  1906                           ;eeprom_i2c.c: 316: cnum=cnt2+(255*cnt1);
  1907  0B65  084F               	movf	main@cnt1^(0+128),w
  1908  0B66  00F0               	movwf	?___wmul
  1909  0B67  30FF               	movlw	255
  1910  0B68  01F1               	clrf	?___wmul+1
  1911  0B69  00F2               	movwf	?___wmul+2
  1912  0B6A  01F3               	clrf	?___wmul+3
  1913  0B6B  120A  118A  2679   	fcall	___wmul
      +       120A  158A         
  1914  0B70  0871               	movf	?___wmul+1,w
  1915  0B71  00CC               	movwf	(main@cnum+1)^(0+128)
  1916  0B72  0870               	movf	?___wmul,w
  1917  0B73  00CB               	movwf	main@cnum^(0+128)
  1918  0B74  084E               	movf	main@cnt2^(0+128),w
  1919  0B75  07CB               	addwf	main@cnum^(0+128),f
  1920  0B76  1803               	skipnc
  1921  0B77  0ACC               	incf	(main@cnum+1)^(0+128),f
  1922                           
  1923                           ;eeprom_i2c.c: 317: ADCON0=0xC1;
  1924  0B78  30C1               	movlw	193
  1925  0B79  1283               	bcf	3,5	;RP0=0, select bank0
  1926  0B7A  009F               	movwf	31	;volatile
  1927                           
  1928                           ;eeprom_i2c.c: 318: GO_DONE=1;
  1929  0B7B  149F               	bsf	31,1
  1930  0B7C                     l1167:	
  1931                           ;eeprom_i2c.c: 319: while(GO_DONE==1);
  1932                           
  1933  0B7C  189F               	btfsc	31,1
  1934  0B7D  2B7C               	goto	l1167
  1935                           
  1936                           ;eeprom_i2c.c: 320: CCPR1L=ADRESH;
  1937  0B7E  081E               	movf	30,w	;volatile
  1938  0B7F  0095               	movwf	21	;volatile
  1939                           
  1940                           ;eeprom_i2c.c: 321: CCP1CON=(ADRESL>>2)|0x0C;
  1941  0B80  1683               	bsf	3,5	;RP0=1, select bank1
  1942  0B81  081E               	movf	30,w	;volatile
  1943  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0B83  00DB               	movwf	??_main
  1945  0B84  1003               	clrc
  1946  0B85  0CDB               	rrf	??_main,f
  1947  0B86  1003               	clrc
  1948  0B87  0CDB               	rrf	??_main,f
  1949  0B88  085B               	movf	??_main,w
  1950  0B89  380C               	iorlw	12
  1951  0B8A  0097               	movwf	23	;volatile
  1952                           
  1953                           ;eeprom_i2c.c: 323: nin=ADRESH;
  1954  0B8B  081E               	movf	30,w	;volatile
  1955  0B8C  1683               	bsf	3,5	;RP0=1, select bank1
  1956  0B8D  00D0               	movwf	_nin^(0+128)
  1957                           
  1958                           ;eeprom_i2c.c: 324: num=nin*0.0196078431372;
  1959  0B8E  30A1               	movlw	161
  1960  0B8F  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0B90  00AD               	movwf	?___ftmul
  1962  0B91  30A0               	movlw	160
  1963  0B92  00AE               	movwf	?___ftmul+1
  1964  0B93  303C               	movlw	60
  1965  0B94  00AF               	movwf	?___ftmul+2
  1966  0B95  1683               	bsf	3,5	;RP0=1, select bank1
  1967  0B96  0850               	movf	_nin^(0+128),w
  1968  0B97  120A  158A  24AB   	fcall	___lbtoft
      +       120A  158A         
  1969  0B9C  0878               	movf	?___lbtoft,w
  1970  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  1971  0B9E  00B0               	movwf	?___ftmul+3
  1972  0B9F  0879               	movf	?___lbtoft+1,w
  1973  0BA0  00B1               	movwf	?___ftmul+4
  1974  0BA1  087A               	movf	?___lbtoft+2,w
  1975  0BA2  00B2               	movwf	?___ftmul+5
  1976  0BA3  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  1977                           
  1978                           ;eeprom_i2c.c: 337: PORTB=ADRESH;
  1979  0BA8  081E               	movf	30,w	;volatile
  1980  0BA9  0086               	movwf	6	;volatile
  1981                           
  1982                           ;eeprom_i2c.c: 338: I2C_EEOUT(cnt1, cnt2, nin);
  1983  0BAA  1683               	bsf	3,5	;RP0=1, select bank1
  1984  0BAB  084E               	movf	main@cnt2^(0+128),w
  1985  0BAC  00F4               	movwf	?_I2C_EEOUT
  1986  0BAD  0850               	movf	_nin^(0+128),w
  1987  0BAE  00F5               	movwf	?_I2C_EEOUT+1
  1988  0BAF  084F               	movf	main@cnt1^(0+128),w
  1989  0BB0  160A  118A  2746   	fcall	_I2C_EEOUT
      +       120A  158A         
  1990                           
  1991                           ;eeprom_i2c.c: 340: cntd=cntd+1;
  1992  0BB5  1683               	bsf	3,5	;RP0=1, select bank1
  1993  0BB6  1303               	bcf	3,6	;RP1=0, select bank1
  1994  0BB7  0ACE               	incf	main@cnt2^(0+128),f
  1995  0BB8  2B65               	goto	l6219
  1996  0BB9                     l1175:	
  1997  0BB9  3070               	movlw	112
  1998                           
  1999                           ;eeprom_i2c.c: 359: {
  2000                           ;eeprom_i2c.c: 360: TRISC7=1;
  2001  0BBA  1787               	bsf	7,7
  2002                           
  2003                           ;eeprom_i2c.c: 361: TRISC6=0;
  2004  0BBB  1307               	bcf	7,6
  2005                           
  2006                           ;eeprom_i2c.c: 362: OSCCON=0x70;
  2007  0BBC  008F               	movwf	15	;volatile
  2008                           
  2009                           ;eeprom_i2c.c: 363: SPBRG=12;
  2010  0BBD  300C               	movlw	12
  2011  0BBE  0099               	movwf	25	;volatile
  2012                           
  2013                           ;eeprom_i2c.c: 364: RCSTA=0x90;
  2014  0BBF  3090               	movlw	144
  2015  0BC0  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0BC1  0098               	movwf	24	;volatile
  2017                           
  2018                           ;eeprom_i2c.c: 365: TXSTA=0x20;
  2019  0BC2  3020               	movlw	32
  2020  0BC3  1683               	bsf	3,5	;RP0=1, select bank1
  2021  0BC4  0098               	movwf	24	;volatile
  2022                           
  2023                           ;eeprom_i2c.c: 366: BAUDCTL=0x00;
  2024  0BC5  1703               	bsf	3,6	;RP1=1, select bank3
  2025  0BC6  0187               	clrf	7	;volatile
  2026                           
  2027                           ;eeprom_i2c.c: 367: pause(500);
  2028  0BC7  30F4               	movlw	244
  2029  0BC8  00F0               	movwf	?_pause
  2030  0BC9  3001               	movlw	1
  2031  0BCA  00F1               	movwf	?_pause+1
  2032  0BCB  160A  118A  27E4   	fcall	_pause
      +       120A  158A         
  2033                           
  2034                           ;eeprom_i2c.c: 368: PORTA=0x03;
  2035  0BD0  3003               	movlw	3
  2036  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  2037  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  2038  0BD3  0085               	movwf	5	;volatile
  2039                           
  2040                           ;eeprom_i2c.c: 369: *pa=0xFF;
  2041  0BD4  30FF               	movlw	255
  2042  0BD5  0085               	movwf	5
  2043                           
  2044                           ;eeprom_i2c.c: 371: sprintf(carac,"%1.3f",I2C_EEIN(cnt1,cnt2)*0.0196078431372);
  2045  0BD6  30A1               	movlw	161
  2046  0BD7  00AD               	movwf	?___ftmul
  2047  0BD8  30A0               	movlw	160
  2048  0BD9  00AE               	movwf	?___ftmul+1
  2049  0BDA  303C               	movlw	60
  2050  0BDB  00AF               	movwf	?___ftmul+2
  2051  0BDC  1683               	bsf	3,5	;RP0=1, select bank1
  2052  0BDD  084E               	movf	main@cnt2^(0+128),w
  2053  0BDE  00F1               	movwf	?_I2C_EEIN
  2054  0BDF  084F               	movf	main@cnt1^(0+128),w
  2055  0BE0  160A  118A  2761   	fcall	_I2C_EEIN
      +       120A  158A         
  2056  0BE5  120A  158A  24AB   	fcall	___lbtoft
      +       120A  158A         
  2057  0BEA  0878               	movf	?___lbtoft,w
  2058  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  2059  0BEC  00B0               	movwf	?___ftmul+3
  2060  0BED  0879               	movf	?___lbtoft+1,w
  2061  0BEE  00B1               	movwf	?___ftmul+4
  2062  0BEF  087A               	movf	?___lbtoft+2,w
  2063  0BF0  00B2               	movwf	?___ftmul+5
  2064  0BF1  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  2065  0BF6  082D               	movf	?___ftmul,w
  2066  0BF7  1683               	bsf	3,5	;RP0=1, select bank1
  2067  0BF8  00C8               	movwf	_main$2941^(0+128)
  2068  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0BFA  082E               	movf	?___ftmul+1,w
  2070  0BFB  1683               	bsf	3,5	;RP0=1, select bank1
  2071  0BFC  00C9               	movwf	(_main$2941+1)^(0+128)
  2072  0BFD  1283               	bcf	3,5	;RP0=0, select bank0
  2073  0BFE  082F               	movf	?___ftmul+2,w
  2074  0BFF  1683               	bsf	3,5	;RP0=1, select bank1
  2075  0C00  00CA               	movwf	(_main$2941+2)^(0+128)
  2076                           
  2077                           ;eeprom_i2c.c: 371: sprintf(carac,"%1.3f",I2C_EEIN(cnt1,cnt2)*0.0196078431372);
  2078  0C01  30AA               	movlw	(STR_3-__stringbase)& (0+255)
  2079  0C02  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0C03  00D2               	movwf	?_sprintf
  2081  0C04  1683               	bsf	3,5	;RP0=1, select bank1
  2082  0C05  0848               	movf	_main$2941^(0+128),w
  2083  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0C07  00D3               	movwf	?_sprintf+1
  2085  0C08  1683               	bsf	3,5	;RP0=1, select bank1
  2086  0C09  0849               	movf	(_main$2941+1)^(0+128),w
  2087  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  2088  0C0B  00D4               	movwf	?_sprintf+2
  2089  0C0C  1683               	bsf	3,5	;RP0=1, select bank1
  2090  0C0D  084A               	movf	(_main$2941+2)^(0+128),w
  2091  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  2092  0C0F  00D5               	movwf	?_sprintf+3
  2093  0C10  30D1               	movlw	_carac& (0+255)
  2094  0C11  120A  118A  2061   	fcall	_sprintf
      +       120A  158A         
  2095                           
  2096                           ;eeprom_i2c.c: 373: lcd_goto(0x40);
  2097  0C16  3040               	movlw	64
  2098  0C17  160A  118A  273B   	fcall	_lcd_goto
      +       120A  158A         
  2099                           
  2100                           ;eeprom_i2c.c: 375: lcd_puts("V:");
  2101  0C1C  30B0               	movlw	low (STR_4-__stringbase)
  2102  0C1D  00F6               	movwf	?_lcd_puts
  2103  0C1E  3080               	movlw	128
  2104  0C1F  00F7               	movwf	?_lcd_puts+1
  2105  0C20  160A  118A  27B3   	fcall	_lcd_puts
      +       120A  158A         
  2106                           
  2107                           ;eeprom_i2c.c: 376: lcd_goto(0x42);
  2108  0C25  3042               	movlw	66
  2109  0C26  160A  118A  273B   	fcall	_lcd_goto
      +       120A  158A         
  2110                           
  2111                           ;eeprom_i2c.c: 377: lcd_puts(carac);
  2112  0C2B  30D1               	movlw	_carac& (0+255)
  2113  0C2C  00F6               	movwf	?_lcd_puts
  2114  0C2D  01F7               	clrf	?_lcd_puts+1
  2115  0C2E  160A  118A  27B3   	fcall	_lcd_puts
      +       120A  158A         
  2116                           
  2117                           ;eeprom_i2c.c: 378: pause(10);
  2118  0C33  300A               	movlw	10
  2119  0C34  00F0               	movwf	?_pause
  2120  0C35  01F1               	clrf	?_pause+1
  2121  0C36  160A  118A  27E4   	fcall	_pause
      +       120A  158A         
  2122                           
  2123                           ;eeprom_i2c.c: 380: cnum=cnt2+(255*cnt1);
  2124  0C3B  1683               	bsf	3,5	;RP0=1, select bank1
  2125  0C3C  1303               	bcf	3,6	;RP1=0, select bank1
  2126  0C3D  084F               	movf	main@cnt1^(0+128),w
  2127  0C3E  00F0               	movwf	?___wmul
  2128  0C3F  30FF               	movlw	255
  2129  0C40  01F1               	clrf	?___wmul+1
  2130  0C41  00F2               	movwf	?___wmul+2
  2131  0C42  01F3               	clrf	?___wmul+3
  2132  0C43  120A  118A  2679   	fcall	___wmul
      +       120A  158A         
  2133  0C48  0871               	movf	?___wmul+1,w
  2134  0C49  00CC               	movwf	(main@cnum+1)^(0+128)
  2135  0C4A  0870               	movf	?___wmul,w
  2136  0C4B  00CB               	movwf	main@cnum^(0+128)
  2137  0C4C  084E               	movf	main@cnt2^(0+128),w
  2138  0C4D  07CB               	addwf	main@cnum^(0+128),f
  2139  0C4E  1803               	skipnc
  2140  0C4F  0ACC               	incf	(main@cnum+1)^(0+128),f
  2141                           
  2142                           ;eeprom_i2c.c: 382: lcd_puts(" Dir:");
  2143  0C50  30A4               	movlw	low (STR_5-__stringbase)
  2144  0C51  00F6               	movwf	?_lcd_puts
  2145  0C52  3080               	movlw	128
  2146  0C53  00F7               	movwf	?_lcd_puts+1
  2147  0C54  160A  118A  27B3   	fcall	_lcd_puts
      +       120A  158A         
  2148                           
  2149                           ;eeprom_i2c.c: 383: sprintf(carac1,"%i",cnum);
  2150  0C59  30B3               	movlw	(STR_6-__stringbase)& (0+255)
  2151  0C5A  00D2               	movwf	?_sprintf
  2152  0C5B  1683               	bsf	3,5	;RP0=1, select bank1
  2153  0C5C  084C               	movf	(main@cnum+1)^(0+128),w
  2154  0C5D  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0C5E  00D4               	movwf	?_sprintf+2
  2156  0C5F  1683               	bsf	3,5	;RP0=1, select bank1
  2157  0C60  084B               	movf	main@cnum^(0+128),w
  2158  0C61  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0C62  00D3               	movwf	?_sprintf+1
  2160  0C63  30D6               	movlw	_carac1& (0+255)
  2161  0C64  120A  118A  2061   	fcall	_sprintf
      +       120A  158A         
  2162                           
  2163                           ;eeprom_i2c.c: 384: lcd_puts(carac1);
  2164  0C69  30D6               	movlw	_carac1& (0+255)
  2165  0C6A  00F6               	movwf	?_lcd_puts
  2166  0C6B  01F7               	clrf	?_lcd_puts+1
  2167  0C6C  160A  118A  27B3   	fcall	_lcd_puts
      +       120A  158A         
  2168                           
  2169                           ;eeprom_i2c.c: 388: sprintf(buffer,"Dir:%i\tV:%s",cnum,carac);
  2170  0C71  3086               	movlw	(STR_7-__stringbase)& (0+255)
  2171  0C72  00D2               	movwf	?_sprintf
  2172  0C73  1683               	bsf	3,5	;RP0=1, select bank1
  2173  0C74  084C               	movf	(main@cnum+1)^(0+128),w
  2174  0C75  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0C76  00D4               	movwf	?_sprintf+2
  2176  0C77  1683               	bsf	3,5	;RP0=1, select bank1
  2177  0C78  084B               	movf	main@cnum^(0+128),w
  2178  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0C7A  00D3               	movwf	?_sprintf+1
  2180  0C7B  30D1               	movlw	_carac& (0+255)
  2181  0C7C  00D5               	movwf	?_sprintf+3
  2182  0C7D  30B9               	movlw	main@buffer& (0+255)
  2183  0C7E  120A  118A  2061   	fcall	_sprintf
      +       120A  158A         
  2184                           
  2185                           ;eeprom_i2c.c: 390: for (char x = 0; x<17; x++)
  2186  0C83  01CD               	clrf	main@x^(0+128)
  2187  0C84                     l6295:	
  2188                           
  2189                           ;eeprom_i2c.c: 391: {
  2190                           ;eeprom_i2c.c: 392: putch (buffer[x]);
  2191  0C84  084D               	movf	main@x^(0+128),w
  2192  0C85  3EB9               	addlw	main@buffer& (0+255)
  2193  0C86  0084               	movwf	4
  2194  0C87  0800               	movf	0,w
  2195  0C88  120A  118A  203C   	fcall	_putch
      +       120A  158A         
  2196  0C8D  1683               	bsf	3,5	;RP0=1, select bank1
  2197  0C8E  3011               	movlw	17
  2198  0C8F  0ACD               	incf	main@x^(0+128),f
  2199  0C90  024D               	subwf	main@x^(0+128),w
  2200  0C91  1C03               	skipc
  2201  0C92  2C84               	goto	l6295
  2202                           
  2203                           ;eeprom_i2c.c: 393: }
  2204                           ;eeprom_i2c.c: 413: putch(0x0D);
  2205  0C93  300D               	movlw	13
  2206  0C94  120A  118A  203C   	fcall	_putch
      +       120A  158A         
  2207                           
  2208                           ;eeprom_i2c.c: 414: putch(0x0A);
  2209  0C99  300A               	movlw	10
  2210  0C9A  120A  118A  203C   	fcall	_putch
      +       120A  158A         
  2211                           
  2212                           ;eeprom_i2c.c: 416: pause (10);
  2213  0C9F  300A               	movlw	10
  2214  0CA0  00F0               	movwf	?_pause
  2215  0CA1  01F1               	clrf	?_pause+1
  2216  0CA2  160A  118A  27E4   	fcall	_pause
      +       120A  158A         
  2217                           
  2218                           ;eeprom_i2c.c: 418: cntd=cntd+1;
  2219  0CA7  1683               	bsf	3,5	;RP0=1, select bank1
  2220  0CA8  1303               	bcf	3,6	;RP1=0, select bank1
  2221  0CA9  0ACE               	incf	main@cnt2^(0+128),f
  2222  0CAA  2BB9               	goto	l1175
  2223  0CAB                     __end_of_main:	
  2224                           
  2225                           	psect	text719
  2226  0061                     __ptext719:	
  2227 ;; =============== function _main ends ============
  2228                           
  2229                           
  2230 ;; *************** function _sprintf *****************
  2231 ;; Defined at:
  2232 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  sp              1    wreg     PTR unsigned char 
  2235 ;;		 -> main@buffer(15), carac1(5), carac(5), 
  2236 ;;  f               1   50[BANK0 ] PTR const unsigned char 
  2237 ;;		 -> STR_7(12), STR_6(3), STR_3(6), 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  sp              1   17[BANK1 ] PTR unsigned char 
  2240 ;;		 -> main@buffer(15), carac1(5), carac(5), 
  2241 ;;  _val            4   21[BANK1 ] struct .
  2242 ;;  fval            3   14[BANK1 ] struct .
  2243 ;;  integ           3    5[BANK1 ] struct .
  2244 ;;  ival            3    0        struct .
  2245 ;;  prec            2   18[BANK1 ] int 
  2246 ;;  exp             2   12[BANK1 ] int 
  2247 ;;  width           2   10[BANK1 ] int 
  2248 ;;  flag            2    8[BANK1 ] unsigned short 
  2249 ;;  c               1   20[BANK1 ] char 
  2250 ;;  ap              1    4[BANK1 ] PTR void [1]
  2251 ;;		 -> ?_sprintf(2), 
  2252 ;;  d               1    0        unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  2   50[BANK0 ] int 
  2255 ;; Registers used:
  2256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 60/0
  2259 ;;		On exit  : 160/20
  2260 ;;		Unchanged: FFE00/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2262 ;;      Params:         0       4       0       0       0
  2263 ;;      Locals:         0       0      25       0       0
  2264 ;;      Temps:          0       5       0       0       0
  2265 ;;      Totals:         0       9      25       0       0
  2266 ;;Total ram usage:       34 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    3
  2269 ;; This function calls:
  2270 ;;		_isdigit
  2271 ;;		___wmul
  2272 ;;		___ftge
  2273 ;;		___ftneg
  2274 ;;		___awdiv
  2275 ;;		_scale
  2276 ;;		___ftmul
  2277 ;;		_fround
  2278 ;;		___ftadd
  2279 ;;		___fttol
  2280 ;;		__div_to_l_
  2281 ;;		__tdiv_to_l_
  2282 ;;		___lltoft
  2283 ;;		___ftsub
  2284 ;;		___lldiv
  2285 ;;		___llmod
  2286 ;; This function is called by:
  2287 ;;		_main
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290  0061                     _sprintf:	
  2291                           
  2292                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2293                           ;sprintf@sp stored from wreg
  2294  0061  1683               	bsf	3,5	;RP0=1, select bank1
  2295  0062  00B1               	movwf	sprintf@sp^(0+128)
  2296  0063  3053               	movlw	(?_sprintf+1)& (0+255)
  2297  0064  00A4               	movwf	sprintf@ap^(0+128)
  2298  0065                     l6131:	
  2299  0065  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0066  0852               	movf	sprintf@f,w
  2301  0067  0AD2               	incf	sprintf@f,f
  2302  0068  0084               	movwf	4
  2303  0069  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2304  006E  1683               	bsf	3,5	;RP0=1, select bank1
  2305  006F  00B4               	movwf	sprintf@c^(0+128)
  2306  0070  08B4               	movf	sprintf@c^(0+128),f
  2307  0071  1903               	btfsc	3,2
  2308  0072  2DFC               	goto	l6133
  2309  0073  0834               	movf	sprintf@c^(0+128),w
  2310  0074  3A25               	xorlw	37
  2311  0075  1903               	skipnz
  2312  0076  287E               	goto	l5819
  2313  0077  0831               	movf	sprintf@sp^(0+128),w
  2314  0078  0084               	movwf	4
  2315  0079  0834               	movf	sprintf@c^(0+128),w
  2316  007A  1383               	bcf	3,7	;select IRP bank0
  2317  007B  0080               	movwf	0
  2318  007C  0AB1               	incf	sprintf@sp^(0+128),f
  2319  007D  2865               	goto	l6131
  2320  007E                     l5819:	
  2321  007E  01AA               	clrf	sprintf@width^(0+128)
  2322  007F  01AB               	clrf	(sprintf@width+1)^(0+128)
  2323  0080  01A8               	clrf	sprintf@flag^(0+128)
  2324  0081  01A9               	clrf	(sprintf@flag+1)^(0+128)
  2325  0082  1283               	bcf	3,5	;RP0=0, select bank0
  2326  0083  0852               	movf	sprintf@f,w
  2327  0084  0084               	movwf	4
  2328  0085  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2329  008A  266B  120A  118A   	fcall	_isdigit
  2330  008D  1C03               	btfss	3,0
  2331  008E  28B7               	goto	l5831
  2332  008F  1683               	bsf	3,5	;RP0=1, select bank1
  2333  0090  01AA               	clrf	sprintf@width^(0+128)
  2334  0091  01AB               	clrf	(sprintf@width+1)^(0+128)
  2335  0092                     l5825:	
  2336  0092  1683               	bsf	3,5	;RP0=1, select bank1
  2337  0093  082B               	movf	(sprintf@width+1)^(0+128),w
  2338  0094  00F1               	movwf	?___wmul+1
  2339  0095  082A               	movf	sprintf@width^(0+128),w
  2340  0096  00F0               	movwf	?___wmul
  2341  0097  300A               	movlw	10
  2342  0098  00F2               	movwf	?___wmul+2
  2343  0099  01F3               	clrf	?___wmul+3
  2344  009A  2679               	fcall	___wmul
  2345  009B  1283               	bcf	3,5	;RP0=0, select bank0
  2346  009C  0852               	movf	sprintf@f,w
  2347  009D  0084               	movwf	4
  2348  009E  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2349  00A3  27AD  120A  118A   	fcall	PL16	;call to abstracted procedure
  2350  00A6  00AA               	movwf	sprintf@width^(0+128)
  2351  00A7  27DB               	fcall	PL28	;call to abstracted procedure
  2352  00A8  00AB               	movwf	(sprintf@width+1)^(0+128)
  2353  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  2354  00AA  0AD2               	incf	sprintf@f,f
  2355  00AB  0852               	movf	sprintf@f,w
  2356  00AC  0084               	movwf	4
  2357  00AD  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2358  00B2  266B  120A  118A   	fcall	_isdigit
  2359  00B5  1803               	btfsc	3,0
  2360  00B6  2892               	goto	l5825
  2361  00B7                     l5831:	
  2362  00B7  0852               	movf	sprintf@f,w
  2363  00B8  0084               	movwf	4
  2364  00B9  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2365  00BE  3A2E               	xorlw	46
  2366  00BF  1D03               	skipz
  2367  00C0  28F1               	goto	l5845
  2368  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  2369  00C2  1729               	bsf	(sprintf@flag^(0+128)+1),6
  2370  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  2371  00C4  0AD2               	incf	sprintf@f,f
  2372  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  2373  00C6  01B2               	clrf	sprintf@prec^(0+128)
  2374  00C7  01B3               	clrf	(sprintf@prec+1)^(0+128)
  2375  00C8                     l5843:	
  2376  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  2377  00C9  0852               	movf	sprintf@f,w
  2378  00CA  0084               	movwf	4
  2379  00CB  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2380  00D0  266B  120A  118A   	fcall	_isdigit
  2381  00D3  1C03               	btfss	3,0
  2382  00D4  2972               	goto	l5889
  2383  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  2384  00D6  0833               	movf	(sprintf@prec+1)^(0+128),w
  2385  00D7  00F1               	movwf	?___wmul+1
  2386  00D8  0832               	movf	sprintf@prec^(0+128),w
  2387  00D9  00F0               	movwf	?___wmul
  2388  00DA  300A               	movlw	10
  2389  00DB  00F2               	movwf	?___wmul+2
  2390  00DC  01F3               	clrf	?___wmul+3
  2391  00DD  2679               	fcall	___wmul
  2392  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  2393  00DF  0852               	movf	sprintf@f,w
  2394  00E0  0084               	movwf	4
  2395  00E1  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2396  00E6  27AD  120A  118A   	fcall	PL16	;call to abstracted procedure
  2397  00E9  00B2               	movwf	sprintf@prec^(0+128)
  2398  00EA  27DB  120A  118A   	fcall	PL28	;call to abstracted procedure
  2399  00ED  00B3               	movwf	(sprintf@prec+1)^(0+128)
  2400  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  2401  00EF  0AD2               	incf	sprintf@f,f
  2402  00F0  28C8               	goto	l5843
  2403  00F1                     l5845:	
  2404  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  2405  00F2  01B2               	clrf	sprintf@prec^(0+128)
  2406  00F3  01B3               	clrf	(sprintf@prec+1)^(0+128)
  2407  00F4  1629               	bsf	(sprintf@flag^(0+128)+1),4
  2408  00F5  2972               	goto	l5889
  2409  00F6                     l1229:	
  2410  00F6  1529               	bsf	(sprintf@flag^(0+128)+1),2
  2411  00F7  298D               	goto	l5891
  2412  00F8                     l5849:	
  2413  00F8  0824               	movf	sprintf@ap^(0+128),w
  2414  00F9  0084               	movwf	4
  2415  00FA  1383               	bcf	3,7	;select IRP bank0
  2416  00FB  0800               	movf	0,w
  2417  00FC  00B5               	movwf	sprintf@_val^(0+128)
  2418  00FD  01B6               	clrf	(sprintf@_val+1)^(0+128)
  2419  00FE  0AA4               	incf	sprintf@ap^(0+128),f
  2420  00FF  0436               	iorwf	(sprintf@_val+1)^(0+128),w
  2421  0100  1D03               	skipz
  2422  0101  2906               	goto	l5857
  2423  0102  309D               	movlw	low (STR_8-__stringbase)
  2424  0103  00B5               	movwf	sprintf@_val^(0+128)
  2425  0104  3080               	movlw	128
  2426  0105  00B6               	movwf	(sprintf@_val+1)^(0+128)
  2427  0106                     l5857:	
  2428  0106  01B7               	clrf	(sprintf@_val^(0+128)+2)
  2429  0107  01B8               	clrf	((sprintf@_val+1)^(0+128)+2)
  2430  0108                     l5861:	
  2431  0108  0837               	movf	(sprintf@_val^(0+128)+2),w
  2432  0109  0735               	addwf	sprintf@_val^(0+128),w
  2433  010A  0084               	movwf	4
  2434  010B  0836               	movf	(sprintf@_val+1)^(0+128),w
  2435  010C  1803               	skipnc
  2436  010D  0A36               	incf	(sprintf@_val+1)^(0+128),w
  2437  010E  1283               	bcf	3,5	;RP0=0, select bank0
  2438  010F  00FF               	movwf	127
  2439  0110  120A  158A  2000   	fcall	stringtab
      +       120A  118A         
  2440  0115  3800               	iorlw	0
  2441  0116  1903               	btfsc	3,2
  2442  0117  291D               	goto	l5863
  2443  0118  1683               	bsf	3,5	;RP0=1, select bank1
  2444  0119  0AB7               	incf	(sprintf@_val^(0+128)+2),f
  2445  011A  1903               	skipnz
  2446  011B  0AB8               	incf	((sprintf@_val+1)^(0+128)+2),f
  2447  011C  2908               	goto	l5861
  2448  011D                     l5863:	
  2449  011D  1683               	bsf	3,5	;RP0=1, select bank1
  2450  011E  0833               	movf	(sprintf@prec+1)^(0+128),w
  2451  011F  0432               	iorwf	sprintf@prec^(0+128),w
  2452  0120  1903               	skipnz
  2453  0121  292E               	goto	l1238
  2454  0122  0838               	movf	((sprintf@_val+1)^(0+128)+2),w
  2455  0123  0233               	subwf	(sprintf@prec+1)^(0+128),w
  2456  0124  1D03               	skipz
  2457  0125  2928               	goto	u3035
  2458  0126  0837               	movf	(sprintf@_val^(0+128)+2),w
  2459  0127  0232               	subwf	sprintf@prec^(0+128),w
  2460  0128                     u3035:	
  2461  0128  1803               	skipnc
  2462  0129  292E               	goto	l1238
  2463  012A  0833               	movf	(sprintf@prec+1)^(0+128),w
  2464  012B  00B8               	movwf	((sprintf@_val+1)^(0+128)+2)
  2465  012C  0832               	movf	sprintf@prec^(0+128),w
  2466  012D  00B7               	movwf	(sprintf@_val^(0+128)+2)
  2467  012E                     l1238:	
  2468  012E  082B               	movf	(sprintf@width+1)^(0+128),w
  2469  012F  0238               	subwf	((sprintf@_val+1)^(0+128)+2),w
  2470  0130  1D03               	skipz
  2471  0131  2934               	goto	u3045
  2472  0132  082A               	movf	sprintf@width^(0+128),w
  2473  0133  0237               	subwf	(sprintf@_val^(0+128)+2),w
  2474  0134                     u3045:	
  2475  0134  1803               	skipnc
  2476  0135  293D               	goto	l5871
  2477  0136  0837               	movf	(sprintf@_val^(0+128)+2),w
  2478  0137  02AA               	subwf	sprintf@width^(0+128),f
  2479  0138  0838               	movf	((sprintf@_val+1)^(0+128)+2),w
  2480  0139  1C03               	skipc
  2481  013A  03AB               	decf	(sprintf@width+1)^(0+128),f
  2482  013B  02AB               	subwf	(sprintf@width+1)^(0+128),f
  2483  013C  293F               	goto	l5877
  2484  013D                     l5871:	
  2485  013D  01AA               	clrf	sprintf@width^(0+128)
  2486  013E  01AB               	clrf	(sprintf@width+1)^(0+128)
  2487  013F                     l5877:	
  2488  013F  30FF               	movlw	-1
  2489  0140  07AA               	addwf	sprintf@width^(0+128),f
  2490  0141  1C03               	skipc
  2491  0142  03AB               	decf	(sprintf@width+1)^(0+128),f
  2492  0143  0A2A               	incf	sprintf@width^(0+128),w
  2493  0144  1903               	skipnz
  2494  0145  0A2B               	incf	(sprintf@width+1)^(0+128),w
  2495  0146  1903               	btfsc	3,2
  2496  0147  2966               	goto	l5885
  2497  0148  0831               	movf	sprintf@sp^(0+128),w
  2498  0149  27F7  120A  118A   	fcall	PL33	;call to abstracted procedure
  2499  014C  293F               	goto	l5877
  2500  014D                     l5879:	
  2501  014D  0836               	movf	(sprintf@_val+1)^(0+128),w
  2502  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2503  014F  00FF               	movwf	127
  2504  0150  1683               	bsf	3,5	;RP0=1, select bank1
  2505  0151  0835               	movf	sprintf@_val^(0+128),w
  2506  0152  0084               	movwf	4
  2507  0153  1283               	bcf	3,5	;RP0=0, select bank0
  2508  0154  120A  158A  2000   	fcall	stringtab
      +       120A  118A         
  2509  0159  00D6               	movwf	??_sprintf
  2510  015A  1683               	bsf	3,5	;RP0=1, select bank1
  2511  015B  0831               	movf	sprintf@sp^(0+128),w
  2512  015C  0084               	movwf	4
  2513  015D  1283               	bcf	3,5	;RP0=0, select bank0
  2514  015E  0856               	movf	??_sprintf,w
  2515  015F  1383               	bcf	3,7	;select IRP bank0
  2516  0160  0080               	movwf	0
  2517  0161  1683               	bsf	3,5	;RP0=1, select bank1
  2518  0162  0AB5               	incf	sprintf@_val^(0+128),f
  2519  0163  1903               	skipnz
  2520  0164  0AB6               	incf	(sprintf@_val+1)^(0+128),f
  2521  0165  0AB1               	incf	sprintf@sp^(0+128),f
  2522  0166                     l5885:	
  2523  0166  3001               	movlw	1
  2524  0167  02B7               	subwf	(sprintf@_val^(0+128)+2),f
  2525  0168  3000               	movlw	0
  2526  0169  1C03               	skipc
  2527  016A  03B8               	decf	((sprintf@_val+1)^(0+128)+2),f
  2528  016B  02B8               	subwf	((sprintf@_val+1)^(0+128)+2),f
  2529  016C  0A37               	incf	(sprintf@_val^(0+128)+2),w
  2530  016D  1903               	skipnz
  2531  016E  0A38               	incf	((sprintf@_val+1)^(0+128)+2),w
  2532  016F  1903               	btfsc	3,2
  2533  0170  2865               	goto	l6131
  2534  0171  294D               	goto	l5879
  2535  0172                     l5889:	
  2536  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0173  0852               	movf	sprintf@f,w
  2538  0174  0AD2               	incf	sprintf@f,f
  2539  0175  0084               	movwf	4
  2540  0176  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2541  017B  1683               	bsf	3,5	;RP0=1, select bank1
  2542  017C  00B4               	movwf	sprintf@c^(0+128)
  2543                           
  2544                           ; Switch size 1, requested type "space"
  2545                           ; Number of cases is 5, Range of values is 0 to 115
  2546                           ; switch strategies available:
  2547                           ; Name         Instructions Cycles
  2548                           ; simple_byte           16     9 (average)
  2549                           ; jumptable            260     6 (fixed)
  2550                           ; rangetable           120     6 (fixed)
  2551                           ; spacedrange          238     9 (fixed)
  2552                           ; locatedrange         116     3 (fixed)
  2553                           ;	Chosen strategy is simple_byte
  2554  017D  3A00               	xorlw	0	; case 0
  2555  017E  1903               	skipnz
  2556  017F  2DFC               	goto	l6133
  2557  0180  3A64               	xorlw	100	; case 100
  2558  0181  1903               	skipnz
  2559  0182  298D               	goto	l5891
  2560  0183  3A02               	xorlw	2	; case 102
  2561  0184  1903               	skipnz
  2562  0185  28F6               	goto	l1229
  2563  0186  3A0F               	xorlw	15	; case 105
  2564  0187  1903               	skipnz
  2565  0188  298D               	goto	l5891
  2566  0189  3A1A               	xorlw	26	; case 115
  2567  018A  1903               	skipnz
  2568  018B  28F8               	goto	l5849
  2569  018C  2865               	goto	l6131
  2570  018D                     l5891:	
  2571  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2572  018E  3007               	movlw	7
  2573  018F  01D6               	clrf	??_sprintf
  2574  0190  1683               	bsf	3,5	;RP0=1, select bank1
  2575  0191  0529               	andwf	(sprintf@flag+1)^(0+128),w
  2576  0192  1283               	bcf	3,5	;RP0=0, select bank0
  2577  0193  00D7               	movwf	??_sprintf+1
  2578  0194  0456               	iorwf	??_sprintf,w
  2579  0195  1903               	skipnz
  2580  0196  2CC1               	goto	l6051
  2581  0197  1683               	bsf	3,5	;RP0=1, select bank1
  2582  0198  1E29               	btfss	(sprintf@flag+1)^(0+128),4
  2583  0199  299D               	goto	l5897
  2584  019A  3006               	movlw	6
  2585  019B  00B2               	movwf	sprintf@prec^(0+128)
  2586  019C  01B3               	clrf	(sprintf@prec+1)^(0+128)
  2587  019D                     l5897:	
  2588  019D  0824               	movf	sprintf@ap^(0+128),w
  2589  019E  0084               	movwf	4
  2590  019F  1383               	bcf	3,7	;select IRP bank0
  2591  01A0  0800               	movf	0,w
  2592  01A1  00AE               	movwf	sprintf@fval^(0+128)
  2593  01A2  0A84               	incf	4,f
  2594  01A3  0800               	movf	0,w
  2595  01A4  00AF               	movwf	(sprintf@fval+1)^(0+128)
  2596  01A5  0A84               	incf	4,f
  2597  01A6  0800               	movf	0,w
  2598  01A7  00B0               	movwf	(sprintf@fval+2)^(0+128)
  2599  01A8  3003               	movlw	3
  2600  01A9  07A4               	addwf	sprintf@ap^(0+128),f
  2601  01AA  082E               	movf	sprintf@fval^(0+128),w
  2602  01AB  00F0               	movwf	?___ftge
  2603  01AC  082F               	movf	(sprintf@fval+1)^(0+128),w
  2604  01AD  00F1               	movwf	?___ftge+1
  2605  01AE  0830               	movf	(sprintf@fval+2)^(0+128),w
  2606  01AF  00F2               	movwf	?___ftge+2
  2607  01B0  01F3               	clrf	?___ftge+3
  2608  01B1  01F4               	clrf	?___ftge+4
  2609  01B2  01F5               	clrf	?___ftge+5
  2610  01B3  263F  120A  118A   	fcall	___ftge
  2611  01B6  1803               	btfsc	3,0
  2612  01B7  29C9               	goto	l5907
  2613  01B8  082E               	movf	sprintf@fval^(0+128),w
  2614  01B9  00F0               	movwf	?___ftneg
  2615  01BA  082F               	movf	(sprintf@fval+1)^(0+128),w
  2616  01BB  00F1               	movwf	?___ftneg+1
  2617  01BC  0830               	movf	(sprintf@fval+2)^(0+128),w
  2618  01BD  00F2               	movwf	?___ftneg+2
  2619  01BE  2735  120A  118A   	fcall	___ftneg
  2620  01C1  0870               	movf	?___ftneg,w
  2621  01C2  00AE               	movwf	sprintf@fval^(0+128)
  2622  01C3  0871               	movf	?___ftneg+1,w
  2623  01C4  00AF               	movwf	(sprintf@fval+1)^(0+128)
  2624  01C5  0872               	movf	?___ftneg+2,w
  2625  01C6  00B0               	movwf	(sprintf@fval+2)^(0+128)
  2626  01C7  3003               	movlw	3
  2627  01C8  04A8               	iorwf	sprintf@flag^(0+128),f
  2628  01C9                     l5907:	
  2629  01C9  01AC               	clrf	sprintf@exp^(0+128)
  2630  01CA  01AD               	clrf	(sprintf@exp+1)^(0+128)
  2631  01CB  0830               	movf	(sprintf@fval+2)^(0+128),w
  2632  01CC  042F               	iorwf	(sprintf@fval+1)^(0+128),w
  2633  01CD  042E               	iorwf	sprintf@fval^(0+128),w
  2634  01CE  1903               	skipnz
  2635  01CF  2A5F               	goto	l5939
  2636  01D0  30AE               	movlw	low sprintf@fval
  2637  01D1  0084               	movwf	4
  2638  01D2  27F0  120A  118A   	fcall	PL32	;call to abstracted procedure
  2639  01D5  0A84               	incf	4,f
  2640  01D6  0800               	movf	0,w
  2641  01D7  00D8               	movwf	??_sprintf+2
  2642  01D8  0A84               	incf	4,f
  2643  01D9  0800               	movf	0,w
  2644  01DA  00D9               	movwf	??_sprintf+3
  2645  01DB  300F               	movlw	15
  2646  01DC                     u3115:	
  2647  01DC  1003               	clrc
  2648  01DD  0CD9               	rrf	??_sprintf+3,f
  2649  01DE  0CD8               	rrf	??_sprintf+2,f
  2650  01DF  0CD7               	rrf	??_sprintf+1,f
  2651  01E0  0CD6               	rrf	??_sprintf,f
  2652  01E1  3EFF               	addlw	-1
  2653  01E2  1D03               	skipz
  2654  01E3  29DC               	goto	u3115
  2655  01E4  0857               	movf	??_sprintf+1,w
  2656  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2657  01E6  00AD               	movwf	(sprintf@exp+1)^(0+128)
  2658  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2659  01E8  0856               	movf	??_sprintf,w
  2660  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  2661  01EA  00AC               	movwf	sprintf@exp^(0+128)
  2662  01EB  3082               	movlw	-126
  2663  01EC  01AD               	clrf	(sprintf@exp+1)^(0+128)
  2664  01ED  07AC               	addwf	sprintf@exp^(0+128),f
  2665  01EE  1C03               	skipc
  2666  01EF  03AD               	decf	(sprintf@exp+1)^(0+128),f
  2667  01F0  30FF               	movlw	-1
  2668  01F1  07AC               	addwf	sprintf@exp^(0+128),f
  2669  01F2  1C03               	skipc
  2670  01F3  03AD               	decf	(sprintf@exp+1)^(0+128),f
  2671  01F4  3003               	movlw	3
  2672  01F5  00F0               	movwf	?___wmul
  2673  01F6  01F1               	clrf	?___wmul+1
  2674  01F7  082D               	movf	(sprintf@exp+1)^(0+128),w
  2675  01F8  00F3               	movwf	?___wmul+3
  2676  01F9  082C               	movf	sprintf@exp^(0+128),w
  2677  01FA  00F2               	movwf	?___wmul+2
  2678  01FB  2679               	fcall	___wmul
  2679  01FC  0871               	movf	?___wmul+1,w
  2680  01FD  00AD               	movwf	(sprintf@exp+1)^(0+128)
  2681  01FE  0870               	movf	?___wmul,w
  2682  01FF  00AC               	movwf	sprintf@exp^(0+128)
  2683  0200  300A               	movlw	10
  2684  0201  00F6               	movwf	?___awdiv
  2685  0202  01F7               	clrf	?___awdiv+1
  2686  0203  082D               	movf	(sprintf@exp+1)^(0+128),w
  2687  0204  00F9               	movwf	?___awdiv+3
  2688  0205  082C               	movf	sprintf@exp^(0+128),w
  2689  0206  00F8               	movwf	?___awdiv+2
  2690  0207  120A  158A  266A   	fcall	___awdiv
      +       120A  118A         
  2691  020C  0877               	movf	?___awdiv+1,w
  2692  020D  00AD               	movwf	(sprintf@exp+1)^(0+128)
  2693  020E  0876               	movf	?___awdiv,w
  2694  020F  00AC               	movwf	sprintf@exp^(0+128)
  2695  0210  1FAD               	btfss	(sprintf@exp+1)^(0+128),7
  2696  0211  2A16               	goto	l5927
  2697  0212  30FF               	movlw	-1
  2698  0213  07AC               	addwf	sprintf@exp^(0+128),f
  2699  0214  1C03               	skipc
  2700  0215  03AD               	decf	(sprintf@exp+1)^(0+128),f
  2701  0216                     l5927:	
  2702  0216  032C               	decf	sprintf@exp^(0+128),w
  2703  0217  3AFF               	xorlw	255
  2704  0218  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2705  021D  278A  120A  118A   	fcall	PL11	;call to abstracted procedure
  2706  0220  27A2               	fcall	PL14	;call to abstracted procedure
  2707  0221  1683               	bsf	3,5	;RP0=1, select bank1
  2708  0222  0825               	movf	sprintf@integ^(0+128),w
  2709  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2710  0224  00B0               	movwf	?___ftmul+3
  2711  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2712  0226  0826               	movf	(sprintf@integ+1)^(0+128),w
  2713  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2714  0228  00B1               	movwf	?___ftmul+4
  2715  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2716  022A  0827               	movf	(sprintf@integ+2)^(0+128),w
  2717  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2718  022C  00B2               	movwf	?___ftmul+5
  2719  022D  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2720  0232  082D               	movf	?___ftmul,w
  2721  0233  1683               	bsf	3,5	;RP0=1, select bank1
  2722  0234  00A5               	movwf	sprintf@integ^(0+128)
  2723  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2724  0236  082E               	movf	?___ftmul+1,w
  2725  0237  1683               	bsf	3,5	;RP0=1, select bank1
  2726  0238  00A6               	movwf	(sprintf@integ+1)^(0+128)
  2727  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2728  023A  082F               	movf	?___ftmul+2,w
  2729  023B  1683               	bsf	3,5	;RP0=1, select bank1
  2730  023C  00A7               	movwf	(sprintf@integ+2)^(0+128)
  2731  023D  27D4  120A  118A   	fcall	PL22	;call to abstracted procedure
  2732  0240  3080               	movlw	128
  2733  0241  01F3               	clrf	?___ftge+3
  2734  0242  00F4               	movwf	?___ftge+4
  2735  0243  303F               	movlw	63
  2736  0244  00F5               	movwf	?___ftge+5
  2737  0245  263F  120A  118A   	fcall	___ftge
  2738  0248  1803               	btfsc	3,0
  2739  0249  2A4F               	goto	l5935
  2740  024A  30FF               	movlw	-1
  2741  024B  07AC               	addwf	sprintf@exp^(0+128),f
  2742  024C  1C03               	skipc
  2743  024D  03AD               	decf	(sprintf@exp+1)^(0+128),f
  2744  024E  2A5F               	goto	l5939
  2745  024F                     l5935:	
  2746  024F  27D4  120A  118A   	fcall	PL22	;call to abstracted procedure
  2747  0252  3020               	movlw	32
  2748  0253  01F3               	clrf	?___ftge+3
  2749  0254  00F4               	movwf	?___ftge+4
  2750  0255  3041               	movlw	65
  2751  0256  00F5               	movwf	?___ftge+5
  2752  0257  263F  120A  118A   	fcall	___ftge
  2753  025A  1C03               	btfss	3,0
  2754  025B  2A5F               	goto	l5939
  2755  025C  0AAC               	incf	sprintf@exp^(0+128),f
  2756  025D  1903               	skipnz
  2757  025E  0AAD               	incf	(sprintf@exp+1)^(0+128),f
  2758  025F                     l5939:	
  2759  025F  0833               	movf	(sprintf@prec+1)^(0+128),w
  2760  0260  3A80               	xorlw	128
  2761  0261  00FF               	movwf	127
  2762  0262  3080               	movlw	128
  2763  0263  027F               	subwf	127,w
  2764  0264  1D03               	skipz
  2765  0265  2A68               	goto	u3155
  2766  0266  300D               	movlw	13
  2767  0267  0232               	subwf	sprintf@prec^(0+128),w
  2768  0268                     u3155:	
  2769  0268  1803               	skipnc
  2770  0269  2A93               	goto	l5943
  2771  026A  27FD               	call	PL34	;select bank 1
  2772  026B  0832               	movf	sprintf@prec^(0+128),w
  2773  026C  120A  158A  217F   	fcall	_fround
      +       120A  118A         
  2774  0271  0848               	movf	?_fround,w
  2775  0272  00BC               	movwf	?___ftadd
  2776  0273  0849               	movf	?_fround+1,w
  2777  0274  00BD               	movwf	?___ftadd+1
  2778  0275  084A               	movf	?_fround+2,w
  2779  0276  00BE               	movwf	?___ftadd+2
  2780  0277  1683               	bsf	3,5	;RP0=1, select bank1
  2781  0278  082E               	movf	sprintf@fval^(0+128),w
  2782  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2783  027A  00BF               	movwf	?___ftadd+3
  2784  027B  1683               	bsf	3,5	;RP0=1, select bank1
  2785  027C  082F               	movf	(sprintf@fval+1)^(0+128),w
  2786  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2787  027E  00C0               	movwf	?___ftadd+4
  2788  027F  1683               	bsf	3,5	;RP0=1, select bank1
  2789  0280  0830               	movf	(sprintf@fval+2)^(0+128),w
  2790  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2791  0282  00C1               	movwf	?___ftadd+5
  2792  0283  160A  118A  2679   	fcall	___ftadd
      +       120A  118A         
  2793  0288  083C               	movf	?___ftadd,w
  2794  0289  1683               	bsf	3,5	;RP0=1, select bank1
  2795  028A  00AE               	movwf	sprintf@fval^(0+128)
  2796  028B  1283               	bcf	3,5	;RP0=0, select bank0
  2797  028C  083D               	movf	?___ftadd+1,w
  2798  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2799  028E  00AF               	movwf	(sprintf@fval+1)^(0+128)
  2800  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2801  0290  083E               	movf	?___ftadd+2,w
  2802  0291  1683               	bsf	3,5	;RP0=1, select bank1
  2803  0292  00B0               	movwf	(sprintf@fval+2)^(0+128)
  2804  0293                     l5943:	
  2805  0293  27FD               	call	PL34	;select bank 1
  2806  0294  082D               	movf	(sprintf@exp+1)^(0+128),w
  2807  0295  3A80               	xorlw	128
  2808  0296  00FF               	movwf	127
  2809  0297  3080               	movlw	128
  2810  0298  027F               	subwf	127,w
  2811  0299  1D03               	skipz
  2812  029A  2A9D               	goto	u3165
  2813  029B  300A               	movlw	10
  2814  029C  022C               	subwf	sprintf@exp^(0+128),w
  2815  029D                     u3165:	
  2816  029D  1803               	skipnc
  2817  029E  2ABE               	goto	l5951
  2818  029F  27FD               	call	PL34	;select bank 1
  2819  02A0  0830               	movf	(sprintf@fval+2)^(0+128),w
  2820  02A1  042F               	iorwf	(sprintf@fval+1)^(0+128),w
  2821  02A2  042E               	iorwf	sprintf@fval^(0+128),w
  2822  02A3  1903               	skipnz
  2823  02A4  2AFF               	goto	l5967
  2824  02A5  082E               	movf	sprintf@fval^(0+128),w
  2825  02A6  2797  120A  118A   	fcall	PL13	;call to abstracted procedure
  2826  02A9  2692  120A  118A   	fcall	___fttol
  2827  02AC  0823               	movf	?___fttol+3,w
  2828  02AD  0422               	iorwf	?___fttol+2,w
  2829  02AE  0421               	iorwf	?___fttol+1,w
  2830  02AF  0420               	iorwf	?___fttol,w
  2831  02B0  1D03               	skipz
  2832  02B1  2AFF               	goto	l5967
  2833  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  2834  02B3  082D               	movf	(sprintf@exp+1)^(0+128),w
  2835  02B4  3A80               	xorlw	128
  2836  02B5  00FF               	movwf	127
  2837  02B6  3080               	movlw	128
  2838  02B7  027F               	subwf	127,w
  2839  02B8  1D03               	skipz
  2840  02B9  2ABC               	goto	u3195
  2841  02BA  3002               	movlw	2
  2842  02BB  022C               	subwf	sprintf@exp^(0+128),w
  2843  02BC                     u3195:	
  2844  02BC  1C03               	skipc
  2845  02BD  2AFF               	goto	l5967
  2846  02BE                     l5951:	
  2847  02BE  27FD               	call	PL34	;select bank 1
  2848  02BF  27D4  120A  118A   	fcall	PL22	;call to abstracted procedure
  2849  02C2  3070               	movlw	112
  2850  02C3  00F3               	movwf	?___ftge+3
  2851  02C4  3089               	movlw	137
  2852  02C5  00F4               	movwf	?___ftge+4
  2853  02C6  3040               	movlw	64
  2854  02C7  00F5               	movwf	?___ftge+5
  2855  02C8  263F  120A  118A   	fcall	___ftge
  2856  02CB  1803               	btfsc	3,0
  2857  02CC  2ACF               	goto	l5955
  2858  02CD  30F7               	movlw	-9
  2859  02CE  2AD0               	goto	L1
  2860  02CF                     l5955:	
  2861  02CF  30F8               	movlw	-8
  2862  02D0                     L1:	
  2863  02D0  07AC               	addwf	sprintf@exp^(0+128),f
  2864  02D1  1C03               	skipc
  2865  02D2  03AD               	decf	(sprintf@exp+1)^(0+128),f
  2866  02D3  082C               	movf	sprintf@exp^(0+128),w
  2867  02D4  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2868  02D9  278A               	fcall	PL11	;call to abstracted procedure
  2869  02DA  00F0               	movwf	?__tdiv_to_l_
  2870  02DB  082F               	movf	(sprintf@fval+1)^(0+128),w
  2871  02DC  00F1               	movwf	?__tdiv_to_l_+1
  2872  02DD  0830               	movf	(sprintf@fval+2)^(0+128),w
  2873  02DE  00F2               	movwf	?__tdiv_to_l_+2
  2874  02DF  0825               	movf	sprintf@integ^(0+128),w
  2875  02E0  00F3               	movwf	?__tdiv_to_l_+3
  2876  02E1  0826               	movf	(sprintf@integ+1)^(0+128),w
  2877  02E2  00F4               	movwf	?__tdiv_to_l_+4
  2878  02E3  0827               	movf	(sprintf@integ+2)^(0+128),w
  2879  02E4  00F5               	movwf	?__tdiv_to_l_+5
  2880  02E5  120A  158A  2107   	fcall	__tdiv_to_l_
      +       120A  118A         
  2881  02EA  0873               	movf	?__tdiv_to_l_+3,w
  2882  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2883  02EC  00A3               	movwf	(_sprintf$1943+3)^(0+128)
  2884  02ED  0872               	movf	?__tdiv_to_l_+2,w
  2885  02EE  00A2               	movwf	(_sprintf$1943+2)^(0+128)
  2886  02EF  0871               	movf	?__tdiv_to_l_+1,w
  2887  02F0  00A1               	movwf	(_sprintf$1943+1)^(0+128)
  2888  02F1  0870               	movf	?__tdiv_to_l_,w
  2889  02F2  00A0               	movwf	_sprintf$1943^(0+128)
  2890  02F3  0823               	movf	(_sprintf$1943+3)^(0+128),w
  2891  02F4  00B8               	movwf	(sprintf@_val+3)^(0+128)
  2892  02F5  0822               	movf	(_sprintf$1943+2)^(0+128),w
  2893  02F6  00B7               	movwf	(sprintf@_val+2)^(0+128)
  2894  02F7  0821               	movf	(_sprintf$1943+1)^(0+128),w
  2895  02F8  00B6               	movwf	(sprintf@_val+1)^(0+128)
  2896  02F9  0820               	movf	_sprintf$1943^(0+128),w
  2897  02FA  00B5               	movwf	sprintf@_val^(0+128)
  2898  02FB  01AE               	clrf	sprintf@fval^(0+128)
  2899  02FC  01AF               	clrf	(sprintf@fval+1)^(0+128)
  2900  02FD  01B0               	clrf	(sprintf@fval+2)^(0+128)
  2901  02FE  2B3A               	goto	l5971
  2902  02FF                     l5967:	
  2903  02FF  27FD               	call	PL34	;select bank 1
  2904  0300  082E               	movf	sprintf@fval^(0+128),w
  2905  0301  2797  120A  118A   	fcall	PL13	;call to abstracted procedure
  2906  0304  2692  120A  118A   	fcall	___fttol
  2907  0307  277C               	fcall	PL7	;call to abstracted procedure
  2908  0308  1683               	bsf	3,5	;RP0=1, select bank1
  2909  0309  00B5               	movwf	sprintf@_val^(0+128)
  2910  030A  0838               	movf	(sprintf@_val+3)^(0+128),w
  2911  030B  00FB               	movwf	?___lltoft+3
  2912  030C  0837               	movf	(sprintf@_val+2)^(0+128),w
  2913  030D  00FA               	movwf	?___lltoft+2
  2914  030E  0836               	movf	(sprintf@_val+1)^(0+128),w
  2915  030F  00F9               	movwf	?___lltoft+1
  2916  0310  0835               	movf	sprintf@_val^(0+128),w
  2917  0311  00F8               	movwf	?___lltoft
  2918  0312  120A  158A  24BA   	fcall	___lltoft
      +       120A  118A         
  2919  0317  0878               	movf	?___lltoft,w
  2920  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0319  00C8               	movwf	?___ftsub
  2922  031A  0879               	movf	?___lltoft+1,w
  2923  031B  00C9               	movwf	?___ftsub+1
  2924  031C  087A               	movf	?___lltoft+2,w
  2925  031D  00CA               	movwf	?___ftsub+2
  2926  031E  1683               	bsf	3,5	;RP0=1, select bank1
  2927  031F  082E               	movf	sprintf@fval^(0+128),w
  2928  0320  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0321  00CB               	movwf	?___ftsub+3
  2930  0322  1683               	bsf	3,5	;RP0=1, select bank1
  2931  0323  082F               	movf	(sprintf@fval+1)^(0+128),w
  2932  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0325  00CC               	movwf	?___ftsub+4
  2934  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2935  0327  0830               	movf	(sprintf@fval+2)^(0+128),w
  2936  0328  1283               	bcf	3,5	;RP0=0, select bank0
  2937  0329  00CD               	movwf	?___ftsub+5
  2938  032A  273D  120A  118A   	fcall	___ftsub
  2939  032D  0848               	movf	?___ftsub,w
  2940  032E  1683               	bsf	3,5	;RP0=1, select bank1
  2941  032F  00AE               	movwf	sprintf@fval^(0+128)
  2942  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2943  0331  0849               	movf	?___ftsub+1,w
  2944  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2945  0333  00AF               	movwf	(sprintf@fval+1)^(0+128)
  2946  0334  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0335  084A               	movf	?___ftsub+2,w
  2948  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2949  0337  00B0               	movwf	(sprintf@fval+2)^(0+128)
  2950  0338  01AC               	clrf	sprintf@exp^(0+128)
  2951  0339  01AD               	clrf	(sprintf@exp+1)^(0+128)
  2952  033A                     l5971:	
  2953  033A  01B4               	clrf	sprintf@c^(0+128)
  2954  033B  0AB4               	incf	sprintf@c^(0+128),f
  2955  033C                     l5977:	
  2956  033C  2755               	fcall	PL3	;call to abstracted procedure
  2957  033D  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2958  0342  00D7               	movwf	??_sprintf+1
  2959  0343  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2960  0348  00D8               	movwf	??_sprintf+2
  2961  0349  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2962  034E  00D9               	movwf	??_sprintf+3
  2963  034F  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  2964  0354  00DA               	movwf	??_sprintf+4
  2965  0355  1683               	bsf	3,5	;RP0=1, select bank1
  2966  0356  0238               	subwf	(sprintf@_val+3)^(0+128),w
  2967  0357  1D03               	skipz
  2968  0358  2B69               	goto	u3215
  2969  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2970  035A  0859               	movf	??_sprintf+3,w
  2971  035B  1683               	bsf	3,5	;RP0=1, select bank1
  2972  035C  0237               	subwf	(sprintf@_val+2)^(0+128),w
  2973  035D  1D03               	skipz
  2974  035E  2B69               	goto	u3215
  2975  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0360  0858               	movf	??_sprintf+2,w
  2977  0361  1683               	bsf	3,5	;RP0=1, select bank1
  2978  0362  0236               	subwf	(sprintf@_val+1)^(0+128),w
  2979  0363  1D03               	skipz
  2980  0364  2B69               	goto	u3215
  2981  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2982  0366  0857               	movf	??_sprintf+1,w
  2983  0367  1683               	bsf	3,5	;RP0=1, select bank1
  2984  0368  0235               	subwf	sprintf@_val^(0+128),w
  2985  0369                     u3215:	
  2986  0369  1C03               	btfss	3,0
  2987  036A  2B70               	goto	l5985
  2988  036B  0AB4               	incf	sprintf@c^(0+128),f
  2989  036C  0834               	movf	sprintf@c^(0+128),w
  2990  036D  3A0A               	xorlw	10
  2991  036E  1D03               	skipz
  2992  036F  2B3C               	goto	l5977
  2993  0370                     l5985:	
  2994  0370  0832               	movf	sprintf@prec^(0+128),w
  2995  0371  0734               	addwf	sprintf@c^(0+128),w
  2996  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2997  0373  00D6               	movwf	??_sprintf
  2998  0374  1683               	bsf	3,5	;RP0=1, select bank1
  2999  0375  0833               	movf	(sprintf@prec+1)^(0+128),w
  3000  0376  1803               	skipnc
  3001  0377  0A33               	incf	(sprintf@prec+1)^(0+128),w
  3002  0378  1BB4               	btfsc	sprintf@c^(0+128),7
  3003  0379  3EFF               	addlw	255
  3004  037A  1283               	bcf	3,5	;RP0=0, select bank0
  3005  037B  00D7               	movwf	??_sprintf+1
  3006  037C  1683               	bsf	3,5	;RP0=1, select bank1
  3007  037D  082C               	movf	sprintf@exp^(0+128),w
  3008  037E  1283               	bcf	3,5	;RP0=0, select bank0
  3009  037F  0756               	addwf	??_sprintf,w
  3010  0380  00D8               	movwf	??_sprintf+2
  3011  0381  1683               	bsf	3,5	;RP0=1, select bank1
  3012  0382  082D               	movf	(sprintf@exp+1)^(0+128),w
  3013  0383  1803               	skipnc
  3014  0384  0A2D               	incf	(sprintf@exp+1)^(0+128),w
  3015  0385  1283               	bcf	3,5	;RP0=0, select bank0
  3016  0386  0757               	addwf	??_sprintf+1,w
  3017  0387  00D9               	movwf	??_sprintf+3
  3018  0388  0858               	movf	??_sprintf+2,w
  3019  0389  1683               	bsf	3,5	;RP0=1, select bank1
  3020  038A  02AA               	subwf	sprintf@width^(0+128),f
  3021  038B  1283               	bcf	3,5	;RP0=0, select bank0
  3022  038C  0859               	movf	??_sprintf+3,w
  3023  038D  1683               	bsf	3,5	;RP0=1, select bank1
  3024  038E  1C03               	skipc
  3025  038F  03AB               	decf	(sprintf@width+1)^(0+128),f
  3026  0390  02AB               	subwf	(sprintf@width+1)^(0+128),f
  3027  0391  0833               	movf	(sprintf@prec+1)^(0+128),w
  3028  0392  0432               	iorwf	sprintf@prec^(0+128),w
  3029  0393  1903               	skipnz
  3030  0394  2B99               	goto	l5991
  3031  0395  30FF               	movlw	-1
  3032  0396  07AA               	addwf	sprintf@width^(0+128),f
  3033  0397  1C03               	skipc
  3034  0398  03AB               	decf	(sprintf@width+1)^(0+128),f
  3035  0399                     l5991:	
  3036  0399  0828               	movf	sprintf@flag^(0+128),w
  3037  039A  3903               	andlw	3
  3038  039B  1D03               	btfss	3,2
  3039  039C  2BAD               	goto	l5993
  3040  039D                     l6001:	
  3041  039D  082B               	movf	(sprintf@width+1)^(0+128),w
  3042  039E  3A80               	xorlw	128
  3043  039F  00FF               	movwf	127
  3044  03A0  3080               	movlw	128
  3045  03A1  027F               	subwf	127,w
  3046  03A2  1D03               	skipz
  3047  03A3  2BA6               	goto	u3255
  3048  03A4  3001               	movlw	1
  3049  03A5  022A               	subwf	sprintf@width^(0+128),w
  3050  03A6                     u3255:	
  3051  03A6  1C03               	btfss	3,0
  3052  03A7  2BB2               	goto	l6003
  3053  03A8  27FD               	call	PL34	;select bank 1
  3054  03A9  0831               	movf	sprintf@sp^(0+128),w
  3055  03AA  27F7  120A  118A   	fcall	PL33	;call to abstracted procedure
  3056  03AD                     l5993:	
  3057  03AD  30FF               	movlw	-1
  3058  03AE  07AA               	addwf	sprintf@width^(0+128),f
  3059  03AF  1C03               	skipc
  3060  03B0  03AB               	decf	(sprintf@width+1)^(0+128),f
  3061  03B1  2B9D               	goto	l6001
  3062  03B2                     l6003:	
  3063  03B2  27FD               	call	PL34	;select bank 1
  3064  03B3  0828               	movf	sprintf@flag^(0+128),w
  3065  03B4  3903               	andlw	3
  3066  03B5  1903               	btfsc	3,2
  3067  03B6  2BE9               	goto	l6013
  3068  03B7  0831               	movf	sprintf@sp^(0+128),w
  3069  03B8  0084               	movwf	4
  3070  03B9  302D               	movlw	45
  3071  03BA  2BE5               	goto	L4
  3072  03BB                     l6009:	
  3073  03BB  275F  120A  118A   	fcall	PL4	;call to abstracted procedure
  3074  03BE  2755               	fcall	PL3	;call to abstracted procedure
  3075  03BF  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3076  03C4  00F0               	movwf	?___lldiv
  3077  03C5  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3078  03CA  00F1               	movwf	?___lldiv+1
  3079  03CB  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3080  03D0  00F2               	movwf	?___lldiv+2
  3081  03D1  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3082  03D6  2767  120A  118A   	fcall	PL5	;call to abstracted procedure
  3083  03D9  26ED  120A  118A   	fcall	___lldiv
  3084  03DC  2772  120A  118A   	fcall	PL6	;call to abstracted procedure
  3085  03DF  2601  120A  118A   	fcall	___llmod
  3086  03E2  27C2  120A  118A   	fcall	PL20	;call to abstracted procedure
  3087  03E5                     L4:	
  3088  03E5  1383               	bcf	3,7	;select IRP bank0
  3089  03E6  0080               	movwf	0
  3090  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  3091  03E8  0AB1               	incf	sprintf@sp^(0+128),f
  3092  03E9                     l6013:	
  3093  03E9  03B4               	decf	sprintf@c^(0+128),f
  3094  03EA  0F34               	incfsz	sprintf@c^(0+128),w
  3095  03EB  2BBB               	goto	l6009
  3096  03EC                     l6021:	
  3097  03EC  082D               	movf	(sprintf@exp+1)^(0+128),w
  3098  03ED  3A80               	xorlw	128
  3099  03EE  00FF               	movwf	127
  3100  03EF  3080               	movlw	128
  3101  03F0  027F               	subwf	127,w
  3102  03F1  1D03               	skipz
  3103  03F2  2BF5               	goto	u3285
  3104  03F3  3001               	movlw	1
  3105  03F4  022C               	subwf	sprintf@exp^(0+128),w
  3106  03F5                     u3285:	
  3107  03F5  1C03               	btfss	3,0
  3108  03F6  2C00               	goto	l6023
  3109  03F7  27FD               	call	PL34	;select bank 1
  3110  03F8  0831               	movf	sprintf@sp^(0+128),w
  3111  03F9  27E9  120A  118A   	fcall	PL31	;call to abstracted procedure
  3112  03FC  07AC               	addwf	sprintf@exp^(0+128),f
  3113  03FD  1C03               	skipc
  3114  03FE  03AD               	decf	(sprintf@exp+1)^(0+128),f
  3115  03FF  2BEC               	goto	l6021
  3116  0400                     l6023:	
  3117  0400  27FD               	call	PL34	;select bank 1
  3118  0401  0833               	movf	(sprintf@prec+1)^(0+128),w
  3119  0402  3A80               	xorlw	128
  3120  0403  00FF               	movwf	127
  3121  0404  3080               	movlw	128
  3122  0405  027F               	subwf	127,w
  3123  0406  1D03               	skipz
  3124  0407  2C0A               	goto	u3295
  3125  0408  3009               	movlw	9
  3126  0409  0232               	subwf	sprintf@prec^(0+128),w
  3127  040A                     u3295:	
  3128  040A  1C03               	skipc
  3129  040B  2C0F               	goto	l6027
  3130  040C  3008               	movlw	8
  3131  040D  27FD               	call	PL34	;select bank 1
  3132  040E  2C11               	goto	L2
  3133  040F                     l6027:	
  3134  040F  27FD               	call	PL34	;select bank 1
  3135  0410  0832               	movf	sprintf@prec^(0+128),w
  3136  0411                     L2:	
  3137  0411  00B4               	movwf	sprintf@c^(0+128)
  3138  0412  1283               	bcf	3,5	;RP0=0, select bank0
  3139  0413  00D6               	movwf	??_sprintf
  3140  0414  01D7               	clrf	??_sprintf+1
  3141  0415  1BD6               	btfsc	??_sprintf,7
  3142  0416  03D7               	decf	??_sprintf+1,f
  3143  0417  1683               	bsf	3,5	;RP0=1, select bank1
  3144  0418  02B2               	subwf	sprintf@prec^(0+128),f
  3145  0419  1283               	bcf	3,5	;RP0=0, select bank0
  3146  041A  0857               	movf	??_sprintf+1,w
  3147  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3148  041C  1C03               	skipc
  3149  041D  03B3               	decf	(sprintf@prec+1)^(0+128),f
  3150  041E  02B3               	subwf	(sprintf@prec+1)^(0+128),f
  3151  041F  0834               	movf	sprintf@c^(0+128),w
  3152  0420  1903               	btfsc	3,2
  3153  0421  2C28               	goto	l6033
  3154  0422  0831               	movf	sprintf@sp^(0+128),w
  3155  0423  0084               	movwf	4
  3156  0424  302E               	movlw	46
  3157  0425  1383               	bcf	3,7	;select IRP bank0
  3158  0426  0080               	movwf	0
  3159  0427  0AB1               	incf	sprintf@sp^(0+128),f
  3160  0428                     l6033:	
  3161  0428  0834               	movf	sprintf@c^(0+128),w
  3162  0429  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  3163  042E  083C               	movf	?_scale,w
  3164  042F  00B0               	movwf	?___ftmul+3
  3165  0430  083D               	movf	?_scale+1,w
  3166  0431  00B1               	movwf	?___ftmul+4
  3167  0432  083E               	movf	?_scale+2,w
  3168  0433  00B2               	movwf	?___ftmul+5
  3169  0434  1683               	bsf	3,5	;RP0=1, select bank1
  3170  0435  082E               	movf	sprintf@fval^(0+128),w
  3171  0436  27A2               	fcall	PL14	;call to abstracted procedure
  3172  0437  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  3173  043C  082D               	movf	?___ftmul,w
  3174  043D  00A0               	movwf	?___fttol
  3175  043E  082E               	movf	?___ftmul+1,w
  3176  043F  00A1               	movwf	?___fttol+1
  3177  0440  082F               	movf	?___ftmul+2,w
  3178  0441  00A2               	movwf	?___fttol+2
  3179  0442  2692  120A  118A   	fcall	___fttol
  3180  0445  277C  120A  118A   	fcall	PL7	;call to abstracted procedure
  3181  0448  2CB0               	goto	L3
  3182  0449                     l6035:	
  3183  0449  275F  120A  118A   	fcall	PL4	;call to abstracted procedure
  3184  044C  2755               	fcall	PL3	;call to abstracted procedure
  3185  044D  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3186  0452  00F0               	movwf	?___lldiv
  3187  0453  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3188  0458  00F1               	movwf	?___lldiv+1
  3189  0459  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3190  045E  00F2               	movwf	?___lldiv+2
  3191  045F  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3192  0464  2767  120A  118A   	fcall	PL5	;call to abstracted procedure
  3193  0467  26ED  120A  118A   	fcall	___lldiv
  3194  046A  2772  120A  118A   	fcall	PL6	;call to abstracted procedure
  3195  046D  2601  120A  118A   	fcall	___llmod
  3196  0470  27C2  120A  118A   	fcall	PL20	;call to abstracted procedure
  3197  0473  1383               	bcf	3,7	;select IRP bank0
  3198  0474  0080               	movwf	0
  3199  0475  1683               	bsf	3,5	;RP0=1, select bank1
  3200  0476  0AB1               	incf	sprintf@sp^(0+128),f
  3201  0477  2755               	fcall	PL3	;call to abstracted procedure
  3202  0478  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3203  047D  00A0               	movwf	?___llmod
  3204  047E  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3205  0483  00A1               	movwf	?___llmod+1
  3206  0484  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3207  0489  00A2               	movwf	?___llmod+2
  3208  048A  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3209  048F  00A3               	movwf	?___llmod+3
  3210  0490  1683               	bsf	3,5	;RP0=1, select bank1
  3211  0491  0838               	movf	(sprintf@_val+3)^(0+128),w
  3212  0492  1283               	bcf	3,5	;RP0=0, select bank0
  3213  0493  00A7               	movwf	?___llmod+7
  3214  0494  1683               	bsf	3,5	;RP0=1, select bank1
  3215  0495  0837               	movf	(sprintf@_val+2)^(0+128),w
  3216  0496  1283               	bcf	3,5	;RP0=0, select bank0
  3217  0497  00A6               	movwf	?___llmod+6
  3218  0498  1683               	bsf	3,5	;RP0=1, select bank1
  3219  0499  0836               	movf	(sprintf@_val+1)^(0+128),w
  3220  049A  1283               	bcf	3,5	;RP0=0, select bank0
  3221  049B  00A5               	movwf	?___llmod+5
  3222  049C  1683               	bsf	3,5	;RP0=1, select bank1
  3223  049D  0835               	movf	sprintf@_val^(0+128),w
  3224  049E  1283               	bcf	3,5	;RP0=0, select bank0
  3225  049F  00A4               	movwf	?___llmod+4
  3226  04A0  2601  120A  118A   	fcall	___llmod
  3227  04A3  0823               	movf	?___llmod+3,w
  3228  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  3229  04A5  00B8               	movwf	(sprintf@_val+3)^(0+128)
  3230  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  3231  04A7  0822               	movf	?___llmod+2,w
  3232  04A8  1683               	bsf	3,5	;RP0=1, select bank1
  3233  04A9  00B7               	movwf	(sprintf@_val+2)^(0+128)
  3234  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  3235  04AB  0821               	movf	?___llmod+1,w
  3236  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  3237  04AD  00B6               	movwf	(sprintf@_val+1)^(0+128)
  3238  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3239  04AF  0820               	movf	?___llmod,w
  3240  04B0                     L3:	
  3241  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  3242  04B1  00B5               	movwf	sprintf@_val^(0+128)
  3243  04B2  03B4               	decf	sprintf@c^(0+128),f
  3244  04B3  0F34               	incfsz	sprintf@c^(0+128),w
  3245  04B4  2C49               	goto	l6035
  3246  04B5                     l6049:	
  3247  04B5  0833               	movf	(sprintf@prec+1)^(0+128),w
  3248  04B6  0432               	iorwf	sprintf@prec^(0+128),w
  3249  04B7  1903               	btfsc	3,2
  3250  04B8  2865               	goto	l6131
  3251  04B9  0831               	movf	sprintf@sp^(0+128),w
  3252  04BA  27E9  120A  118A   	fcall	PL31	;call to abstracted procedure
  3253  04BD  07B2               	addwf	sprintf@prec^(0+128),f
  3254  04BE  1C03               	skipc
  3255  04BF  03B3               	decf	(sprintf@prec+1)^(0+128),f
  3256  04C0  2CB5               	goto	l6049
  3257  04C1                     l6051:	
  3258  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  3259  04C2  0824               	movf	sprintf@ap^(0+128),w
  3260  04C3  0084               	movwf	4
  3261  04C4  1383               	bcf	3,7	;select IRP bank0
  3262  04C5  27F0  120A  118A   	fcall	PL32	;call to abstracted procedure
  3263  04C8  0856               	movf	??_sprintf,w
  3264  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  3265  04CA  00B5               	movwf	sprintf@_val^(0+128)
  3266  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  3267  04CC  0857               	movf	??_sprintf+1,w
  3268  04CD  1683               	bsf	3,5	;RP0=1, select bank1
  3269  04CE  00B6               	movwf	(sprintf@_val+1)^(0+128)
  3270  04CF  3000               	movlw	0
  3271  04D0  1BB6               	btfsc	(sprintf@_val+1)^(0+128),7
  3272  04D1  30FF               	movlw	255
  3273  04D2  00B7               	movwf	(sprintf@_val+2)^(0+128)
  3274  04D3  00B8               	movwf	(sprintf@_val+3)^(0+128)
  3275  04D4  0AA4               	incf	sprintf@ap^(0+128),f
  3276  04D5  0AA4               	incf	sprintf@ap^(0+128),f
  3277  04D6  1FB8               	btfss	(sprintf@_val+3)^(0+128),7
  3278  04D7  2CE5               	goto	l6061
  3279  04D8  3003               	movlw	3
  3280  04D9  04A8               	iorwf	sprintf@flag^(0+128),f
  3281  04DA  09B5               	comf	sprintf@_val^(0+128),f
  3282  04DB  09B6               	comf	(sprintf@_val+1)^(0+128),f
  3283  04DC  09B7               	comf	(sprintf@_val+2)^(0+128),f
  3284  04DD  09B8               	comf	(sprintf@_val+3)^(0+128),f
  3285  04DE  0AB5               	incf	sprintf@_val^(0+128),f
  3286  04DF  1903               	skipnz
  3287  04E0  0AB6               	incf	(sprintf@_val+1)^(0+128),f
  3288  04E1  1903               	skipnz
  3289  04E2  0AB7               	incf	(sprintf@_val+2)^(0+128),f
  3290  04E3  1903               	skipnz
  3291  04E4  0AB8               	incf	(sprintf@_val+3)^(0+128),f
  3292  04E5                     l6061:	
  3293  04E5  0833               	movf	(sprintf@prec+1)^(0+128),w
  3294  04E6  0432               	iorwf	sprintf@prec^(0+128),w
  3295  04E7  1D03               	skipz
  3296  04E8  2CF1               	goto	l6067
  3297  04E9  0838               	movf	(sprintf@_val+3)^(0+128),w
  3298  04EA  0437               	iorwf	(sprintf@_val+2)^(0+128),w
  3299  04EB  0436               	iorwf	(sprintf@_val+1)^(0+128),w
  3300  04EC  0435               	iorwf	sprintf@_val^(0+128),w
  3301  04ED  1903               	btfsc	3,2
  3302  04EE  0AB2               	incf	sprintf@prec^(0+128),f
  3303  04EF  1903               	skipnz
  3304  04F0  0AB3               	incf	(sprintf@prec+1)^(0+128),f
  3305  04F1                     l6067:	
  3306  04F1  01B4               	clrf	sprintf@c^(0+128)
  3307  04F2  0AB4               	incf	sprintf@c^(0+128),f
  3308  04F3                     l6073:	
  3309  04F3  2755               	fcall	PL3	;call to abstracted procedure
  3310  04F4  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3311  04F9  00D7               	movwf	??_sprintf+1
  3312  04FA  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3313  04FF  00D8               	movwf	??_sprintf+2
  3314  0500  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3315  0505  00D9               	movwf	??_sprintf+3
  3316  0506  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3317  050B  00DA               	movwf	??_sprintf+4
  3318  050C  1683               	bsf	3,5	;RP0=1, select bank1
  3319  050D  0238               	subwf	(sprintf@_val+3)^(0+128),w
  3320  050E  1D03               	skipz
  3321  050F  2D20               	goto	u3365
  3322  0510  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0511  0859               	movf	??_sprintf+3,w
  3324  0512  1683               	bsf	3,5	;RP0=1, select bank1
  3325  0513  0237               	subwf	(sprintf@_val+2)^(0+128),w
  3326  0514  1D03               	skipz
  3327  0515  2D20               	goto	u3365
  3328  0516  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0517  0858               	movf	??_sprintf+2,w
  3330  0518  1683               	bsf	3,5	;RP0=1, select bank1
  3331  0519  0236               	subwf	(sprintf@_val+1)^(0+128),w
  3332  051A  1D03               	skipz
  3333  051B  2D20               	goto	u3365
  3334  051C  1283               	bcf	3,5	;RP0=0, select bank0
  3335  051D  0857               	movf	??_sprintf+1,w
  3336  051E  1683               	bsf	3,5	;RP0=1, select bank1
  3337  051F  0235               	subwf	sprintf@_val^(0+128),w
  3338  0520                     u3365:	
  3339  0520  1C03               	btfss	3,0
  3340  0521  2D27               	goto	l6081
  3341  0522  0AB4               	incf	sprintf@c^(0+128),f
  3342  0523  0834               	movf	sprintf@c^(0+128),w
  3343  0524  3A0A               	xorlw	10
  3344  0525  1D03               	skipz
  3345  0526  2CF3               	goto	l6073
  3346  0527                     l6081:	
  3347  0527  0834               	movf	sprintf@c^(0+128),w
  3348  0528  27B8  120A  118A   	fcall	PL19	;call to abstracted procedure
  3349  052B  0833               	movf	(sprintf@prec+1)^(0+128),w
  3350  052C  3A80               	xorlw	128
  3351  052D  1283               	bcf	3,5	;RP0=0, select bank0
  3352  052E  0258               	subwf	??_sprintf+2,w
  3353  052F  1D03               	skipz
  3354  0530  2D35               	goto	u3385
  3355  0531  1683               	bsf	3,5	;RP0=1, select bank1
  3356  0532  0832               	movf	sprintf@prec^(0+128),w
  3357  0533  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0534  0256               	subwf	??_sprintf,w
  3359  0535                     u3385:	
  3360  0535  1803               	skipnc
  3361  0536  2D3B               	goto	l6085
  3362  0537  27FD               	call	PL34	;select bank 1
  3363  0538  0832               	movf	sprintf@prec^(0+128),w
  3364  0539  00B4               	movwf	sprintf@c^(0+128)
  3365  053A  2D53               	goto	l6089
  3366  053B                     l6085:	
  3367  053B  1683               	bsf	3,5	;RP0=1, select bank1
  3368  053C  27CB  120A  118A   	fcall	PL21	;call to abstracted procedure
  3369  053F  0833               	movf	(sprintf@prec+1)^(0+128),w
  3370  0540  3A80               	xorlw	128
  3371  0541  1283               	bcf	3,5	;RP0=0, select bank0
  3372  0542  00D8               	movwf	??_sprintf+2
  3373  0543  0857               	movf	??_sprintf+1,w
  3374  0544  3A80               	xorlw	128
  3375  0545  0258               	subwf	??_sprintf+2,w
  3376  0546  1D03               	skipz
  3377  0547  2D4B               	goto	u3395
  3378  0548  0856               	movf	??_sprintf,w
  3379  0549  1683               	bsf	3,5	;RP0=1, select bank1
  3380  054A  0232               	subwf	sprintf@prec^(0+128),w
  3381  054B                     u3395:	
  3382  054B  1803               	skipnc
  3383  054C  2D53               	goto	l6089
  3384  054D  27FD               	call	PL34	;select bank 1
  3385  054E  0834               	movf	sprintf@c^(0+128),w
  3386  054F  00B2               	movwf	sprintf@prec^(0+128)
  3387  0550  01B3               	clrf	(sprintf@prec+1)^(0+128)
  3388  0551  1BB2               	btfsc	sprintf@prec^(0+128),7
  3389  0552  03B3               	decf	(sprintf@prec+1)^(0+128),f
  3390  0553                     l6089:	
  3391  0553  27FD               	call	PL34	;select bank 1
  3392  0554  082B               	movf	(sprintf@width+1)^(0+128),w
  3393  0555  042A               	iorwf	sprintf@width^(0+128),w
  3394  0556  1903               	skipnz
  3395  0557  2D60               	goto	l6095
  3396  0558  0828               	movf	sprintf@flag^(0+128),w
  3397  0559  3903               	andlw	3
  3398  055A  1903               	btfsc	3,2
  3399  055B  2D60               	goto	l6095
  3400  055C  30FF               	movlw	-1
  3401  055D  07AA               	addwf	sprintf@width^(0+128),f
  3402  055E  1C03               	skipc
  3403  055F  03AB               	decf	(sprintf@width+1)^(0+128),f
  3404  0560                     l6095:	
  3405  0560  1F29               	btfss	(sprintf@flag+1)^(0+128),6
  3406  0561  2D7D               	goto	l6103
  3407  0562  0833               	movf	(sprintf@prec+1)^(0+128),w
  3408  0563  3A80               	xorlw	128
  3409  0564  1283               	bcf	3,5	;RP0=0, select bank0
  3410  0565  00D6               	movwf	??_sprintf
  3411  0566  1683               	bsf	3,5	;RP0=1, select bank1
  3412  0567  082B               	movf	(sprintf@width+1)^(0+128),w
  3413  0568  3A80               	xorlw	128
  3414  0569  1283               	bcf	3,5	;RP0=0, select bank0
  3415  056A  0256               	subwf	??_sprintf,w
  3416  056B  1D03               	skipz
  3417  056C  2D70               	goto	u3435
  3418  056D  1683               	bsf	3,5	;RP0=1, select bank1
  3419  056E  082A               	movf	sprintf@width^(0+128),w
  3420  056F  0232               	subwf	sprintf@prec^(0+128),w
  3421  0570                     u3435:	
  3422  0570  1803               	skipnc
  3423  0571  2D7A               	goto	l6101
  3424  0572  27FD               	call	PL34	;select bank 1
  3425  0573  0832               	movf	sprintf@prec^(0+128),w
  3426  0574  02AA               	subwf	sprintf@width^(0+128),f
  3427  0575  0833               	movf	(sprintf@prec+1)^(0+128),w
  3428  0576  1C03               	skipc
  3429  0577  03AB               	decf	(sprintf@width+1)^(0+128),f
  3430  0578  02AB               	subwf	(sprintf@width+1)^(0+128),f
  3431  0579  2D7D               	goto	l6103
  3432  057A                     l6101:	
  3433  057A  27FD               	call	PL34	;select bank 1
  3434  057B  01AA               	clrf	sprintf@width^(0+128)
  3435  057C  01AB               	clrf	(sprintf@width+1)^(0+128)
  3436  057D                     l6103:	
  3437  057D  0834               	movf	sprintf@c^(0+128),w
  3438  057E  27B8  120A  118A   	fcall	PL19	;call to abstracted procedure
  3439  0581  082B               	movf	(sprintf@width+1)^(0+128),w
  3440  0582  3A80               	xorlw	128
  3441  0583  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0584  0258               	subwf	??_sprintf+2,w
  3443  0585  1D03               	skipz
  3444  0586  2D8B               	goto	u3445
  3445  0587  1683               	bsf	3,5	;RP0=1, select bank1
  3446  0588  082A               	movf	sprintf@width^(0+128),w
  3447  0589  1283               	bcf	3,5	;RP0=0, select bank0
  3448  058A  0256               	subwf	??_sprintf,w
  3449  058B                     u3445:	
  3450  058B  1803               	skipnc
  3451  058C  2D99               	goto	l6107
  3452  058D  1683               	bsf	3,5	;RP0=1, select bank1
  3453  058E  27CB  120A  118A   	fcall	PL21	;call to abstracted procedure
  3454  0591  02AA               	subwf	sprintf@width^(0+128),f
  3455  0592  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0593  0857               	movf	??_sprintf+1,w
  3457  0594  1683               	bsf	3,5	;RP0=1, select bank1
  3458  0595  1C03               	skipc
  3459  0596  03AB               	decf	(sprintf@width+1)^(0+128),f
  3460  0597  02AB               	subwf	(sprintf@width+1)^(0+128),f
  3461  0598  2D9C               	goto	l6109
  3462  0599                     l6107:	
  3463  0599  27FD               	call	PL34	;select bank 1
  3464  059A  01AA               	clrf	sprintf@width^(0+128)
  3465  059B  01AB               	clrf	(sprintf@width+1)^(0+128)
  3466  059C                     l6109:	
  3467  059C  082B               	movf	(sprintf@width+1)^(0+128),w
  3468  059D  042A               	iorwf	sprintf@width^(0+128),w
  3469  059E  1903               	skipnz
  3470  059F  2DAE               	goto	l6117
  3471  05A0                     l6111:	
  3472  05A0  0831               	movf	sprintf@sp^(0+128),w
  3473  05A1  0084               	movwf	4
  3474  05A2  3020               	movlw	32
  3475  05A3  1383               	bcf	3,7	;select IRP bank0
  3476  05A4  0080               	movwf	0
  3477  05A5  30FF               	movlw	-1
  3478  05A6  0AB1               	incf	sprintf@sp^(0+128),f
  3479  05A7  07AA               	addwf	sprintf@width^(0+128),f
  3480  05A8  1C03               	skipc
  3481  05A9  03AB               	decf	(sprintf@width+1)^(0+128),f
  3482  05AA  082B               	movf	(sprintf@width+1)^(0+128),w
  3483  05AB  042A               	iorwf	sprintf@width^(0+128),w
  3484  05AC  1D03               	skipz
  3485  05AD  2DA0               	goto	l6111
  3486  05AE                     l6117:	
  3487  05AE  0828               	movf	sprintf@flag^(0+128),w
  3488  05AF  3903               	andlw	3
  3489  05B0  1903               	btfsc	3,2
  3490  05B1  2DB8               	goto	l6129
  3491  05B2  0831               	movf	sprintf@sp^(0+128),w
  3492  05B3  0084               	movwf	4
  3493  05B4  302D               	movlw	45
  3494  05B5                     L5:	
  3495  05B5  1383               	bcf	3,7	;select IRP bank0
  3496  05B6  0080               	movwf	0
  3497  05B7  0AB1               	incf	sprintf@sp^(0+128),f
  3498  05B8                     l6129:	
  3499  05B8  30FF               	movlw	-1
  3500  05B9  07B2               	addwf	sprintf@prec^(0+128),f
  3501  05BA  1C03               	skipc
  3502  05BB  03B3               	decf	(sprintf@prec+1)^(0+128),f
  3503  05BC  0A32               	incf	sprintf@prec^(0+128),w
  3504  05BD  1903               	skipnz
  3505  05BE  0A33               	incf	(sprintf@prec+1)^(0+128),w
  3506  05BF  1903               	btfsc	3,2
  3507  05C0  2865               	goto	l6131
  3508  05C1  300A               	movlw	10
  3509  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  3510  05C3  00A0               	movwf	?___llmod
  3511  05C4  01A1               	clrf	?___llmod+1
  3512  05C5  01A2               	clrf	?___llmod+2
  3513  05C6  01A3               	clrf	?___llmod+3
  3514  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  3515  05C8  0832               	movf	sprintf@prec^(0+128),w
  3516  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  3517  05CA  00D6               	movwf	??_sprintf
  3518  05CB  1003               	clrc
  3519  05CC  0DD6               	rlf	??_sprintf,f
  3520  05CD  1003               	clrc
  3521  05CE  0D56               	rlf	??_sprintf,w
  3522  05CF  3E4F               	addlw	low (_dpowers-__stringbase)
  3523  05D0  0084               	movwf	4
  3524  05D1  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3525  05D6  00F0               	movwf	?___lldiv
  3526  05D7  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3527  05DC  00F1               	movwf	?___lldiv+1
  3528  05DD  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3529  05E2  00F2               	movwf	?___lldiv+2
  3530  05E3  120A  158A  200A   	fcall	stringdir
      +       120A  118A         
  3531  05E8  2767  120A  118A   	fcall	PL5	;call to abstracted procedure
  3532  05EB  26ED  120A  118A   	fcall	___lldiv
  3533  05EE  2772  120A  118A   	fcall	PL6	;call to abstracted procedure
  3534  05F1  2601  120A  118A   	fcall	___llmod
  3535  05F4  0820               	movf	?___llmod,w
  3536  05F5  3E30               	addlw	48
  3537  05F6  1683               	bsf	3,5	;RP0=1, select bank1
  3538  05F7  00B4               	movwf	sprintf@c^(0+128)
  3539  05F8  0831               	movf	sprintf@sp^(0+128),w
  3540  05F9  0084               	movwf	4
  3541  05FA  0834               	movf	sprintf@c^(0+128),w
  3542  05FB  2DB5               	goto	L5
  3543  05FC                     l6133:	
  3544  05FC  0831               	movf	sprintf@sp^(0+128),w
  3545  05FD  0084               	movwf	4
  3546  05FE  1383               	bcf	3,7	;select IRP bank0
  3547  05FF  0180               	clrf	0
  3548  0600  0008               	return
  3549  0601                     __end_of_sprintf:	
  3550  0601                     __ptext738:	
  3551 ;; =============== function ___ftneg ends ============
  3552                           
  3553                           
  3554 ;; *************** function ___llmod *****************
  3555 ;; Defined at:
  3556 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  divisor         4    0[BANK0 ] unsigned long 
  3559 ;;  dividend        4    4[BANK0 ] unsigned long 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  counter         1   13[COMMON] unsigned char 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  4    0[BANK0 ] unsigned long 
  3564 ;; Registers used:
  3565 ;;		wreg, status,2, status,0
  3566 ;; Tracked objects:
  3567 ;;		On entry : 60/0
  3568 ;;		On exit  : 60/0
  3569 ;;		Unchanged: FFF9F/0
  3570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3571 ;;      Params:         0       8       0       0       0
  3572 ;;      Locals:         1       0       0       0       0
  3573 ;;      Temps:          0       0       0       0       0
  3574 ;;      Totals:         1       8       0       0       0
  3575 ;;Total ram usage:        9 bytes
  3576 ;; Hardware stack levels used:    1
  3577 ;; This function calls:
  3578 ;;		Nothing
  3579 ;; This function is called by:
  3580 ;;		_sprintf
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583  0601                     ___llmod:	
  3584                           
  3585                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3586  0601  0823               	movf	___llmod@divisor+3,w
  3587  0602  0422               	iorwf	___llmod@divisor+2,w
  3588  0603  0421               	iorwf	___llmod@divisor+1,w
  3589  0604  0420               	iorwf	___llmod@divisor,w
  3590  0605  1903               	skipnz
  3591  0606  2E36               	goto	l5431
  3592  0607  01FD               	clrf	___llmod@counter
  3593  0608                     L12:	
  3594  0608  0AFD               	incf	___llmod@counter,f
  3595  0609  1BA3               	btfsc	___llmod@divisor+3,7
  3596  060A  2E11               	goto	l5423
  3597  060B  1003               	clrc
  3598  060C  0DA0               	rlf	___llmod@divisor,f
  3599  060D  0DA1               	rlf	___llmod@divisor+1,f
  3600  060E  0DA2               	rlf	___llmod@divisor+2,f
  3601  060F  0DA3               	rlf	___llmod@divisor+3,f
  3602  0610  2E08               	goto	L12
  3603  0611                     l5423:	
  3604  0611  0823               	movf	___llmod@divisor+3,w
  3605  0612  0227               	subwf	___llmod@dividend+3,w
  3606  0613  1D03               	skipz
  3607  0614  2E1F               	goto	u2405
  3608  0615  0822               	movf	___llmod@divisor+2,w
  3609  0616  0226               	subwf	___llmod@dividend+2,w
  3610  0617  1D03               	skipz
  3611  0618  2E1F               	goto	u2405
  3612  0619  0821               	movf	___llmod@divisor+1,w
  3613  061A  0225               	subwf	___llmod@dividend+1,w
  3614  061B  1D03               	skipz
  3615  061C  2E1F               	goto	u2405
  3616  061D  0820               	movf	___llmod@divisor,w
  3617  061E  0224               	subwf	___llmod@dividend,w
  3618  061F                     u2405:	
  3619  061F  1C03               	skipc
  3620  0620  2E30               	goto	L13
  3621  0621  0820               	movf	___llmod@divisor,w
  3622  0622  02A4               	subwf	___llmod@dividend,f
  3623  0623  0821               	movf	___llmod@divisor+1,w
  3624  0624  1C03               	skipc
  3625  0625  0F21               	incfsz	___llmod@divisor+1,w
  3626  0626  02A5               	subwf	___llmod@dividend+1,f
  3627  0627  0822               	movf	___llmod@divisor+2,w
  3628  0628  1C03               	skipc
  3629  0629  0F22               	incfsz	___llmod@divisor+2,w
  3630  062A  02A6               	subwf	___llmod@dividend+2,f
  3631  062B  0823               	movf	___llmod@divisor+3,w
  3632  062C  1C03               	skipc
  3633  062D  0F23               	incfsz	___llmod@divisor+3,w
  3634  062E  02A7               	subwf	___llmod@dividend+3,f
  3635  062F  1003               	clrc
  3636  0630                     L13:	
  3637  0630  0CA3               	rrf	___llmod@divisor+3,f
  3638  0631  0CA2               	rrf	___llmod@divisor+2,f
  3639  0632  0CA1               	rrf	___llmod@divisor+1,f
  3640  0633  0CA0               	rrf	___llmod@divisor,f
  3641  0634  0BFD               	decfsz	___llmod@counter,f
  3642  0635  2E11               	goto	l5423
  3643  0636                     l5431:	
  3644  0636  0827               	movf	___llmod@dividend+3,w
  3645  0637  00A3               	movwf	?___llmod+3
  3646  0638  0826               	movf	___llmod@dividend+2,w
  3647  0639  00A2               	movwf	?___llmod+2
  3648  063A  0825               	movf	___llmod@dividend+1,w
  3649  063B  00A1               	movwf	?___llmod+1
  3650  063C  0824               	movf	___llmod@dividend,w
  3651  063D  00A0               	movwf	?___llmod
  3652  063E  0008               	return
  3653  063F                     __end_of___llmod:	
  3654  063F                     __ptext736:	
  3655 ;; =============== function ___lldiv ends ============
  3656                           
  3657                           
  3658 ;; *************** function ___ftge *****************
  3659 ;; Defined at:
  3660 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftge.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  ff1             3    0[COMMON] float 
  3663 ;;  ff2             3    3[COMMON] float 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;		None               void
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0
  3670 ;; Tracked objects:
  3671 ;;		On entry : 60/20
  3672 ;;		On exit  : 60/20
  3673 ;;		Unchanged: FFF9F/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3675 ;;      Params:         6       0       0       0       0
  3676 ;;      Locals:         0       0       0       0       0
  3677 ;;      Temps:          0       0       0       0       0
  3678 ;;      Totals:         6       0       0       0       0
  3679 ;;Total ram usage:        6 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		_sprintf
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687  063F                     ___ftge:	
  3688                           
  3689                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3690  063F  1FF2               	btfss	___ftge@ff1+2,7
  3691  0640  2E4E               	goto	l5447
  3692  0641  0870               	movf	___ftge@ff1,w
  3693  0642  3C00               	sublw	0
  3694  0643  00F0               	movwf	___ftge@ff1
  3695  0644  0871               	movf	___ftge@ff1+1,w
  3696  0645  1C03               	skipc
  3697  0646  0F71               	incfsz	___ftge@ff1+1,w
  3698  0647  3C00               	sublw	0
  3699  0648  00F1               	movwf	___ftge@ff1+1
  3700  0649  0872               	movf	___ftge@ff1+2,w
  3701  064A  1C03               	skipc
  3702  064B  0F72               	incfsz	___ftge@ff1+2,w
  3703  064C  3C80               	sublw	128
  3704  064D  00F2               	movwf	___ftge@ff1+2
  3705  064E                     l5447:	
  3706  064E  1FF5               	btfss	___ftge@ff2+2,7
  3707  064F  2E5D               	goto	l5451
  3708  0650  0873               	movf	___ftge@ff2,w
  3709  0651  3C00               	sublw	0
  3710  0652  00F3               	movwf	___ftge@ff2
  3711  0653  0874               	movf	___ftge@ff2+1,w
  3712  0654  1C03               	skipc
  3713  0655  0F74               	incfsz	___ftge@ff2+1,w
  3714  0656  3C00               	sublw	0
  3715  0657  00F4               	movwf	___ftge@ff2+1
  3716  0658  0875               	movf	___ftge@ff2+2,w
  3717  0659  1C03               	skipc
  3718  065A  0F75               	incfsz	___ftge@ff2+2,w
  3719  065B  3C80               	sublw	128
  3720  065C  00F5               	movwf	___ftge@ff2+2
  3721  065D                     l5451:	
  3722  065D  3080               	movlw	128
  3723  065E  06F2               	xorwf	___ftge@ff1+2,f
  3724  065F  06F5               	xorwf	___ftge@ff2+2,f
  3725  0660  0875               	movf	___ftge@ff2+2,w
  3726  0661  0272               	subwf	___ftge@ff1+2,w
  3727  0662  1D03               	skipz
  3728  0663  0008               	return
  3729  0664  0874               	movf	___ftge@ff2+1,w
  3730  0665  0271               	subwf	___ftge@ff1+1,w
  3731  0666  1D03               	skipz
  3732  0667  0008               	return
  3733  0668  0873               	movf	___ftge@ff2,w
  3734  0669  0270               	subwf	___ftge@ff1,w
  3735  066A  0008               	return
  3736  066B                     __end_of___ftge:	
  3737  066B                     __ptext748:	
  3738 ;; =============== function __tdiv_to_l_ ends ============
  3739                           
  3740                           
  3741 ;; *************** function _isdigit *****************
  3742 ;; Defined at:
  3743 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\isdigit.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  c               1    wreg     unsigned char 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  c               1    1[COMMON] unsigned char 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;		None               void
  3750 ;; Registers used:
  3751 ;;		wreg, status,2, status,0
  3752 ;; Tracked objects:
  3753 ;;		On entry : 60/0
  3754 ;;		On exit  : 60/0
  3755 ;;		Unchanged: FFF9F/0
  3756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3757 ;;      Params:         0       0       0       0       0
  3758 ;;      Locals:         2       0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0
  3760 ;;      Totals:         2       0       0       0       0
  3761 ;;Total ram usage:        2 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_sprintf
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769  066B                     _isdigit:	
  3770                           
  3771                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3772                           ;isdigit@c stored from wreg
  3773  066B  00F1               	movwf	isdigit@c
  3774  066C  303A               	movlw	58
  3775  066D  01F0               	clrf	_isdigit$2451
  3776  066E  0271               	subwf	isdigit@c,w
  3777  066F  1803               	skipnc
  3778  0670  2E77               	goto	l5133
  3779  0671  3030               	movlw	48
  3780  0672  0271               	subwf	isdigit@c,w
  3781  0673  1C03               	skipc
  3782  0674  2E77               	goto	l5133
  3783  0675  01F0               	clrf	_isdigit$2451
  3784  0676  0AF0               	incf	_isdigit$2451,f
  3785  0677                     l5133:	
  3786  0677  0C70               	rrf	_isdigit$2451,w
  3787  0678  0008               	return
  3788  0679                     __end_of_isdigit:	
  3789  0679                     __ptext744:	
  3790 ;; =============== function ___lbdiv ends ============
  3791                           
  3792                           
  3793 ;; *************** function ___wmul *****************
  3794 ;; Defined at:
  3795 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  multiplier      2    0[COMMON] unsigned int 
  3798 ;;  multiplicand    2    2[COMMON] unsigned int 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  product         2    4[COMMON] unsigned int 
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  2    0[COMMON] unsigned int 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0
  3805 ;; Tracked objects:
  3806 ;;		On entry : 60/20
  3807 ;;		On exit  : 60/20
  3808 ;;		Unchanged: FFF9F/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3810 ;;      Params:         4       0       0       0       0
  3811 ;;      Locals:         2       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0
  3813 ;;      Totals:         6       0       0       0       0
  3814 ;;Total ram usage:        6 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_main
  3820 ;;		_fround
  3821 ;;		_scale
  3822 ;;		_sprintf
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825  0679                     ___wmul:	
  3826                           
  3827                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3828  0679  01F4               	clrf	___wmul@product
  3829  067A  01F5               	clrf	___wmul@product+1
  3830  067B                     l5249:	
  3831  067B  1C70               	btfss	___wmul@multiplier,0
  3832  067C  2E83               	goto	l5253
  3833  067D  0872               	movf	___wmul@multiplicand,w
  3834  067E  07F4               	addwf	___wmul@product,f
  3835  067F  1803               	skipnc
  3836  0680  0AF5               	incf	___wmul@product+1,f
  3837  0681  0873               	movf	___wmul@multiplicand+1,w
  3838  0682  07F5               	addwf	___wmul@product+1,f
  3839  0683                     l5253:	
  3840  0683  1003               	clrc
  3841  0684  0DF2               	rlf	___wmul@multiplicand,f
  3842  0685  0DF3               	rlf	___wmul@multiplicand+1,f
  3843  0686  1003               	clrc
  3844  0687  0CF1               	rrf	___wmul@multiplier+1,f
  3845  0688  0CF0               	rrf	___wmul@multiplier,f
  3846  0689  0871               	movf	___wmul@multiplier+1,w
  3847  068A  0470               	iorwf	___wmul@multiplier,w
  3848  068B  1D03               	skipz
  3849  068C  2E7B               	goto	l5249
  3850  068D  0875               	movf	___wmul@product+1,w
  3851  068E  00F1               	movwf	?___wmul+1
  3852  068F  0874               	movf	___wmul@product,w
  3853  0690  00F0               	movwf	?___wmul
  3854  0691  0008               	return
  3855  0692                     __end_of___wmul:	
  3856  0692                     __ptext740:	
  3857 ;; =============== function ___awdiv ends ============
  3858                           
  3859                           
  3860 ;; *************** function ___fttol *****************
  3861 ;; Defined at:
  3862 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fttol.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  f1              3    0[BANK0 ] float 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  lval            4    8[BANK0 ] unsigned long 
  3867 ;;  exp1            1   12[BANK0 ] unsigned char 
  3868 ;;  sign1           1    7[BANK0 ] unsigned char 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  4    0[BANK0 ] long 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, status,0
  3873 ;; Tracked objects:
  3874 ;;		On entry : 60/0
  3875 ;;		On exit  : 60/0
  3876 ;;		Unchanged: FFF9F/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3878 ;;      Params:         0       4       0       0       0
  3879 ;;      Locals:         0       6       0       0       0
  3880 ;;      Temps:          0       3       0       0       0
  3881 ;;      Totals:         0      13       0       0       0
  3882 ;;Total ram usage:       13 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_sprintf
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890  0692                     ___fttol:	
  3891                           
  3892                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3893  0692  27E2  120A  118A   	fcall	PL30	;call to abstracted procedure
  3894  0695  1003               	clrc
  3895  0696  0D25               	rlf	??___fttol+1,w
  3896  0697  0D26               	rlf	??___fttol+2,w
  3897  0698  00AC               	movwf	___fttol@exp1
  3898  0699  08AC               	movf	___fttol@exp1,f
  3899  069A  1D03               	skipz
  3900  069B  2EA1               	goto	l5337
  3901  069C                     l5335:	
  3902  069C  01A0               	clrf	?___fttol
  3903  069D  01A1               	clrf	?___fttol+1
  3904  069E  01A2               	clrf	?___fttol+2
  3905  069F  01A3               	clrf	?___fttol+3
  3906  06A0  0008               	return
  3907  06A1                     l5337:	
  3908  06A1  27E2  120A  118A   	fcall	PL30	;call to abstracted procedure
  3909  06A4  3017               	movlw	23
  3910  06A5                     u2245:	
  3911  06A5  1003               	clrc
  3912  06A6  0CA6               	rrf	??___fttol+2,f
  3913  06A7  0CA5               	rrf	??___fttol+1,f
  3914  06A8  0CA4               	rrf	??___fttol,f
  3915  06A9  3EFF               	addlw	-1
  3916  06AA  1D03               	skipz
  3917  06AB  2EA5               	goto	u2245
  3918  06AC  0824               	movf	??___fttol,w
  3919  06AD  00A7               	movwf	___fttol@sign1
  3920  06AE  17A1               	bsf	___fttol@f1+1,7
  3921  06AF  01A2               	clrf	___fttol@f1+2
  3922  06B0  0820               	movf	___fttol@f1,w
  3923  06B1  00A8               	movwf	___fttol@lval
  3924  06B2  0821               	movf	___fttol@f1+1,w
  3925  06B3  00A9               	movwf	___fttol@lval+1
  3926  06B4  0822               	movf	___fttol@f1+2,w
  3927  06B5  00AA               	movwf	___fttol@lval+2
  3928  06B6  308E               	movlw	142
  3929  06B7  01AB               	clrf	___fttol@lval+3
  3930  06B8  02AC               	subwf	___fttol@exp1,f
  3931  06B9  1FAC               	btfss	___fttol@exp1,7
  3932  06BA  2EC8               	goto	l5357
  3933  06BB  082C               	movf	___fttol@exp1,w
  3934  06BC  3A80               	xorlw	128
  3935  06BD  3E8F               	addlw	143
  3936  06BE  1C03               	btfss	3,0
  3937  06BF  2E9C               	goto	l5335
  3938  06C0                     l5353:	
  3939  06C0  1003               	clrc
  3940  06C1  0CAB               	rrf	___fttol@lval+3,f
  3941  06C2  0CAA               	rrf	___fttol@lval+2,f
  3942  06C3  0CA9               	rrf	___fttol@lval+1,f
  3943  06C4  0CA8               	rrf	___fttol@lval,f
  3944  06C5  0FAC               	incfsz	___fttol@exp1,f
  3945  06C6  2EC0               	goto	l5353
  3946  06C7  2ED6               	goto	l5363
  3947  06C8                     l5357:	
  3948  06C8  3018               	movlw	24
  3949  06C9  022C               	subwf	___fttol@exp1,w
  3950  06CA  1803               	btfsc	3,0
  3951  06CB  2E9C               	goto	l5335
  3952  06CC                     l2428:	
  3953  06CC  08AC               	movf	___fttol@exp1,f
  3954  06CD  1903               	btfsc	3,2
  3955  06CE  2ED6               	goto	l5363
  3956  06CF  1003               	clrc
  3957  06D0  0DA8               	rlf	___fttol@lval,f
  3958  06D1  0DA9               	rlf	___fttol@lval+1,f
  3959  06D2  0DAA               	rlf	___fttol@lval+2,f
  3960  06D3  0DAB               	rlf	___fttol@lval+3,f
  3961  06D4  03AC               	decf	___fttol@exp1,f
  3962  06D5  2ECC               	goto	l2428
  3963  06D6                     l5363:	
  3964  06D6  0827               	movf	___fttol@sign1,w
  3965  06D7  1903               	btfsc	3,2
  3966  06D8  2EE4               	goto	l5367
  3967  06D9  09A8               	comf	___fttol@lval,f
  3968  06DA  09A9               	comf	___fttol@lval+1,f
  3969  06DB  09AA               	comf	___fttol@lval+2,f
  3970  06DC  09AB               	comf	___fttol@lval+3,f
  3971  06DD  0AA8               	incf	___fttol@lval,f
  3972  06DE  1903               	skipnz
  3973  06DF  0AA9               	incf	___fttol@lval+1,f
  3974  06E0  1903               	skipnz
  3975  06E1  0AAA               	incf	___fttol@lval+2,f
  3976  06E2  1903               	skipnz
  3977  06E3  0AAB               	incf	___fttol@lval+3,f
  3978  06E4                     l5367:	
  3979  06E4  082B               	movf	___fttol@lval+3,w
  3980  06E5  00A3               	movwf	?___fttol+3
  3981  06E6  082A               	movf	___fttol@lval+2,w
  3982  06E7  00A2               	movwf	?___fttol+2
  3983  06E8  0829               	movf	___fttol@lval+1,w
  3984  06E9  00A1               	movwf	?___fttol+1
  3985  06EA  0828               	movf	___fttol@lval,w
  3986  06EB  00A0               	movwf	?___fttol
  3987  06EC  0008               	return
  3988  06ED                     __end_of___fttol:	
  3989  06ED                     __ptext735:	
  3990 ;; =============== function ___awmod ends ============
  3991                           
  3992                           
  3993 ;; *************** function ___lldiv *****************
  3994 ;; Defined at:
  3995 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  divisor         4    0[COMMON] unsigned long 
  3998 ;;  dividend        4    4[COMMON] unsigned long 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  quotient        4    8[COMMON] unsigned long 
  4001 ;;  counter         1   12[COMMON] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  4    0[COMMON] unsigned long 
  4004 ;; Registers used:
  4005 ;;		wreg, status,2, status,0
  4006 ;; Tracked objects:
  4007 ;;		On entry : 60/20
  4008 ;;		On exit  : 60/20
  4009 ;;		Unchanged: FFF9F/0
  4010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4011 ;;      Params:         8       0       0       0       0
  4012 ;;      Locals:         5       0       0       0       0
  4013 ;;      Temps:          0       0       0       0       0
  4014 ;;      Totals:        13       0       0       0       0
  4015 ;;Total ram usage:       13 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_sprintf
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023  06ED                     ___lldiv:	
  4024                           
  4025                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4026  06ED  01F8               	clrf	___lldiv@quotient
  4027  06EE  01F9               	clrf	___lldiv@quotient+1
  4028  06EF  01FA               	clrf	___lldiv@quotient+2
  4029  06F0  01FB               	clrf	___lldiv@quotient+3
  4030  06F1  0873               	movf	___lldiv@divisor+3,w
  4031  06F2  0472               	iorwf	___lldiv@divisor+2,w
  4032  06F3  0471               	iorwf	___lldiv@divisor+1,w
  4033  06F4  0470               	iorwf	___lldiv@divisor,w
  4034  06F5  1903               	skipnz
  4035  06F6  2F2C               	goto	l5485
  4036  06F7  01FC               	clrf	___lldiv@counter
  4037  06F8                     L9:	
  4038  06F8  0AFC               	incf	___lldiv@counter,f
  4039  06F9  1BF3               	btfsc	___lldiv@divisor+3,7
  4040  06FA  2F01               	goto	l5473
  4041  06FB  1003               	clrc
  4042  06FC  0DF0               	rlf	___lldiv@divisor,f
  4043  06FD  0DF1               	rlf	___lldiv@divisor+1,f
  4044  06FE  0DF2               	rlf	___lldiv@divisor+2,f
  4045  06FF  0DF3               	rlf	___lldiv@divisor+3,f
  4046  0700  2EF8               	goto	L9
  4047  0701                     l5473:	
  4048  0701  1003               	clrc
  4049  0702  0DF8               	rlf	___lldiv@quotient,f
  4050  0703  0DF9               	rlf	___lldiv@quotient+1,f
  4051  0704  0DFA               	rlf	___lldiv@quotient+2,f
  4052  0705  0DFB               	rlf	___lldiv@quotient+3,f
  4053  0706  0873               	movf	___lldiv@divisor+3,w
  4054  0707  0277               	subwf	___lldiv@dividend+3,w
  4055  0708  1D03               	skipz
  4056  0709  2F14               	goto	u2485
  4057  070A  0872               	movf	___lldiv@divisor+2,w
  4058  070B  0276               	subwf	___lldiv@dividend+2,w
  4059  070C  1D03               	skipz
  4060  070D  2F14               	goto	u2485
  4061  070E  0871               	movf	___lldiv@divisor+1,w
  4062  070F  0275               	subwf	___lldiv@dividend+1,w
  4063  0710  1D03               	skipz
  4064  0711  2F14               	goto	u2485
  4065  0712  0870               	movf	___lldiv@divisor,w
  4066  0713  0274               	subwf	___lldiv@dividend,w
  4067  0714                     u2485:	
  4068  0714  1C03               	skipc
  4069  0715  2F26               	goto	L10
  4070  0716  0870               	movf	___lldiv@divisor,w
  4071  0717  02F4               	subwf	___lldiv@dividend,f
  4072  0718  0871               	movf	___lldiv@divisor+1,w
  4073  0719  1C03               	skipc
  4074  071A  0F71               	incfsz	___lldiv@divisor+1,w
  4075  071B  02F5               	subwf	___lldiv@dividend+1,f
  4076  071C  0872               	movf	___lldiv@divisor+2,w
  4077  071D  1C03               	skipc
  4078  071E  0F72               	incfsz	___lldiv@divisor+2,w
  4079  071F  02F6               	subwf	___lldiv@dividend+2,f
  4080  0720  0873               	movf	___lldiv@divisor+3,w
  4081  0721  1C03               	skipc
  4082  0722  0F73               	incfsz	___lldiv@divisor+3,w
  4083  0723  02F7               	subwf	___lldiv@dividend+3,f
  4084  0724  1478               	bsf	___lldiv@quotient,0
  4085  0725  1003               	clrc
  4086  0726                     L10:	
  4087  0726  0CF3               	rrf	___lldiv@divisor+3,f
  4088  0727  0CF2               	rrf	___lldiv@divisor+2,f
  4089  0728  0CF1               	rrf	___lldiv@divisor+1,f
  4090  0729  0CF0               	rrf	___lldiv@divisor,f
  4091  072A  0BFC               	decfsz	___lldiv@counter,f
  4092  072B  2F01               	goto	l5473
  4093  072C                     l5485:	
  4094  072C  087B               	movf	___lldiv@quotient+3,w
  4095  072D  00F3               	movwf	?___lldiv+3
  4096  072E  087A               	movf	___lldiv@quotient+2,w
  4097  072F  00F2               	movwf	?___lldiv+2
  4098  0730  0879               	movf	___lldiv@quotient+1,w
  4099  0731  00F1               	movwf	?___lldiv+1
  4100  0732  0878               	movf	___lldiv@quotient,w
  4101  0733  00F0               	movwf	?___lldiv
  4102  0734  0008               	return
  4103  0735                     __end_of___lldiv:	
  4104  0735                     __ptext737:	
  4105 ;; =============== function ___ftge ends ============
  4106                           
  4107                           
  4108 ;; *************** function ___ftneg *****************
  4109 ;; Defined at:
  4110 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftneg.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;  f1              3    0[COMMON] float 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  3    0[COMMON] float 
  4117 ;; Registers used:
  4118 ;;		wreg
  4119 ;; Tracked objects:
  4120 ;;		On entry : 160/20
  4121 ;;		On exit  : 160/20
  4122 ;;		Unchanged: FFE9F/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4124 ;;      Params:         3       0       0       0       0
  4125 ;;      Locals:         0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0
  4127 ;;      Totals:         3       0       0       0       0
  4128 ;;Total ram usage:        3 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_sprintf
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136  0735                     ___ftneg:	
  4137                           
  4138                           ; Regs used in ___ftneg: [wreg]
  4139  0735  0872               	movf	___ftneg@f1+2,w
  4140  0736  0471               	iorwf	___ftneg@f1+1,w
  4141  0737  0470               	iorwf	___ftneg@f1,w
  4142  0738  1903               	skipnz
  4143  0739  0008               	return
  4144  073A  3080               	movlw	128
  4145  073B  06F2               	xorwf	___ftneg@f1+2,f
  4146  073C  0008               	return
  4147  073D                     __end_of___ftneg:	
  4148  073D                     __ptext723:	
  4149 ;; =============== function _lcd_clear ends ============
  4150                           
  4151                           
  4152 ;; *************** function ___ftsub *****************
  4153 ;; Defined at:
  4154 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftsub.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  f2              3   40[BANK0 ] float 
  4157 ;;  f1              3   43[BANK0 ] float 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  3   40[BANK0 ] float 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2, status,0, pclath, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 60/0
  4166 ;;		On exit  : 60/0
  4167 ;;		Unchanged: FFF9F/0
  4168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4169 ;;      Params:         0       6       0       0       0
  4170 ;;      Locals:         0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0
  4172 ;;      Totals:         0       6       0       0       0
  4173 ;;Total ram usage:        6 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    2
  4176 ;; This function calls:
  4177 ;;		___ftadd
  4178 ;; This function is called by:
  4179 ;;		_sprintf
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182  073D                     ___ftsub:	
  4183                           
  4184                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4185  073D  3080               	movlw	128
  4186  073E  06CA               	xorwf	___ftsub@f2+2,f
  4187  073F  084B               	movf	___ftsub@f1,w
  4188  0740  00BC               	movwf	?___ftadd
  4189  0741  084C               	movf	___ftsub@f1+1,w
  4190  0742  00BD               	movwf	?___ftadd+1
  4191  0743  084D               	movf	___ftsub@f1+2,w
  4192  0744  00BE               	movwf	?___ftadd+2
  4193  0745  0848               	movf	___ftsub@f2,w
  4194  0746  00BF               	movwf	?___ftadd+3
  4195  0747  0849               	movf	___ftsub@f2+1,w
  4196  0748  00C0               	movwf	?___ftadd+4
  4197  0749  084A               	movf	___ftsub@f2+2,w
  4198  074A  00C1               	movwf	?___ftadd+5
  4199  074B  160A  118A  2679   	fcall	___ftadd
  4200  074E  083C               	movf	?___ftadd,w
  4201  074F  00C8               	movwf	?___ftsub
  4202  0750  083D               	movf	?___ftadd+1,w
  4203  0751  00C9               	movwf	?___ftsub+1
  4204  0752  083E               	movf	?___ftadd+2,w
  4205  0753  00CA               	movwf	?___ftsub+2
  4206  0754  0008               	return
  4207  0755                     __end_of___ftsub:	
  4208  0755                     PL3:	
  4209  0755  0834               	movf	sprintf@c^(0+128),w
  4210  0756  1283               	bcf	3,5	;RP0=0, select bank0
  4211  0757  00D6               	movwf	??_sprintf
  4212  0758  1003               	clrc
  4213  0759  0DD6               	rlf	??_sprintf,f
  4214  075A  1003               	clrc
  4215  075B  0D56               	rlf	??_sprintf,w
  4216  075C  3E4F               	addlw	low (_dpowers-__stringbase)
  4217  075D  0084               	movwf	4
  4218  075E  0008               	return
  4219  075F                     PL4:	
  4220  075F  300A               	movlw	10
  4221  0760  1283               	bcf	3,5	;RP0=0, select bank0
  4222  0761  00A0               	movwf	?___llmod
  4223  0762  01A1               	clrf	?___llmod+1
  4224  0763  01A2               	clrf	?___llmod+2
  4225  0764  01A3               	clrf	?___llmod+3
  4226  0765  1683               	bsf	3,5	;RP0=1, select bank1
  4227  0766  0008               	return
  4228  0767                     PL5:	
  4229  0767  00F3               	movwf	?___lldiv+3
  4230  0768  1683               	bsf	3,5	;RP0=1, select bank1
  4231  0769  0838               	movf	(sprintf@_val+3)^(0+128),w
  4232  076A  00F7               	movwf	?___lldiv+7
  4233  076B  0837               	movf	(sprintf@_val+2)^(0+128),w
  4234  076C  00F6               	movwf	?___lldiv+6
  4235  076D  0836               	movf	(sprintf@_val+1)^(0+128),w
  4236  076E  00F5               	movwf	?___lldiv+5
  4237  076F  0835               	movf	sprintf@_val^(0+128),w
  4238  0770  00F4               	movwf	?___lldiv+4
  4239  0771  0008               	return
  4240  0772                     PL6:	
  4241  0772  0873               	movf	?___lldiv+3,w
  4242  0773  1283               	bcf	3,5	;RP0=0, select bank0
  4243  0774  00A7               	movwf	?___llmod+7
  4244  0775  0872               	movf	?___lldiv+2,w
  4245  0776  00A6               	movwf	?___llmod+6
  4246  0777  0871               	movf	?___lldiv+1,w
  4247  0778  00A5               	movwf	?___llmod+5
  4248  0779  0870               	movf	?___lldiv,w
  4249  077A  00A4               	movwf	?___llmod+4
  4250  077B  0008               	return
  4251  077C                     PL7:	
  4252  077C  0823               	movf	?___fttol+3,w
  4253  077D  1683               	bsf	3,5	;RP0=1, select bank1
  4254  077E  00B8               	movwf	(sprintf@_val+3)^(0+128)
  4255  077F  1283               	bcf	3,5	;RP0=0, select bank0
  4256  0780  0822               	movf	?___fttol+2,w
  4257  0781  1683               	bsf	3,5	;RP0=1, select bank1
  4258  0782  00B7               	movwf	(sprintf@_val+2)^(0+128)
  4259  0783  1283               	bcf	3,5	;RP0=0, select bank0
  4260  0784  0821               	movf	?___fttol+1,w
  4261  0785  1683               	bsf	3,5	;RP0=1, select bank1
  4262  0786  00B6               	movwf	(sprintf@_val+1)^(0+128)
  4263  0787  1283               	bcf	3,5	;RP0=0, select bank0
  4264  0788  0820               	movf	?___fttol,w
  4265  0789  0008               	return
  4266  078A                     PL11:	
  4267  078A  083C               	movf	?_scale,w
  4268  078B  1683               	bsf	3,5	;RP0=1, select bank1
  4269  078C  00A5               	movwf	sprintf@integ^(0+128)
  4270  078D  1283               	bcf	3,5	;RP0=0, select bank0
  4271  078E  083D               	movf	?_scale+1,w
  4272  078F  1683               	bsf	3,5	;RP0=1, select bank1
  4273  0790  00A6               	movwf	(sprintf@integ+1)^(0+128)
  4274  0791  1283               	bcf	3,5	;RP0=0, select bank0
  4275  0792  083E               	movf	?_scale+2,w
  4276  0793  1683               	bsf	3,5	;RP0=1, select bank1
  4277  0794  00A7               	movwf	(sprintf@integ+2)^(0+128)
  4278  0795  082E               	movf	sprintf@fval^(0+128),w
  4279  0796  0008               	return
  4280  0797                     PL13:	
  4281  0797  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0798  00A0               	movwf	?___fttol
  4283  0799  1683               	bsf	3,5	;RP0=1, select bank1
  4284  079A  082F               	movf	(sprintf@fval+1)^(0+128),w
  4285  079B  1283               	bcf	3,5	;RP0=0, select bank0
  4286  079C  00A1               	movwf	?___fttol+1
  4287  079D  1683               	bsf	3,5	;RP0=1, select bank1
  4288  079E  0830               	movf	(sprintf@fval+2)^(0+128),w
  4289  079F  1283               	bcf	3,5	;RP0=0, select bank0
  4290  07A0  00A2               	movwf	?___fttol+2
  4291  07A1  0008               	return
  4292  07A2                     PL14:	
  4293  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  4294  07A3  00AD               	movwf	?___ftmul
  4295  07A4  1683               	bsf	3,5	;RP0=1, select bank1
  4296  07A5  082F               	movf	(sprintf@fval+1)^(0+128),w
  4297  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  4298  07A7  00AE               	movwf	?___ftmul+1
  4299  07A8  1683               	bsf	3,5	;RP0=1, select bank1
  4300  07A9  0830               	movf	(sprintf@fval+2)^(0+128),w
  4301  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  4302  07AB  00AF               	movwf	?___ftmul+2
  4303  07AC  0008               	return
  4304  07AD                     PL16:	
  4305  07AD  0770               	addwf	?___wmul,w
  4306  07AE  00D6               	movwf	??_sprintf
  4307  07AF  3000               	movlw	0
  4308  07B0  1803               	skipnc
  4309  07B1  3001               	movlw	1
  4310  07B2  0771               	addwf	?___wmul+1,w
  4311  07B3  00D7               	movwf	??_sprintf+1
  4312  07B4  0856               	movf	??_sprintf,w
  4313  07B5  3ED0               	addlw	208
  4314  07B6  1683               	bsf	3,5	;RP0=1, select bank1
  4315  07B7  0008               	return
  4316  07B8                     PL19:	
  4317  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  4318  07B9  00D6               	movwf	??_sprintf
  4319  07BA  01D7               	clrf	??_sprintf+1
  4320  07BB  1BD6               	btfsc	??_sprintf,7
  4321  07BC  03D7               	decf	??_sprintf+1,f
  4322  07BD  0857               	movf	??_sprintf+1,w
  4323  07BE  3A80               	xorlw	128
  4324  07BF  00D8               	movwf	??_sprintf+2
  4325  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  4326  07C1  0008               	return
  4327  07C2                     PL20:	
  4328  07C2  0820               	movf	?___llmod,w
  4329  07C3  3E30               	addlw	48
  4330  07C4  00D7               	movwf	??_sprintf+1
  4331  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  4332  07C6  0831               	movf	sprintf@sp^(0+128),w
  4333  07C7  0084               	movwf	4
  4334  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  4335  07C9  0857               	movf	??_sprintf+1,w
  4336  07CA  0008               	return
  4337  07CB                     PL21:	
  4338  07CB  1303               	bcf	3,6	;RP1=0, select bank1
  4339  07CC  0834               	movf	sprintf@c^(0+128),w
  4340  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  4341  07CE  00D6               	movwf	??_sprintf
  4342  07CF  01D7               	clrf	??_sprintf+1
  4343  07D0  1BD6               	btfsc	??_sprintf,7
  4344  07D1  03D7               	decf	??_sprintf+1,f
  4345  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  4346  07D3  0008               	return
  4347  07D4                     PL22:	
  4348  07D4  0825               	movf	sprintf@integ^(0+128),w
  4349  07D5  00F0               	movwf	?___ftge
  4350  07D6  0826               	movf	(sprintf@integ+1)^(0+128),w
  4351  07D7  00F1               	movwf	?___ftge+1
  4352  07D8  0827               	movf	(sprintf@integ+2)^(0+128),w
  4353  07D9  00F2               	movwf	?___ftge+2
  4354  07DA  0008               	return
  4355  07DB                     PL28:	
  4356  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  4357  07DC  0857               	movf	??_sprintf+1,w
  4358  07DD  1803               	skipnc
  4359  07DE  3E01               	addlw	1
  4360  07DF  3EFF               	addlw	255
  4361  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  4362  07E1  0008               	return
  4363  07E2                     PL30:	
  4364  07E2  0820               	movf	___fttol@f1,w
  4365  07E3  00A4               	movwf	??___fttol
  4366  07E4  0821               	movf	___fttol@f1+1,w
  4367  07E5  00A5               	movwf	??___fttol+1
  4368  07E6  0822               	movf	___fttol@f1+2,w
  4369  07E7  00A6               	movwf	??___fttol+2
  4370  07E8  0008               	return
  4371  07E9                     PL31:	
  4372  07E9  0084               	movwf	4
  4373  07EA  3030               	movlw	48
  4374  07EB  1383               	bcf	3,7	;select IRP bank0
  4375  07EC  0080               	movwf	0
  4376  07ED  30FF               	movlw	-1
  4377  07EE  0AB1               	incf	sprintf@sp^(0+128),f
  4378  07EF  0008               	return
  4379  07F0                     PL32:	
  4380  07F0  0800               	movf	0,w
  4381  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  4382  07F2  00D6               	movwf	??_sprintf
  4383  07F3  0A84               	incf	4,f
  4384  07F4  0800               	movf	0,w
  4385  07F5  00D7               	movwf	??_sprintf+1
  4386  07F6  0008               	return
  4387  07F7                     PL33:	
  4388  07F7  0084               	movwf	4
  4389  07F8  3020               	movlw	32
  4390  07F9  1383               	bcf	3,7	;select IRP bank0
  4391  07FA  0080               	movwf	0
  4392  07FB  0AB1               	incf	sprintf@sp^(0+128),f
  4393  07FC  0008               	return
  4394  07FD                     PL34:	
  4395  07FD  1683               	bsf	3,5	;RP0=1, select bank1
  4396  07FE  1303               	bcf	3,6	;RP1=0, select bank1
  4397  07FF  0008               	return
  4398                           
  4399                           	psect	text720
  4400  173B                     __ptext720:	
  4401 ;; =============== function _sprintf ends ============
  4402                           
  4403                           
  4404 ;; *************** function _lcd_goto *****************
  4405 ;; Defined at:
  4406 ;;		line 246 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  pos             1    wreg     unsigned char 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  pos             1    6[COMMON] unsigned char 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;		None               void
  4413 ;; Registers used:
  4414 ;;		wreg, status,2, status,0, pclath, cstack
  4415 ;; Tracked objects:
  4416 ;;		On entry : 40/0
  4417 ;;		On exit  : 60/0
  4418 ;;		Unchanged: FFF9F/0
  4419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4420 ;;      Params:         0       0       0       0       0
  4421 ;;      Locals:         1       0       0       0       0
  4422 ;;      Temps:          0       0       0       0       0
  4423 ;;      Totals:         1       0       0       0       0
  4424 ;;Total ram usage:        1 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    3
  4427 ;; This function calls:
  4428 ;;		_lcd_write
  4429 ;; This function is called by:
  4430 ;;		_main
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433  173B                     _lcd_goto:	
  4434                           
  4435                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  4436                           ;lcd_goto@pos stored from wreg
  4437  173B  00F6               	movwf	lcd_goto@pos
  4438                           
  4439                           ;eeprom_i2c.c: 247: RE0=0;
  4440  173C  1283               	bcf	3,5	;RP0=0, select bank0
  4441  173D  1009               	bcf	9,0
  4442                           
  4443                           ;eeprom_i2c.c: 248: lcd_write(0x80+pos);
  4444  173E  0876               	movf	lcd_goto@pos,w
  4445  173F  00F4               	movwf	?_lcd_write
  4446  1740  3080               	movlw	128
  4447  1741  01F5               	clrf	?_lcd_write+1
  4448  1742  07F4               	addwf	?_lcd_write,f
  4449  1743  1803               	skipnc
  4450  1744  0AF5               	incf	?_lcd_write+1,f
  4451  1745  2FD3               	ljmp	l5713
  4452  1746                     __end_of_lcd_goto:	
  4453  1746                     __ptext727:	
  4454 ;; =============== function _lcd_write ends ============
  4455                           
  4456                           
  4457 ;; *************** function _I2C_EEOUT *****************
  4458 ;; Defined at:
  4459 ;;		line 186 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  address1        1    wreg     unsigned char 
  4462 ;;  address2        1    4[COMMON] unsigned char 
  4463 ;;  data            1    5[COMMON] unsigned char 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  address1        1    6[COMMON] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;		None               void
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0, pclath, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 7F/20
  4472 ;;		On exit  : 1F/0
  4473 ;;		Unchanged: FFF80/0
  4474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4475 ;;      Params:         2       0       0       0       0
  4476 ;;      Locals:         1       0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0
  4478 ;;      Totals:         3       0       0       0       0
  4479 ;;Total ram usage:        3 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    2
  4482 ;; This function calls:
  4483 ;;		_i2c_start
  4484 ;;		_i2c_write
  4485 ;;		_i2c_stop
  4486 ;;		_pause
  4487 ;; This function is called by:
  4488 ;;		_main
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491  1746                     _I2C_EEOUT:	
  4492                           
  4493                           ; Regs used in _I2C_EEOUT: [wreg+status,2+status,0+pclath+cstack]
  4494                           ;I2C_EEOUT@address1 stored from wreg
  4495  1746  00F6               	movwf	I2C_EEOUT@address1
  4496                           
  4497                           ;eeprom_i2c.c: 187: i2c_start();
  4498  1747  278A  160A  118A   	fcall	_i2c_start
  4499                           
  4500                           ;eeprom_i2c.c: 188: i2c_write(0xa0);
  4501  174A  30A0               	movlw	160
  4502  174B  2782  160A  118A   	fcall	_i2c_write
  4503                           
  4504                           ;eeprom_i2c.c: 189: i2c_write(address1);
  4505  174E  0876               	movf	I2C_EEOUT@address1,w
  4506  174F  2782  160A  118A   	fcall	_i2c_write
  4507                           
  4508                           ;eeprom_i2c.c: 190: i2c_write(address2);
  4509  1752  0874               	movf	I2C_EEOUT@address2,w
  4510  1753  2782  160A  118A   	fcall	_i2c_write
  4511                           
  4512                           ;eeprom_i2c.c: 191: i2c_write(data);
  4513  1756  0875               	movf	I2C_EEOUT@data,w
  4514  1757  2782  160A  118A   	fcall	_i2c_write
  4515                           
  4516                           ;eeprom_i2c.c: 192: i2c_stop();
  4517  175A  278E  160A  118A   	fcall	_i2c_stop
  4518                           
  4519                           ;eeprom_i2c.c: 193: pause(11);
  4520  175D  300B               	movlw	11
  4521  175E  00F0               	movwf	?_pause
  4522  175F  01F1               	clrf	?_pause+1
  4523  1760  2FE4               	ljmp	l5525
  4524  1761                     __end_of_I2C_EEOUT:	
  4525  1761                     __ptext732:	
  4526 ;; =============== function ___ftadd ends ============
  4527                           
  4528                           
  4529 ;; *************** function _I2C_EEIN *****************
  4530 ;; Defined at:
  4531 ;;		line 202 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;  address1        1    wreg     unsigned char 
  4534 ;;  address2        1    1[COMMON] unsigned char 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  address1        1    2[COMMON] unsigned char 
  4537 ;;  data            1    3[COMMON] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      unsigned char 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0, pclath, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 160/20
  4544 ;;		On exit  : 160/20
  4545 ;;		Unchanged: FFE9F/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4547 ;;      Params:         1       0       0       0       0
  4548 ;;      Locals:         2       0       0       0       0
  4549 ;;      Temps:          0       0       0       0       0
  4550 ;;      Totals:         3       0       0       0       0
  4551 ;;Total ram usage:        3 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    1
  4554 ;; This function calls:
  4555 ;;		_i2c_start
  4556 ;;		_i2c_write
  4557 ;;		_i2c_restart
  4558 ;;		_i2c_read
  4559 ;;		_I2C_nack
  4560 ;;		_i2c_stop
  4561 ;; This function is called by:
  4562 ;;		_main
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565  1761                     _I2C_EEIN:	
  4566                           
  4567                           ; Regs used in _I2C_EEIN: [wreg+status,2+status,0+pclath+cstack]
  4568                           ;I2C_EEIN@address1 stored from wreg
  4569  1761  00F2               	movwf	I2C_EEIN@address1
  4570                           
  4571                           ;eeprom_i2c.c: 203: unsigned char data;
  4572                           ;eeprom_i2c.c: 204: i2c_start();
  4573  1762  278A  160A  118A   	fcall	_i2c_start
  4574                           
  4575                           ;eeprom_i2c.c: 205: i2c_write(0xa0);
  4576  1765  30A0               	movlw	160
  4577  1766  2782  160A  118A   	fcall	_i2c_write
  4578                           
  4579                           ;eeprom_i2c.c: 206: i2c_write(address1);
  4580  1769  0872               	movf	I2C_EEIN@address1,w
  4581  176A  2782  160A  118A   	fcall	_i2c_write
  4582                           
  4583                           ;eeprom_i2c.c: 207: i2c_write(address2);
  4584  176D  0871               	movf	I2C_EEIN@address2,w
  4585  176E  2782  160A  118A   	fcall	_i2c_write
  4586                           
  4587                           ;eeprom_i2c.c: 208: i2c_restart();
  4588  1771  2793  160A  118A   	fcall	_i2c_restart
  4589                           
  4590                           ;eeprom_i2c.c: 209: i2c_write(0xa1);
  4591  1774  30A1               	movlw	161
  4592  1775  2782  160A  118A   	fcall	_i2c_write
  4593                           
  4594                           ;eeprom_i2c.c: 210: data=i2c_read();
  4595  1778  2798  160A  118A   	fcall	_i2c_read
  4596  177B  00F3               	movwf	I2C_EEIN@data
  4597                           
  4598                           ;eeprom_i2c.c: 211: I2C_nack();
  4599  177C  27A0  160A  118A   	fcall	_I2C_nack
  4600                           
  4601                           ;eeprom_i2c.c: 212: i2c_stop();
  4602  177F  278E               	fcall	_i2c_stop
  4603                           
  4604                           ;eeprom_i2c.c: 213: return(data);
  4605  1780  0873               	movf	I2C_EEIN@data,w
  4606  1781  0008               	return
  4607  1782                     __end_of_I2C_EEIN:	
  4608  1782                     __ptext749:	
  4609 ;; =============== function _isdigit ends ============
  4610                           
  4611                           
  4612 ;; *************** function _i2c_write *****************
  4613 ;; Defined at:
  4614 ;;		line 174 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  I2C_data        1    wreg     unsigned char 
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;  I2C_data        1    0[COMMON] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;		None               void
  4621 ;; Registers used:
  4622 ;;		wreg
  4623 ;; Tracked objects:
  4624 ;;		On entry : 40/20
  4625 ;;		On exit  : 60/0
  4626 ;;		Unchanged: FFF9F/0
  4627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4628 ;;      Params:         0       0       0       0       0
  4629 ;;      Locals:         1       0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0
  4631 ;;      Totals:         1       0       0       0       0
  4632 ;;Total ram usage:        1 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		_I2C_EEOUT
  4638 ;;		_I2C_EEIN
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641  1782                     _i2c_write:	
  4642                           
  4643                           ; Regs used in _i2c_write: [wreg]
  4644                           ;i2c_write@I2C_data stored from wreg
  4645  1782  00F0               	movwf	i2c_write@I2C_data
  4646                           
  4647                           ;eeprom_i2c.c: 175: PIR1bits.SSPIF=0;
  4648  1783  1283               	bcf	3,5	;RP0=0, select bank0
  4649  1784  118C               	bcf	12,3	;volatile
  4650                           
  4651                           ;eeprom_i2c.c: 176: SSPBUF=I2C_data;
  4652  1785  0870               	movf	i2c_write@I2C_data,w
  4653  1786  0093               	movwf	19	;volatile
  4654  1787                     l1130:	
  4655                           ;eeprom_i2c.c: 177: while(PIR1bits.SSPIF==0);
  4656                           
  4657  1787  198C               	btfsc	12,3	;volatile
  4658  1788  0008               	return
  4659  1789  2F87               	goto	l1130
  4660  178A                     __end_of_i2c_write:	
  4661  178A                     __ptext754:	
  4662 ;; =============== function _i2c_restart ends ============
  4663                           
  4664                           
  4665 ;; *************** function _i2c_start *****************
  4666 ;; Defined at:
  4667 ;;		line 120 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;		None
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;		None               void
  4674 ;; Registers used:
  4675 ;;		None
  4676 ;; Tracked objects:
  4677 ;;		On entry : 60/20
  4678 ;;		On exit  : 60/20
  4679 ;;		Unchanged: FFF9F/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4681 ;;      Params:         0       0       0       0       0
  4682 ;;      Locals:         0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0
  4684 ;;      Totals:         0       0       0       0       0
  4685 ;;Total ram usage:        0 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; This function calls:
  4688 ;;		Nothing
  4689 ;; This function is called by:
  4690 ;;		_I2C_EEOUT
  4691 ;;		_I2C_EEIN
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694  178A                     _i2c_start:	
  4695                           
  4696                           ;eeprom_i2c.c: 121: SSPCON2bits.SEN=1;
  4697                           
  4698                           ; Regs used in _i2c_start: []
  4699  178A  1411               	bsf	17,0	;volatile
  4700  178B                     l1094:	
  4701                           ;eeprom_i2c.c: 122: while(SSPCON2bits.SEN==1);
  4702                           
  4703  178B  1C11               	btfss	17,0	;volatile
  4704  178C  0008               	return
  4705  178D  2F8B               	goto	l1094
  4706  178E                     __end_of_i2c_start:	
  4707  178E                     __ptext752:	
  4708 ;; =============== function _i2c_read ends ============
  4709                           
  4710                           
  4711 ;; *************** function _i2c_stop *****************
  4712 ;; Defined at:
  4713 ;;		line 136 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;		None
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;		None
  4718 ;; Return value:  Size  Location     Type
  4719 ;;		None               void
  4720 ;; Registers used:
  4721 ;;		None
  4722 ;; Tracked objects:
  4723 ;;		On entry : 60/0
  4724 ;;		On exit  : 60/20
  4725 ;;		Unchanged: FFF9F/0
  4726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4727 ;;      Params:         0       0       0       0       0
  4728 ;;      Locals:         0       0       0       0       0
  4729 ;;      Temps:          0       0       0       0       0
  4730 ;;      Totals:         0       0       0       0       0
  4731 ;;Total ram usage:        0 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; This function calls:
  4734 ;;		Nothing
  4735 ;; This function is called by:
  4736 ;;		_I2C_EEOUT
  4737 ;;		_I2C_EEIN
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740  178E                     _i2c_stop:	
  4741                           
  4742                           ;eeprom_i2c.c: 137: SSPCON2bits.PEN=1;
  4743                           
  4744                           ; Regs used in _i2c_stop: []
  4745  178E  1683               	bsf	3,5	;RP0=1, select bank1
  4746  178F  1511               	bsf	17,2	;volatile
  4747  1790                     l1106:	
  4748                           ;eeprom_i2c.c: 138: while(SSPCON2bits.PEN==1);
  4749                           
  4750  1790  1D11               	btfss	17,2	;volatile
  4751  1791  0008               	return
  4752  1792  2F90               	goto	l1106
  4753  1793                     __end_of_i2c_stop:	
  4754  1793                     __ptext753:	
  4755 ;; =============== function _i2c_stop ends ============
  4756                           
  4757                           
  4758 ;; *************** function _i2c_restart *****************
  4759 ;; Defined at:
  4760 ;;		line 128 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;		None               void
  4767 ;; Registers used:
  4768 ;;		None
  4769 ;; Tracked objects:
  4770 ;;		On entry : 160/0
  4771 ;;		On exit  : 160/20
  4772 ;;		Unchanged: FFE9F/0
  4773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4774 ;;      Params:         0       0       0       0       0
  4775 ;;      Locals:         0       0       0       0       0
  4776 ;;      Temps:          0       0       0       0       0
  4777 ;;      Totals:         0       0       0       0       0
  4778 ;;Total ram usage:        0 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; This function calls:
  4781 ;;		Nothing
  4782 ;; This function is called by:
  4783 ;;		_I2C_EEIN
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786  1793                     _i2c_restart:	
  4787                           
  4788                           ;eeprom_i2c.c: 129: SSPCON2bits.RSEN=1;
  4789                           
  4790                           ; Regs used in _i2c_restart: []
  4791  1793  1683               	bsf	3,5	;RP0=1, select bank1
  4792  1794  1491               	bsf	17,1	;volatile
  4793  1795                     l1100:	
  4794                           ;eeprom_i2c.c: 130: while(SSPCON2bits.RSEN==1);
  4795                           
  4796  1795  1C91               	btfss	17,1	;volatile
  4797  1796  0008               	return
  4798  1797  2F95               	goto	l1100
  4799  1798                     __end_of_i2c_restart:	
  4800  1798                     __ptext751:	
  4801 ;; =============== function _I2C_nack ends ============
  4802                           
  4803                           
  4804 ;; *************** function _i2c_read *****************
  4805 ;; Defined at:
  4806 ;;		line 144 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      unsigned char 
  4813 ;; Registers used:
  4814 ;;		wreg
  4815 ;; Tracked objects:
  4816 ;;		On entry : 160/0
  4817 ;;		On exit  : 160/0
  4818 ;;		Unchanged: FFE9F/0
  4819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4820 ;;      Params:         0       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0
  4823 ;;      Totals:         0       0       0       0       0
  4824 ;;Total ram usage:        0 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; This function calls:
  4827 ;;		Nothing
  4828 ;; This function is called by:
  4829 ;;		_I2C_EEIN
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832  1798                     _i2c_read:	
  4833                           
  4834                           ;eeprom_i2c.c: 145: PIR1bits.SSPIF=0;
  4835                           
  4836                           ; Regs used in _i2c_read: [wreg]
  4837  1798  118C               	bcf	12,3	;volatile
  4838                           
  4839                           ;eeprom_i2c.c: 146: SSPCON2bits.RCEN=1;
  4840  1799  1683               	bsf	3,5	;RP0=1, select bank1
  4841  179A  1591               	bsf	17,3	;volatile
  4842  179B                     l1112:	
  4843                           ;eeprom_i2c.c: 147: while(PIR1bits.SSPIF==0);
  4844                           
  4845  179B  1283               	bcf	3,5	;RP0=0, select bank0
  4846  179C  1D8C               	btfss	12,3	;volatile
  4847  179D  2F9B               	goto	l1112
  4848                           
  4849                           ;eeprom_i2c.c: 148: return SSPBUF;
  4850  179E  0813               	movf	19,w	;volatile
  4851  179F  0008               	return
  4852  17A0                     __end_of_i2c_read:	
  4853  17A0                     __ptext750:	
  4854 ;; =============== function _i2c_write ends ============
  4855                           
  4856                           
  4857 ;; *************** function _I2C_nack *****************
  4858 ;; Defined at:
  4859 ;;		line 164 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;		None
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;		None
  4864 ;; Return value:  Size  Location     Type
  4865 ;;		None               void
  4866 ;; Registers used:
  4867 ;;		None
  4868 ;; Tracked objects:
  4869 ;;		On entry : 160/0
  4870 ;;		On exit  : 160/0
  4871 ;;		Unchanged: FFE9F/0
  4872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4873 ;;      Params:         0       0       0       0       0
  4874 ;;      Locals:         0       0       0       0       0
  4875 ;;      Temps:          0       0       0       0       0
  4876 ;;      Totals:         0       0       0       0       0
  4877 ;;Total ram usage:        0 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; This function calls:
  4880 ;;		Nothing
  4881 ;; This function is called by:
  4882 ;;		_I2C_EEIN
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885  17A0                     _I2C_nack:	
  4886                           
  4887                           ;eeprom_i2c.c: 165: PIR1bits.SSPIF=0;
  4888                           
  4889                           ; Regs used in _I2C_nack: []
  4890  17A0  118C               	bcf	12,3	;volatile
  4891                           
  4892                           ;eeprom_i2c.c: 166: SSPCON2bits.ACKDT=1;
  4893  17A1  1683               	bsf	3,5	;RP0=1, select bank1
  4894  17A2  1691               	bsf	17,5	;volatile
  4895                           
  4896                           ;eeprom_i2c.c: 167: SSPCON2bits.ACKEN=1;
  4897  17A3  1611               	bsf	17,4	;volatile
  4898  17A4                     l1124:	
  4899                           ;eeprom_i2c.c: 168: while(PIR1bits.SSPIF==0);
  4900                           
  4901  17A4  1283               	bcf	3,5	;RP0=0, select bank0
  4902  17A5  198C               	btfsc	12,3	;volatile
  4903  17A6  0008               	return
  4904  17A7  2FA4               	goto	l1124
  4905  17A8                     __end_of_I2C_nack:	
  4906  17A8                     __ptext722:	
  4907 ;; =============== function _lcd_puts ends ============
  4908                           
  4909                           
  4910 ;; *************** function _lcd_clear *****************
  4911 ;; Defined at:
  4912 ;;		line 226 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;		None
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;		None               void
  4919 ;; Registers used:
  4920 ;;		wreg, status,2, status,0, pclath, cstack
  4921 ;; Tracked objects:
  4922 ;;		On entry : 17F/0
  4923 ;;		On exit  : 11F/0
  4924 ;;		Unchanged: FFE80/0
  4925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4926 ;;      Params:         0       0       0       0       0
  4927 ;;      Locals:         0       0       0       0       0
  4928 ;;      Temps:          0       0       0       0       0
  4929 ;;      Totals:         0       0       0       0       0
  4930 ;;Total ram usage:        0 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    3
  4933 ;; This function calls:
  4934 ;;		_lcd_write
  4935 ;;		_pause
  4936 ;; This function is called by:
  4937 ;;		_main
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940  17A8                     _lcd_clear:	
  4941                           
  4942                           ;eeprom_i2c.c: 227: RE0=0;
  4943                           
  4944                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  4945  17A8  1009               	bcf	9,0
  4946                           
  4947                           ;eeprom_i2c.c: 228: lcd_write(0x1);
  4948  17A9  01F4               	clrf	?_lcd_write
  4949  17AA  0AF4               	incf	?_lcd_write,f
  4950  17AB  01F5               	clrf	?_lcd_write+1
  4951  17AC  27D3  160A  118A   	fcall	_lcd_write
  4952                           
  4953                           ;eeprom_i2c.c: 229: pause(2);
  4954  17AF  3002               	movlw	2
  4955  17B0  00F0               	movwf	?_pause
  4956  17B1  01F1               	clrf	?_pause+1
  4957  17B2  2FE4               	ljmp	l5525
  4958  17B3                     __end_of_lcd_clear:	
  4959  17B3                     __ptext721:	
  4960 ;; =============== function _lcd_goto ends ============
  4961                           
  4962                           
  4963 ;; *************** function _lcd_puts *****************
  4964 ;; Defined at:
  4965 ;;		line 233 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  s               2    6[COMMON] PTR const unsigned char 
  4968 ;;		 -> carac1(5), STR_5(6), STR_4(3), carac(5), 
  4969 ;;		 -> STR_2(11), STR_1(15), 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;		None               void
  4974 ;; Registers used:
  4975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 40/0
  4978 ;;		On exit  : 60/0
  4979 ;;		Unchanged: FFE9F/0
  4980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4981 ;;      Params:         2       0       0       0       0
  4982 ;;      Locals:         0       0       0       0       0
  4983 ;;      Temps:          0       0       0       0       0
  4984 ;;      Totals:         2       0       0       0       0
  4985 ;;Total ram usage:        2 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    3
  4988 ;; This function calls:
  4989 ;;		_lcd_write
  4990 ;; This function is called by:
  4991 ;;		_main
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994  17B3                     _lcd_puts:	
  4995                           
  4996                           ;eeprom_i2c.c: 234: RE0=1;
  4997                           
  4998                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4999  17B3  1283               	bcf	3,5	;RP0=0, select bank0
  5000  17B4  1409               	bsf	9,0
  5001  17B5                     l5805:	
  5002                           ;eeprom_i2c.c: 235: while(*s)
  5003                           
  5004  17B5  0877               	movf	lcd_puts@s+1,w
  5005  17B6  00FF               	movwf	127
  5006  17B7  0876               	movf	lcd_puts@s,w
  5007  17B8  0084               	movwf	4
  5008  17B9  120A  158A  2000   	fcall	stringtab
      +       160A  118A         
  5009  17BE  3800               	iorlw	0
  5010  17BF  1903               	btfsc	3,2
  5011  17C0  0008               	return
  5012                           
  5013                           ;eeprom_i2c.c: 236: lcd_write(*s++);
  5014  17C1  0877               	movf	lcd_puts@s+1,w
  5015  17C2  00FF               	movwf	127
  5016  17C3  0876               	movf	lcd_puts@s,w
  5017  17C4  0084               	movwf	4
  5018  17C5  120A  158A  2000   	fcall	stringtab
      +       160A  118A         
  5019  17CA  00F4               	movwf	?_lcd_write
  5020  17CB  01F5               	clrf	?_lcd_write+1
  5021  17CC  27D3  160A  118A   	fcall	_lcd_write
  5022  17CF  0AF6               	incf	lcd_puts@s,f
  5023  17D0  1903               	skipnz
  5024  17D1  0AF7               	incf	lcd_puts@s+1,f
  5025  17D2  2FB5               	goto	l5805
  5026  17D3                     __end_of_lcd_puts:	
  5027  17D3                     __ptext726:	
  5028 ;; =============== function _fround ends ============
  5029                           
  5030                           
  5031 ;; *************** function _lcd_write *****************
  5032 ;; Defined at:
  5033 ;;		line 217 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  c               2    4[COMMON] unsigned int 
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;		None
  5038 ;; Return value:  Size  Location     Type
  5039 ;;		None               void
  5040 ;; Registers used:
  5041 ;;		wreg, status,2, status,0, pclath, cstack
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 60/0
  5045 ;;		Unchanged: FFF9F/0
  5046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5047 ;;      Params:         2       0       0       0       0
  5048 ;;      Locals:         0       0       0       0       0
  5049 ;;      Temps:          0       0       0       0       0
  5050 ;;      Totals:         2       0       0       0       0
  5051 ;;Total ram usage:        2 bytes
  5052 ;; Hardware stack levels used:    1
  5053 ;; Hardware stack levels required when called:    2
  5054 ;; This function calls:
  5055 ;;		_pause
  5056 ;; This function is called by:
  5057 ;;		_lcd_clear
  5058 ;;		_lcd_puts
  5059 ;;		_lcd_goto
  5060 ;;		_main
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063  17D3                     _lcd_write:	
  5064  17D3                     l5713:	
  5065                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  5066                           
  5067                           
  5068                           ;eeprom_i2c.c: 218: pause(1);
  5069  17D3  01F0               	clrf	?_pause
  5070  17D4  0AF0               	incf	?_pause,f
  5071  17D5  01F1               	clrf	?_pause+1
  5072  17D6  27E4               	fcall	_pause
  5073                           
  5074                           ;eeprom_i2c.c: 219: PORTD=((c >> 4) & 0x0F);
  5075  17D7  0E74               	swapf	lcd_write@c,w
  5076  17D8  390F               	andlw	15
  5077  17D9  1283               	bcf	3,5	;RP0=0, select bank0
  5078  17DA  1303               	bcf	3,6	;RP1=0, select bank0
  5079  17DB  0088               	movwf	8	;volatile
  5080                           
  5081                           ;eeprom_i2c.c: 220: ((RE2=1),(RE2=0));
  5082  17DC  1509               	bsf	9,2
  5083  17DD  1109               	bcf	9,2
  5084                           
  5085                           ;eeprom_i2c.c: 221: PORTD=(c & 0x0F);
  5086  17DE  0874               	movf	lcd_write@c,w
  5087  17DF  390F               	andlw	15
  5088  17E0  0088               	movwf	8	;volatile
  5089                           
  5090                           ;eeprom_i2c.c: 222: ((RE2=1),(RE2=0));
  5091  17E1  1509               	bsf	9,2
  5092  17E2  1109               	bcf	9,2
  5093  17E3  0008               	return
  5094  17E4                     __end_of_lcd_write:	
  5095  17E4                     __ptext733:	
  5096 ;; =============== function _I2C_EEIN ends ============
  5097                           
  5098                           
  5099 ;; *************** function _pause *****************
  5100 ;; Defined at:
  5101 ;;		line 88 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;  usvalue         2    0[COMMON] unsigned short 
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;  x               2    2[COMMON] unsigned short 
  5106 ;; Return value:  Size  Location     Type
  5107 ;;		None               void
  5108 ;; Registers used:
  5109 ;;		wreg, status,2, status,0, pclath, cstack
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: FFF9F/0
  5114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5115 ;;      Params:         2       0       0       0       0
  5116 ;;      Locals:         2       0       0       0       0
  5117 ;;      Temps:          0       0       0       0       0
  5118 ;;      Totals:         4       0       0       0       0
  5119 ;;Total ram usage:        4 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:    1
  5122 ;; This function calls:
  5123 ;;		_msecbase
  5124 ;; This function is called by:
  5125 ;;		_I2C_EEOUT
  5126 ;;		_lcd_write
  5127 ;;		_lcd_clear
  5128 ;;		_main
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131  17E4                     _pause:	
  5132  17E4                     l5525:	
  5133                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  5134                           
  5135                           
  5136                           ;eeprom_i2c.c: 89: unsigned short x;
  5137                           ;eeprom_i2c.c: 91: for (x=0; x<=usvalue; x++)
  5138  17E4  01F2               	clrf	pause@x
  5139  17E5  01F3               	clrf	pause@x+1
  5140  17E6                     l5531:	
  5141  17E6  0873               	movf	pause@x+1,w
  5142  17E7  0271               	subwf	pause@usvalue+1,w
  5143  17E8  1D03               	skipz
  5144  17E9  2FEC               	goto	u2575
  5145  17EA  0872               	movf	pause@x,w
  5146  17EB  0270               	subwf	pause@usvalue,w
  5147  17EC                     u2575:	
  5148  17EC  1C03               	btfss	3,0
  5149  17ED  0008               	return
  5150                           
  5151                           ;eeprom_i2c.c: 92: {
  5152                           ;eeprom_i2c.c: 93: msecbase();
  5153  17EE  27F5  160A  118A   	fcall	_msecbase
  5154  17F1  0AF2               	incf	pause@x,f
  5155  17F2  1903               	skipnz
  5156  17F3  0AF3               	incf	pause@x+1,f
  5157  17F4  2FE6               	goto	l5531
  5158  17F5                     __end_of_pause:	
  5159  17F5                     __ptext756:	
  5160 ;; =============== function _i2c_init ends ============
  5161                           
  5162                           
  5163 ;; *************** function _msecbase *****************
  5164 ;; Defined at:
  5165 ;;		line 79 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;		None
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;		None               void
  5172 ;; Registers used:
  5173 ;;		wreg
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: FFF9F/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5179 ;;      Params:         0       0       0       0       0
  5180 ;;      Locals:         0       0       0       0       0
  5181 ;;      Temps:          0       0       0       0       0
  5182 ;;      Totals:         0       0       0       0       0
  5183 ;;Total ram usage:        0 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_pause
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191  17F5                     _msecbase:	
  5192                           
  5193                           ;eeprom_i2c.c: 80: OPTION_REG = 0b00000001;
  5194                           
  5195                           ; Regs used in _msecbase: [wreg]
  5196  17F5  3001               	movlw	1
  5197  17F6  1683               	bsf	3,5	;RP0=1, select bank1
  5198  17F7  1303               	bcf	3,6	;RP1=0, select bank1
  5199  17F8  0081               	movwf	1	;volatile
  5200                           
  5201                           ;eeprom_i2c.c: 81: TMR0 = 0xD;
  5202  17F9  300D               	movlw	13
  5203  17FA  1283               	bcf	3,5	;RP0=0, select bank0
  5204  17FB  0081               	movwf	1	;volatile
  5205  17FC                     l1079:	
  5206                           ;eeprom_i2c.c: 82: while(!T0IF);
  5207                           
  5208  17FC  1D0B               	btfss	11,2
  5209  17FD  2FFC               	goto	l1079
  5210                           
  5211                           ;eeprom_i2c.c: 83: T0IF = 0;
  5212  17FE  110B               	bcf	11,2
  5213  17FF  0008               	return
  5214  1800                     __end_of_msecbase:	
  5215                           
  5216                           	psect	text725
  5217  097F                     __ptext725:	
  5218 ;; =============== function _scale ends ============
  5219                           
  5220                           
  5221 ;; *************** function _fround *****************
  5222 ;; Defined at:
  5223 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  prec            1    wreg     unsigned char 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;  prec            1   49[BANK0 ] unsigned char 
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  3   40[BANK0 ] unsigned char 
  5230 ;; Registers used:
  5231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5232 ;; Tracked objects:
  5233 ;;		On entry : 60/20
  5234 ;;		On exit  : 60/0
  5235 ;;		Unchanged: FFF9F/0
  5236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5237 ;;      Params:         0       3       0       0       0
  5238 ;;      Locals:         0       7       0       0       0
  5239 ;;      Temps:          0       0       0       0       0
  5240 ;;      Totals:         0      10       0       0       0
  5241 ;;Total ram usage:       10 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; Hardware stack levels required when called:    2
  5244 ;; This function calls:
  5245 ;;		___lbmod
  5246 ;;		___bmul
  5247 ;;		___lbdiv
  5248 ;;		___ftmul
  5249 ;; This function is called by:
  5250 ;;		_sprintf
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253  097F                     _fround:	
  5254                           
  5255                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5256                           ;fround@prec stored from wreg
  5257  097F  1283               	bcf	3,5	;RP0=0, select bank0
  5258  0980  00D1               	movwf	fround@prec
  5259  0981  306E               	movlw	110
  5260  0982  0251               	subwf	fround@prec,w
  5261  0983  1C03               	skipc
  5262  0984  2A0A               	goto	l5737
  5263  0985  3003               	movlw	3
  5264  0986  00F9               	movwf	?___bmul
  5265  0987  300A               	movlw	10
  5266  0988  00F5               	movwf	?___lbdiv
  5267  0989  3064               	movlw	100
  5268  098A  00F0               	movwf	?___lbmod
  5269  098B  0851               	movf	fround@prec,w
  5270  098C  229F  120A  158A   	fcall	___lbmod
  5271  098F  2284               	fcall	___lbdiv
  5272  0990  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5273  0995  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5274  0996  0084               	movwf	4
  5275  0997  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5276  099C  00AD               	movwf	?___ftmul
  5277  099D  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5278  09A2  00AE               	movwf	?___ftmul+1
  5279  09A3  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5280  09A8  00AF               	movwf	?___ftmul+2
  5281  09A9  3003               	movlw	3
  5282  09AA  00F9               	movwf	?___bmul
  5283  09AB  3064               	movlw	100
  5284  09AC  00F5               	movwf	?___lbdiv
  5285  09AD  0851               	movf	fround@prec,w
  5286  09AE  2284               	fcall	___lbdiv
  5287  09AF  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5288  09B4  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5289  09B5  0084               	movwf	4
  5290  09B6  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5291  09BB  00B0               	movwf	?___ftmul+3
  5292  09BC  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5293  09C1  00B1               	movwf	?___ftmul+4
  5294  09C2  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5295  09C7  00B2               	movwf	?___ftmul+5
  5296  09C8  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5297  09CD  22CA  120A  158A   	fcall	PL29	;call to abstracted procedure
  5298  09D0  3003               	movlw	3
  5299  09D1  00F9               	movwf	?___bmul
  5300  09D2  300A               	movlw	10
  5301  09D3  00F0               	movwf	?___lbmod
  5302  09D4  0851               	movf	fround@prec,w
  5303  09D5  229F               	fcall	___lbmod
  5304  09D6  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5305  09DB  3E01               	addlw	low (__npowers_-__stringbase)
  5306  09DC  0084               	movwf	4
  5307  09DD  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5308  09E2  00AD               	movwf	?___ftmul
  5309  09E3  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5310  09E8  00AE               	movwf	?___ftmul+1
  5311  09E9  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5312  09EE  22C2               	fcall	PL24	;call to abstracted procedure
  5313  09EF  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5314  09F4  082D               	movf	?___ftmul,w
  5315  09F5  00CB               	movwf	_fround$2943
  5316  09F6  082E               	movf	?___ftmul+1,w
  5317  09F7  00CC               	movwf	_fround$2943+1
  5318  09F8  082F               	movf	?___ftmul+2,w
  5319  09F9  00CD               	movwf	_fround$2943+2
  5320  09FA  303F               	movlw	63
  5321  09FB  01AD               	clrf	?___ftmul
  5322  09FC  01AE               	clrf	?___ftmul+1
  5323  09FD  00AF               	movwf	?___ftmul+2
  5324  09FE  084B               	movf	_fround$2943,w
  5325  09FF  00B0               	movwf	?___ftmul+3
  5326  0A00  084C               	movf	_fround$2943+1,w
  5327  0A01  00B1               	movwf	?___ftmul+4
  5328  0A02  084D               	movf	_fround$2943+2,w
  5329  0A03  00B2               	movwf	?___ftmul+5
  5330  0A04  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5331  0A09  2ABB               	ljmp	PL17	;call to abstracted procedure
  5332  0A0A                     l5737:	
  5333  0A0A  300B               	movlw	11
  5334  0A0B  0251               	subwf	fround@prec,w
  5335  0A0C  1C03               	skipc
  5336  0A0D  2A5E               	goto	l5745
  5337  0A0E  3003               	movlw	3
  5338  0A0F  00F9               	movwf	?___bmul
  5339  0A10  300A               	movlw	10
  5340  0A11  00F0               	movwf	?___lbmod
  5341  0A12  0851               	movf	fround@prec,w
  5342  0A13  229F               	fcall	___lbmod
  5343  0A14  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5344  0A19  3E01               	addlw	low (__npowers_-__stringbase)
  5345  0A1A  0084               	movwf	4
  5346  0A1B  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5347  0A20  00AD               	movwf	?___ftmul
  5348  0A21  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5349  0A26  00AE               	movwf	?___ftmul+1
  5350  0A27  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5351  0A2C  00AF               	movwf	?___ftmul+2
  5352  0A2D  3003               	movlw	3
  5353  0A2E  00F9               	movwf	?___bmul
  5354  0A2F  300A               	movlw	10
  5355  0A30  00F5               	movwf	?___lbdiv
  5356  0A31  0851               	movf	fround@prec,w
  5357  0A32  2284               	fcall	___lbdiv
  5358  0A33  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5359  0A38  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5360  0A39  0084               	movwf	4
  5361  0A3A  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5362  0A3F  00B0               	movwf	?___ftmul+3
  5363  0A40  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5364  0A45  00B1               	movwf	?___ftmul+4
  5365  0A46  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5366  0A4B  00B2               	movwf	?___ftmul+5
  5367  0A4C  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5368  0A51  22CA  120A  158A   	fcall	PL29	;call to abstracted procedure
  5369  0A54  303F               	movlw	63
  5370  0A55  01AD               	clrf	?___ftmul
  5371  0A56  01AE               	clrf	?___ftmul+1
  5372  0A57  22C2               	fcall	PL24	;call to abstracted procedure
  5373  0A58  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5374  0A5D  2ABB               	ljmp	PL17	;call to abstracted procedure
  5375  0A5E                     l5745:	
  5376  0A5E  303F               	movlw	63
  5377  0A5F  01AD               	clrf	?___ftmul
  5378  0A60  01AE               	clrf	?___ftmul+1
  5379  0A61  00AF               	movwf	?___ftmul+2
  5380  0A62  3003               	movlw	3
  5381  0A63  00F9               	movwf	?___bmul
  5382  0A64  0851               	movf	fround@prec,w
  5383  0A65  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5384  0A6A  3E01               	addlw	low (__npowers_-__stringbase)
  5385  0A6B  0084               	movwf	4
  5386  0A6C  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5387  0A71  00B0               	movwf	?___ftmul+3
  5388  0A72  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5389  0A77  00B1               	movwf	?___ftmul+4
  5390  0A78  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5391  0A7D  00B2               	movwf	?___ftmul+5
  5392  0A7E  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5393  0A83  2ABB               	ljmp	PL17	;call to abstracted procedure
  5394  0A84                     __end_of_fround:	
  5395  0A84                     __ptext743:	
  5396 ;; =============== function ___lbmod ends ============
  5397                           
  5398                           
  5399 ;; *************** function ___lbdiv *****************
  5400 ;; Defined at:
  5401 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbdiv.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;  dividend        1    wreg     unsigned char 
  5404 ;;  divisor         1    5[COMMON] unsigned char 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  dividend        1    6[COMMON] unsigned char 
  5407 ;;  quotient        1    8[COMMON] unsigned char 
  5408 ;;  counter         1    7[COMMON] unsigned char 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      unsigned char 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0
  5413 ;; Tracked objects:
  5414 ;;		On entry : 60/0
  5415 ;;		On exit  : 60/0
  5416 ;;		Unchanged: FFF9F/0
  5417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5418 ;;      Params:         1       0       0       0       0
  5419 ;;      Locals:         3       0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0
  5421 ;;      Totals:         4       0       0       0       0
  5422 ;;Total ram usage:        4 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; This function calls:
  5425 ;;		Nothing
  5426 ;; This function is called by:
  5427 ;;		_fround
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430  0A84                     ___lbdiv:	
  5431                           
  5432                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5433                           ;___lbdiv@dividend stored from wreg
  5434  0A84  00F6               	movwf	___lbdiv@dividend
  5435  0A85  01F8               	clrf	___lbdiv@quotient
  5436  0A86  0875               	movf	___lbdiv@divisor,w
  5437  0A87  1903               	btfsc	3,2
  5438  0A88  2A9D               	goto	l5283
  5439  0A89  01F7               	clrf	___lbdiv@counter
  5440  0A8A                     l5269:	
  5441  0A8A  0AF7               	incf	___lbdiv@counter,f
  5442  0A8B  1BF5               	btfsc	___lbdiv@divisor,7
  5443  0A8C  2A90               	goto	l2341
  5444  0A8D  1003               	clrc
  5445  0A8E  0DF5               	rlf	___lbdiv@divisor,f
  5446  0A8F  2A8A               	goto	l5269
  5447  0A90                     l2341:	
  5448  0A90  1003               	clrc
  5449  0A91  0DF8               	rlf	___lbdiv@quotient,f
  5450  0A92  0875               	movf	___lbdiv@divisor,w
  5451  0A93  0276               	subwf	___lbdiv@dividend,w
  5452  0A94  1C03               	skipc
  5453  0A95  2A9A               	goto	L17
  5454  0A96  0875               	movf	___lbdiv@divisor,w
  5455  0A97  02F6               	subwf	___lbdiv@dividend,f
  5456  0A98  1478               	bsf	___lbdiv@quotient,0
  5457  0A99  1003               	clrc
  5458  0A9A                     L17:	
  5459  0A9A  0CF5               	rrf	___lbdiv@divisor,f
  5460  0A9B  0BF7               	decfsz	___lbdiv@counter,f
  5461  0A9C  2A90               	goto	l2341
  5462  0A9D                     l5283:	
  5463  0A9D  0878               	movf	___lbdiv@quotient,w
  5464  0A9E  0008               	return
  5465  0A9F                     __end_of___lbdiv:	
  5466  0A9F                     __ptext742:	
  5467 ;; =============== function ___ftpack ends ============
  5468                           
  5469                           
  5470 ;; *************** function ___lbmod *****************
  5471 ;; Defined at:
  5472 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbmod.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;  dividend        1    wreg     unsigned char 
  5475 ;;  divisor         1    0[COMMON] unsigned char 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  dividend        1    2[COMMON] unsigned char 
  5478 ;;  rem             1    4[COMMON] unsigned char 
  5479 ;;  counter         1    3[COMMON] unsigned char 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      unsigned char 
  5482 ;; Registers used:
  5483 ;;		wreg, status,2, status,0
  5484 ;; Tracked objects:
  5485 ;;		On entry : 60/0
  5486 ;;		On exit  : 60/0
  5487 ;;		Unchanged: FFF9F/0
  5488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5489 ;;      Params:         1       0       0       0       0
  5490 ;;      Locals:         3       0       0       0       0
  5491 ;;      Temps:          1       0       0       0       0
  5492 ;;      Totals:         5       0       0       0       0
  5493 ;;Total ram usage:        5 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; This function calls:
  5496 ;;		Nothing
  5497 ;; This function is called by:
  5498 ;;		_fround
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501  0A9F                     ___lbmod:	
  5502                           
  5503                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5504                           ;___lbmod@dividend stored from wreg
  5505  0A9F  00F2               	movwf	___lbmod@dividend
  5506  0AA0  3008               	movlw	8
  5507  0AA1  00F3               	movwf	___lbmod@counter
  5508  0AA2  01F4               	clrf	___lbmod@rem
  5509  0AA3                     l5291:	
  5510  0AA3  0872               	movf	___lbmod@dividend,w
  5511  0AA4  00F1               	movwf	??___lbmod
  5512  0AA5  3007               	movlw	7
  5513  0AA6  1003               	clrc
  5514  0AA7                     L16:	
  5515  0AA7  0CF1               	rrf	??___lbmod,f
  5516  0AA8  3EFF               	addlw	-1
  5517  0AA9  1003               	clrc
  5518  0AAA  1D03               	skipz
  5519  0AAB  2AA7               	goto	L16
  5520  0AAC  0D74               	rlf	___lbmod@rem,w
  5521  0AAD  0471               	iorwf	??___lbmod,w
  5522  0AAE  00F4               	movwf	___lbmod@rem
  5523  0AAF  1003               	clrc
  5524  0AB0  0DF2               	rlf	___lbmod@dividend,f
  5525  0AB1  0870               	movf	___lbmod@divisor,w
  5526  0AB2  0274               	subwf	___lbmod@rem,w
  5527  0AB3  1C03               	skipc
  5528  0AB4  2AB7               	goto	l5299
  5529  0AB5  0870               	movf	___lbmod@divisor,w
  5530  0AB6  02F4               	subwf	___lbmod@rem,f
  5531  0AB7                     l5299:	
  5532  0AB7  0BF3               	decfsz	___lbmod@counter,f
  5533  0AB8  2AA3               	goto	l5291
  5534  0AB9  0874               	movf	___lbmod@rem,w
  5535  0ABA  0008               	return
  5536  0ABB                     __end_of___lbmod:	
  5537  0ABB                     PL17:	
  5538  0ABB  082D               	movf	?___ftmul,w
  5539  0ABC  00C8               	movwf	?_fround
  5540  0ABD  082E               	movf	?___ftmul+1,w
  5541  0ABE  00C9               	movwf	?_fround+1
  5542  0ABF  082F               	movf	?___ftmul+2,w
  5543  0AC0  00CA               	movwf	?_fround+2
  5544  0AC1  0008               	return
  5545  0AC2                     PL24:	
  5546  0AC2  00AF               	movwf	?___ftmul+2
  5547  0AC3  084E               	movf	_fround$2942,w
  5548  0AC4  00B0               	movwf	?___ftmul+3
  5549  0AC5  084F               	movf	_fround$2942+1,w
  5550  0AC6  00B1               	movwf	?___ftmul+4
  5551  0AC7  0850               	movf	_fround$2942+2,w
  5552  0AC8  00B2               	movwf	?___ftmul+5
  5553  0AC9  0008               	return
  5554  0ACA                     PL29:	
  5555  0ACA  082D               	movf	?___ftmul,w
  5556  0ACB  00CE               	movwf	_fround$2942
  5557  0ACC  082E               	movf	?___ftmul+1,w
  5558  0ACD  00CF               	movwf	_fround$2942+1
  5559  0ACE  082F               	movf	?___ftmul+2,w
  5560  0ACF  00D0               	movwf	_fround$2942+2
  5561  0AD0  0008               	return
  5562                           
  5563                           	psect	text729
  5564  0CAB                     __ptext729:	
  5565 ;; =============== function ___lltoft ends ============
  5566                           
  5567                           
  5568 ;; *************** function ___lbtoft *****************
  5569 ;; Defined at:
  5570 ;;		line 28 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbtoft.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;  c               1    wreg     unsigned char 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;  c               1   11[COMMON] unsigned char 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  3    8[COMMON] float 
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0, pclath, cstack
  5579 ;; Tracked objects:
  5580 ;;		On entry : 60/20
  5581 ;;		On exit  : 60/20
  5582 ;;		Unchanged: FFF9F/0
  5583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5584 ;;      Params:         3       0       0       0       0
  5585 ;;      Locals:         1       0       0       0       0
  5586 ;;      Temps:          0       0       0       0       0
  5587 ;;      Totals:         4       0       0       0       0
  5588 ;;Total ram usage:        4 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    1
  5591 ;; This function calls:
  5592 ;;		___ftpack
  5593 ;; This function is called by:
  5594 ;;		_main
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597  0CAB                     ___lbtoft:	
  5598                           
  5599                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  5600                           ;___lbtoft@c stored from wreg
  5601  0CAB  00FB               	movwf	___lbtoft@c
  5602  0CAC  00F0               	movwf	?___ftpack
  5603  0CAD  308E               	movlw	142
  5604  0CAE  01F1               	clrf	?___ftpack+1
  5605  0CAF  01F2               	clrf	?___ftpack+2
  5606  0CB0  00F3               	movwf	?___ftpack+3
  5607  0CB1  01F4               	clrf	?___ftpack+4
  5608  0CB2  2769               	fcall	___ftpack
  5609  0CB3  0870               	movf	?___ftpack,w
  5610  0CB4  00F8               	movwf	?___lbtoft
  5611  0CB5  0871               	movf	?___ftpack+1,w
  5612  0CB6  00F9               	movwf	?___lbtoft+1
  5613  0CB7  0872               	movf	?___ftpack+2,w
  5614  0CB8  00FA               	movwf	?___lbtoft+2
  5615  0CB9  0008               	return
  5616  0CBA                     __end_of___lbtoft:	
  5617  0CBA                     __ptext728:	
  5618 ;; =============== function _I2C_EEOUT ends ============
  5619                           
  5620                           
  5621 ;; *************** function ___lltoft *****************
  5622 ;; Defined at:
  5623 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lltoft.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  c               4    8[COMMON] unsigned long 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  exp             1   12[COMMON] unsigned char 
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  3    8[COMMON] float 
  5630 ;; Registers used:
  5631 ;;		wreg, status,2, status,0, pclath, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 60/20
  5634 ;;		On exit  : 60/20
  5635 ;;		Unchanged: FFF9F/0
  5636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5637 ;;      Params:         4       0       0       0       0
  5638 ;;      Locals:         1       0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0
  5640 ;;      Totals:         5       0       0       0       0
  5641 ;;Total ram usage:        5 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    1
  5644 ;; This function calls:
  5645 ;;		___ftpack
  5646 ;; This function is called by:
  5647 ;;		_sprintf
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650  0CBA                     ___lltoft:	
  5651                           
  5652                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5653  0CBA  308E               	movlw	142
  5654  0CBB  00FC               	movwf	___lltoft@exp
  5655  0CBC                     l5695:	
  5656  0CBC  30FF               	movlw	255
  5657  0CBD  057B               	andwf	___lltoft@c+3,w
  5658  0CBE  1903               	btfsc	3,2
  5659  0CBF  2CC7               	goto	l5697
  5660  0CC0  1003               	clrc
  5661  0CC1  0CFB               	rrf	___lltoft@c+3,f
  5662  0CC2  0CFA               	rrf	___lltoft@c+2,f
  5663  0CC3  0CF9               	rrf	___lltoft@c+1,f
  5664  0CC4  0CF8               	rrf	___lltoft@c,f
  5665  0CC5  0AFC               	incf	___lltoft@exp,f
  5666  0CC6  2CBC               	goto	l5695
  5667  0CC7                     l5697:	
  5668  0CC7  0878               	movf	___lltoft@c,w
  5669  0CC8  00F0               	movwf	?___ftpack
  5670  0CC9  0879               	movf	___lltoft@c+1,w
  5671  0CCA  00F1               	movwf	?___ftpack+1
  5672  0CCB  087A               	movf	___lltoft@c+2,w
  5673  0CCC  00F2               	movwf	?___ftpack+2
  5674  0CCD  087C               	movf	___lltoft@exp,w
  5675  0CCE  00F3               	movwf	?___ftpack+3
  5676  0CCF  01F4               	clrf	?___ftpack+4
  5677  0CD0  2769               	fcall	___ftpack
  5678  0CD1  0870               	movf	?___ftpack,w
  5679  0CD2  00F8               	movwf	?___lltoft
  5680  0CD3  0871               	movf	?___ftpack+1,w
  5681  0CD4  00F9               	movwf	?___lltoft+1
  5682  0CD5  0872               	movf	?___ftpack+2,w
  5683  0CD6  00FA               	movwf	?___lltoft+2
  5684  0CD7  0008               	return
  5685  0CD8                     __end_of___lltoft:	
  5686  0CD8                     __ptext724:	
  5687 ;; =============== function ___ftsub ends ============
  5688                           
  5689                           
  5690 ;; *************** function _scale *****************
  5691 ;; Defined at:
  5692 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  scl             1    wreg     char 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  scl             1   38[BANK0 ] char 
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  3   28[BANK0 ] char 
  5699 ;; Registers used:
  5700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5701 ;; Tracked objects:
  5702 ;;		On entry : 60/20
  5703 ;;		On exit  : 60/0
  5704 ;;		Unchanged: FFF9F/0
  5705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5706 ;;      Params:         0       3       0       0       0
  5707 ;;      Locals:         0       4       0       0       0
  5708 ;;      Temps:          0       4       0       0       0
  5709 ;;      Totals:         0      11       0       0       0
  5710 ;;Total ram usage:       11 bytes
  5711 ;; Hardware stack levels used:    1
  5712 ;; Hardware stack levels required when called:    2
  5713 ;; This function calls:
  5714 ;;		___awmod
  5715 ;;		___awdiv
  5716 ;;		___ftmul
  5717 ;;		___bmul
  5718 ;; This function is called by:
  5719 ;;		_sprintf
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722  0CD8                     _scale:	
  5723                           
  5724                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5725                           ;scale@scl stored from wreg
  5726  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  5727  0CD9  00C6               	movwf	scale@scl
  5728  0CDA  1FC6               	btfss	scale@scl,7
  5729  0CDB  2DA4               	goto	l5771
  5730  0CDC  09C6               	comf	scale@scl,f
  5731  0CDD  0AC6               	incf	scale@scl,f
  5732  0CDE  0846               	movf	scale@scl,w
  5733  0CDF  3A80               	xorlw	128
  5734  0CE0  3E12               	addlw	-238
  5735  0CE1  1C03               	skipc
  5736  0CE2  2D48               	goto	l5761
  5737  0CE3  300A               	movlw	10
  5738  0CE4  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5739  0CE7  26AF  120A  158A   	fcall	___awmod
  5740  0CEA  0871               	movf	?___awmod+1,w
  5741  0CEB  00F9               	movwf	?___awdiv+3
  5742  0CEC  0870               	movf	?___awmod,w
  5743  0CED  00F8               	movwf	?___awdiv+2
  5744  0CEE  266A  120A  158A   	fcall	___awdiv
  5745  0CF1  27F8               	fcall	PL27	;call to abstracted procedure
  5746  0CF2  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5747  0CF3  0084               	movwf	4
  5748  0CF4  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5749  0CF9  00AD               	movwf	?___ftmul
  5750  0CFA  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5751  0CFF  00AE               	movwf	?___ftmul+1
  5752  0D00  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5753  0D05  27E0  120A  158A   	fcall	PL23	;call to abstracted procedure
  5754  0D08  1BF8               	btfsc	?___awdiv+2,7
  5755  0D09  03F9               	decf	?___awdiv+3,f
  5756  0D0A  266A  120A  158A   	fcall	___awdiv
  5757  0D0D  27A7               	fcall	PL8	;call to abstracted procedure
  5758  0D0E  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5759  0D0F  0084               	movwf	4
  5760  0D10  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5761  0D15  00B0               	movwf	?___ftmul+3
  5762  0D16  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5763  0D1B  00B1               	movwf	?___ftmul+4
  5764  0D1C  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5765  0D21  00B2               	movwf	?___ftmul+5
  5766  0D22  26EC  120A  158A   	fcall	___ftmul
  5767  0D25  27AF  120A  158A   	fcall	PL9	;call to abstracted procedure
  5768  0D28  1BF2               	btfsc	?___awmod+2,7
  5769  0D29  03F3               	decf	?___awmod+3,f
  5770  0D2A  26AF  120A  158A   	fcall	___awmod
  5771  0D2D  27C3               	fcall	PL12	;call to abstracted procedure
  5772  0D2E  3E01               	addlw	low (__npowers_-__stringbase)
  5773  0D2F  0084               	movwf	4
  5774  0D30  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5775  0D35  00AD               	movwf	?___ftmul
  5776  0D36  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5777  0D3B  00AE               	movwf	?___ftmul+1
  5778  0D3C  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5779  0D41  27E8  120A  158A   	fcall	PL25	;call to abstracted procedure
  5780  0D44  26EC  120A  158A   	fcall	___ftmul
  5781  0D47  2FBC               	ljmp	PL10	;call to abstracted procedure
  5782  0D48                     l5761:	
  5783  0D48  0846               	movf	scale@scl,w
  5784  0D49  3A80               	xorlw	128
  5785  0D4A  3E75               	addlw	-139
  5786  0D4B  1C03               	skipc
  5787  0D4C  2D8D               	goto	l5767
  5788  0D4D  300A               	movlw	10
  5789  0D4E  00F0               	movwf	?___awmod
  5790  0D4F  01F1               	clrf	?___awmod+1
  5791  0D50  0846               	movf	scale@scl,w
  5792  0D51  00F2               	movwf	?___awmod+2
  5793  0D52  01F3               	clrf	?___awmod+3
  5794  0D53  1BF2               	btfsc	?___awmod+2,7
  5795  0D54  03F3               	decf	?___awmod+3,f
  5796  0D55  26AF  120A  158A   	fcall	___awmod
  5797  0D58  27C3               	fcall	PL12	;call to abstracted procedure
  5798  0D59  3E01               	addlw	low (__npowers_-__stringbase)
  5799  0D5A  0084               	movwf	4
  5800  0D5B  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5801  0D60  00AD               	movwf	?___ftmul
  5802  0D61  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5803  0D66  00AE               	movwf	?___ftmul+1
  5804  0D67  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5805  0D6C  27F0  120A  158A   	fcall	PL26	;call to abstracted procedure
  5806  0D6F  1BF8               	btfsc	?___awdiv+2,7
  5807  0D70  03F9               	decf	?___awdiv+3,f
  5808  0D71  266A  120A  158A   	fcall	___awdiv
  5809  0D74  27A7               	fcall	PL8	;call to abstracted procedure
  5810  0D75  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5811  0D76  0084               	movwf	4
  5812  0D77  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5813  0D7C  00B0               	movwf	?___ftmul+3
  5814  0D7D  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5815  0D82  00B1               	movwf	?___ftmul+4
  5816  0D83  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5817  0D88  00B2               	movwf	?___ftmul+5
  5818  0D89  26EC  120A  158A   	fcall	___ftmul
  5819  0D8C  2FBC               	ljmp	PL10	;call to abstracted procedure
  5820  0D8D                     l5767:	
  5821  0D8D  3003               	movlw	3
  5822  0D8E  00F9               	movwf	?___bmul
  5823  0D8F  0846               	movf	scale@scl,w
  5824  0D90  275B               	fcall	___bmul
  5825  0D91  3E01               	addlw	low (__npowers_-__stringbase)
  5826  0D92  0084               	movwf	4
  5827  0D93  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5828  0D98  00BC               	movwf	?_scale
  5829  0D99  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5830  0D9E  00BD               	movwf	?_scale+1
  5831  0D9F  120A  158A  200A   	fcall	stringdir
  5832  0DA2  00BE               	movwf	?_scale+2
  5833  0DA3  0008               	return
  5834  0DA4                     l5771:	
  5835  0DA4  0846               	movf	scale@scl,w
  5836  0DA5  3A80               	xorlw	128
  5837  0DA6  3E12               	addlw	-238
  5838  0DA7  1C03               	skipc
  5839  0DA8  2E0E               	goto	l5779
  5840  0DA9  300A               	movlw	10
  5841  0DAA  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5842  0DAD  26AF  120A  158A   	fcall	___awmod
  5843  0DB0  0871               	movf	?___awmod+1,w
  5844  0DB1  00F9               	movwf	?___awdiv+3
  5845  0DB2  0870               	movf	?___awmod,w
  5846  0DB3  00F8               	movwf	?___awdiv+2
  5847  0DB4  266A  120A  158A   	fcall	___awdiv
  5848  0DB7  27F8               	fcall	PL27	;call to abstracted procedure
  5849  0DB8  3E43               	addlw	low ((__powers_-__stringbase+27))
  5850  0DB9  0084               	movwf	4
  5851  0DBA  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5852  0DBF  00AD               	movwf	?___ftmul
  5853  0DC0  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5854  0DC5  00AE               	movwf	?___ftmul+1
  5855  0DC6  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5856  0DCB  27E0  120A  158A   	fcall	PL23	;call to abstracted procedure
  5857  0DCE  1BF8               	btfsc	?___awdiv+2,7
  5858  0DCF  03F9               	decf	?___awdiv+3,f
  5859  0DD0  266A  120A  158A   	fcall	___awdiv
  5860  0DD3  27A7               	fcall	PL8	;call to abstracted procedure
  5861  0DD4  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5862  0DD5  0084               	movwf	4
  5863  0DD6  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5864  0DDB  00B0               	movwf	?___ftmul+3
  5865  0DDC  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5866  0DE1  00B1               	movwf	?___ftmul+4
  5867  0DE2  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5868  0DE7  00B2               	movwf	?___ftmul+5
  5869  0DE8  26EC  120A  158A   	fcall	___ftmul
  5870  0DEB  27AF  120A  158A   	fcall	PL9	;call to abstracted procedure
  5871  0DEE  1BF2               	btfsc	?___awmod+2,7
  5872  0DEF  03F3               	decf	?___awmod+3,f
  5873  0DF0  26AF  120A  158A   	fcall	___awmod
  5874  0DF3  27C3               	fcall	PL12	;call to abstracted procedure
  5875  0DF4  3E28               	addlw	low (__powers_-__stringbase)
  5876  0DF5  0084               	movwf	4
  5877  0DF6  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5878  0DFB  00AD               	movwf	?___ftmul
  5879  0DFC  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5880  0E01  00AE               	movwf	?___ftmul+1
  5881  0E02  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5882  0E07  27E8  120A  158A   	fcall	PL25	;call to abstracted procedure
  5883  0E0A  26EC  120A  158A   	fcall	___ftmul
  5884  0E0D  2FBC               	ljmp	PL10	;call to abstracted procedure
  5885  0E0E                     l5779:	
  5886  0E0E  0846               	movf	scale@scl,w
  5887  0E0F  3A80               	xorlw	128
  5888  0E10  3E75               	addlw	-139
  5889  0E11  1C03               	skipc
  5890  0E12  2E53               	goto	l5785
  5891  0E13  300A               	movlw	10
  5892  0E14  00F0               	movwf	?___awmod
  5893  0E15  01F1               	clrf	?___awmod+1
  5894  0E16  0846               	movf	scale@scl,w
  5895  0E17  00F2               	movwf	?___awmod+2
  5896  0E18  01F3               	clrf	?___awmod+3
  5897  0E19  1BF2               	btfsc	?___awmod+2,7
  5898  0E1A  03F3               	decf	?___awmod+3,f
  5899  0E1B  26AF  120A  158A   	fcall	___awmod
  5900  0E1E  27C3               	fcall	PL12	;call to abstracted procedure
  5901  0E1F  3E28               	addlw	low (__powers_-__stringbase)
  5902  0E20  0084               	movwf	4
  5903  0E21  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5904  0E26  00AD               	movwf	?___ftmul
  5905  0E27  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5906  0E2C  00AE               	movwf	?___ftmul+1
  5907  0E2D  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5908  0E32  27F0  120A  158A   	fcall	PL26	;call to abstracted procedure
  5909  0E35  1BF8               	btfsc	?___awdiv+2,7
  5910  0E36  03F9               	decf	?___awdiv+3,f
  5911  0E37  266A  120A  158A   	fcall	___awdiv
  5912  0E3A  27A7               	fcall	PL8	;call to abstracted procedure
  5913  0E3B  3E43               	addlw	low ((__powers_-__stringbase+27))
  5914  0E3C  0084               	movwf	4
  5915  0E3D  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5916  0E42  00B0               	movwf	?___ftmul+3
  5917  0E43  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5918  0E48  00B1               	movwf	?___ftmul+4
  5919  0E49  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5920  0E4E  00B2               	movwf	?___ftmul+5
  5921  0E4F  26EC  120A  158A   	fcall	___ftmul
  5922  0E52  2FBC               	ljmp	PL10	;call to abstracted procedure
  5923  0E53                     l5785:	
  5924  0E53  3003               	movlw	3
  5925  0E54  00F9               	movwf	?___bmul
  5926  0E55  0846               	movf	scale@scl,w
  5927  0E56  275B               	fcall	___bmul
  5928  0E57  3E28               	addlw	low (__powers_-__stringbase)
  5929  0E58  0084               	movwf	4
  5930  0E59  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5931  0E5E  00BC               	movwf	?_scale
  5932  0E5F  120A  158A  200A   	fcall	stringdir
      +       120A  158A         
  5933  0E64  00BD               	movwf	?_scale+1
  5934  0E65  120A  158A  200A   	fcall	stringdir
  5935  0E68  00BE               	movwf	?_scale+2
  5936  0E69  0008               	return
  5937  0E6A                     __end_of_scale:	
  5938  0E6A                     __ptext739:	
  5939 ;; =============== function ___llmod ends ============
  5940                           
  5941                           
  5942 ;; *************** function ___awdiv *****************
  5943 ;; Defined at:
  5944 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;  divisor         2    6[COMMON] int 
  5947 ;;  dividend        2    8[COMMON] int 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;  quotient        2   12[COMMON] int 
  5950 ;;  sign            1   11[COMMON] unsigned char 
  5951 ;;  counter         1   10[COMMON] unsigned char 
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  2    6[COMMON] int 
  5954 ;; Registers used:
  5955 ;;		wreg, status,2, status,0
  5956 ;; Tracked objects:
  5957 ;;		On entry : 40/20
  5958 ;;		On exit  : 40/20
  5959 ;;		Unchanged: FFFBF/0
  5960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5961 ;;      Params:         4       0       0       0       0
  5962 ;;      Locals:         4       0       0       0       0
  5963 ;;      Temps:          0       0       0       0       0
  5964 ;;      Totals:         8       0       0       0       0
  5965 ;;Total ram usage:        8 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; This function calls:
  5968 ;;		Nothing
  5969 ;; This function is called by:
  5970 ;;		_scale
  5971 ;;		_sprintf
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974  0E6A                     ___awdiv:	
  5975                           
  5976                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5977  0E6A  01FB               	clrf	___awdiv@sign
  5978  0E6B  1FF7               	btfss	___awdiv@divisor+1,7
  5979  0E6C  2E74               	goto	l5379
  5980  0E6D  09F6               	comf	___awdiv@divisor,f
  5981  0E6E  09F7               	comf	___awdiv@divisor+1,f
  5982  0E6F  0AF6               	incf	___awdiv@divisor,f
  5983  0E70  1903               	skipnz
  5984  0E71  0AF7               	incf	___awdiv@divisor+1,f
  5985  0E72  01FB               	clrf	___awdiv@sign
  5986  0E73  0AFB               	incf	___awdiv@sign,f
  5987  0E74                     l5379:	
  5988  0E74  1FF9               	btfss	___awdiv@dividend+1,7
  5989  0E75  2E7D               	goto	l5385
  5990  0E76  09F8               	comf	___awdiv@dividend,f
  5991  0E77  09F9               	comf	___awdiv@dividend+1,f
  5992  0E78  0AF8               	incf	___awdiv@dividend,f
  5993  0E79  1903               	skipnz
  5994  0E7A  0AF9               	incf	___awdiv@dividend+1,f
  5995  0E7B  3001               	movlw	1
  5996  0E7C  06FB               	xorwf	___awdiv@sign,f
  5997  0E7D                     l5385:	
  5998  0E7D  01FC               	clrf	___awdiv@quotient
  5999  0E7E  01FD               	clrf	___awdiv@quotient+1
  6000  0E7F  0877               	movf	___awdiv@divisor+1,w
  6001  0E80  0476               	iorwf	___awdiv@divisor,w
  6002  0E81  1903               	skipnz
  6003  0E82  2EA2               	goto	l5407
  6004  0E83  01FA               	clrf	___awdiv@counter
  6005  0E84                     L14:	
  6006  0E84  0AFA               	incf	___awdiv@counter,f
  6007  0E85  1BF7               	btfsc	___awdiv@divisor+1,7
  6008  0E86  2E8B               	goto	l5395
  6009  0E87  1003               	clrc
  6010  0E88  0DF6               	rlf	___awdiv@divisor,f
  6011  0E89  0DF7               	rlf	___awdiv@divisor+1,f
  6012  0E8A  2E84               	goto	L14
  6013  0E8B                     l5395:	
  6014  0E8B  1003               	clrc
  6015  0E8C  0DFC               	rlf	___awdiv@quotient,f
  6016  0E8D  0DFD               	rlf	___awdiv@quotient+1,f
  6017  0E8E  0877               	movf	___awdiv@divisor+1,w
  6018  0E8F  0279               	subwf	___awdiv@dividend+1,w
  6019  0E90  1D03               	skipz
  6020  0E91  2E94               	goto	u2355
  6021  0E92  0876               	movf	___awdiv@divisor,w
  6022  0E93  0278               	subwf	___awdiv@dividend,w
  6023  0E94                     u2355:	
  6024  0E94  1C03               	skipc
  6025  0E95  2E9E               	goto	L15
  6026  0E96  0876               	movf	___awdiv@divisor,w
  6027  0E97  02F8               	subwf	___awdiv@dividend,f
  6028  0E98  0877               	movf	___awdiv@divisor+1,w
  6029  0E99  1C03               	skipc
  6030  0E9A  03F9               	decf	___awdiv@dividend+1,f
  6031  0E9B  02F9               	subwf	___awdiv@dividend+1,f
  6032  0E9C  147C               	bsf	___awdiv@quotient,0
  6033  0E9D  1003               	clrc
  6034  0E9E                     L15:	
  6035  0E9E  0CF7               	rrf	___awdiv@divisor+1,f
  6036  0E9F  0CF6               	rrf	___awdiv@divisor,f
  6037  0EA0  0BFA               	decfsz	___awdiv@counter,f
  6038  0EA1  2E8B               	goto	l5395
  6039  0EA2                     l5407:	
  6040  0EA2  087B               	movf	___awdiv@sign,w
  6041  0EA3  1903               	btfsc	3,2
  6042  0EA4  2EAA               	goto	l5411
  6043  0EA5  09FC               	comf	___awdiv@quotient,f
  6044  0EA6  09FD               	comf	___awdiv@quotient+1,f
  6045  0EA7  0AFC               	incf	___awdiv@quotient,f
  6046  0EA8  1903               	skipnz
  6047  0EA9  0AFD               	incf	___awdiv@quotient+1,f
  6048  0EAA                     l5411:	
  6049  0EAA  087D               	movf	___awdiv@quotient+1,w
  6050  0EAB  00F7               	movwf	?___awdiv+1
  6051  0EAC  087C               	movf	___awdiv@quotient,w
  6052  0EAD  00F6               	movwf	?___awdiv
  6053  0EAE  0008               	return
  6054  0EAF                     __end_of___awdiv:	
  6055  0EAF                     __ptext734:	
  6056 ;; =============== function _pause ends ============
  6057                           
  6058                           
  6059 ;; *************** function ___awmod *****************
  6060 ;; Defined at:
  6061 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  divisor         2    0[COMMON] int 
  6064 ;;  dividend        2    2[COMMON] int 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  sign            1    5[COMMON] unsigned char 
  6067 ;;  counter         1    4[COMMON] unsigned char 
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  2    0[COMMON] int 
  6070 ;; Registers used:
  6071 ;;		wreg, status,2, status,0
  6072 ;; Tracked objects:
  6073 ;;		On entry : 60/0
  6074 ;;		On exit  : 60/0
  6075 ;;		Unchanged: FFF9F/0
  6076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6077 ;;      Params:         4       0       0       0       0
  6078 ;;      Locals:         2       0       0       0       0
  6079 ;;      Temps:          0       0       0       0       0
  6080 ;;      Totals:         6       0       0       0       0
  6081 ;;Total ram usage:        6 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_scale
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089  0EAF                     ___awmod:	
  6090                           
  6091                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6092  0EAF  01F5               	clrf	___awmod@sign
  6093  0EB0  1FF3               	btfss	___awmod@dividend+1,7
  6094  0EB1  2EB9               	goto	l5497
  6095  0EB2  09F2               	comf	___awmod@dividend,f
  6096  0EB3  09F3               	comf	___awmod@dividend+1,f
  6097  0EB4  0AF2               	incf	___awmod@dividend,f
  6098  0EB5  1903               	skipnz
  6099  0EB6  0AF3               	incf	___awmod@dividend+1,f
  6100  0EB7  01F5               	clrf	___awmod@sign
  6101  0EB8  0AF5               	incf	___awmod@sign,f
  6102  0EB9                     l5497:	
  6103  0EB9  1FF1               	btfss	___awmod@divisor+1,7
  6104  0EBA  2EC0               	goto	l5501
  6105  0EBB  09F0               	comf	___awmod@divisor,f
  6106  0EBC  09F1               	comf	___awmod@divisor+1,f
  6107  0EBD  0AF0               	incf	___awmod@divisor,f
  6108  0EBE  1903               	skipnz
  6109  0EBF  0AF1               	incf	___awmod@divisor+1,f
  6110  0EC0                     l5501:	
  6111  0EC0  0871               	movf	___awmod@divisor+1,w
  6112  0EC1  0470               	iorwf	___awmod@divisor,w
  6113  0EC2  1903               	skipnz
  6114  0EC3  2EDF               	goto	l5517
  6115  0EC4  01F4               	clrf	___awmod@counter
  6116  0EC5                     L7:	
  6117  0EC5  0AF4               	incf	___awmod@counter,f
  6118  0EC6  1BF1               	btfsc	___awmod@divisor+1,7
  6119  0EC7  2ECC               	goto	l5509
  6120  0EC8  1003               	clrc
  6121  0EC9  0DF0               	rlf	___awmod@divisor,f
  6122  0ECA  0DF1               	rlf	___awmod@divisor+1,f
  6123  0ECB  2EC5               	goto	L7
  6124  0ECC                     l5509:	
  6125  0ECC  0871               	movf	___awmod@divisor+1,w
  6126  0ECD  0273               	subwf	___awmod@dividend+1,w
  6127  0ECE  1D03               	skipz
  6128  0ECF  2ED2               	goto	u2545
  6129  0ED0  0870               	movf	___awmod@divisor,w
  6130  0ED1  0272               	subwf	___awmod@dividend,w
  6131  0ED2                     u2545:	
  6132  0ED2  1C03               	skipc
  6133  0ED3  2EDB               	goto	L8
  6134  0ED4  0870               	movf	___awmod@divisor,w
  6135  0ED5  02F2               	subwf	___awmod@dividend,f
  6136  0ED6  0871               	movf	___awmod@divisor+1,w
  6137  0ED7  1C03               	skipc
  6138  0ED8  03F3               	decf	___awmod@dividend+1,f
  6139  0ED9  02F3               	subwf	___awmod@dividend+1,f
  6140  0EDA  1003               	clrc
  6141  0EDB                     L8:	
  6142  0EDB  0CF1               	rrf	___awmod@divisor+1,f
  6143  0EDC  0CF0               	rrf	___awmod@divisor,f
  6144  0EDD  0BF4               	decfsz	___awmod@counter,f
  6145  0EDE  2ECC               	goto	l5509
  6146  0EDF                     l5517:	
  6147  0EDF  0875               	movf	___awmod@sign,w
  6148  0EE0  1903               	btfsc	3,2
  6149  0EE1  2EE7               	goto	l5521
  6150  0EE2  09F2               	comf	___awmod@dividend,f
  6151  0EE3  09F3               	comf	___awmod@dividend+1,f
  6152  0EE4  0AF2               	incf	___awmod@dividend,f
  6153  0EE5  1903               	skipnz
  6154  0EE6  0AF3               	incf	___awmod@dividend+1,f
  6155  0EE7                     l5521:	
  6156  0EE7  0873               	movf	___awmod@dividend+1,w
  6157  0EE8  00F1               	movwf	?___awmod+1
  6158  0EE9  0872               	movf	___awmod@dividend,w
  6159  0EEA  00F0               	movwf	?___awmod
  6160  0EEB  0008               	return
  6161  0EEC                     __end_of___awmod:	
  6162  0EEC                     __ptext730:	
  6163 ;; =============== function ___lbtoft ends ============
  6164                           
  6165                           
  6166 ;; *************** function ___ftmul *****************
  6167 ;; Defined at:
  6168 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;  f1              3   13[BANK0 ] float 
  6171 ;;  f2              3   16[BANK0 ] float 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
  6174 ;;  sign            1   27[BANK0 ] unsigned char 
  6175 ;;  cntr            1   26[BANK0 ] unsigned char 
  6176 ;;  exp             1   22[BANK0 ] unsigned char 
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  3   13[BANK0 ] float 
  6179 ;; Registers used:
  6180 ;;		wreg, status,2, status,0, pclath, cstack
  6181 ;; Tracked objects:
  6182 ;;		On entry : 60/0
  6183 ;;		On exit  : 60/0
  6184 ;;		Unchanged: FFF9F/0
  6185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6186 ;;      Params:         0       6       0       0       0
  6187 ;;      Locals:         0       6       0       0       0
  6188 ;;      Temps:          0       3       0       0       0
  6189 ;;      Totals:         0      15       0       0       0
  6190 ;;Total ram usage:       15 bytes
  6191 ;; Hardware stack levels used:    1
  6192 ;; Hardware stack levels required when called:    1
  6193 ;; This function calls:
  6194 ;;		___ftpack
  6195 ;; This function is called by:
  6196 ;;		_main
  6197 ;;		_fround
  6198 ;;		_scale
  6199 ;;		_sprintf
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202  0EEC                     ___ftmul:	
  6203                           
  6204                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6205  0EEC  082D               	movf	___ftmul@f1,w
  6206  0EED  00B3               	movwf	??___ftmul
  6207  0EEE  082E               	movf	___ftmul@f1+1,w
  6208  0EEF  00B4               	movwf	??___ftmul+1
  6209  0EF0  082F               	movf	___ftmul@f1+2,w
  6210  0EF1  00B5               	movwf	??___ftmul+2
  6211  0EF2  1003               	clrc
  6212  0EF3  0D34               	rlf	??___ftmul+1,w
  6213  0EF4  0D35               	rlf	??___ftmul+2,w
  6214  0EF5  00B6               	movwf	___ftmul@exp
  6215  0EF6  08B6               	movf	___ftmul@exp,f
  6216  0EF7  1D03               	skipz
  6217  0EF8  2EFD               	goto	l5637
  6218  0EF9  01AD               	clrf	?___ftmul
  6219  0EFA  01AE               	clrf	?___ftmul+1
  6220  0EFB  01AF               	clrf	?___ftmul+2
  6221  0EFC  0008               	return
  6222  0EFD                     l5637:	
  6223  0EFD  0830               	movf	___ftmul@f2,w
  6224  0EFE  00B3               	movwf	??___ftmul
  6225  0EFF  0831               	movf	___ftmul@f2+1,w
  6226  0F00  00B4               	movwf	??___ftmul+1
  6227  0F01  0832               	movf	___ftmul@f2+2,w
  6228  0F02  00B5               	movwf	??___ftmul+2
  6229  0F03  1003               	clrc
  6230  0F04  0D34               	rlf	??___ftmul+1,w
  6231  0F05  0D35               	rlf	??___ftmul+2,w
  6232  0F06  00BB               	movwf	___ftmul@sign
  6233  0F07  08BB               	movf	___ftmul@sign,f
  6234  0F08  1D03               	skipz
  6235  0F09  2F0E               	goto	l5643
  6236  0F0A  01AD               	clrf	?___ftmul
  6237  0F0B  01AE               	clrf	?___ftmul+1
  6238  0F0C  01AF               	clrf	?___ftmul+2
  6239  0F0D  0008               	return
  6240  0F0E                     l5643:	
  6241  0F0E  083B               	movf	___ftmul@sign,w
  6242  0F0F  3E7B               	addlw	123
  6243  0F10  07B6               	addwf	___ftmul@exp,f
  6244  0F11  082F               	movf	___ftmul@f1+2,w
  6245  0F12  00BB               	movwf	___ftmul@sign
  6246  0F13  0832               	movf	___ftmul@f2+2,w
  6247  0F14  06BB               	xorwf	___ftmul@sign,f
  6248  0F15  3080               	movlw	128
  6249  0F16  05BB               	andwf	___ftmul@sign,f
  6250  0F17  3007               	movlw	7
  6251  0F18  17AE               	bsf	___ftmul@f1+1,7
  6252  0F19  17B1               	bsf	___ftmul@f2+1,7
  6253  0F1A  01B2               	clrf	___ftmul@f2+2
  6254  0F1B  01B7               	clrf	___ftmul@f3_as_product
  6255  0F1C  01B8               	clrf	___ftmul@f3_as_product+1
  6256  0F1D  01B9               	clrf	___ftmul@f3_as_product+2
  6257  0F1E  00BA               	movwf	___ftmul@cntr
  6258  0F1F                     l5661:	
  6259  0F1F  1C2D               	btfss	___ftmul@f1,0
  6260  0F20  2F29               	goto	l5665
  6261  0F21  0830               	movf	___ftmul@f2,w
  6262  0F22  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  6263  0F25  1803               	skipnc
  6264  0F26  0A32               	incf	___ftmul@f2+2,w
  6265  0F27  1D03               	btfss	3,2
  6266  0F28  07B9               	addwf	___ftmul@f3_as_product+2,f
  6267  0F29                     l5665:	
  6268  0F29  1003               	clrc
  6269  0F2A  0CAF               	rrf	___ftmul@f1+2,f
  6270  0F2B  0CAE               	rrf	___ftmul@f1+1,f
  6271  0F2C  0CAD               	rrf	___ftmul@f1,f
  6272  0F2D  1003               	clrc
  6273  0F2E  0DB0               	rlf	___ftmul@f2,f
  6274  0F2F  0DB1               	rlf	___ftmul@f2+1,f
  6275  0F30  0DB2               	rlf	___ftmul@f2+2,f
  6276  0F31  0BBA               	decfsz	___ftmul@cntr,f
  6277  0F32  2F1F               	goto	l5661
  6278  0F33  3009               	movlw	9
  6279  0F34  00BA               	movwf	___ftmul@cntr
  6280  0F35                     l5673:	
  6281  0F35  1C2D               	btfss	___ftmul@f1,0
  6282  0F36  2F3F               	goto	l5677
  6283  0F37  0830               	movf	___ftmul@f2,w
  6284  0F38  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  6285  0F3B  1803               	skipnc
  6286  0F3C  0A32               	incf	___ftmul@f2+2,w
  6287  0F3D  1D03               	btfss	3,2
  6288  0F3E  07B9               	addwf	___ftmul@f3_as_product+2,f
  6289  0F3F                     l5677:	
  6290  0F3F  1003               	clrc
  6291  0F40  0CAF               	rrf	___ftmul@f1+2,f
  6292  0F41  0CAE               	rrf	___ftmul@f1+1,f
  6293  0F42  0CAD               	rrf	___ftmul@f1,f
  6294  0F43  1003               	clrc
  6295  0F44  0CB9               	rrf	___ftmul@f3_as_product+2,f
  6296  0F45  0CB8               	rrf	___ftmul@f3_as_product+1,f
  6297  0F46  0CB7               	rrf	___ftmul@f3_as_product,f
  6298  0F47  0BBA               	decfsz	___ftmul@cntr,f
  6299  0F48  2F35               	goto	l5673
  6300  0F49  0837               	movf	___ftmul@f3_as_product,w
  6301  0F4A  00F0               	movwf	?___ftpack
  6302  0F4B  0838               	movf	___ftmul@f3_as_product+1,w
  6303  0F4C  00F1               	movwf	?___ftpack+1
  6304  0F4D  0839               	movf	___ftmul@f3_as_product+2,w
  6305  0F4E  00F2               	movwf	?___ftpack+2
  6306  0F4F  0836               	movf	___ftmul@exp,w
  6307  0F50  00F3               	movwf	?___ftpack+3
  6308  0F51  083B               	movf	___ftmul@sign,w
  6309  0F52  00F4               	movwf	?___ftpack+4
  6310  0F53  2769               	fcall	___ftpack
  6311  0F54  0870               	movf	?___ftpack,w
  6312  0F55  00AD               	movwf	?___ftmul
  6313  0F56  0871               	movf	?___ftpack+1,w
  6314  0F57  00AE               	movwf	?___ftmul+1
  6315  0F58  0872               	movf	?___ftpack+2,w
  6316  0F59  00AF               	movwf	?___ftmul+2
  6317  0F5A  0008               	return
  6318  0F5B                     __end_of___ftmul:	
  6319  0F5B                     __ptext745:	
  6320 ;; =============== function ___wmul ends ============
  6321                           
  6322                           
  6323 ;; *************** function ___bmul *****************
  6324 ;; Defined at:
  6325 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\bmul.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  multiplier      1    wreg     unsigned char 
  6328 ;;  multiplicand    1    9[COMMON] unsigned char 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;  multiplier      1   11[COMMON] unsigned char 
  6331 ;;  product         1   10[COMMON] unsigned char 
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  1    wreg      unsigned char 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2, status,0
  6336 ;; Tracked objects:
  6337 ;;		On entry : 60/0
  6338 ;;		On exit  : 60/0
  6339 ;;		Unchanged: FFF9F/0
  6340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6341 ;;      Params:         1       0       0       0       0
  6342 ;;      Locals:         2       0       0       0       0
  6343 ;;      Temps:          0       0       0       0       0
  6344 ;;      Totals:         3       0       0       0       0
  6345 ;;Total ram usage:        3 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_fround
  6351 ;;		_scale
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354  0F5B                     ___bmul:	
  6355                           
  6356                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6357                           ;___bmul@multiplier stored from wreg
  6358  0F5B  00FB               	movwf	___bmul@multiplier
  6359  0F5C  01FA               	clrf	___bmul@product
  6360  0F5D                     l5233:	
  6361  0F5D  0879               	movf	___bmul@multiplicand,w
  6362  0F5E  187B               	btfsc	___bmul@multiplier,0
  6363  0F5F  07FA               	addwf	___bmul@product,f
  6364  0F60  1003               	clrc
  6365  0F61  0DF9               	rlf	___bmul@multiplicand,f
  6366  0F62  1003               	clrc
  6367  0F63  0CFB               	rrf	___bmul@multiplier,f
  6368  0F64  08FB               	movf	___bmul@multiplier,f
  6369  0F65  1D03               	skipz
  6370  0F66  2F5D               	goto	l5233
  6371  0F67  087A               	movf	___bmul@product,w
  6372  0F68  0008               	return
  6373  0F69                     __end_of___bmul:	
  6374  0F69                     __ptext741:	
  6375 ;; =============== function ___fttol ends ============
  6376                           
  6377                           
  6378 ;; *************** function ___ftpack *****************
  6379 ;; Defined at:
  6380 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;  arg             3    0[COMMON] unsigned um
  6383 ;;  exp             1    3[COMMON] unsigned char 
  6384 ;;  sign            1    4[COMMON] unsigned char 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;		None
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  3    0[COMMON] float 
  6389 ;; Registers used:
  6390 ;;		wreg, status,2, status,0
  6391 ;; Tracked objects:
  6392 ;;		On entry : 40/20
  6393 ;;		On exit  : 40/20
  6394 ;;		Unchanged: FFFBF/0
  6395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6396 ;;      Params:         5       0       0       0       0
  6397 ;;      Locals:         0       0       0       0       0
  6398 ;;      Temps:          3       0       0       0       0
  6399 ;;      Totals:         8       0       0       0       0
  6400 ;;Total ram usage:        8 bytes
  6401 ;; Hardware stack levels used:    1
  6402 ;; This function calls:
  6403 ;;		Nothing
  6404 ;; This function is called by:
  6405 ;;		___ftadd
  6406 ;;		___ftmul
  6407 ;;		___lbtoft
  6408 ;;		___lltoft
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411  0F69                     ___ftpack:	
  6412                           
  6413                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6414  0F69  0873               	movf	___ftpack@exp,w
  6415  0F6A  1903               	btfsc	3,2
  6416  0F6B  2F71               	goto	l5309
  6417  0F6C  0872               	movf	___ftpack@arg+2,w
  6418  0F6D  0471               	iorwf	___ftpack@arg+1,w
  6419  0F6E  0470               	iorwf	___ftpack@arg,w
  6420  0F6F  1D03               	skipz
  6421  0F70  2F7A               	goto	l5315
  6422  0F71                     l5309:	
  6423  0F71  01F0               	clrf	?___ftpack
  6424  0F72  01F1               	clrf	?___ftpack+1
  6425  0F73  01F2               	clrf	?___ftpack+2
  6426  0F74  0008               	return
  6427  0F75                     l5313:	
  6428  0F75  0AF3               	incf	___ftpack@exp,f
  6429  0F76  1003               	clrc
  6430  0F77  0CF2               	rrf	___ftpack@arg+2,f
  6431  0F78  0CF1               	rrf	___ftpack@arg+1,f
  6432  0F79  0CF0               	rrf	___ftpack@arg,f
  6433  0F7A                     l5315:	
  6434  0F7A  30FE               	movlw	254
  6435  0F7B  0572               	andwf	___ftpack@arg+2,w
  6436  0F7C  1903               	btfsc	3,2
  6437  0F7D  2F89               	goto	l5319
  6438  0F7E  2F75               	goto	l5313
  6439  0F7F                     l5317:	
  6440  0F7F  0AF3               	incf	___ftpack@exp,f
  6441  0F80  0AF0               	incf	___ftpack@arg,f
  6442  0F81  1903               	skipnz
  6443  0F82  0AF1               	incf	___ftpack@arg+1,f
  6444  0F83  1903               	skipnz
  6445  0F84  0AF2               	incf	___ftpack@arg+2,f
  6446  0F85  1003               	clrc
  6447  0F86  0CF2               	rrf	___ftpack@arg+2,f
  6448  0F87  0CF1               	rrf	___ftpack@arg+1,f
  6449  0F88  0CF0               	rrf	___ftpack@arg,f
  6450  0F89                     l5319:	
  6451  0F89  30FF               	movlw	255
  6452  0F8A  0572               	andwf	___ftpack@arg+2,w
  6453  0F8B  1903               	btfsc	3,2
  6454  0F8C  2F93               	goto	l5323
  6455  0F8D  2F7F               	goto	l5317
  6456  0F8E                     l5321:	
  6457  0F8E  03F3               	decf	___ftpack@exp,f
  6458  0F8F  1003               	clrc
  6459  0F90  0DF0               	rlf	___ftpack@arg,f
  6460  0F91  0DF1               	rlf	___ftpack@arg+1,f
  6461  0F92  0DF2               	rlf	___ftpack@arg+2,f
  6462  0F93                     l5323:	
  6463  0F93  1FF1               	btfss	___ftpack@arg+1,7
  6464  0F94  2F8E               	goto	l5321
  6465  0F95  1C73               	btfss	___ftpack@exp,0
  6466  0F96  13F1               	bcf	___ftpack@arg+1,7
  6467  0F97  1003               	clrc
  6468  0F98  0CF3               	rrf	___ftpack@exp,f
  6469  0F99  0873               	movf	___ftpack@exp,w
  6470  0F9A  00F7               	movwf	??___ftpack+2
  6471  0F9B  01F6               	clrf	??___ftpack+1
  6472  0F9C  01F5               	clrf	??___ftpack
  6473  0F9D  0875               	movf	??___ftpack,w
  6474  0F9E  04F0               	iorwf	___ftpack@arg,f
  6475  0F9F  0876               	movf	??___ftpack+1,w
  6476  0FA0  04F1               	iorwf	___ftpack@arg+1,f
  6477  0FA1  0877               	movf	??___ftpack+2,w
  6478  0FA2  04F2               	iorwf	___ftpack@arg+2,f
  6479  0FA3  0874               	movf	___ftpack@sign,w
  6480  0FA4  1D03               	skipz
  6481  0FA5  17F2               	bsf	___ftpack@arg+2,7
  6482  0FA6  0008               	return
  6483  0FA7                     __end_of___ftpack:	
  6484  0FA7                     PL8:	
  6485  0FA7  0876               	movf	?___awdiv,w
  6486  0FA8  00C1               	movwf	??_scale+2
  6487  0FA9  0877               	movf	?___awdiv+1,w
  6488  0FAA  00C2               	movwf	??_scale+3
  6489  0FAB  0841               	movf	??_scale+2,w
  6490  0FAC  0741               	addwf	??_scale+2,w
  6491  0FAD  0741               	addwf	??_scale+2,w
  6492  0FAE  0008               	return
  6493  0FAF                     PL9:	
  6494  0FAF  082D               	movf	?___ftmul,w
  6495  0FB0  00C3               	movwf	_scale$2944
  6496  0FB1  082E               	movf	?___ftmul+1,w
  6497  0FB2  00C4               	movwf	_scale$2944+1
  6498  0FB3  082F               	movf	?___ftmul+2,w
  6499  0FB4  00C5               	movwf	_scale$2944+2
  6500  0FB5  300A               	movlw	10
  6501  0FB6  00F0               	movwf	?___awmod
  6502  0FB7  01F1               	clrf	?___awmod+1
  6503  0FB8  0846               	movf	scale@scl,w
  6504  0FB9  00F2               	movwf	?___awmod+2
  6505  0FBA  01F3               	clrf	?___awmod+3
  6506  0FBB  0008               	return
  6507  0FBC                     PL10:	
  6508  0FBC  082D               	movf	?___ftmul,w
  6509  0FBD  00BC               	movwf	?_scale
  6510  0FBE  082E               	movf	?___ftmul+1,w
  6511  0FBF  00BD               	movwf	?_scale+1
  6512  0FC0  082F               	movf	?___ftmul+2,w
  6513  0FC1  00BE               	movwf	?_scale+2
  6514  0FC2  0008               	return
  6515  0FC3                     PL12:	
  6516  0FC3  0870               	movf	?___awmod,w
  6517  0FC4  00BF               	movwf	??_scale
  6518  0FC5  0871               	movf	?___awmod+1,w
  6519  0FC6  00C0               	movwf	??_scale+1
  6520  0FC7  083F               	movf	??_scale,w
  6521  0FC8  073F               	addwf	??_scale,w
  6522  0FC9  073F               	addwf	??_scale,w
  6523  0FCA  0008               	return
  6524  0FCB                     PL15:	
  6525  0FCB  00F6               	movwf	?___awdiv
  6526  0FCC  01F7               	clrf	?___awdiv+1
  6527  0FCD  0846               	movf	scale@scl,w
  6528  0FCE  00F2               	movwf	?___awmod+2
  6529  0FCF  01F3               	clrf	?___awmod+3
  6530  0FD0  1BF2               	btfsc	?___awmod+2,7
  6531  0FD1  03F3               	decf	?___awmod+3,f
  6532  0FD2  3064               	movlw	100
  6533  0FD3  00F0               	movwf	?___awmod
  6534  0FD4  01F1               	clrf	?___awmod+1
  6535  0FD5  0008               	return
  6536  0FD6                     PL18:	
  6537  0FD6  07B7               	addwf	___ftmul@f3_as_product,f
  6538  0FD7  0831               	movf	___ftmul@f2+1,w
  6539  0FD8  1103               	clrz
  6540  0FD9  1803               	skipnc
  6541  0FDA  0A31               	incf	___ftmul@f2+1,w
  6542  0FDB  1D03               	btfss	3,2
  6543  0FDC  07B8               	addwf	___ftmul@f3_as_product+1,f
  6544  0FDD  0832               	movf	___ftmul@f2+2,w
  6545  0FDE  1103               	clrz
  6546  0FDF  0008               	return
  6547  0FE0                     PL23:	
  6548  0FE0  00AF               	movwf	?___ftmul+2
  6549  0FE1  3064               	movlw	100
  6550  0FE2  00F6               	movwf	?___awdiv
  6551  0FE3  01F7               	clrf	?___awdiv+1
  6552  0FE4  0846               	movf	scale@scl,w
  6553  0FE5  00F8               	movwf	?___awdiv+2
  6554  0FE6  01F9               	clrf	?___awdiv+3
  6555  0FE7  0008               	return
  6556  0FE8                     PL25:	
  6557  0FE8  00AF               	movwf	?___ftmul+2
  6558  0FE9  0843               	movf	_scale$2944,w
  6559  0FEA  00B0               	movwf	?___ftmul+3
  6560  0FEB  0844               	movf	_scale$2944+1,w
  6561  0FEC  00B1               	movwf	?___ftmul+4
  6562  0FED  0845               	movf	_scale$2944+2,w
  6563  0FEE  00B2               	movwf	?___ftmul+5
  6564  0FEF  0008               	return
  6565  0FF0                     PL26:	
  6566  0FF0  00AF               	movwf	?___ftmul+2
  6567  0FF1  300A               	movlw	10
  6568  0FF2  00F6               	movwf	?___awdiv
  6569  0FF3  01F7               	clrf	?___awdiv+1
  6570  0FF4  0846               	movf	scale@scl,w
  6571  0FF5  00F8               	movwf	?___awdiv+2
  6572  0FF6  01F9               	clrf	?___awdiv+3
  6573  0FF7  0008               	return
  6574  0FF8                     PL27:	
  6575  0FF8  0876               	movf	?___awdiv,w
  6576  0FF9  00BF               	movwf	??_scale
  6577  0FFA  0877               	movf	?___awdiv+1,w
  6578  0FFB  00C0               	movwf	??_scale+1
  6579  0FFC  083F               	movf	??_scale,w
  6580  0FFD  073F               	addwf	??_scale,w
  6581  0FFE  073F               	addwf	??_scale,w
  6582  0FFF  0008               	return
  6583                           
  6584                           	psect	text731
  6585  1679                     __ptext731:	
  6586 ;; =============== function ___ftmul ends ============
  6587                           
  6588                           
  6589 ;; *************** function ___ftadd *****************
  6590 ;; Defined at:
  6591 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftadd.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  f1              3   28[BANK0 ] float 
  6594 ;;  f2              3   31[BANK0 ] float 
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;  exp1            1   39[BANK0 ] unsigned char 
  6597 ;;  exp2            1   38[BANK0 ] unsigned char 
  6598 ;;  sign            1   37[BANK0 ] unsigned char 
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  3   28[BANK0 ] float 
  6601 ;; Registers used:
  6602 ;;		wreg, status,2, status,0, pclath, cstack
  6603 ;; Tracked objects:
  6604 ;;		On entry : 60/0
  6605 ;;		On exit  : 60/0
  6606 ;;		Unchanged: FFF9F/0
  6607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6608 ;;      Params:         0       6       0       0       0
  6609 ;;      Locals:         0       3       0       0       0
  6610 ;;      Temps:          0       3       0       0       0
  6611 ;;      Totals:         0      12       0       0       0
  6612 ;;Total ram usage:       12 bytes
  6613 ;; Hardware stack levels used:    1
  6614 ;; Hardware stack levels required when called:    1
  6615 ;; This function calls:
  6616 ;;		___ftpack
  6617 ;; This function is called by:
  6618 ;;		_sprintf
  6619 ;;		___ftsub
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622  1679                     ___ftadd:	
  6623                           
  6624                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6625  1679  083C               	movf	___ftadd@f1,w
  6626  167A  00C2               	movwf	??___ftadd
  6627  167B  083D               	movf	___ftadd@f1+1,w
  6628  167C  00C3               	movwf	??___ftadd+1
  6629  167D  083E               	movf	___ftadd@f1+2,w
  6630  167E  00C4               	movwf	??___ftadd+2
  6631  167F  1003               	clrc
  6632  1680  0D43               	rlf	??___ftadd+1,w
  6633  1681  0D44               	rlf	??___ftadd+2,w
  6634  1682  00C7               	movwf	___ftadd@exp1
  6635  1683  083F               	movf	___ftadd@f2,w
  6636  1684  00C2               	movwf	??___ftadd
  6637  1685  0840               	movf	___ftadd@f2+1,w
  6638  1686  00C3               	movwf	??___ftadd+1
  6639  1687  0841               	movf	___ftadd@f2+2,w
  6640  1688  00C4               	movwf	??___ftadd+2
  6641  1689  1003               	clrc
  6642  168A  0D43               	rlf	??___ftadd+1,w
  6643  168B  0D44               	rlf	??___ftadd+2,w
  6644  168C  00C6               	movwf	___ftadd@exp2
  6645  168D  0847               	movf	___ftadd@exp1,w
  6646  168E  1903               	btfsc	3,2
  6647  168F  2E9C               	goto	l5561
  6648  1690  0846               	movf	___ftadd@exp2,w
  6649  1691  0247               	subwf	___ftadd@exp1,w
  6650  1692  0846               	movf	___ftadd@exp2,w
  6651  1693  1803               	skipnc
  6652  1694  2EA4               	goto	L6
  6653  1695  00C2               	movwf	??___ftadd
  6654  1696  0847               	movf	___ftadd@exp1,w
  6655  1697  02C2               	subwf	??___ftadd,f
  6656  1698  3019               	movlw	25
  6657  1699  0242               	subwf	??___ftadd,w
  6658  169A  1C03               	skipc
  6659  169B  2EA3               	goto	l5565
  6660  169C                     l5561:	
  6661  169C  083F               	movf	___ftadd@f2,w
  6662  169D  00BC               	movwf	?___ftadd
  6663  169E  0840               	movf	___ftadd@f2+1,w
  6664  169F  00BD               	movwf	?___ftadd+1
  6665  16A0  0841               	movf	___ftadd@f2+2,w
  6666  16A1  00BE               	movwf	?___ftadd+2
  6667  16A2  0008               	return
  6668  16A3                     l5565:	
  6669  16A3  0846               	movf	___ftadd@exp2,w
  6670  16A4                     L6:	
  6671  16A4  1903               	btfsc	3,2
  6672  16A5  0008               	return
  6673  16A6  0847               	movf	___ftadd@exp1,w
  6674  16A7  0246               	subwf	___ftadd@exp2,w
  6675  16A8  1803               	skipnc
  6676  16A9  2EB2               	goto	l5571
  6677  16AA  0847               	movf	___ftadd@exp1,w
  6678  16AB  00C2               	movwf	??___ftadd
  6679  16AC  0846               	movf	___ftadd@exp2,w
  6680  16AD  02C2               	subwf	??___ftadd,f
  6681  16AE  3019               	movlw	25
  6682  16AF  0242               	subwf	??___ftadd,w
  6683  16B0  1803               	btfsc	3,0
  6684  16B1  0008               	return
  6685  16B2                     l5571:	
  6686  16B2  3006               	movlw	6
  6687  16B3  00C5               	movwf	___ftadd@sign
  6688  16B4  1BBE               	btfsc	___ftadd@f1+2,7
  6689  16B5  17C5               	bsf	___ftadd@sign,7
  6690  16B6  1BC1               	btfsc	___ftadd@f2+2,7
  6691  16B7  1745               	bsf	___ftadd@sign,6
  6692  16B8  17BD               	bsf	___ftadd@f1+1,7
  6693  16B9  01BE               	clrf	___ftadd@f1+2
  6694  16BA  17C0               	bsf	___ftadd@f2+1,7
  6695  16BB  01C1               	clrf	___ftadd@f2+2
  6696  16BC  0846               	movf	___ftadd@exp2,w
  6697  16BD  0247               	subwf	___ftadd@exp1,w
  6698  16BE  1803               	skipnc
  6699  16BF  2ED9               	goto	l5593
  6700  16C0                     l5583:	
  6701  16C0  1003               	clrc
  6702  16C1  0DBF               	rlf	___ftadd@f2,f
  6703  16C2  0DC0               	rlf	___ftadd@f2+1,f
  6704  16C3  0DC1               	rlf	___ftadd@f2+2,f
  6705  16C4  03C6               	decf	___ftadd@exp2,f
  6706  16C5  0846               	movf	___ftadd@exp2,w
  6707  16C6  0647               	xorwf	___ftadd@exp1,w
  6708  16C7  1903               	skipnz
  6709  16C8  2ED4               	goto	l5591
  6710  16C9  03C5               	decf	___ftadd@sign,f
  6711  16CA  0845               	movf	___ftadd@sign,w
  6712  16CB  3907               	andlw	7
  6713  16CC  1903               	btfsc	3,2
  6714  16CD  2ED4               	goto	l5591
  6715  16CE  2EC0               	goto	l5583
  6716  16CF                     l5589:	
  6717  16CF  1003               	clrc
  6718  16D0  0CBE               	rrf	___ftadd@f1+2,f
  6719  16D1  0CBD               	rrf	___ftadd@f1+1,f
  6720  16D2  0CBC               	rrf	___ftadd@f1,f
  6721  16D3  0AC7               	incf	___ftadd@exp1,f
  6722  16D4                     l5591:	
  6723  16D4  0847               	movf	___ftadd@exp1,w
  6724  16D5  0646               	xorwf	___ftadd@exp2,w
  6725  16D6  1903               	btfsc	3,2
  6726  16D7  2EF5               	goto	l2372
  6727  16D8  2ECF               	goto	l5589
  6728  16D9                     l5593:	
  6729  16D9  0847               	movf	___ftadd@exp1,w
  6730  16DA  0246               	subwf	___ftadd@exp2,w
  6731  16DB  1803               	skipnc
  6732  16DC  2EF5               	goto	l2372
  6733  16DD                     l5595:	
  6734  16DD  1003               	clrc
  6735  16DE  0DBC               	rlf	___ftadd@f1,f
  6736  16DF  0DBD               	rlf	___ftadd@f1+1,f
  6737  16E0  0DBE               	rlf	___ftadd@f1+2,f
  6738  16E1  03C7               	decf	___ftadd@exp1,f
  6739  16E2  0846               	movf	___ftadd@exp2,w
  6740  16E3  0647               	xorwf	___ftadd@exp1,w
  6741  16E4  1903               	skipnz
  6742  16E5  2EF1               	goto	l5603
  6743  16E6  03C5               	decf	___ftadd@sign,f
  6744  16E7  0845               	movf	___ftadd@sign,w
  6745  16E8  3907               	andlw	7
  6746  16E9  1903               	btfsc	3,2
  6747  16EA  2EF1               	goto	l5603
  6748  16EB  2EDD               	goto	l5595
  6749  16EC                     l5601:	
  6750  16EC  1003               	clrc
  6751  16ED  0CC1               	rrf	___ftadd@f2+2,f
  6752  16EE  0CC0               	rrf	___ftadd@f2+1,f
  6753  16EF  0CBF               	rrf	___ftadd@f2,f
  6754  16F0  0AC6               	incf	___ftadd@exp2,f
  6755  16F1                     l5603:	
  6756  16F1  0847               	movf	___ftadd@exp1,w
  6757  16F2  0646               	xorwf	___ftadd@exp2,w
  6758  16F3  1D03               	skipz
  6759  16F4  2EEC               	goto	l5601
  6760  16F5                     l2372:	
  6761  16F5  1FC5               	btfss	___ftadd@sign,7
  6762  16F6  2F00               	goto	l5609
  6763  16F7  30FF               	movlw	255
  6764  16F8  06BC               	xorwf	___ftadd@f1,f
  6765  16F9  06BD               	xorwf	___ftadd@f1+1,f
  6766  16FA  06BE               	xorwf	___ftadd@f1+2,f
  6767  16FB  0ABC               	incf	___ftadd@f1,f
  6768  16FC  1903               	skipnz
  6769  16FD  0ABD               	incf	___ftadd@f1+1,f
  6770  16FE  1903               	skipnz
  6771  16FF  0ABE               	incf	___ftadd@f1+2,f
  6772  1700                     l5609:	
  6773  1700  1F45               	btfss	___ftadd@sign,6
  6774  1701  2F0B               	goto	l5615
  6775  1702  30FF               	movlw	255
  6776  1703  06BF               	xorwf	___ftadd@f2,f
  6777  1704  06C0               	xorwf	___ftadd@f2+1,f
  6778  1705  06C1               	xorwf	___ftadd@f2+2,f
  6779  1706  0ABF               	incf	___ftadd@f2,f
  6780  1707  1903               	skipnz
  6781  1708  0AC0               	incf	___ftadd@f2+1,f
  6782  1709  1903               	skipnz
  6783  170A  0AC1               	incf	___ftadd@f2+2,f
  6784  170B                     l5615:	
  6785  170B  01C5               	clrf	___ftadd@sign
  6786  170C  083C               	movf	___ftadd@f1,w
  6787  170D  07BF               	addwf	___ftadd@f2,f
  6788  170E  083D               	movf	___ftadd@f1+1,w
  6789  170F  1103               	clrz
  6790  1710  1803               	skipnc
  6791  1711  0A3D               	incf	___ftadd@f1+1,w
  6792  1712  1D03               	btfss	3,2
  6793  1713  07C0               	addwf	___ftadd@f2+1,f
  6794  1714  083E               	movf	___ftadd@f1+2,w
  6795  1715  1103               	clrz
  6796  1716  1803               	skipnc
  6797  1717  0A3E               	incf	___ftadd@f1+2,w
  6798  1718  1D03               	btfss	3,2
  6799  1719  07C1               	addwf	___ftadd@f2+2,f
  6800  171A  1FC1               	btfss	___ftadd@f2+2,7
  6801  171B  2F27               	goto	l5627
  6802  171C  30FF               	movlw	255
  6803  171D  06BF               	xorwf	___ftadd@f2,f
  6804  171E  06C0               	xorwf	___ftadd@f2+1,f
  6805  171F  06C1               	xorwf	___ftadd@f2+2,f
  6806  1720  0ABF               	incf	___ftadd@f2,f
  6807  1721  1903               	skipnz
  6808  1722  0AC0               	incf	___ftadd@f2+1,f
  6809  1723  1903               	skipnz
  6810  1724  0AC1               	incf	___ftadd@f2+2,f
  6811  1725  01C5               	clrf	___ftadd@sign
  6812  1726  0AC5               	incf	___ftadd@sign,f
  6813  1727                     l5627:	
  6814  1727  083F               	movf	___ftadd@f2,w
  6815  1728  00F0               	movwf	?___ftpack
  6816  1729  0840               	movf	___ftadd@f2+1,w
  6817  172A  00F1               	movwf	?___ftpack+1
  6818  172B  0841               	movf	___ftadd@f2+2,w
  6819  172C  00F2               	movwf	?___ftpack+2
  6820  172D  0847               	movf	___ftadd@exp1,w
  6821  172E  00F3               	movwf	?___ftpack+3
  6822  172F  0845               	movf	___ftadd@sign,w
  6823  1730  00F4               	movwf	?___ftpack+4
  6824  1731  120A  158A  2769   	fcall	___ftpack
  6825  1734  0870               	movf	?___ftpack,w
  6826  1735  00BC               	movwf	?___ftadd
  6827  1736  0871               	movf	?___ftpack+1,w
  6828  1737  00BD               	movwf	?___ftadd+1
  6829  1738  0872               	movf	?___ftpack+2,w
  6830  1739  00BE               	movwf	?___ftadd+2
  6831  173A  0008               	return
  6832  173B                     __end_of___ftadd:	
  6833                           
  6834                           	psect	text746
  6835  15B7                     __ptext746:	
  6836 ;; =============== function ___bmul ends ============
  6837                           
  6838                           
  6839 ;; *************** function __div_to_l_ *****************
  6840 ;; Defined at:
  6841 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fldivl.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  f1              3    0[COMMON] unsigned char 
  6844 ;;  f2              3    3[COMMON] unsigned char 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;  quot            4    0[BANK0 ] unsigned long 
  6847 ;;  exp1            1    5[BANK0 ] unsigned char 
  6848 ;;  cntr            1    4[BANK0 ] unsigned char 
  6849 ;; Return value:  Size  Location     Type
  6850 ;;                  4    0[COMMON] unsigned long 
  6851 ;; Registers used:
  6852 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6853 ;; Tracked objects:
  6854 ;;		On entry : 0/0
  6855 ;;		On exit  : 60/0
  6856 ;;		Unchanged: FFF9F/0
  6857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6858 ;;      Params:         6       0       0       0       0
  6859 ;;      Locals:         0       6       0       0       0
  6860 ;;      Temps:          8       0       0       0       0
  6861 ;;      Totals:        14       6       0       0       0
  6862 ;;Total ram usage:       20 bytes
  6863 ;; Hardware stack levels used:    1
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_sprintf
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870  15B7                     __div_to_l_:	
  6871                           
  6872                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6873  15B7  3070               	movlw	low __div_to_l_@f1
  6874  15B8  266C  160A  118A   	fcall	PL2	;call to abstracted procedure
  6875  15BB  1003               	clrc
  6876  15BC  0D78               	rlf	??__div_to_l_+2,w
  6877  15BD  0D79               	rlf	??__div_to_l_+3,w
  6878  15BE  1283               	bcf	3,5	;RP0=0, select bank0
  6879  15BF  1303               	bcf	3,6	;RP1=0, select bank0
  6880  15C0  00A5               	movwf	__div_to_l_@exp1
  6881  15C1  08A5               	movf	__div_to_l_@exp1,f
  6882  15C2  1D03               	skipz
  6883  15C3  2DC9               	goto	l5189
  6884  15C4                     l5187:	
  6885  15C4  01F0               	clrf	?__div_to_l_
  6886  15C5  01F1               	clrf	?__div_to_l_+1
  6887  15C6  01F2               	clrf	?__div_to_l_+2
  6888  15C7  01F3               	clrf	?__div_to_l_+3
  6889  15C8  0008               	return
  6890  15C9                     l5189:	
  6891  15C9  3073               	movlw	low __div_to_l_@f2
  6892  15CA  266C  160A  118A   	fcall	PL2	;call to abstracted procedure
  6893  15CD  1003               	clrc
  6894  15CE  0D78               	rlf	??__div_to_l_+2,w
  6895  15CF  0D79               	rlf	??__div_to_l_+3,w
  6896  15D0  00A4               	movwf	__div_to_l_@cntr
  6897  15D1  08A4               	movf	__div_to_l_@cntr,f
  6898  15D2  1903               	btfsc	3,2
  6899  15D3  2DC4               	goto	l5187
  6900  15D4  3070               	movlw	low __div_to_l_@f1
  6901  15D5  0084               	movwf	4
  6902  15D6  3080               	movlw	128
  6903  15D7  0A84               	incf	4,f
  6904  15D8  0A84               	incf	4,f
  6905  15D9  0480               	iorwf	0,f
  6906  15DA  3070               	movlw	low __div_to_l_@f1
  6907  15DB  0A84               	incf	4,f
  6908  15DC  0084               	movwf	4
  6909  15DD  3073               	movlw	low __div_to_l_@f2
  6910  15DE  0A84               	incf	4,f
  6911  15DF  0A84               	incf	4,f
  6912  15E0  0A84               	incf	4,f
  6913  15E1  0180               	clrf	0
  6914  15E2  0084               	movwf	4
  6915  15E3  3080               	movlw	128
  6916  15E4  0A84               	incf	4,f
  6917  15E5  0A84               	incf	4,f
  6918  15E6  0480               	iorwf	0,f
  6919  15E7  3073               	movlw	low __div_to_l_@f2
  6920  15E8  0A84               	incf	4,f
  6921  15E9  0084               	movwf	4
  6922  15EA  307F               	movlw	127
  6923  15EB  0A84               	incf	4,f
  6924  15EC  0A84               	incf	4,f
  6925  15ED  0A84               	incf	4,f
  6926  15EE  0180               	clrf	0
  6927  15EF  01A0               	clrf	__div_to_l_@quot
  6928  15F0  01A1               	clrf	__div_to_l_@quot+1
  6929  15F1  01A2               	clrf	__div_to_l_@quot+2
  6930  15F2  01A3               	clrf	__div_to_l_@quot+3
  6931  15F3  02A5               	subwf	__div_to_l_@exp1,f
  6932  15F4  30A0               	movlw	160
  6933  15F5  0724               	addwf	__div_to_l_@cntr,w
  6934  15F6  00F6               	movwf	??__div_to_l_
  6935  15F7  02A5               	subwf	__div_to_l_@exp1,f
  6936  15F8  3020               	movlw	32
  6937  15F9  00A4               	movwf	__div_to_l_@cntr
  6938  15FA                     l5203:	
  6939  15FA  3073               	movlw	low __div_to_l_@f2
  6940  15FB  1003               	clrc
  6941  15FC  0DA0               	rlf	__div_to_l_@quot,f
  6942  15FD  0DA1               	rlf	__div_to_l_@quot+1,f
  6943  15FE  0DA2               	rlf	__div_to_l_@quot+2,f
  6944  15FF  0DA3               	rlf	__div_to_l_@quot+3,f
  6945  1600  266C  160A  118A   	fcall	PL2	;call to abstracted procedure
  6946  1603  3070               	movlw	low __div_to_l_@f1
  6947  1604  0084               	movwf	4
  6948  1605  0800               	movf	0,w
  6949  1606  00FA               	movwf	??__div_to_l_+4
  6950  1607  0A84               	incf	4,f
  6951  1608  0800               	movf	0,w
  6952  1609  00FB               	movwf	??__div_to_l_+5
  6953  160A  0A84               	incf	4,f
  6954  160B  0800               	movf	0,w
  6955  160C  00FC               	movwf	??__div_to_l_+6
  6956  160D  0A84               	incf	4,f
  6957  160E  0800               	movf	0,w
  6958  160F  00FD               	movwf	??__div_to_l_+7
  6959  1610  0879               	movf	??__div_to_l_+3,w
  6960  1611  027D               	subwf	??__div_to_l_+7,w
  6961  1612  1D03               	skipz
  6962  1613  2E1E               	goto	u1985
  6963  1614  0878               	movf	??__div_to_l_+2,w
  6964  1615  027C               	subwf	??__div_to_l_+6,w
  6965  1616  1D03               	skipz
  6966  1617  2E1E               	goto	u1985
  6967  1618  0877               	movf	??__div_to_l_+1,w
  6968  1619  027B               	subwf	??__div_to_l_+5,w
  6969  161A  1D03               	skipz
  6970  161B  2E1E               	goto	u1985
  6971  161C  0876               	movf	??__div_to_l_,w
  6972  161D  027A               	subwf	??__div_to_l_+4,w
  6973  161E                     u1985:	
  6974  161E  1C03               	skipc
  6975  161F  2E3A               	goto	l2601
  6976  1620  3073               	movlw	low __div_to_l_@f2
  6977  1621  266C  160A  118A   	fcall	PL2	;call to abstracted procedure
  6978  1624  3070               	movlw	low __div_to_l_@f1
  6979  1625  0084               	movwf	4
  6980  1626  0876               	movf	??__div_to_l_,w
  6981  1627  0280               	subwf	0,f
  6982  1628  0A84               	incf	4,f
  6983  1629  0877               	movf	??__div_to_l_+1,w
  6984  162A  1C03               	skipc
  6985  162B  0F77               	incfsz	??__div_to_l_+1,w
  6986  162C  0280               	subwf	0,f
  6987  162D  0A84               	incf	4,f
  6988  162E  0878               	movf	??__div_to_l_+2,w
  6989  162F  1C03               	skipc
  6990  1630  0F78               	incfsz	??__div_to_l_+2,w
  6991  1631  0280               	subwf	0,f
  6992  1632  0A84               	incf	4,f
  6993  1633  0879               	movf	??__div_to_l_+3,w
  6994  1634  1C03               	skipc
  6995  1635  0A79               	incf	??__div_to_l_+3,w
  6996  1636  0280               	subwf	0,f
  6997  1637  3003               	movlw	3
  6998  1638  0284               	subwf	4,f
  6999  1639  1420               	bsf	__div_to_l_@quot,0
  7000  163A                     l2601:	
  7001  163A  3070               	movlw	low __div_to_l_@f1
  7002  163B  0084               	movwf	4
  7003  163C  1003               	clrc
  7004  163D  0D80               	rlf	0,f
  7005  163E  0A84               	incf	4,f
  7006  163F  0D80               	rlf	0,f
  7007  1640  0A84               	incf	4,f
  7008  1641  0D80               	rlf	0,f
  7009  1642  0A84               	incf	4,f
  7010  1643  0D80               	rlf	0,f
  7011  1644  0BA4               	decfsz	__div_to_l_@cntr,f
  7012  1645  2DFA               	goto	l5203
  7013  1646  1FA5               	btfss	__div_to_l_@exp1,7
  7014  1647  2E55               	goto	l5221
  7015  1648  0825               	movf	__div_to_l_@exp1,w
  7016  1649  3A80               	xorlw	128
  7017  164A  3E9F               	addlw	159
  7018  164B  1C03               	btfss	3,0
  7019  164C  2DC4               	goto	l5187
  7020  164D                     l5217:	
  7021  164D  1003               	clrc
  7022  164E  0CA3               	rrf	__div_to_l_@quot+3,f
  7023  164F  0CA2               	rrf	__div_to_l_@quot+2,f
  7024  1650  0CA1               	rrf	__div_to_l_@quot+1,f
  7025  1651  0CA0               	rrf	__div_to_l_@quot,f
  7026  1652  0FA5               	incfsz	__div_to_l_@exp1,f
  7027  1653  2E4D               	goto	l5217
  7028  1654  2E63               	goto	l5227
  7029  1655                     l5221:	
  7030  1655  3020               	movlw	32
  7031  1656  0225               	subwf	__div_to_l_@exp1,w
  7032  1657  1803               	btfsc	3,0
  7033  1658  2DC4               	goto	l5187
  7034  1659                     l2609:	
  7035  1659  08A5               	movf	__div_to_l_@exp1,f
  7036  165A  1903               	btfsc	3,2
  7037  165B  2E63               	goto	l5227
  7038  165C  1003               	clrc
  7039  165D  0DA0               	rlf	__div_to_l_@quot,f
  7040  165E  0DA1               	rlf	__div_to_l_@quot+1,f
  7041  165F  0DA2               	rlf	__div_to_l_@quot+2,f
  7042  1660  0DA3               	rlf	__div_to_l_@quot+3,f
  7043  1661  03A5               	decf	__div_to_l_@exp1,f
  7044  1662  2E59               	goto	l2609
  7045  1663                     l5227:	
  7046  1663  0823               	movf	__div_to_l_@quot+3,w
  7047  1664  00F3               	movwf	?__div_to_l_+3
  7048  1665  0822               	movf	__div_to_l_@quot+2,w
  7049  1666  00F2               	movwf	?__div_to_l_+2
  7050  1667  0821               	movf	__div_to_l_@quot+1,w
  7051  1668  00F1               	movwf	?__div_to_l_+1
  7052  1669  0820               	movf	__div_to_l_@quot,w
  7053  166A  00F0               	movwf	?__div_to_l_
  7054  166B  0008               	return
  7055  166C                     __end_of__div_to_l_:	
  7056  166C                     PL2:	
  7057  166C  0084               	movwf	4
  7058  166D  0800               	movf	0,w
  7059  166E  00F6               	movwf	??__div_to_l_
  7060  166F  0A84               	incf	4,f
  7061  1670  0800               	movf	0,w
  7062  1671  00F7               	movwf	??__div_to_l_+1
  7063  1672  0A84               	incf	4,f
  7064  1673  0800               	movf	0,w
  7065  1674  00F8               	movwf	??__div_to_l_+2
  7066  1675  0A84               	incf	4,f
  7067  1676  0800               	movf	0,w
  7068  1677  00F9               	movwf	??__div_to_l_+3
  7069  1678  0008               	return
  7070                           
  7071                           	psect	text747
  7072  0907                     __ptext747:	
  7073 ;; =============== function __div_to_l_ ends ============
  7074                           
  7075                           
  7076 ;; *************** function __tdiv_to_l_ *****************
  7077 ;; Defined at:
  7078 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftdivl.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;  f1              3    0[COMMON] float 
  7081 ;;  f2              3    3[COMMON] float 
  7082 ;; Auto vars:     Size  Location     Type
  7083 ;;  quot            4    0[BANK0 ] unsigned long 
  7084 ;;  exp1            1    5[BANK0 ] unsigned char 
  7085 ;;  cntr            1    4[BANK0 ] unsigned char 
  7086 ;; Return value:  Size  Location     Type
  7087 ;;                  4    0[COMMON] unsigned long 
  7088 ;; Registers used:
  7089 ;;		wreg, status,2, status,0
  7090 ;; Tracked objects:
  7091 ;;		On entry : 60/20
  7092 ;;		On exit  : 60/0
  7093 ;;		Unchanged: FFF9F/0
  7094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7095 ;;      Params:         6       0       0       0       0
  7096 ;;      Locals:         0       6       0       0       0
  7097 ;;      Temps:          3       0       0       0       0
  7098 ;;      Totals:         9       6       0       0       0
  7099 ;;Total ram usage:       15 bytes
  7100 ;; Hardware stack levels used:    1
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		_sprintf
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107  0907                     __tdiv_to_l_:	
  7108                           
  7109                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7110  0907  0870               	movf	__tdiv_to_l_@f1,w
  7111  0908  00F6               	movwf	??__tdiv_to_l_
  7112  0909  0871               	movf	__tdiv_to_l_@f1+1,w
  7113  090A  00F7               	movwf	??__tdiv_to_l_+1
  7114  090B  0872               	movf	__tdiv_to_l_@f1+2,w
  7115  090C  00F8               	movwf	??__tdiv_to_l_+2
  7116  090D  1003               	clrc
  7117  090E  0D77               	rlf	??__tdiv_to_l_+1,w
  7118  090F  0D78               	rlf	??__tdiv_to_l_+2,w
  7119  0910  1283               	bcf	3,5	;RP0=0, select bank0
  7120  0911  00A5               	movwf	__tdiv_to_l_@exp1
  7121  0912  08A5               	movf	__tdiv_to_l_@exp1,f
  7122  0913  1D03               	skipz
  7123  0914  291A               	goto	l5141
  7124  0915                     l5139:	
  7125  0915  01F0               	clrf	?__tdiv_to_l_
  7126  0916  01F1               	clrf	?__tdiv_to_l_+1
  7127  0917  01F2               	clrf	?__tdiv_to_l_+2
  7128  0918  01F3               	clrf	?__tdiv_to_l_+3
  7129  0919  0008               	return
  7130  091A                     l5141:	
  7131  091A  0873               	movf	__tdiv_to_l_@f2,w
  7132  091B  00F6               	movwf	??__tdiv_to_l_
  7133  091C  0874               	movf	__tdiv_to_l_@f2+1,w
  7134  091D  00F7               	movwf	??__tdiv_to_l_+1
  7135  091E  0875               	movf	__tdiv_to_l_@f2+2,w
  7136  091F  00F8               	movwf	??__tdiv_to_l_+2
  7137  0920  1003               	clrc
  7138  0921  0D77               	rlf	??__tdiv_to_l_+1,w
  7139  0922  0D78               	rlf	??__tdiv_to_l_+2,w
  7140  0923  00A4               	movwf	__tdiv_to_l_@cntr
  7141  0924  08A4               	movf	__tdiv_to_l_@cntr,f
  7142  0925  1903               	btfsc	3,2
  7143  0926  2915               	goto	l5139
  7144  0927  307F               	movlw	127
  7145  0928  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7146  0929  01F2               	clrf	__tdiv_to_l_@f1+2
  7147  092A  17F4               	bsf	__tdiv_to_l_@f2+1,7
  7148  092B  01F5               	clrf	__tdiv_to_l_@f2+2
  7149  092C  01A0               	clrf	__tdiv_to_l_@quot
  7150  092D  01A1               	clrf	__tdiv_to_l_@quot+1
  7151  092E  01A2               	clrf	__tdiv_to_l_@quot+2
  7152  092F  01A3               	clrf	__tdiv_to_l_@quot+3
  7153  0930  02A5               	subwf	__tdiv_to_l_@exp1,f
  7154  0931  3098               	movlw	152
  7155  0932  0724               	addwf	__tdiv_to_l_@cntr,w
  7156  0933  00F6               	movwf	??__tdiv_to_l_
  7157  0934  02A5               	subwf	__tdiv_to_l_@exp1,f
  7158  0935  3018               	movlw	24
  7159  0936  00A4               	movwf	__tdiv_to_l_@cntr
  7160  0937                     l5155:	
  7161  0937  1003               	clrc
  7162  0938  0DA0               	rlf	__tdiv_to_l_@quot,f
  7163  0939  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7164  093A  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7165  093B  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7166  093C  0875               	movf	__tdiv_to_l_@f2+2,w
  7167  093D  0272               	subwf	__tdiv_to_l_@f1+2,w
  7168  093E  1D03               	skipz
  7169  093F  2946               	goto	u1895
  7170  0940  0874               	movf	__tdiv_to_l_@f2+1,w
  7171  0941  0271               	subwf	__tdiv_to_l_@f1+1,w
  7172  0942  1D03               	skipz
  7173  0943  2946               	goto	u1895
  7174  0944  0873               	movf	__tdiv_to_l_@f2,w
  7175  0945  0270               	subwf	__tdiv_to_l_@f1,w
  7176  0946                     u1895:	
  7177  0946  1C03               	skipc
  7178  0947  2954               	goto	L18
  7179  0948  0873               	movf	__tdiv_to_l_@f2,w
  7180  0949  02F0               	subwf	__tdiv_to_l_@f1,f
  7181  094A  0874               	movf	__tdiv_to_l_@f2+1,w
  7182  094B  1C03               	skipc
  7183  094C  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  7184  094D  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7185  094E  0875               	movf	__tdiv_to_l_@f2+2,w
  7186  094F  1C03               	skipc
  7187  0950  0A75               	incf	__tdiv_to_l_@f2+2,w
  7188  0951  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7189  0952  1420               	bsf	__tdiv_to_l_@quot,0
  7190  0953  1003               	clrc
  7191  0954                     L18:	
  7192  0954  0DF0               	rlf	__tdiv_to_l_@f1,f
  7193  0955  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7194  0956  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7195  0957  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  7196  0958  2937               	goto	l5155
  7197  0959  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7198  095A  2968               	goto	l5175
  7199  095B  0825               	movf	__tdiv_to_l_@exp1,w
  7200  095C  3A80               	xorlw	128
  7201  095D  3E97               	addlw	151
  7202  095E  1C03               	btfss	3,0
  7203  095F  2915               	goto	l5139
  7204  0960                     l5171:	
  7205  0960  1003               	clrc
  7206  0961  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7207  0962  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7208  0963  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7209  0964  0CA0               	rrf	__tdiv_to_l_@quot,f
  7210  0965  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  7211  0966  2960               	goto	l5171
  7212  0967  2976               	goto	l5181
  7213  0968                     l5175:	
  7214  0968  3018               	movlw	24
  7215  0969  0225               	subwf	__tdiv_to_l_@exp1,w
  7216  096A  1803               	btfsc	3,0
  7217  096B  2915               	goto	l5139
  7218  096C                     l2566:	
  7219  096C  08A5               	movf	__tdiv_to_l_@exp1,f
  7220  096D  1903               	btfsc	3,2
  7221  096E  2976               	goto	l5181
  7222  096F  1003               	clrc
  7223  0970  0DA0               	rlf	__tdiv_to_l_@quot,f
  7224  0971  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7225  0972  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7226  0973  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7227  0974  03A5               	decf	__tdiv_to_l_@exp1,f
  7228  0975  296C               	goto	l2566
  7229  0976                     l5181:	
  7230  0976  0823               	movf	__tdiv_to_l_@quot+3,w
  7231  0977  00F3               	movwf	?__tdiv_to_l_+3
  7232  0978  0822               	movf	__tdiv_to_l_@quot+2,w
  7233  0979  00F2               	movwf	?__tdiv_to_l_+2
  7234  097A  0821               	movf	__tdiv_to_l_@quot+1,w
  7235  097B  00F1               	movwf	?__tdiv_to_l_+1
  7236  097C  0820               	movf	__tdiv_to_l_@quot,w
  7237  097D  00F0               	movwf	?__tdiv_to_l_
  7238  097E  0008               	return
  7239  097F                     __end_of__tdiv_to_l_:	
  7240                           
  7241                           	psect	text755
  7242  0043                     __ptext755:	
  7243 ;; =============== function _i2c_start ends ============
  7244                           
  7245                           
  7246 ;; *************** function _i2c_init *****************
  7247 ;; Defined at:
  7248 ;;		line 98 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;		None
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;		None
  7253 ;; Return value:  Size  Location     Type
  7254 ;;		None               void
  7255 ;; Registers used:
  7256 ;;		wreg, status,2
  7257 ;; Tracked objects:
  7258 ;;		On entry : 7F/0
  7259 ;;		On exit  : 7F/20
  7260 ;;		Unchanged: FFF80/0
  7261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7262 ;;      Params:         0       0       0       0       0
  7263 ;;      Locals:         0       0       0       0       0
  7264 ;;      Temps:          0       0       0       0       0
  7265 ;;      Totals:         0       0       0       0       0
  7266 ;;Total ram usage:        0 bytes
  7267 ;; Hardware stack levels used:    1
  7268 ;; This function calls:
  7269 ;;		Nothing
  7270 ;; This function is called by:
  7271 ;;		_main
  7272 ;; This function uses a non-reentrant model
  7273 ;;
  7274  0043                     _i2c_init:	
  7275                           
  7276                           ;eeprom_i2c.c: 99: TRISCbits.TRISC3=1;
  7277                           
  7278                           ; Regs used in _i2c_init: [wreg+status,2]
  7279  0043  1683               	bsf	3,5	;RP0=1, select bank1
  7280  0044  1587               	bsf	7,3	;volatile
  7281                           
  7282                           ;eeprom_i2c.c: 100: TRISCbits.TRISC4=1;
  7283  0045  1607               	bsf	7,4	;volatile
  7284                           
  7285                           ;eeprom_i2c.c: 101: SSPSTAT=0b10000000;
  7286  0046  3080               	movlw	128
  7287  0047  0094               	movwf	20	;volatile
  7288                           
  7289                           ;eeprom_i2c.c: 102: SSPCON =0b00101000;
  7290  0048  3028               	movlw	40
  7291  0049  1283               	bcf	3,5	;RP0=0, select bank0
  7292  004A  0094               	movwf	20	;volatile
  7293                           
  7294                           ;eeprom_i2c.c: 103: SSPCON2 =0;
  7295  004B  1683               	bsf	3,5	;RP0=1, select bank1
  7296  004C  0191               	clrf	17	;volatile
  7297  004D  3009               	movlw	9
  7298                           
  7299                           ;eeprom_i2c.c: 104: SMP = 0;
  7300  004E  1394               	bcf	20,7
  7301                           
  7302                           ;eeprom_i2c.c: 107: SSPADD = ((4000000/(4UL*100000UL))-1);
  7303  004F  0093               	movwf	19	;volatile
  7304  0050  0008               	return
  7305  0051                     __end_of_i2c_init:	
  7306                           
  7307                           	psect	text757
  7308  003C                     __ptext757:	
  7309 ;; =============== function _msecbase ends ============
  7310                           
  7311                           
  7312 ;; *************** function _putch *****************
  7313 ;; Defined at:
  7314 ;;		line 43 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;  dato            1    wreg     unsigned char 
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;  dato            1    0[COMMON] unsigned char 
  7319 ;; Return value:  Size  Location     Type
  7320 ;;		None               void
  7321 ;; Registers used:
  7322 ;;		wreg
  7323 ;; Tracked objects:
  7324 ;;		On entry : 140/20
  7325 ;;		On exit  : 160/0
  7326 ;;		Unchanged: FFE9F/0
  7327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7328 ;;      Params:         0       0       0       0       0
  7329 ;;      Locals:         1       0       0       0       0
  7330 ;;      Temps:          0       0       0       0       0
  7331 ;;      Totals:         1       0       0       0       0
  7332 ;;Total ram usage:        1 bytes
  7333 ;; Hardware stack levels used:    1
  7334 ;; This function calls:
  7335 ;;		Nothing
  7336 ;; This function is called by:
  7337 ;;		_main
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340  003C                     _putch:	
  7341                           
  7342                           ; Regs used in _putch: [wreg]
  7343                           ;putch@dato stored from wreg
  7344  003C  00F0               	movwf	putch@dato
  7345  003D                     l1050:	
  7346                           ;eeprom_i2c.c: 44: while(!TXIF) continue;
  7347                           
  7348  003D  1283               	bcf	3,5	;RP0=0, select bank0
  7349  003E  1E0C               	btfss	12,4
  7350  003F  283D               	goto	l1050
  7351                           
  7352                           ;eeprom_i2c.c: 45: TXREG=dato;
  7353  0040  0870               	movf	putch@dato,w
  7354  0041  0099               	movwf	25	;volatile
  7355  0042  0008               	return
  7356  0043                     __end_of_putch:	
  7357                           
  7358                           	psect	text758
  7359  0000                     __ptext758:	
  7360 ;; =============== function _putch ends ============
  7361                           
  7362  007E                     btemp	set	126	;btemp
  7363  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Wed Nov 27 18:38:39 2019

                    pc 0002         ___bmul@product 007A           ___awdiv@sign 007B                     fsr 0004  
  ___wmul@multiplicand 0072           ___ftadd@exp1 0047           ___ftadd@exp2 0046           ___ftadd@sign 0045  
                  _RE0 0048                    _RE1 0049                    _RE2 004A                    _PR2 0092  
                  _SCS 0478                    _SMP 04A7                    _nin 00D0                    fsr0 0004  
                  indf 0000           ___awmod@sign 0075            lcd_goto@pos 0076                   l1100 1795  
                 l1103 0000                   l1112 179B                   l1050 003D                   l1106 1790  
                 l1130 1787                   l1115 0000                   l1124 17A4                   l1053 0000  
                 l1109 0000                   l1133 0000                   l1142 0000                   l1127 0000  
                 l1151 0000                   l1136 0000                   l1145 0000                   l1313 0000  
                 l1082 0000                   l1091 0000                   l1139 0000                   l1157 0000  
                 l1229 00F6                   l1094 178B                   l1238 012E                   l1079 17FC  
                 l1175 0BB9                   l1167 0B7C                   l1088 0000                   l1097 0000  
                 l2314 0000                   l2308 0000                   l2341 0A90                   l2350 0000  
                 l2344 0000                   l2601 163A                   l2602 0000                   l2428 06CC  
                 l2372 16F5                   l2436 0000                   l5101 0000                   l2461 0000  
                 l5103 0000                   l5111 0000                   l2471 0000                   l2551 0000  
                 l5105 0000                   l5113 0000                   l5121 0000                   l2609 1659  
                 l5201 0000                   l2529 0000                   l6001 039D                   l2298 0000  
                 l2490 0000                   l2394 0000                   l5107 0000                   l5123 0000  
                 l5211 0000                   l5203 15FA                   l2475 0000                   l6003 03B2  
                 l5109 0000                   l5133 0677                   l5125 0000                   l5141 091A  
                 l5221 1655                   l5205 0000                   l5301 0000                   l6101 057A  
                 l6021 03EC                   l6013 03E9                   l2566 096C                   l5119 0000  
                 l5127 0000                   l2559 0000                   l5151 0000                   l5231 0000  
                 l6111 05A0                   l6103 057D                   l6031 0000                   l6023 0400  
                 l5161 0000                   l5153 0000                   l5145 0000                   l5137 0000  
                 l5217 164D                   l5209 0000                   l5241 0000                   l5233 0F5D  
                 l5321 0F8E                   l5313 0F75                   l5305 0000                   l5401 0000  
                 l6113 0000                   l6033 0428                   l6017 0000                   l6009 03BB  
                 l6201 0000                   l5091 0000                   l5171 0960                   l5155 0937  
                 l5147 0000                   l5139 0915                   l5227 1663                   l5219 0000  
                 l5331 0000                   l5323 0F93                   l5315 0F7A                   l5307 0000  
                 l5411 0EAA                   l6115 0000                   l6107 0599                   l6035 0449  
                 l6027 040F                   l6019 0000                   l6051 04C1                   l6131 0065  
                 l6211 0000                   l6203 0000                   l5181 0976                   l5173 0000  
                 l5165 0000                   l5157 0000                   l5149 0000                   l5253 0683  
                 l5317 0F7F                   l5309 0F71                   l5341 0000                   l5333 0000  
                 l5405 0000                   l5501 0EC0                   l6125 0000                   l6117 05AE  
                 l6109 059C                   l6061 04E5                   l6053 0000                   l6045 0000  
                 l6037 0000                   l6029 0000                   l6133 05FC                   l6221 0000  
                 l6213 0000                   l6205 0000                   l6141 0000                   l5095 0000  
                 l5175 0968                   l5239 0000                   l5255 0000                   l5247 0000  
                 l5263 0000                   l5327 0000                   l5319 0F89                   l5343 0000  
                 l5335 069C                   l5407 0EA2                   l5423 0611                   l5431 0636  
                 l5415 0000                   l6055 0000                   l6047 0000                   l6039 0000  
                 l6303 0000                   l6231 0000                   l6223 0000                   l6215 0000  
                 l6207 0000                   l6151 0000                   l6143 0000                   l5097 0000  
                 l5185 0000                   l5257 0000                   l5249 067B                   l5281 0000  
                 l5273 0000                   l5265 0000                   l5329 0000                   l5353 06C0  
                 l5345 0000                   l5337 06A1                   l5409 0000                   l5521 0EE7  
                 l5601 16EC                   l6129 05B8                   l6081 0527                   l6073 04F3  
                 l6049 04B5                   l6233 0000                   l6225 0000                   l6217 0000  
                 l6209 0000                   l6161 0000                   l6153 0000                   l6145 0000  
                 l6137 0000                   l5099 0000                   l5195 0000                   l5187 15C4  
                 l5267 0000                   l5283 0A9D                   l5291 0AA3                   l5363 06D6  
                 l5355 0000                   l5347 0000                   l5339 0000                   l5371 0000  
                 l5435 0000                   l5451 065D                   l5443 0000                   l5515 0000  
                 l5531 17E6                   l5603 16F1                   l6067 04F1                   l6059 0000  
                 l6235 0000                   l6219 0B65                   l6171 0000                   l6163 0AF0  
                 l6155 0000                   l6147 0000                   l6139 0000                   l5197 0000  
                 l5189 15C9                   l5277 0000                   l5269 0A8A                   l5293 0000  
                 l5365 0000                   l5357 06C8                   l5373 0000                   l5429 0000  
                 l5453 0000                   l5509 0ECC                   l5517 0EDF                   l5525 17E4  
                 l5541 0000                   l5533 0000                   l5613 0000                   l5701 0000  
                 l6085 053B                   l6261 0000                   l6253 0000                   l6237 0000  
                 l6229 0000                   l6181 0000                   l6173 0000                   l6165 0000  
                 l6157 0000                   l6149 0000                   l5199 0000                   l5295 0000  
                 l5287 0000                   l5367 06E4                   l5383 0000                   l5455 0000  
                 l5447 064E                   l5463 0000                   l5519 0000                   l5543 0000  
                 l5535 0000                   l5623 0000                   l5615 170B                   l5607 0000  
                 l5631 0000                   l5711 0000                   l5703 0000                   l6095 0560  
                 l6079 0000                   l6271 0000                   l6263 0000                   l6255 0000  
                 l6191 0000                   l6183 0000                   l6175 0000                   l6167 0000  
                 l6159 0000                   l5289 0000                   l5385 0E7D                   l5377 0000  
                 l5473 0701                   l5465 0000                   l5529 0000                   l5545 0000  
                 l5537 0000                   l5625 0000                   l5617 0000                   l5609 1700  
                 l5561 169C                   l5553 0000                   l5705 0000                   l5721 0000  
                 l5713 17D3                   l6089 0553                   l6281 0000                   l6273 0000  
                 l6265 0000                   l6257 0000                   l6193 0000                   l6185 0000  
                 l6177 0000                   l6169 0000                   l5299 0AB7                   l5395 0E8B  
                 l5387 0000                   l5379 0E74                   l5483 0000                   l5475 0000  
                 l5491 0000                   l5547 0000                   l5539 0000                   l5627 1727  
                 l5619 0000                   l5571 16B2                   l5555 0000                   l5651 0000  
                 l5643 0F0E                   l5707 0000                   l5723 0000                   l5715 0000  
                 l5731 0000                   l5803 0000                   l5811 0000                   l6283 0000  
                 l6275 0000                   l6267 0000                   l6259 0000                   l6195 0000  
                 l6187 0000                   l6179 0000                   l5397 0000                   l5485 072C  
                 l5549 0000                   l5581 0000                   l5573 0000                   l5565 16A3  
                 l5557 0000                   l5661 0F1F                   l5653 0000                   l5645 0000  
                 l5637 0EFD                   l5709 0000                   l5725 0000                   l5717 0000  
                 l5741 0000                   l5805 17B5                   l5901 0000                   l5821 0000  
                 l6285 0000                   l6277 0000                   l6269 0000                   l6197 0000  
                 l6189 0000                   l5479 0000                   l5495 0000                   l5591 16D4  
                 l5583 16C0                   l5567 0000                   l5671 0000                   l5655 0000  
                 l5647 0000                   l5719 0000                   l5727 0000                   l5807 0000  
                 l5831 00B7                   l6295 0C84                   l6287 0000                   l6279 0000  
                 l6199 0000                   l5497 0EB9                   l5489 0000                   l5585 0000  
                 l5593 16D9                   l5681 0000                   l5673 0F35                   l5665 0F29  
                 l5657 0000                   l5649 0000                   l5745 0A5E                   l5737 0A0A  
                 l5761 0D48                   l5753 0000                   l5809 0000                   l5921 0000  
                 l5913 0000                   l5905 0000                   l5841 0000                   l5825 0092  
                 l5817 0000                   l6297 0000                   l6289 0000                   l5595 16DD  
                 l5579 0000                   l5683 0000                   l5667 0000                   l5659 0000  
                 l5691 0000                   l5771 0DA4                   l5931 0000                   l5923 0000  
                 l5915 0000                   l5907 01C9                   l5851 0000                   l5843 00C8  
                 l5835 0000                   l5827 0000                   l5819 007E                   l6299 0000  
                 l5597 0000                   l5589 16CF                   l5677 0F3F                   l5669 0000  
                 l5749 0000                   l5917 0000                   l5909 0000                   l5861 0108  
                 l5853 0000                   l5837 0000                   l5845 00F1                   l5829 0000  
                 l5679 0000                   l5687 0000                   l5695 0CBC                   l5767 0D8D  
                 l5791 0000                   l5951 02BE                   l5943 0293                   l5935 024F  
                 l5927 0216                   l5919 0000                   l5871 013D                   l5863 011D  
                 l5847 0000                   l5697 0CC7                   l5785 0E53                   l5961 0000  
                 l5929 0000                   l5881 0000                   l5857 0106                   l5849 00F8  
                 l5779 0E0E                   l5795 0000                   l5971 033A                   l5963 0000  
                 l5955 02CF                   l5939 025F                   l5883 0000                   l5875 0000  
                 l5891 018D                   l5789 0000                   l5797 0000                   l5965 0000  
                 l5885 0166                   l5877 013F                   l5799 0000                   l5991 0399  
                 l5983 0000                   l5967 02FF                   l5879 014D                   l5993 03AD  
                 l5985 0370                   l5977 033C                   l5969 0000                   l5897 019D  
                 l5889 0172                   l5987 0000                   l5899 0000                   l5997 0000  
                 STR_1 0886                   STR_2 08A1                   STR_3 08B9                   STR_4 08BF  
                 STR_5 08B3                   STR_6 08C2                   STR_7 0895                   STR_8 08AC  
                 _T0IF 005A                   u3110 0000                   u2240 0000                   u3115 01DC  
                 u3035 0128                   u2245 06A5                   u2405 061F                   u3045 0134  
                 u3215 0369                   u2355 0E94                   u3155 0268                   u3165 029D  
                 u3255 03A6                   u2545 0ED2                   u3435 0570                   u3195 02BC  
                 u2485 0714                   u3445 058B                   u3365 0520                   u3285 03F5  
                 u2575 17EC                   u3295 040A                   u3385 0535                   u3395 054B  
                 u1895 0946                   u1985 161E                   _PIR1 000C                   _TMR0 0001  
                 _TXIF 0064       __end_of_I2C_EEIN 1782                   _main 0AD1           ___ftpack@arg 0070  
         ___ftpack@exp 0073                   btemp 007E       __end_of_I2C_nack 17A8                   start 0000  
         _sprintf$1943 00A0      ___bmul@multiplier 007B           ___ftmul@cntr 003A          ??_i2c_restart 0070  
         ___ftmul@sign 003B           ___fttol@exp1 002C           ___fttol@lval 0028                  ?_main 0070  
      __end_of___awdiv 0EAF        __end_of___lbdiv 0A9F        __end_of___ftadd 173B        __end_of___awmod 0EEC  
      __end_of___lbmod 0ABB        __end_of___ftneg 073D                  _ANSEL 0188        __end_of___lldiv 0735  
      __end_of___ftmul 0F5B        ___awdiv@divisor 0076        __end_of___llmod 063F        __end_of___ftsub 0755  
      __end_of___fttol 06ED                  _T2CON 0012                  _IRCF1 047D                  _IRCF2 047E  
      ___awdiv@counter 007A                  _RCSTA 0018                  _SPBRG 0099                  _PORTA 0005  
                _PORTB 0006                  _PORTD 0008                  _TRISA 0085                  _TRISB 0086  
                _TRISC 0087                  _TRISD 0088                  _TRISE 0089                  _TXREG 0019  
                _TXSTA 0098           ___lltoft@exp 007C      __end_of_I2C_EEOUT 1761                  _carac 00D1  
                _scale 0CD8        __end_of_isdigit 0679                  _pause 17E4          ___ftpack@sign 0074  
                _putch 003C                  main@x 00CD                  pclath 000A                  status 0003  
                wtemp0 007E        __end_of_sprintf 0601        ___lbdiv@divisor 0075        ___lbdiv@counter 0077  
         __end_of_main 0CAB       __end_of_i2c_init 0051       __end_of_i2c_read 17A0       __end_of_i2c_stop 1793  
  __end_of_i2c_restart 1798                 ??_main 005B          ___fttol@sign1 0027   __size_of__tdiv_to_l_ 0078  
               _ADCON0 001F       ___llmod@dividend 0024                 ?_scale 003C                 _ADRESH 001E  
               _ADRESL 009E           I2C_EEIN@data 0073                 _CCPR1L 0015                 ?_pause 0070  
               _CCPR2L 001B       ___awdiv@dividend 0078                 ?_putch 0070       __end_of___ftpack 0FA7  
               _ANSELH 0189       __end_of___lbtoft 0CBA       __end_of___lltoft 0CD8                 _OSCCON 008F  
               _SSPADD 0093                 _TRISC1 0439                 _TRISC2 043A                 _TRISC6 043E  
               _TRISC7 043F                 _SSPCON 0014                 _SSPBUF 0013     __size_of_i2c_start 0004  
   __size_of_i2c_write 0008       __end_of_lcd_goto 1746                 ___bmul 0F5B       __end_of_lcd_puts 17D3  
               ___ftge 063F                 _carac1 00D6                 ___wmul 0679              ??___awdiv 007A  
            ??___lbdiv 0076              ??___ftadd 0042              ??___awmod 0074              ??___lbmod 0071  
            ??___ftneg 0073              ??___lldiv 0078              ??___ftmul 0033              ??___llmod 007D  
            ??___ftsub 007E              ??___fttol 0024                 _fround 097F       ___awdiv@quotient 007C  
      ___awmod@divisor 0070        ___awmod@counter 0074       __end_of_msecbase 1800              ?_I2C_EEIN 0071  
___ftmul@f3_as_product 0037              ??_isdigit 0070                 pause@x 0072              ?_I2C_nack 0070  
            ??_sprintf 0056       ___lbdiv@dividend 0076        ___lbmod@divisor 0070        ___lbmod@counter 0073  
           ___ftadd@f1 003C             ___ftadd@f2 003F             ___ftge@ff1 0070             ___ftge@ff2 0073  
           ___ftneg@f1 0070             ___lbtoft@c 007B    ___bmul@multiplicand 0079             ___ftmul@f1 002D  
           ___ftmul@f2 0030             ___ftsub@f1 004B             ___ftsub@f2 0048             ___fttol@f1 0020  
       __pcstackCOMMON 0070            _i2c_restart 1793             ___lltoft@c 0078          __end_of_scale 0E6A  
        __end_of_pause 17F5          __end_of_putch 0043       ___lbdiv@quotient 0078             ??_I2C_EEIN 0072  
    __end_of_i2c_start 178E      __end_of_i2c_write 178A             __div_to_l_ 15B7             ??_I2C_nack 0070  
   __size_of_lcd_clear 000B        __div_to_l_@exp1 0025     __size_of_lcd_write 0011        __div_to_l_@cntr 0024  
         sprintf@integ 00A5                ??_scale 003F                ??_pause 0072        __div_to_l_@quot 0020  
         sprintf@width 00AA                ??_putch 0070             __pbssBANK1 00D0              ?_i2c_init 0070  
            ?_i2c_read 0070              ?_i2c_stop 0070          __div_to_l_@f1 0070          __div_to_l_@f2 0073  
           __pmaintext 0AD1                ?___bmul 0079                ?___ftge 0070                ?___wmul 0070  
              _CCP1CON 0017                _CCP2CON 001D                _BAUDCTL 0187                ?_fround 0048  
            ?___ftpack 0070              ?___lbtoft 0078              ?___lltoft 0078                _GO_DONE 00F9  
        I2C_EEOUT@data 0075                _SSPCON2 0091              ?_lcd_goto 0070                _SSPSTAT 0094  
            ?_lcd_puts 0076              _I2C_EEOUT 1746             ??_i2c_init 0070             ??_i2c_read 0070  
           ??_i2c_stop 0070              ?_msecbase 0070             _scale$2944 0043      __end_of_lcd_clear 17B3  
      __size_of___bmul 000E        __size_of___ftge 002C                ___awdiv 0E6A                ___lbdiv 0A84  
              ___ftadd 1679                ___awmod 0EAF                ___lbmod 0A9F      __end_of_lcd_write 17E4  
              ___ftneg 0735                ___lldiv 06ED        __size_of___wmul 0019                ___ftmul 0EEC  
              ___llmod 0601                ___ftsub 073D                ___fttol 0692             ??___ftpack 0075  
           ??___lbtoft 007B        __size_of_fround 0105             ??___lltoft 007C            ?__div_to_l_ 0070  
              _dpowers 085E                _isdigit 066B       ___awmod@dividend 0072                _sprintf 0061  
           ??_lcd_goto 0076             ??_lcd_puts 0078   end_of_initialization 005D             ?_I2C_EEOUT 0074  
           ??_msecbase 0070        ___lldiv@divisor 0070        ___lldiv@counter 007C         __tdiv_to_l_@f1 0070  
       __tdiv_to_l_@f2 0073          ??__tdiv_to_l_ 0076       ___lbmod@dividend 0072      __size_of_I2C_EEIN 0021  
            _TRISCbits 0087      __size_of_I2C_nack 0008            ___lbmod@rem 0074             main@buffer 00B9  
  __size_of__div_to_l_ 00B5             lcd_write@c 0074            ___ftmul@exp 0036           ?_i2c_restart 0070  
       __end_of___bmul 0F69         __end_of___ftge 066B         __end_of___wmul 0692         __end_of_fround 0A84  
  start_initialization 0051    __end_of__tdiv_to_l_ 097F              _i2c_start 178A              _i2c_write 1782  
          ??_I2C_EEOUT 0076        ___llmod@divisor 0020        ___llmod@counter 007D      __size_of_i2c_init 000E  
    __size_of_i2c_read 0008      __size_of_i2c_stop 0005               ??___bmul 007A               ??___ftge 0076  
             ??___wmul 0074               ??_fround 007E             fround@prec 0051      __size_of___ftpack 003E  
    __size_of___lbtoft 000F           pause@usvalue 0070      __size_of___lltoft 001E          __pcstackBANK0 0020  
        __pcstackBANK1 00A0             ?_i2c_start 0070             ?_i2c_write 0070           _isdigit$2451 0070  
    __size_of_lcd_goto 000B            sprintf@_val 00B5            sprintf@flag 00A8      __size_of_lcd_puts 0020  
          sprintf@fval 00AE            sprintf@prec 00B2              _main$2941 00C8      __size_of_msecbase 000B  
             ?___awdiv 0076               ?___lbdiv 0075               ?___ftadd 003C               ?___awmod 0070  
            __ptext720 173B              __ptext721 17B3              __ptext730 0EEC              __ptext722 17A8  
            __ptext731 1679              __ptext723 073D               ?___lbmod 0070              __ptext740 0692  
            __ptext732 1761              __ptext724 0CD8              __ptext741 0F69              __ptext733 17E4  
            __ptext725 097F              __ptext750 17A0              __ptext742 0A9F              __ptext734 0EAF  
            __ptext726 17D3              __ptext751 1798              __ptext743 0A84              __ptext735 06ED  
            __ptext727 1746              __ptext719 0061              __ptext752 178E              __ptext744 0679  
            __ptext736 063F              __ptext728 0CBA              __ptext753 1793              __ptext745 0F5B  
            __ptext737 0735              __ptext729 0CAB              __ptext754 178A              __ptext746 15B7  
            __ptext738 0601              __ptext755 0043              __ptext747 0907              __ptext739 0E6A  
            __ptext756 17F5              __ptext748 066B              __ptext757 003C              __ptext749 1782  
            __ptext758 0000               ?___ftneg 0070               ?___lldiv 0070               ?___ftmul 002D  
             ?___llmod 0020               ?___ftsub 0048              __npowers_ 0810               ?___fttol 0020  
            _lcd_clear 17A8              __pstrings 0800            __tdiv_to_l_ 0907              _lcd_write 17D3  
             _I2C_EEIN 1761           ??__div_to_l_ 0076               ?_isdigit 0070               _I2C_nack 17A0  
             ?_sprintf 0052         __size_of_scale 0192         __size_of_pause 0011         __size_of_putch 0007  
       ___wmul@product 0074               _PIR1bits 000C     __end_of__div_to_l_ 166C   __size_of_i2c_restart 0005  
           ?_lcd_clear 0070            __stringbase 080F             ?_lcd_write 0074      ___wmul@multiplier 0070  
            lcd_puts@s 0076            ??_i2c_start 0070            ??_i2c_write 0070       I2C_EEIN@address1 0072  
     I2C_EEIN@address2 0071               _i2c_init 0043               _i2c_read 1798               _i2c_stop 178E  
    i2c_write@I2C_data 0070       __size_of___awdiv 0045       __size_of___lbdiv 001B       __size_of___ftadd 00C2  
     __size_of___awmod 003D       __size_of___lbmod 001C       __size_of___ftneg 0008       __size_of___lldiv 0048  
     __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0018       __size_of___fttol 005B  
             ___ftpack 0F69               ___lbtoft 0CAB            _fround$2942 004E            _fround$2943 004B  
             ___lltoft 0CBA             sprintf@exp 00AC       __size_of_isdigit 000E               __powers_ 0837  
             _lcd_goto 173B               _lcd_puts 17B3       __size_of_sprintf 05A0          __size_of_main 01DA  
             _msecbase 17F5               main@cnt1 00CF               main@cnt2 00CE            ??_lcd_clear 0076  
             main@cnum 00CB            ??_lcd_write 0076              putch@dato 0070      I2C_EEOUT@address1 0076  
    I2C_EEOUT@address2 0074               isdigit@c 0071               scale@scl 0046              sprintf@ap 00A4  
     __tdiv_to_l_@exp1 0025       __tdiv_to_l_@cntr 0024              sprintf@sp 00B1       __tdiv_to_l_@quot 0020  
     ___lldiv@dividend 0074              stringcode 080A           ?__tdiv_to_l_ 0070             _OPTION_REG 0081  
             sprintf@c 00B4               sprintf@f 0052       ___lldiv@quotient 0078               stringdir 080A  
             stringtab 0800            _SSPCON2bits 0091     __size_of_I2C_EEOUT 001B  
