

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Wed Nov 13 20:21:37 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text718,local,class=CODE,delta=2
    13                           	psect	text719,local,class=CODE,delta=2
    14                           	psect	text724,local,class=CODE,delta=2
    15                           	psect	text728,local,class=CODE,delta=2
    16                           	psect	text730,local,class=CODE,delta=2
    17                           	psect	text745,local,class=CODE,delta=2
    18                           	psect	text746,local,class=CODE,delta=2
    19                           	psect	text748,local,class=CODE,delta=2
    20                           	psect	text755,local,class=CODE,delta=2
    21                           	psect	text757,local,class=CODE,delta=2
    22                           	psect	pa_nodes,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  000A                     	;#
    25                           
    26                           	psect	config
    27  2007  E8D4               	dw	59604	;#
    28  2008  FFFF               	dw	65535	;#
    29                           
    30                           	psect	strings
    31  1000                     __pstrings:	
    32  1000                     stringtab:	
    33                           ;	global	stringdir,stringtab,__stringbase
    34                           
    35                           
    36                           ;	String table - string pointers are 1 byte each
    37  1000  1BFF               	btfsc	btemp+1,7
    38  1001  280A               	ljmp	stringcode
    39  1002  1383               	bcf	3,7
    40  1003  187F               	btfsc	btemp+1,0
    41  1004  1783               	bsf	3,7
    42  1005  0800               	movf	0,w
    43  1006  0A84               	incf	4,f
    44  1007  1903               	skipnz
    45  1008  0AFF               	incf	btemp+1,f
    46  1009  0008               	return
    47  100A                     stringcode:	
    48  100A                     stringdir:	
    49  100A  3010               	movlw	high stringdir
    50  100B  008A               	movwf	10
    51  100C  0804               	movf	4,w
    52  100D  0A84               	incf	4,f
    53  100E  0782               	addwf	2,f
    54  100F                     __stringbase:	
    55  100F  3400               	retlw	0
    56  1010                     __npowers_:	
    57  1010  3400               	retlw	0
    58  1011  3480               	retlw	128
    59  1012  343F               	retlw	63
    60  1013  34CD               	retlw	205
    61  1014  34CC               	retlw	204
    62  1015  343D               	retlw	61
    63  1016  34D7               	retlw	215
    64  1017  3423               	retlw	35
    65  1018  343C               	retlw	60
    66  1019  3412               	retlw	18
    67  101A  3483               	retlw	131
    68  101B  343A               	retlw	58
    69  101C  34B7               	retlw	183
    70  101D  34D1               	retlw	209
    71  101E  3438               	retlw	56
    72  101F  34C6               	retlw	198
    73  1020  3427               	retlw	39
    74  1021  3437               	retlw	55
    75  1022  3438               	retlw	56
    76  1023  3486               	retlw	134
    77  1024  3435               	retlw	53
    78  1025  34C0               	retlw	192
    79  1026  34D6               	retlw	214
    80  1027  3433               	retlw	51
    81  1028  34CC               	retlw	204
    82  1029  342B               	retlw	43
    83  102A  3432               	retlw	50
    84  102B  3470               	retlw	112
    85  102C  3489               	retlw	137
    86  102D  3430               	retlw	48
    87  102E  34E7               	retlw	231
    88  102F  34DB               	retlw	219
    89  1030  342E               	retlw	46
    90  1031  34E5               	retlw	229
    91  1032  343C               	retlw	60
    92  1033  341E               	retlw	30
    93  1034  3442               	retlw	66
    94  1035  34A2               	retlw	162
    95  1036  340D               	retlw	13
    96  1037                     __powers_:	
    97  1037  3400               	retlw	0
    98  1038  3480               	retlw	128
    99  1039  343F               	retlw	63
   100  103A  3400               	retlw	0
   101  103B  3420               	retlw	32
   102  103C  3441               	retlw	65
   103  103D  3400               	retlw	0
   104  103E  34C8               	retlw	200
   105  103F  3442               	retlw	66
   106  1040  3400               	retlw	0
   107  1041  347A               	retlw	122
   108  1042  3444               	retlw	68
   109  1043  3440               	retlw	64
   110  1044  341C               	retlw	28
   111  1045  3446               	retlw	70
   112  1046  3450               	retlw	80
   113  1047  34C3               	retlw	195
   114  1048  3447               	retlw	71
   115  1049  3424               	retlw	36
   116  104A  3474               	retlw	116
   117  104B  3449               	retlw	73
   118  104C  3497               	retlw	151
   119  104D  3418               	retlw	24
   120  104E  344B               	retlw	75
   121  104F  34BC               	retlw	188
   122  1050  34BE               	retlw	190
   123  1051  344C               	retlw	76
   124  1052  346B               	retlw	107
   125  1053  346E               	retlw	110
   126  1054  344E               	retlw	78
   127  1055  3403               	retlw	3
   128  1056  3415               	retlw	21
   129  1057  3450               	retlw	80
   130  1058  3479               	retlw	121
   131  1059  34AD               	retlw	173
   132  105A  3460               	retlw	96
   133  105B  34F3               	retlw	243
   134  105C  3449               	retlw	73
   135  105D  3471               	retlw	113
   136  105E                     _dpowers:	
   137  105E  3401               	retlw	1
   138  105F  3400               	retlw	0
   139  1060  3400               	retlw	0
   140  1061  3400               	retlw	0
   141  1062  340A               	retlw	10
   142  1063  3400               	retlw	0
   143  1064  3400               	retlw	0
   144  1065  3400               	retlw	0
   145  1066  3464               	retlw	100
   146  1067  3400               	retlw	0
   147  1068  3400               	retlw	0
   148  1069  3400               	retlw	0
   149  106A  34E8               	retlw	232
   150  106B  3403               	retlw	3
   151  106C  3400               	retlw	0
   152  106D  3400               	retlw	0
   153  106E  3410               	retlw	16
   154  106F  3427               	retlw	39
   155  1070  3400               	retlw	0
   156  1071  3400               	retlw	0
   157  1072  34A0               	retlw	160
   158  1073  3486               	retlw	134
   159  1074  3401               	retlw	1
   160  1075  3400               	retlw	0
   161  1076  3440               	retlw	64
   162  1077  3442               	retlw	66
   163  1078  340F               	retlw	15
   164  1079  3400               	retlw	0
   165  107A  3480               	retlw	128
   166  107B  3496               	retlw	150
   167  107C  3498               	retlw	152
   168  107D  3400               	retlw	0
   169  107E  3400               	retlw	0
   170  107F  34E1               	retlw	225
   171  1080  34F5               	retlw	245
   172  1081  3405               	retlw	5
   173  1082  3400               	retlw	0
   174  1083  34CA               	retlw	202
   175  1084  349A               	retlw	154
   176  1085  343B               	retlw	59
   177  001F                     _ADCON0	set	31
   178  001E                     _ADRESH	set	30
   179  0017                     _CCP1CON	set	23
   180  001D                     _CCP2CON	set	29
   181  0015                     _CCPR1L	set	21
   182  001B                     _CCPR2L	set	27
   183  000C                     _PIR1	set	12
   184  000C                     _PIR1bits	set	12
   185  0006                     _PORTB	set	6
   186  0008                     _PORTD	set	8
   187  0018                     _RCSTA	set	24
   188  0013                     _SSPBUF	set	19
   189  0014                     _SSPCON	set	20
   190  0012                     _T2CON	set	18
   191  0001                     _TMR0	set	1
   192  0019                     _TXREG	set	25
   193  00F9                     _GO_DONE	set	249
   194  002C                     _RA4	set	44
   195  002E                     _RA6	set	46
   196  002F                     _RA7	set	47
   197  005A                     _T0IF	set	90
   198  0064                     _TXIF	set	100
   199  009E                     _ADRESL	set	158
   200  0081                     _OPTION_REG	set	129
   201  008F                     _OSCCON	set	143
   202  0092                     _PR2	set	146
   203  0099                     _SPBRG	set	153
   204  0093                     _SSPADD	set	147
   205  0091                     _SSPCON2	set	145
   206  0091                     _SSPCON2bits	set	145
   207  0094                     _SSPSTAT	set	148
   208  0085                     _TRISA	set	133
   209  0086                     _TRISB	set	134
   210  0087                     _TRISC	set	135
   211  0087                     _TRISCbits	set	135
   212  0088                     _TRISD	set	136
   213  0089                     _TRISE	set	137
   214  0098                     _TXSTA	set	152
   215  0439                     _TRISC1	set	1081
   216  043A                     _TRISC2	set	1082
   217  043E                     _TRISC6	set	1086
   218  043F                     _TRISC7	set	1087
   219  0188                     _ANSEL	set	392
   220  0189                     _ANSELH	set	393
   221  0187                     _BAUDCTL	set	391
   222  0005                     _PORTA	set	5
   223  1086                     STR_1:	
   224  1086  3445               	retlw	69	;'E'
   225  1087  3473               	retlw	115	;'s'
   226  1088  3463               	retlw	99	;'c'
   227  1089  3472               	retlw	114	;'r'
   228  108A  3469               	retlw	105	;'i'
   229  108B  3462               	retlw	98	;'b'
   230  108C  3469               	retlw	105	;'i'
   231  108D  3465               	retlw	101	;'e'
   232  108E  346E               	retlw	110	;'n'
   233  108F  3464               	retlw	100	;'d'
   234  1090  346F               	retlw	111	;'o'
   235  1091  342E               	retlw	46	;'.'
   236  1092  342E               	retlw	46	;'.'
   237  1093  342E               	retlw	46	;'.'
   238  1094  3400               	retlw	0
   239  1095                     STR_7:	
   240  1095  344C               	retlw	76	;'L'
   241  1096  3465               	retlw	101	;'e'
   242  1097  3479               	retlw	121	;'y'
   243  1098  3465               	retlw	101	;'e'
   244  1099  346E               	retlw	110	;'n'
   245  109A  3464               	retlw	100	;'d'
   246  109B  346F               	retlw	111	;'o'
   247  109C  342E               	retlw	46	;'.'
   248  109D  342E               	retlw	46	;'.'
   249  109E  342E               	retlw	46	;'.'
   250  109F  342E               	retlw	46	;'.'
   251  10A0  3420               	retlw	32	;' '
   252  10A1  3400               	retlw	0
   253  10A2                     STR_5:	
   254  10A2  3456               	retlw	86	;'V'
   255  10A3  3425               	retlw	37	;'%'
   256  10A4  3469               	retlw	105	;'i'
   257  10A5  3420               	retlw	32	;' '
   258  10A6  343A               	retlw	58	;':'
   259  10A7  3420               	retlw	32	;' '
   260  10A8  3425               	retlw	37	;'%'
   261  10A9  3473               	retlw	115	;'s'
   262  10AA  3420               	retlw	32	;' '
   263  10AB  3420               	retlw	32	;' '
   264  10AC  3400               	retlw	0
   265  10AD                     STR_6:	
   266  10AD  344C               	retlw	76	;'L'
   267  10AE  3465               	retlw	101	;'e'
   268  10AF  3479               	retlw	121	;'y'
   269  10B0  3465               	retlw	101	;'e'
   270  10B1  346E               	retlw	110	;'n'
   271  10B2  3464               	retlw	100	;'d'
   272  10B3  346F               	retlw	111	;'o'
   273  10B4  342E               	retlw	46	;'.'
   274  10B5  342E               	retlw	46	;'.'
   275  10B6  342E               	retlw	46	;'.'
   276  10B7  3400               	retlw	0
   277  10B8                     STR_11:	
   278  10B8  3428               	retlw	40	;'('
   279  10B9  346E               	retlw	110	;'n'
   280  10BA  3475               	retlw	117	;'u'
   281  10BB  346C               	retlw	108	;'l'
   282  10BC  346C               	retlw	108	;'l'
   283  10BD  3429               	retlw	41	;')'
   284  10BE  3400               	retlw	0
   285  10BF                     STR_3:	
   286  10BF  3425               	retlw	37	;'%'
   287  10C0  3431               	retlw	49	;'1'
   288  10C1  342E               	retlw	46	;'.'
   289  10C2  3433               	retlw	51	;'3'
   290  10C3  3466               	retlw	102	;'f'
   291  10C4  3400               	retlw	0
   292  10C5                     STR_4:	
   293  10C5  3456               	retlw	86	;'V'
   294  10C6  3431               	retlw	49	;'1'
   295  10C7  343A               	retlw	58	;':'
   296  10C8  3400               	retlw	0
   297  10A2                     
   298                           	psect	cinit
   299  0052                     start_initialization:	
   300                           
   301                           ; Clear objects allocated to BANK1
   302  0052  1683               	bsf	3,5	;RP0=1, select bank1
   303  0053  01D0               	clrf	__pbssBANK1& (0+127)
   304  0054  01D1               	clrf	(__pbssBANK1+1)& (0+127)
   305  0055  01D2               	clrf	(__pbssBANK1+2)& (0+127)
   306  0056  01D3               	clrf	(__pbssBANK1+3)& (0+127)
   307  0057  01D4               	clrf	(__pbssBANK1+4)& (0+127)
   308  0058  01D5               	clrf	(__pbssBANK1+5)& (0+127)
   309  0059  01D6               	clrf	(__pbssBANK1+6)& (0+127)
   310  005A  01D7               	clrf	(__pbssBANK1+7)& (0+127)
   311  005B  01D8               	clrf	(__pbssBANK1+8)& (0+127)
   312  005C  01D9               	clrf	(__pbssBANK1+9)& (0+127)
   313  005D                     end_of_initialization:	
   314                           ;End of C runtime variable initialization code
   315                           
   316  005D  0183               	clrf	3
   317  005E  120A  158A  299C   	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	bssBANK1
   320  00D0                     __pbssBANK1:	
   321  00D0                     _num:	
   322  00D0                     	ds	3
   323  00D3                     _nin:	
   324  00D3                     	ds	2
   325  00D5                     _carac:	
   326  00D5                     	ds	5
   327                           
   328                           	psect	cstackBANK1
   329  00A0                     __pcstackBANK1:	
   330  00A0                     _sprintf$1951:	
   331                           
   332                           ; 4 bytes @ 0x0
   333  00A0                     	ds	4
   334  00A4                     sprintf@ap:	
   335                           
   336                           ; 1 bytes @ 0x4
   337  00A4                     	ds	1
   338  00A5                     sprintf@integ:	
   339                           
   340                           ; 3 bytes @ 0x5
   341  00A5                     	ds	3
   342  00A8                     sprintf@flag:	
   343                           
   344                           ; 2 bytes @ 0x8
   345  00A8                     	ds	2
   346  00AA                     sprintf@width:	
   347                           
   348                           ; 2 bytes @ 0xA
   349  00AA                     	ds	2
   350  00AC                     sprintf@exp:	
   351                           
   352                           ; 2 bytes @ 0xC
   353  00AC                     	ds	2
   354  00AE                     sprintf@fval:	
   355                           
   356                           ; 3 bytes @ 0xE
   357  00AE                     	ds	3
   358  00B1                     sprintf@sp:	
   359                           
   360                           ; 1 bytes @ 0x11
   361  00B1                     	ds	1
   362  00B2                     sprintf@prec:	
   363                           
   364                           ; 2 bytes @ 0x12
   365  00B2                     	ds	2
   366  00B4                     sprintf@c:	
   367                           
   368                           ; 1 bytes @ 0x14
   369  00B4                     	ds	1
   370  00B5                     sprintf@_val:	
   371                           
   372                           ; 4 bytes @ 0x15
   373  00B5                     	ds	4
   374  00B9                     main@buffer:	
   375                           
   376                           ; 15 bytes @ 0x19
   377  00B9                     	ds	15
   378  00C8                     main@cnt1:	
   379                           
   380                           ; 1 bytes @ 0x28
   381  00C8                     	ds	1
   382  00C9                     main@i:	
   383                           
   384                           ; 2 bytes @ 0x29
   385  00C9                     	ds	2
   386  00CB                     main@x:	
   387                           
   388                           ; 1 bytes @ 0x2B
   389  00CB                     	ds	1
   390  00CC                     main@x_1874:	
   391                           
   392                           ; 1 bytes @ 0x2C
   393  00CC                     	ds	1
   394  00CD                     main@x_1877:	
   395                           
   396                           ; 1 bytes @ 0x2D
   397  00CD                     	ds	1
   398  00CE                     main@x_1881:	
   399                           
   400                           ; 1 bytes @ 0x2E
   401  00CE                     	ds	1
   402  00CF                     main@cnt2:	
   403                           
   404                           ; 1 bytes @ 0x2F
   405  00CF                     	ds	1
   406                           
   407                           	psect	cstackCOMMON
   408  0070                     __pcstackCOMMON:	
   409  0070                     ?_putch:	
   410  0070                     ??_putch:	
   411                           ; 0 bytes @ 0x0
   412                           
   413  0070                     ?_isdigit:	
   414                           ; 0 bytes @ 0x0
   415                           
   416  0070                     ??_isdigit:	
   417                           ; 1 bit 
   418                           
   419  0070                     ?_msecbase:	
   420                           ; 0 bytes @ 0x0
   421                           
   422  0070                     ??_msecbase:	
   423                           ; 0 bytes @ 0x0
   424                           
   425  0070                     ?_pause:	
   426                           ; 0 bytes @ 0x0
   427                           
   428  0070                     ?_i2c_init:	
   429                           ; 0 bytes @ 0x0
   430                           
   431  0070                     ??_i2c_init:	
   432                           ; 0 bytes @ 0x0
   433                           
   434  0070                     ?_i2c_start:	
   435                           ; 0 bytes @ 0x0
   436                           
   437  0070                     ??_i2c_start:	
   438                           ; 0 bytes @ 0x0
   439                           
   440  0070                     ?_i2c_restart:	
   441                           ; 0 bytes @ 0x0
   442                           
   443  0070                     ??_i2c_restart:	
   444                           ; 0 bytes @ 0x0
   445                           
   446  0070                     ?_i2c_stop:	
   447                           ; 0 bytes @ 0x0
   448                           
   449  0070                     ??_i2c_stop:	
   450                           ; 0 bytes @ 0x0
   451                           
   452  0070                     ??_i2c_read:	
   453                           ; 0 bytes @ 0x0
   454                           
   455  0070                     ?_I2C_nack:	
   456                           ; 0 bytes @ 0x0
   457                           
   458  0070                     ??_I2C_nack:	
   459                           ; 0 bytes @ 0x0
   460                           
   461  0070                     ?_i2c_write:	
   462                           ; 0 bytes @ 0x0
   463                           
   464  0070                     ??_i2c_write:	
   465                           ; 0 bytes @ 0x0
   466                           
   467  0070                     ?_lcd_write:	
   468                           ; 0 bytes @ 0x0
   469                           
   470  0070                     ?_lcd_clear:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  0070                     ?_lcd_goto:	
   474                           ; 0 bytes @ 0x0
   475                           
   476  0070                     ?_main:	
   477                           ; 0 bytes @ 0x0
   478                           
   479  0070                     ?___ftge:	
   480                           ; 0 bytes @ 0x0
   481                           
   482  0070                     ?_i2c_read:	
   483                           ; 1 bit 
   484                           
   485  0070                     ?___lbmod:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?___wmul:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?___awmod:	
   492                           ; 2 bytes @ 0x0
   493                           
   494  0070                     ?___ftpack:	
   495                           ; 2 bytes @ 0x0
   496                           
   497  0070                     ?___ftneg:	
   498                           ; 3 bytes @ 0x0
   499                           
   500  0070                     ?__tdiv_to_l_:	
   501                           ; 3 bytes @ 0x0
   502                           
   503  0070                     ?__div_to_l_:	
   504                           ; 4 bytes @ 0x0
   505                           
   506  0070                     ?___lldiv:	
   507                           ; 4 bytes @ 0x0
   508                           
   509  0070                     i2c_write@I2C_data:	
   510                           ; 4 bytes @ 0x0
   511                           
   512  0070                     putch@dato:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     _isdigit$2459:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ___lbmod@divisor:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     pause@usvalue:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ___wmul@multiplier:	
   525                           ; 2 bytes @ 0x0
   526                           
   527  0070                     ___awmod@divisor:	
   528                           ; 2 bytes @ 0x0
   529                           
   530  0070                     ___ftneg@f1:	
   531                           ; 2 bytes @ 0x0
   532                           
   533  0070                     ___ftge@ff1:	
   534                           ; 3 bytes @ 0x0
   535                           
   536  0070                     __tdiv_to_l_@f1:	
   537                           ; 3 bytes @ 0x0
   538                           
   539  0070                     __div_to_l_@f1:	
   540                           ; 3 bytes @ 0x0
   541                           
   542  0070                     ___ftpack@arg:	
   543                           ; 3 bytes @ 0x0
   544                           
   545  0070                     ___lldiv@divisor:	
   546                           ; 3 bytes @ 0x0
   547                           
   548                           
   549                           ; 4 bytes @ 0x0
   550  0070                     	ds	1
   551  0071                     ??___lbmod:	
   552  0071                     ?_I2C_EEIN:	
   553                           ; 0 bytes @ 0x1
   554                           
   555  0071                     I2C_EEIN@address2:	
   556                           ; 1 bytes @ 0x1
   557                           
   558  0071                     isdigit@c:	
   559                           ; 1 bytes @ 0x1
   560                           
   561                           
   562                           ; 1 bytes @ 0x1
   563  0071                     	ds	1
   564  0072                     ??_pause:	
   565  0072                     ??_I2C_EEIN:	
   566                           ; 0 bytes @ 0x2
   567                           
   568  0072                     I2C_EEIN@address1:	
   569                           ; 0 bytes @ 0x2
   570                           
   571  0072                     ___lbmod@dividend:	
   572                           ; 1 bytes @ 0x2
   573                           
   574  0072                     pause@x:	
   575                           ; 1 bytes @ 0x2
   576                           
   577  0072                     ___wmul@multiplicand:	
   578                           ; 2 bytes @ 0x2
   579                           
   580  0072                     ___awmod@dividend:	
   581                           ; 2 bytes @ 0x2
   582                           
   583                           
   584                           ; 2 bytes @ 0x2
   585  0072                     	ds	1
   586  0073                     ??___ftneg:	
   587  0073                     I2C_EEIN@data:	
   588                           ; 0 bytes @ 0x3
   589                           
   590  0073                     ___lbmod@counter:	
   591                           ; 1 bytes @ 0x3
   592                           
   593  0073                     ___ftpack@exp:	
   594                           ; 1 bytes @ 0x3
   595                           
   596  0073                     ___ftge@ff2:	
   597                           ; 1 bytes @ 0x3
   598                           
   599  0073                     __tdiv_to_l_@f2:	
   600                           ; 3 bytes @ 0x3
   601                           
   602  0073                     __div_to_l_@f2:	
   603                           ; 3 bytes @ 0x3
   604                           
   605                           
   606                           ; 3 bytes @ 0x3
   607  0073                     	ds	1
   608  0074                     ?_I2C_EEOUT:	
   609  0074                     ??_lcd_write:	
   610                           ; 0 bytes @ 0x4
   611                           
   612  0074                     ??___wmul:	
   613                           ; 0 bytes @ 0x4
   614                           
   615  0074                     ??___awmod:	
   616                           ; 0 bytes @ 0x4
   617                           
   618  0074                     I2C_EEOUT@address2:	
   619                           ; 0 bytes @ 0x4
   620                           
   621  0074                     lcd_write@c:	
   622                           ; 1 bytes @ 0x4
   623                           
   624  0074                     ___lbmod@rem:	
   625                           ; 1 bytes @ 0x4
   626                           
   627  0074                     ___awmod@counter:	
   628                           ; 1 bytes @ 0x4
   629                           
   630  0074                     ___ftpack@sign:	
   631                           ; 1 bytes @ 0x4
   632                           
   633  0074                     ___wmul@product:	
   634                           ; 1 bytes @ 0x4
   635                           
   636  0074                     ___lldiv@dividend:	
   637                           ; 2 bytes @ 0x4
   638                           
   639                           
   640                           ; 4 bytes @ 0x4
   641  0074                     	ds	1
   642  0075                     ??___ftpack:	
   643  0075                     ??_lcd_clear:	
   644                           ; 0 bytes @ 0x5
   645                           
   646  0075                     ?_lcd_puts:	
   647                           ; 0 bytes @ 0x5
   648                           
   649  0075                     ??_lcd_goto:	
   650                           ; 0 bytes @ 0x5
   651                           
   652  0075                     ?___lbdiv:	
   653                           ; 0 bytes @ 0x5
   654                           
   655  0075                     I2C_EEOUT@data:	
   656                           ; 1 bytes @ 0x5
   657                           
   658  0075                     lcd_goto@pos:	
   659                           ; 1 bytes @ 0x5
   660                           
   661  0075                     ___lbdiv@divisor:	
   662                           ; 1 bytes @ 0x5
   663                           
   664  0075                     ___awmod@sign:	
   665                           ; 1 bytes @ 0x5
   666                           
   667  0075                     lcd_puts@s:	
   668                           ; 1 bytes @ 0x5
   669                           
   670                           
   671                           ; 2 bytes @ 0x5
   672  0075                     	ds	1
   673  0076                     ??__tdiv_to_l_:	
   674  0076                     ??__div_to_l_:	
   675                           ; 0 bytes @ 0x6
   676                           
   677  0076                     ??_I2C_EEOUT:	
   678                           ; 0 bytes @ 0x6
   679                           
   680  0076                     ??___lbdiv:	
   681                           ; 0 bytes @ 0x6
   682                           
   683  0076                     ??___ftge:	
   684                           ; 0 bytes @ 0x6
   685                           
   686  0076                     ?___awdiv:	
   687                           ; 0 bytes @ 0x6
   688                           
   689  0076                     I2C_EEOUT@address1:	
   690                           ; 2 bytes @ 0x6
   691                           
   692  0076                     ___lbdiv@dividend:	
   693                           ; 1 bytes @ 0x6
   694                           
   695  0076                     ___awdiv@divisor:	
   696                           ; 1 bytes @ 0x6
   697                           
   698                           
   699                           ; 2 bytes @ 0x6
   700  0076                     	ds	1
   701  0077                     ??_lcd_puts:	
   702  0077                     ___lbdiv@counter:	
   703                           ; 0 bytes @ 0x7
   704                           
   705                           
   706                           ; 1 bytes @ 0x7
   707  0077                     	ds	1
   708  0078                     ??___lldiv:	
   709  0078                     ?___awtoft:	
   710                           ; 0 bytes @ 0x8
   711                           
   712  0078                     ?___lltoft:	
   713                           ; 3 bytes @ 0x8
   714                           
   715  0078                     ___lbdiv@quotient:	
   716                           ; 3 bytes @ 0x8
   717                           
   718  0078                     ___awtoft@c:	
   719                           ; 1 bytes @ 0x8
   720                           
   721  0078                     ___awdiv@dividend:	
   722                           ; 2 bytes @ 0x8
   723                           
   724  0078                     ___lldiv@quotient:	
   725                           ; 2 bytes @ 0x8
   726                           
   727  0078                     ___lltoft@c:	
   728                           ; 4 bytes @ 0x8
   729                           
   730                           
   731                           ; 4 bytes @ 0x8
   732  0078                     	ds	1
   733  0079                     ?___bmul:	
   734  0079                     ___bmul@multiplicand:	
   735                           ; 1 bytes @ 0x9
   736                           
   737                           
   738                           ; 1 bytes @ 0x9
   739  0079                     	ds	1
   740  007A                     ??___bmul:	
   741  007A                     ??___awdiv:	
   742                           ; 0 bytes @ 0xA
   743                           
   744  007A                     ___bmul@product:	
   745                           ; 0 bytes @ 0xA
   746                           
   747  007A                     ___awdiv@counter:	
   748                           ; 1 bytes @ 0xA
   749                           
   750                           
   751                           ; 1 bytes @ 0xA
   752  007A                     	ds	1
   753  007B                     ??___awtoft:	
   754  007B                     ___bmul@multiplier:	
   755                           ; 0 bytes @ 0xB
   756                           
   757  007B                     ___awtoft@sign:	
   758                           ; 1 bytes @ 0xB
   759                           
   760  007B                     ___awdiv@sign:	
   761                           ; 1 bytes @ 0xB
   762                           
   763                           
   764                           ; 1 bytes @ 0xB
   765  007B                     	ds	1
   766  007C                     ??___lltoft:	
   767  007C                     ___lldiv@counter:	
   768                           ; 0 bytes @ 0xC
   769                           
   770  007C                     ___lltoft@exp:	
   771                           ; 1 bytes @ 0xC
   772                           
   773  007C                     ___awdiv@quotient:	
   774                           ; 1 bytes @ 0xC
   775                           
   776                           
   777                           ; 2 bytes @ 0xC
   778  007C                     	ds	1
   779  007D                     ??___llmod:	
   780  007D                     ___llmod@counter:	
   781                           ; 0 bytes @ 0xD
   782                           
   783                           
   784                           ; 1 bytes @ 0xD
   785  007D                     	ds	1
   786  007E                     ??_fround:	
   787  007E                     ??___ftsub:	
   788                           ; 0 bytes @ 0xE
   789                           
   790                           
   791                           	psect	cstackBANK0
   792  0020                     __pcstackBANK0:	
   793                           ; 0 bytes @ 0xE
   794                           
   795  0020                     ?___fttol:	
   796  0020                     ?___llmod:	
   797                           ; 4 bytes @ 0x0
   798                           
   799  0020                     ___fttol@f1:	
   800                           ; 4 bytes @ 0x0
   801                           
   802  0020                     ___llmod@divisor:	
   803                           ; 3 bytes @ 0x0
   804                           
   805  0020                     __tdiv_to_l_@quot:	
   806                           ; 4 bytes @ 0x0
   807                           
   808  0020                     __div_to_l_@quot:	
   809                           ; 4 bytes @ 0x0
   810                           
   811                           
   812                           ; 4 bytes @ 0x0
   813  0020                     	ds	4
   814  0024                     ??___fttol:	
   815  0024                     __tdiv_to_l_@cntr:	
   816                           ; 0 bytes @ 0x4
   817                           
   818  0024                     __div_to_l_@cntr:	
   819                           ; 1 bytes @ 0x4
   820                           
   821  0024                     ___llmod@dividend:	
   822                           ; 1 bytes @ 0x4
   823                           
   824                           
   825                           ; 4 bytes @ 0x4
   826  0024                     	ds	1
   827  0025                     __tdiv_to_l_@exp1:	
   828  0025                     __div_to_l_@exp1:	
   829                           ; 1 bytes @ 0x5
   830                           
   831                           
   832                           ; 1 bytes @ 0x5
   833  0025                     	ds	2
   834  0027                     ___fttol@sign1:	
   835                           
   836                           ; 1 bytes @ 0x7
   837  0027                     	ds	1
   838  0028                     ___fttol@lval:	
   839                           
   840                           ; 4 bytes @ 0x8
   841  0028                     	ds	4
   842  002C                     ___fttol@exp1:	
   843                           
   844                           ; 1 bytes @ 0xC
   845  002C                     	ds	1
   846  002D                     ?___ftmul:	
   847  002D                     ___ftmul@f1:	
   848                           ; 3 bytes @ 0xD
   849                           
   850                           
   851                           ; 3 bytes @ 0xD
   852  002D                     	ds	3
   853  0030                     ___ftmul@f2:	
   854                           
   855                           ; 3 bytes @ 0x10
   856  0030                     	ds	3
   857  0033                     ??___ftmul:	
   858                           
   859                           ; 0 bytes @ 0x13
   860  0033                     	ds	3
   861  0036                     ___ftmul@exp:	
   862                           
   863                           ; 1 bytes @ 0x16
   864  0036                     	ds	1
   865  0037                     ___ftmul@f3_as_product:	
   866                           
   867                           ; 3 bytes @ 0x17
   868  0037                     	ds	3
   869  003A                     ___ftmul@cntr:	
   870                           
   871                           ; 1 bytes @ 0x1A
   872  003A                     	ds	1
   873  003B                     ___ftmul@sign:	
   874                           
   875                           ; 1 bytes @ 0x1B
   876  003B                     	ds	1
   877  003C                     ?_scale:	
   878  003C                     ?___ftadd:	
   879                           ; 3 bytes @ 0x1C
   880                           
   881  003C                     ___ftadd@f1:	
   882                           ; 3 bytes @ 0x1C
   883                           
   884                           
   885                           ; 3 bytes @ 0x1C
   886  003C                     	ds	3
   887  003F                     ??_scale:	
   888  003F                     ___ftadd@f2:	
   889                           ; 0 bytes @ 0x1F
   890                           
   891                           
   892                           ; 3 bytes @ 0x1F
   893  003F                     	ds	3
   894  0042                     ??___ftadd:	
   895                           
   896                           ; 0 bytes @ 0x22
   897  0042                     	ds	1
   898  0043                     _scale$2943:	
   899                           
   900                           ; 3 bytes @ 0x23
   901  0043                     	ds	2
   902  0045                     ___ftadd@sign:	
   903                           
   904                           ; 1 bytes @ 0x25
   905  0045                     	ds	1
   906  0046                     scale@scl:	
   907  0046                     ___ftadd@exp2:	
   908                           ; 1 bytes @ 0x26
   909                           
   910                           
   911                           ; 1 bytes @ 0x26
   912  0046                     	ds	1
   913  0047                     ___ftadd@exp1:	
   914                           
   915                           ; 1 bytes @ 0x27
   916  0047                     	ds	1
   917  0048                     ?_fround:	
   918  0048                     ?___ftsub:	
   919                           ; 3 bytes @ 0x28
   920                           
   921  0048                     ___ftsub@f2:	
   922                           ; 3 bytes @ 0x28
   923                           
   924                           
   925                           ; 3 bytes @ 0x28
   926  0048                     	ds	3
   927  004B                     ___ftsub@f1:	
   928  004B                     _fround$2942:	
   929                           ; 3 bytes @ 0x2B
   930                           
   931                           
   932                           ; 3 bytes @ 0x2B
   933  004B                     	ds	3
   934  004E                     _fround$2941:	
   935                           
   936                           ; 3 bytes @ 0x2E
   937  004E                     	ds	3
   938  0051                     fround@prec:	
   939                           
   940                           ; 1 bytes @ 0x31
   941  0051                     	ds	1
   942  0052                     ?_sprintf:	
   943  0052                     sprintf@f:	
   944                           ; 2 bytes @ 0x32
   945                           
   946                           
   947                           ; 1 bytes @ 0x32
   948  0052                     	ds	4
   949  0056                     ??_sprintf:	
   950                           
   951                           ; 0 bytes @ 0x36
   952  0056                     	ds	5
   953  005B                     ??_main:	
   954                           
   955                           ; 0 bytes @ 0x3B
   956  005B                     	ds	1
   957                           
   958                           	psect	maintext
   959  099C                     __pmaintext:	
   960 ;;Data sizes: Strings 67, constant 118, data 0, bss 10, persistent 0 stack 0
   961 ;;Auto spaces:   Size  Autos    Used
   962 ;; COMMON          14     14      14
   963 ;; BANK0           80     60      60
   964 ;; BANK1           80     48      58
   965 ;; BANK3           96      0       0
   966 ;; BANK2           96      0       0
   967 ;;
   968 ;; Pointer list with targets:
   969 ;; ?___ftpack	float  size(1) Largest target is 5
   970 ;;		 -> carac(BANK1[5]), 
   971 ;;
   972 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   973 ;;
   974 ;; ?___llmod	unsigned long  size(1) Largest target is 5
   975 ;;		 -> carac(BANK1[5]), 
   976 ;;
   977 ;; ?___ftsub	float  size(1) Largest target is 0
   978 ;;
   979 ;; ?___lltoft	float  size(1) Largest target is 0
   980 ;;
   981 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   982 ;;
   983 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   984 ;;
   985 ;; ?___fttol	long  size(1) Largest target is 5
   986 ;;		 -> carac(BANK1[5]), 
   987 ;;
   988 ;; ?___ftadd	float  size(1) Largest target is 5
   989 ;;		 -> carac(BANK1[5]), 
   990 ;;
   991 ;; ?___ftneg	float  size(1) Largest target is 5
   992 ;;		 -> carac(BANK1[5]), 
   993 ;;
   994 ;; ?___awmod	int  size(2) Largest target is 40
   995 ;;		 -> dpowers(CODE[40]), carac(BANK1[5]), 
   996 ;;
   997 ;; ?___awdiv	int  size(1) Largest target is 0
   998 ;;
   999 ;; ?_scale	int  size(1) Largest target is 0
  1000 ;;
  1001 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1002 ;;
  1003 ;; ?_fround	unsigned int  size(1) Largest target is 0
  1004 ;;
  1005 ;; ?___ftmul	float  size(1) Largest target is 0
  1006 ;;
  1007 ;; ?___awtoft	float  size(1) Largest target is 0
  1008 ;;
  1009 ;; sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 7
  1010 ;;		 -> STR_11(CODE[7]), carac(BANK1[5]), 
  1011 ;;
  1012 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
  1013 ;;		 -> STR_10(CODE[11]), STR_8(CODE[6]), STR_7(CODE[13]), STR_5(CODE[11]), 
  1014 ;;		 -> STR_3(CODE[6]), STR_1(CODE[15]), 
  1015 ;;
  1016 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 15
  1017 ;;		 -> carac(BANK1[5]), main@buffer(BANK1[15]), 
  1018 ;;
  1019 ;; ?_sprintf	int  size(1) Largest target is 5
  1020 ;;		 -> carac(BANK1[5]), 
  1021 ;;
  1022 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1023 ;;		 -> ?_sprintf(BANK0[2]), 
  1024 ;;
  1025 ;; S1936$_cp	PTR const unsigned char  size(2) Largest target is 7
  1026 ;;		 -> STR_11(CODE[7]), carac(BANK1[5]), 
  1027 ;;
  1028 ;; _val._str._cp	PTR const unsigned char  size(2) Largest target is 7
  1029 ;;		 -> STR_11(CODE[7]), carac(BANK1[5]), 
  1030 ;;
  1031 ;; lcd_puts@s	PTR const unsigned char  size(2) Largest target is 15
  1032 ;;		 -> STR_9(CODE[4]), STR_6(CODE[11]), STR_4(CODE[4]), carac(BANK1[5]), 
  1033 ;;		 -> STR_2(CODE[15]), 
  1034 ;;
  1035 ;; pa	PTR unsigned char  size(1) Largest target is 1
  1036 ;;		 -> PORTA(BITSFR0[1]), 
  1037 ;;
  1038 ;;
  1039 ;; Critical Paths under _main in COMMON
  1040 ;;
  1041 ;;   _sprintf->___awdiv
  1042 ;;   _sprintf->__div_to_l_
  1043 ;;   _sprintf->___llmod
  1044 ;;   _lcd_goto->_lcd_write
  1045 ;;   _lcd_puts->_lcd_write
  1046 ;;   _lcd_clear->_lcd_write
  1047 ;;   _scale->___awdiv
  1048 ;;   _lcd_write->_pause
  1049 ;;   _I2C_EEOUT->_pause
  1050 ;;   ___lltoft->___ftpack
  1051 ;;   ___awtoft->___ftpack
  1052 ;;   ___ftmul->___awdiv
  1053 ;;   _I2C_EEIN->_i2c_write
  1054 ;;   ___llmod->___lldiv
  1055 ;;   ___awdiv->___awmod
  1056 ;;   ___fttol->___awdiv
  1057 ;;   ___lbdiv->___lbmod
  1058 ;;   ___bmul->___lbdiv
  1059 ;;
  1060 ;; Critical Paths under _main in BANK0
  1061 ;;
  1062 ;;   _main->_sprintf
  1063 ;;   _sprintf->_fround
  1064 ;;   ___ftsub->___ftadd
  1065 ;;   _scale->___ftmul
  1066 ;;   _fround->___ftadd
  1067 ;;   ___ftmul->___fttol
  1068 ;;   ___ftadd->___ftmul
  1069 ;;
  1070 ;; Critical Paths under _main in BANK1
  1071 ;;
  1072 ;;   _main->_sprintf
  1073 ;;
  1074 ;; Critical Paths under _main in BANK3
  1075 ;;
  1076 ;;   None.
  1077 ;;
  1078 ;; Critical Paths under _main in BANK2
  1079 ;;
  1080 ;;   None.
  1081 ;;
  1082 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1083 ;;
  1084 ;;
  1085 ;;Call Graph Tables:
  1086 ;;
  1087 ;; ---------------------------------------------------------------------------------
  1088 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1089 ;; ---------------------------------------------------------------------------------
  1090 ;; (0) _main                                                38    38      0   13223
  1091 ;;                                             59 BANK0      1     1      0
  1092 ;;                                             25 BANK1     23    23      0
  1093 ;;                              _pause
  1094 ;;                          _lcd_write
  1095 ;;                          _lcd_clear
  1096 ;;                              _putch
  1097 ;;                            _sprintf
  1098 ;;                           _lcd_goto
  1099 ;;                           _lcd_puts
  1100 ;;                           _i2c_init
  1101 ;;                           ___awtoft
  1102 ;;                            ___ftmul
  1103 ;;                          _I2C_EEOUT
  1104 ;;                           _I2C_EEIN
  1105 ;; ---------------------------------------------------------------------------------
  1106 ;; (1) _sprintf                                             38    34      4   10852
  1107 ;;                                             50 BANK0      9     5      4
  1108 ;;                                              0 BANK1     25    25      0
  1109 ;;                            _isdigit
  1110 ;;                             ___wmul
  1111 ;;                             ___ftge
  1112 ;;                            ___ftneg
  1113 ;;                            ___awdiv
  1114 ;;                              _scale
  1115 ;;                            ___ftmul
  1116 ;;                             _fround
  1117 ;;                            ___ftadd
  1118 ;;                            ___fttol
  1119 ;;                         __div_to_l_
  1120 ;;                        __tdiv_to_l_
  1121 ;;                           ___lltoft
  1122 ;;                            ___ftsub
  1123 ;;                            ___lldiv
  1124 ;;                            ___llmod
  1125 ;; ---------------------------------------------------------------------------------
  1126 ;; (1) _lcd_goto                                             1     1      0     112
  1127 ;;                                              5 COMMON     1     1      0
  1128 ;;                          _lcd_write
  1129 ;; ---------------------------------------------------------------------------------
  1130 ;; (1) _lcd_puts                                             2     0      2     135
  1131 ;;                                              5 COMMON     2     0      2
  1132 ;;                          _lcd_write
  1133 ;; ---------------------------------------------------------------------------------
  1134 ;; (1) _lcd_clear                                            0     0      0     136
  1135 ;;                          _lcd_write
  1136 ;;                              _pause
  1137 ;; ---------------------------------------------------------------------------------
  1138 ;; (2) ___ftsub                                              6     0      6    1094
  1139 ;;                                             40 BANK0      6     0      6
  1140 ;;                            ___ftadd
  1141 ;;                           ___lltoft (ARG)
  1142 ;; ---------------------------------------------------------------------------------
  1143 ;; (2) _scale                                               14    11      3    1688
  1144 ;;                                             28 BANK0     11     8      3
  1145 ;;                            ___awmod
  1146 ;;                            ___awdiv
  1147 ;;                            ___ftmul
  1148 ;;                             ___bmul
  1149 ;;                            ___fttol (ARG)
  1150 ;; ---------------------------------------------------------------------------------
  1151 ;; (2) _fround                                              13    10      3    1215
  1152 ;;                                             40 BANK0     10     7      3
  1153 ;;                            ___lbmod
  1154 ;;                             ___bmul
  1155 ;;                            ___lbdiv
  1156 ;;                            ___ftmul
  1157 ;;                            ___ftadd (ARG)
  1158 ;; ---------------------------------------------------------------------------------
  1159 ;; (2) _lcd_write                                            1     1      0      90
  1160 ;;                                              4 COMMON     1     1      0
  1161 ;;                              _pause
  1162 ;; ---------------------------------------------------------------------------------
  1163 ;; (1) _I2C_EEOUT                                            3     1      2     134
  1164 ;;                                              4 COMMON     3     1      2
  1165 ;;                          _i2c_start
  1166 ;;                          _i2c_write
  1167 ;;                           _i2c_stop
  1168 ;;                              _pause
  1169 ;; ---------------------------------------------------------------------------------
  1170 ;; (2) ___lltoft                                             5     1      4     278
  1171 ;;                                              8 COMMON     5     1      4
  1172 ;;                           ___ftpack
  1173 ;; ---------------------------------------------------------------------------------
  1174 ;; (1) ___awtoft                                             4     1      3     300
  1175 ;;                                              8 COMMON     4     1      3
  1176 ;;                           ___ftpack
  1177 ;; ---------------------------------------------------------------------------------
  1178 ;; (1) ___ftmul                                             15     9      6     535
  1179 ;;                                             13 BANK0     15     9      6
  1180 ;;                           ___ftpack
  1181 ;;                           ___awtoft (ARG)
  1182 ;;                            ___fttol (ARG)
  1183 ;;                            ___awdiv (ARG)
  1184 ;;                            ___awmod (ARG)
  1185 ;;                             ___bmul (ARG)
  1186 ;;                            ___lbdiv (ARG)
  1187 ;;                            ___lbmod (ARG)
  1188 ;; ---------------------------------------------------------------------------------
  1189 ;; (3) ___ftadd                                             12     6      6    1049
  1190 ;;                                             28 BANK0     12     6      6
  1191 ;;                           ___ftpack
  1192 ;;                            ___lbmod (ARG)
  1193 ;;                             ___bmul (ARG)
  1194 ;;                            ___lbdiv (ARG)
  1195 ;;                            ___ftmul (ARG)
  1196 ;; ---------------------------------------------------------------------------------
  1197 ;; (1) _I2C_EEIN                                             3     2      1      89
  1198 ;;                                              1 COMMON     3     2      1
  1199 ;;                          _i2c_start
  1200 ;;                          _i2c_write
  1201 ;;                        _i2c_restart
  1202 ;;                           _i2c_read
  1203 ;;                           _I2C_nack
  1204 ;;                           _i2c_stop
  1205 ;; ---------------------------------------------------------------------------------
  1206 ;; (2) _pause                                                4     2      2      46
  1207 ;;                                              0 COMMON     4     2      2
  1208 ;;                           _msecbase
  1209 ;; ---------------------------------------------------------------------------------
  1210 ;; (3) ___awmod                                              6     2      4     296
  1211 ;;                                              0 COMMON     6     2      4
  1212 ;; ---------------------------------------------------------------------------------
  1213 ;; (2) ___lldiv                                             13     5      8     162
  1214 ;;                                              0 COMMON    13     5      8
  1215 ;; ---------------------------------------------------------------------------------
  1216 ;; (2) ___ftge                                               6     0      6     136
  1217 ;;                                              0 COMMON     6     0      6
  1218 ;; ---------------------------------------------------------------------------------
  1219 ;; (2) ___ftneg                                              3     0      3      45
  1220 ;;                                              0 COMMON     3     0      3
  1221 ;; ---------------------------------------------------------------------------------
  1222 ;; (2) ___llmod                                              9     1      8     159
  1223 ;;                                             13 COMMON     1     1      0
  1224 ;;                                              0 BANK0      8     0      8
  1225 ;;                            ___lldiv (ARG)
  1226 ;; ---------------------------------------------------------------------------------
  1227 ;; (3) ___awdiv                                              8     4      4     300
  1228 ;;                                              6 COMMON     8     4      4
  1229 ;;                            ___awmod (ARG)
  1230 ;; ---------------------------------------------------------------------------------
  1231 ;; (2) ___fttol                                             13     9      4     252
  1232 ;;                                              0 BANK0     13     9      4
  1233 ;;                           ___ftpack (ARG)
  1234 ;;                            ___awmod (ARG)
  1235 ;;                            ___awdiv (ARG)
  1236 ;;                             ___bmul (ARG)
  1237 ;; ---------------------------------------------------------------------------------
  1238 ;; (2) ___ftpack                                             8     3      5     209
  1239 ;;                                              0 COMMON     8     3      5
  1240 ;; ---------------------------------------------------------------------------------
  1241 ;; (3) ___lbmod                                              5     4      1     159
  1242 ;;                                              0 COMMON     5     4      1
  1243 ;; ---------------------------------------------------------------------------------
  1244 ;; (3) ___lbdiv                                              4     3      1     162
  1245 ;;                                              5 COMMON     4     3      1
  1246 ;;                            ___lbmod (ARG)
  1247 ;; ---------------------------------------------------------------------------------
  1248 ;; (2) ___wmul                                               6     2      4      92
  1249 ;;                                              0 COMMON     6     2      4
  1250 ;; ---------------------------------------------------------------------------------
  1251 ;; (3) ___bmul                                               3     2      1      68
  1252 ;;                                              9 COMMON     3     2      1
  1253 ;;                            ___lbmod (ARG)
  1254 ;;                            ___lbdiv (ARG)
  1255 ;; ---------------------------------------------------------------------------------
  1256 ;; (2) __div_to_l_                                          20    14      6     446
  1257 ;;                                              0 COMMON    14     8      6
  1258 ;;                                              0 BANK0      6     6      0
  1259 ;; ---------------------------------------------------------------------------------
  1260 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1261 ;;                                              0 COMMON     9     3      6
  1262 ;;                                              0 BANK0      6     6      0
  1263 ;; ---------------------------------------------------------------------------------
  1264 ;; (2) _isdigit                                              2     2      0      68
  1265 ;;                                              0 COMMON     2     2      0
  1266 ;; ---------------------------------------------------------------------------------
  1267 ;; (1) _putch                                                1     1      0      22
  1268 ;;                                              0 COMMON     1     1      0
  1269 ;; ---------------------------------------------------------------------------------
  1270 ;; (2) _i2c_write                                            1     1      0      22
  1271 ;;                                              0 COMMON     1     1      0
  1272 ;; ---------------------------------------------------------------------------------
  1273 ;; (2) _I2C_nack                                             0     0      0       0
  1274 ;; ---------------------------------------------------------------------------------
  1275 ;; (2) _i2c_read                                             0     0      0       0
  1276 ;; ---------------------------------------------------------------------------------
  1277 ;; (2) _i2c_stop                                             0     0      0       0
  1278 ;; ---------------------------------------------------------------------------------
  1279 ;; (2) _i2c_restart                                          0     0      0       0
  1280 ;; ---------------------------------------------------------------------------------
  1281 ;; (2) _i2c_start                                            0     0      0       0
  1282 ;; ---------------------------------------------------------------------------------
  1283 ;; (1) _i2c_init                                             0     0      0       0
  1284 ;; ---------------------------------------------------------------------------------
  1285 ;; (3) _msecbase                                             0     0      0       0
  1286 ;; ---------------------------------------------------------------------------------
  1287 ;; Estimated maximum stack depth 3
  1288 ;; ---------------------------------------------------------------------------------
  1289 ;; Call Graph Graphs:
  1290 ;; _main (ROOT)
  1291 ;;   _pause
  1292 ;;     _msecbase
  1293 ;;   _lcd_write
  1294 ;;     _pause
  1295 ;;       _msecbase
  1296 ;;   _lcd_clear
  1297 ;;     _lcd_write
  1298 ;;       _pause
  1299 ;;         _msecbase
  1300 ;;     _pause
  1301 ;;       _msecbase
  1302 ;;   _putch
  1303 ;;   _sprintf
  1304 ;;     _isdigit
  1305 ;;     ___wmul
  1306 ;;     ___ftge
  1307 ;;     ___ftneg
  1308 ;;     ___awdiv
  1309 ;;       ___awmod (ARG)
  1310 ;;     _scale
  1311 ;;       ___awmod
  1312 ;;       ___awdiv
  1313 ;;         ___awmod (ARG)
  1314 ;;       ___ftmul
  1315 ;;         ___ftpack
  1316 ;;         ___awtoft (ARG)
  1317 ;;           ___ftpack
  1318 ;;         ___fttol (ARG)
  1319 ;;           ___ftpack (ARG)
  1320 ;;           ___awmod (ARG)
  1321 ;;           ___awdiv (ARG)
  1322 ;;             ___awmod (ARG)
  1323 ;;           ___bmul (ARG)
  1324 ;;             ___lbmod (ARG)
  1325 ;;             ___lbdiv (ARG)
  1326 ;;               ___lbmod (ARG)
  1327 ;;         ___awdiv (ARG)
  1328 ;;           ___awmod (ARG)
  1329 ;;         ___awmod (ARG)
  1330 ;;         ___bmul (ARG)
  1331 ;;           ___lbmod (ARG)
  1332 ;;           ___lbdiv (ARG)
  1333 ;;             ___lbmod (ARG)
  1334 ;;         ___lbdiv (ARG)
  1335 ;;           ___lbmod (ARG)
  1336 ;;         ___lbmod (ARG)
  1337 ;;       ___bmul
  1338 ;;         ___lbmod (ARG)
  1339 ;;         ___lbdiv (ARG)
  1340 ;;           ___lbmod (ARG)
  1341 ;;       ___fttol (ARG)
  1342 ;;         ___ftpack (ARG)
  1343 ;;         ___awmod (ARG)
  1344 ;;         ___awdiv (ARG)
  1345 ;;           ___awmod (ARG)
  1346 ;;         ___bmul (ARG)
  1347 ;;           ___lbmod (ARG)
  1348 ;;           ___lbdiv (ARG)
  1349 ;;             ___lbmod (ARG)
  1350 ;;     ___ftmul
  1351 ;;       ___ftpack
  1352 ;;       ___awtoft (ARG)
  1353 ;;         ___ftpack
  1354 ;;       ___fttol (ARG)
  1355 ;;         ___ftpack (ARG)
  1356 ;;         ___awmod (ARG)
  1357 ;;         ___awdiv (ARG)
  1358 ;;           ___awmod (ARG)
  1359 ;;         ___bmul (ARG)
  1360 ;;           ___lbmod (ARG)
  1361 ;;           ___lbdiv (ARG)
  1362 ;;             ___lbmod (ARG)
  1363 ;;       ___awdiv (ARG)
  1364 ;;         ___awmod (ARG)
  1365 ;;       ___awmod (ARG)
  1366 ;;       ___bmul (ARG)
  1367 ;;         ___lbmod (ARG)
  1368 ;;         ___lbdiv (ARG)
  1369 ;;           ___lbmod (ARG)
  1370 ;;       ___lbdiv (ARG)
  1371 ;;         ___lbmod (ARG)
  1372 ;;       ___lbmod (ARG)
  1373 ;;     _fround
  1374 ;;       ___lbmod
  1375 ;;       ___bmul
  1376 ;;         ___lbmod (ARG)
  1377 ;;         ___lbdiv (ARG)
  1378 ;;           ___lbmod (ARG)
  1379 ;;       ___lbdiv
  1380 ;;         ___lbmod (ARG)
  1381 ;;       ___ftmul
  1382 ;;         ___ftpack
  1383 ;;         ___awtoft (ARG)
  1384 ;;           ___ftpack
  1385 ;;         ___fttol (ARG)
  1386 ;;           ___ftpack (ARG)
  1387 ;;           ___awmod (ARG)
  1388 ;;           ___awdiv (ARG)
  1389 ;;             ___awmod (ARG)
  1390 ;;           ___bmul (ARG)
  1391 ;;             ___lbmod (ARG)
  1392 ;;             ___lbdiv (ARG)
  1393 ;;               ___lbmod (ARG)
  1394 ;;         ___awdiv (ARG)
  1395 ;;           ___awmod (ARG)
  1396 ;;         ___awmod (ARG)
  1397 ;;         ___bmul (ARG)
  1398 ;;           ___lbmod (ARG)
  1399 ;;           ___lbdiv (ARG)
  1400 ;;             ___lbmod (ARG)
  1401 ;;         ___lbdiv (ARG)
  1402 ;;           ___lbmod (ARG)
  1403 ;;         ___lbmod (ARG)
  1404 ;;       ___ftadd (ARG)
  1405 ;;         ___ftpack
  1406 ;;         ___lbmod (ARG)
  1407 ;;         ___bmul (ARG)
  1408 ;;           ___lbmod (ARG)
  1409 ;;           ___lbdiv (ARG)
  1410 ;;             ___lbmod (ARG)
  1411 ;;         ___lbdiv (ARG)
  1412 ;;           ___lbmod (ARG)
  1413 ;;         ___ftmul (ARG)
  1414 ;;           ___ftpack
  1415 ;;           ___awtoft (ARG)
  1416 ;;             ___ftpack
  1417 ;;           ___fttol (ARG)
  1418 ;;             ___ftpack (ARG)
  1419 ;;             ___awmod (ARG)
  1420 ;;             ___awdiv (ARG)
  1421 ;;               ___awmod (ARG)
  1422 ;;             ___bmul (ARG)
  1423 ;;               ___lbmod (ARG)
  1424 ;;               ___lbdiv (ARG)
  1425 ;;                 ___lbmod (ARG)
  1426 ;;           ___awdiv (ARG)
  1427 ;;             ___awmod (ARG)
  1428 ;;           ___awmod (ARG)
  1429 ;;           ___bmul (ARG)
  1430 ;;             ___lbmod (ARG)
  1431 ;;             ___lbdiv (ARG)
  1432 ;;               ___lbmod (ARG)
  1433 ;;           ___lbdiv (ARG)
  1434 ;;             ___lbmod (ARG)
  1435 ;;           ___lbmod (ARG)
  1436 ;;     ___ftadd
  1437 ;;       ___ftpack
  1438 ;;       ___lbmod (ARG)
  1439 ;;       ___bmul (ARG)
  1440 ;;         ___lbmod (ARG)
  1441 ;;         ___lbdiv (ARG)
  1442 ;;           ___lbmod (ARG)
  1443 ;;       ___lbdiv (ARG)
  1444 ;;         ___lbmod (ARG)
  1445 ;;       ___ftmul (ARG)
  1446 ;;         ___ftpack
  1447 ;;         ___awtoft (ARG)
  1448 ;;           ___ftpack
  1449 ;;         ___fttol (ARG)
  1450 ;;           ___ftpack (ARG)
  1451 ;;           ___awmod (ARG)
  1452 ;;           ___awdiv (ARG)
  1453 ;;             ___awmod (ARG)
  1454 ;;           ___bmul (ARG)
  1455 ;;             ___lbmod (ARG)
  1456 ;;             ___lbdiv (ARG)
  1457 ;;               ___lbmod (ARG)
  1458 ;;         ___awdiv (ARG)
  1459 ;;           ___awmod (ARG)
  1460 ;;         ___awmod (ARG)
  1461 ;;         ___bmul (ARG)
  1462 ;;           ___lbmod (ARG)
  1463 ;;           ___lbdiv (ARG)
  1464 ;;             ___lbmod (ARG)
  1465 ;;         ___lbdiv (ARG)
  1466 ;;           ___lbmod (ARG)
  1467 ;;         ___lbmod (ARG)
  1468 ;;     ___fttol
  1469 ;;       ___ftpack (ARG)
  1470 ;;       ___awmod (ARG)
  1471 ;;       ___awdiv (ARG)
  1472 ;;         ___awmod (ARG)
  1473 ;;       ___bmul (ARG)
  1474 ;;         ___lbmod (ARG)
  1475 ;;         ___lbdiv (ARG)
  1476 ;;           ___lbmod (ARG)
  1477 ;;     __div_to_l_
  1478 ;;     __tdiv_to_l_
  1479 ;;     ___lltoft
  1480 ;;       ___ftpack
  1481 ;;     ___ftsub
  1482 ;;       ___ftadd
  1483 ;;         ___ftpack
  1484 ;;         ___lbmod (ARG)
  1485 ;;         ___bmul (ARG)
  1486 ;;           ___lbmod (ARG)
  1487 ;;           ___lbdiv (ARG)
  1488 ;;             ___lbmod (ARG)
  1489 ;;         ___lbdiv (ARG)
  1490 ;;           ___lbmod (ARG)
  1491 ;;         ___ftmul (ARG)
  1492 ;;           ___ftpack
  1493 ;;           ___awtoft (ARG)
  1494 ;;             ___ftpack
  1495 ;;           ___fttol (ARG)
  1496 ;;             ___ftpack (ARG)
  1497 ;;             ___awmod (ARG)
  1498 ;;             ___awdiv (ARG)
  1499 ;;               ___awmod (ARG)
  1500 ;;             ___bmul (ARG)
  1501 ;;               ___lbmod (ARG)
  1502 ;;               ___lbdiv (ARG)
  1503 ;;                 ___lbmod (ARG)
  1504 ;;           ___awdiv (ARG)
  1505 ;;             ___awmod (ARG)
  1506 ;;           ___awmod (ARG)
  1507 ;;           ___bmul (ARG)
  1508 ;;             ___lbmod (ARG)
  1509 ;;             ___lbdiv (ARG)
  1510 ;;               ___lbmod (ARG)
  1511 ;;           ___lbdiv (ARG)
  1512 ;;             ___lbmod (ARG)
  1513 ;;           ___lbmod (ARG)
  1514 ;;       ___lltoft (ARG)
  1515 ;;         ___ftpack
  1516 ;;     ___lldiv
  1517 ;;     ___llmod
  1518 ;;       ___lldiv (ARG)
  1519 ;;   _lcd_goto
  1520 ;;     _lcd_write
  1521 ;;       _pause
  1522 ;;         _msecbase
  1523 ;;   _lcd_puts
  1524 ;;     _lcd_write
  1525 ;;       _pause
  1526 ;;         _msecbase
  1527 ;;   _i2c_init
  1528 ;;   ___awtoft
  1529 ;;     ___ftpack
  1530 ;;   ___ftmul
  1531 ;;     ___ftpack
  1532 ;;     ___awtoft (ARG)
  1533 ;;       ___ftpack
  1534 ;;     ___fttol (ARG)
  1535 ;;       ___ftpack (ARG)
  1536 ;;       ___awmod (ARG)
  1537 ;;       ___awdiv (ARG)
  1538 ;;         ___awmod (ARG)
  1539 ;;       ___bmul (ARG)
  1540 ;;         ___lbmod (ARG)
  1541 ;;         ___lbdiv (ARG)
  1542 ;;           ___lbmod (ARG)
  1543 ;;     ___awdiv (ARG)
  1544 ;;       ___awmod (ARG)
  1545 ;;     ___awmod (ARG)
  1546 ;;     ___bmul (ARG)
  1547 ;;       ___lbmod (ARG)
  1548 ;;       ___lbdiv (ARG)
  1549 ;;         ___lbmod (ARG)
  1550 ;;     ___lbdiv (ARG)
  1551 ;;       ___lbmod (ARG)
  1552 ;;     ___lbmod (ARG)
  1553 ;;   _I2C_EEOUT
  1554 ;;     _i2c_start
  1555 ;;     _i2c_write
  1556 ;;     _i2c_stop
  1557 ;;     _pause
  1558 ;;       _msecbase
  1559 ;;   _I2C_EEIN
  1560 ;;     _i2c_start
  1561 ;;     _i2c_write
  1562 ;;     _i2c_restart
  1563 ;;     _i2c_read
  1564 ;;     _I2C_nack
  1565 ;;     _i2c_stop
  1566 ;;
  1567 ;; Address spaces:
  1568 ;;Name               Size   Autos  Total    Cost      Usage
  1569 ;;BITCOMMON            E      0       0       0        0.0%
  1570 ;;EEDATA             100      0       0       0        0.0%
  1571 ;;NULL                 0      0       0       0        0.0%
  1572 ;;CODE                 0      0       0       0        0.0%
  1573 ;;COMMON               E      E       E       1      100.0%
  1574 ;;BITSFR0              0      0       0       1        0.0%
  1575 ;;SFR0                 0      0       0       1        0.0%
  1576 ;;BITSFR1              0      0       0       2        0.0%
  1577 ;;SFR1                 0      0       0       2        0.0%
  1578 ;;STACK                0      0       4       2        0.0%
  1579 ;;ABS                  0      0      84       3        0.0%
  1580 ;;BITBANK0            50      0       0       4        0.0%
  1581 ;;BITSFR3              0      0       0       4        0.0%
  1582 ;;SFR3                 0      0       0       4        0.0%
  1583 ;;BANK0               50     3C      3C       5       75.0%
  1584 ;;BITSFR2              0      0       0       5        0.0%
  1585 ;;SFR2                 0      0       0       5        0.0%
  1586 ;;BITBANK1            50      0       0       6        0.0%
  1587 ;;BANK1               50     30      3A       7       72.5%
  1588 ;;BITBANK3            60      0       0       8        0.0%
  1589 ;;BANK3               60      0       0       9        0.0%
  1590 ;;BITBANK2            60      0       0      10        0.0%
  1591 ;;BANK2               60      0       0      11        0.0%
  1592 ;;DATA                 0      0      88      12        0.0%
  1593                           
  1594                           
  1595 ;; *************** function _main *****************
  1596 ;; Defined at:
  1597 ;;		line 234 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  x               1   46[BANK1 ] unsigned char 
  1602 ;;  x               1   44[BANK1 ] unsigned char 
  1603 ;;  x               1   45[BANK1 ] unsigned char 
  1604 ;;  x               1   43[BANK1 ] unsigned char 
  1605 ;;  i               2   41[BANK1 ] int 
  1606 ;;  buffer         15   25[BANK1 ] unsigned char [15]
  1607 ;;  uni             2    0        unsigned int 
  1608 ;;  cen             2    0        unsigned int 
  1609 ;;  dec             2    0        unsigned int 
  1610 ;;  mil             2    0        unsigned int 
  1611 ;;  B2              2    0        unsigned int 
  1612 ;;  B1              2    0        unsigned int 
  1613 ;;  cnt2            1   47[BANK1 ] unsigned char 
  1614 ;;  cnt1            1   40[BANK1 ] unsigned char 
  1615 ;;  char_pwm        1    0        unsigned char 
  1616 ;;  char_recibid    1    0        unsigned char 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;		None               void
  1619 ;; Registers used:
  1620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 17F/0
  1623 ;;		On exit  : 160/20
  1624 ;;		Unchanged: FFE00/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1626 ;;      Params:         0       0       0       0       0
  1627 ;;      Locals:         0       0      23       0       0
  1628 ;;      Temps:          0       1       0       0       0
  1629 ;;      Totals:         0       1      23       0       0
  1630 ;;Total ram usage:       24 bytes
  1631 ;; Hardware stack levels required when called:    4
  1632 ;; This function calls:
  1633 ;;		_pause
  1634 ;;		_lcd_write
  1635 ;;		_lcd_clear
  1636 ;;		_putch
  1637 ;;		_sprintf
  1638 ;;		_lcd_goto
  1639 ;;		_lcd_puts
  1640 ;;		_i2c_init
  1641 ;;		___awtoft
  1642 ;;		___ftmul
  1643 ;;		_I2C_EEOUT
  1644 ;;		_I2C_EEIN
  1645 ;; This function is called by:
  1646 ;;		Startup code after reset
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649  099C                     _main:	
  1650                           
  1651                           ;eeprom_i2c.c: 235: ANSEL=0x00;
  1652                           
  1653                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1654  099C  1683               	bsf	3,5	;RP0=1, select bank3
  1655  099D  1703               	bsf	3,6	;RP1=1, select bank3
  1656  099E  0188               	clrf	8	;volatile
  1657                           
  1658                           ;eeprom_i2c.c: 236: ANSELH=0;
  1659  099F  0189               	clrf	9	;volatile
  1660                           
  1661                           ;eeprom_i2c.c: 237: OSCCON=0xC0;
  1662  09A0  30C0               	movlw	192
  1663  09A1  1303               	bcf	3,6	;RP1=0, select bank1
  1664  09A2  008F               	movwf	15	;volatile
  1665                           
  1666                           ;eeprom_i2c.c: 238: TRISA=3;
  1667  09A3  3003               	movlw	3
  1668  09A4  0085               	movwf	5	;volatile
  1669                           
  1670                           ;eeprom_i2c.c: 239: TRISB=0;
  1671  09A5  0186               	clrf	6	;volatile
  1672                           
  1673                           ;eeprom_i2c.c: 240: TRISC=6;
  1674  09A6  3006               	movlw	6
  1675  09A7  0087               	movwf	7	;volatile
  1676                           
  1677                           ;eeprom_i2c.c: 241: TRISD=0;
  1678  09A8  0188               	clrf	8	;volatile
  1679                           
  1680                           ;eeprom_i2c.c: 242: TRISE=0;
  1681  09A9  0189               	clrf	9	;volatile
  1682                           
  1683                           ;eeprom_i2c.c: 244: PR2=0xFC;
  1684  09AA  30FC               	movlw	252
  1685  09AB  0092               	movwf	18	;volatile
  1686                           
  1687                           ;eeprom_i2c.c: 245: CCP2CON=0x0C;
  1688  09AC  300C               	movlw	12
  1689  09AD  1283               	bcf	3,5	;RP0=0, select bank0
  1690  09AE  009D               	movwf	29	;volatile
  1691                           
  1692                           ;eeprom_i2c.c: 246: CCP1CON=0x0C;
  1693  09AF  0097               	movwf	23	;volatile
  1694                           
  1695                           ;eeprom_i2c.c: 247: CCPR1L=0x80;
  1696  09B0  3080               	movlw	128
  1697  09B1  0095               	movwf	21	;volatile
  1698                           
  1699                           ;eeprom_i2c.c: 248: CCPR2L=0x80;
  1700  09B2  009B               	movwf	27	;volatile
  1701                           
  1702                           ;eeprom_i2c.c: 249: PIR1=0;
  1703  09B3  018C               	clrf	12	;volatile
  1704                           
  1705                           ;eeprom_i2c.c: 250: T2CON=0X07;
  1706  09B4  3007               	movlw	7
  1707  09B5  0092               	movwf	18	;volatile
  1708  09B6                     l6186:	
  1709                           ;eeprom_i2c.c: 251: while(PIR1);
  1710                           
  1711  09B6  088C               	movf	12,f
  1712  09B7  1D03               	skipz
  1713  09B8  29B6               	goto	l6186
  1714                           
  1715                           ;eeprom_i2c.c: 252: TRISC1=0;
  1716  09B9  1683               	bsf	3,5	;RP0=1, select bank1
  1717  09BA  1087               	bcf	7,1
  1718                           
  1719                           ;eeprom_i2c.c: 253: TRISC2=0;
  1720  09BB  1107               	bcf	7,2
  1721                           
  1722                           ;eeprom_i2c.c: 254: RA7=0;
  1723  09BC  1283               	bcf	3,5	;RP0=0, select bank0
  1724  09BD  300F               	movlw	15
  1725  09BE  1385               	bcf	5,7
  1726                           
  1727                           ;eeprom_i2c.c: 255: RA6=0;
  1728  09BF  1305               	bcf	5,6
  1729                           
  1730                           ;eeprom_i2c.c: 256: RA4=0;
  1731  09C0  1205               	bcf	5,4
  1732                           
  1733                           ;eeprom_i2c.c: 257: pause(15);
  1734  09C1  00F0               	movwf	?_pause
  1735  09C2  01F1               	clrf	?_pause+1
  1736  09C3  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  1737                           
  1738                           ;eeprom_i2c.c: 258: PORTD=init_value;
  1739  09C8  3003               	movlw	3
  1740  09C9  1283               	bcf	3,5	;RP0=0, select bank0
  1741  09CA  1303               	bcf	3,6	;RP1=0, select bank0
  1742  09CB  0088               	movwf	8	;volatile
  1743  09CC  300A               	movlw	10
  1744                           
  1745                           ;eeprom_i2c.c: 259: ((RA6=1),(RA6=0));
  1746  09CD  1705               	bsf	5,6
  1747  09CE  1305               	bcf	5,6
  1748                           
  1749                           ;eeprom_i2c.c: 260: pause(10);
  1750  09CF  00F0               	movwf	?_pause
  1751  09D0  01F1               	clrf	?_pause+1
  1752  09D1  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  1753                           
  1754                           ;eeprom_i2c.c: 261: ((RA6=1),(RA6=0));
  1755  09D6  1283               	bcf	3,5	;RP0=0, select bank0
  1756  09D7  1303               	bcf	3,6	;RP1=0, select bank0
  1757  09D8  300A               	movlw	10
  1758  09D9  1705               	bsf	5,6
  1759  09DA  1305               	bcf	5,6
  1760                           
  1761                           ;eeprom_i2c.c: 262: pause(10);
  1762  09DB  00F0               	movwf	?_pause
  1763  09DC  01F1               	clrf	?_pause+1
  1764  09DD  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  1765                           
  1766                           ;eeprom_i2c.c: 263: ((RA6=1),(RA6=0));
  1767  09E2  1283               	bcf	3,5	;RP0=0, select bank0
  1768  09E3  1303               	bcf	3,6	;RP1=0, select bank0
  1769  09E4  300A               	movlw	10
  1770  09E5  1705               	bsf	5,6
  1771  09E6  1305               	bcf	5,6
  1772                           
  1773                           ;eeprom_i2c.c: 264: pause(10);
  1774  09E7  00F0               	movwf	?_pause
  1775  09E8  01F1               	clrf	?_pause+1
  1776  09E9  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  1777                           
  1778                           ;eeprom_i2c.c: 265: PORTD=2;
  1779  09EE  3002               	movlw	2
  1780  09EF  1283               	bcf	3,5	;RP0=0, select bank0
  1781  09F0  1303               	bcf	3,6	;RP1=0, select bank0
  1782  09F1  0088               	movwf	8	;volatile
  1783  09F2  3028               	movlw	40
  1784                           
  1785                           ;eeprom_i2c.c: 266: ((RA6=1),(RA6=0));
  1786  09F3  1705               	bsf	5,6
  1787  09F4  1305               	bcf	5,6
  1788                           
  1789                           ;eeprom_i2c.c: 267: lcd_write(0x28);
  1790  09F5  160A  118A  264E   	fcall	_lcd_write
      +       120A  158A         
  1791                           
  1792                           ;eeprom_i2c.c: 268: lcd_write(0xC);
  1793  09FA  300C               	movlw	12
  1794  09FB  160A  118A  264E   	fcall	_lcd_write
      +       120A  158A         
  1795                           
  1796                           ;eeprom_i2c.c: 269: lcd_clear();
  1797  0A00  160A  118A  2627   	fcall	_lcd_clear
      +       120A  158A         
  1798                           
  1799                           ;eeprom_i2c.c: 270: lcd_write(0x06);
  1800  0A05  3006               	movlw	6
  1801  0A06  160A  118A  264E   	fcall	_lcd_write
      +       120A  158A         
  1802                           
  1803                           ;eeprom_i2c.c: 273: TRISC7=1;
  1804  0A0B  1683               	bsf	3,5	;RP0=1, select bank1
  1805  0A0C  3070               	movlw	112
  1806  0A0D  1787               	bsf	7,7
  1807  0A0E  1307               	bcf	7,6
  1808                           
  1809                           ;eeprom_i2c.c: 275: OSCCON=0x70;
  1810  0A0F  008F               	movwf	15	;volatile
  1811                           
  1812                           ;eeprom_i2c.c: 276: SPBRG=12;
  1813  0A10  300C               	movlw	12
  1814  0A11  0099               	movwf	25	;volatile
  1815                           
  1816                           ;eeprom_i2c.c: 277: RCSTA=0x90;
  1817  0A12  3090               	movlw	144
  1818  0A13  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0A14  0098               	movwf	24	;volatile
  1820                           
  1821                           ;eeprom_i2c.c: 278: TXSTA=0x20;
  1822  0A15  3020               	movlw	32
  1823  0A16  1683               	bsf	3,5	;RP0=1, select bank1
  1824  0A17  0098               	movwf	24	;volatile
  1825                           
  1826                           ;eeprom_i2c.c: 279: BAUDCTL=0x00;
  1827  0A18  1703               	bsf	3,6	;RP1=1, select bank3
  1828  0A19  0187               	clrf	7	;volatile
  1829                           
  1830                           ;eeprom_i2c.c: 280: pause(500);
  1831  0A1A  30F4               	movlw	244
  1832  0A1B  00F0               	movwf	?_pause
  1833  0A1C  3001               	movlw	1
  1834  0A1D  00F1               	movwf	?_pause+1
  1835  0A1E  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  1836                           
  1837                           ;eeprom_i2c.c: 282: PORTA=0x01;
  1838  0A23  3001               	movlw	1
  1839  0A24  1283               	bcf	3,5	;RP0=0, select bank0
  1840  0A25  1303               	bcf	3,6	;RP1=0, select bank0
  1841  0A26  0085               	movwf	5	;volatile
  1842                           
  1843                           ;eeprom_i2c.c: 283: *pa=0xFF;
  1844  0A27  30FF               	movlw	255
  1845  0A28  0085               	movwf	5
  1846                           
  1847                           ;eeprom_i2c.c: 286: char char_recibido;
  1848                           ;eeprom_i2c.c: 287: char char_pwm;
  1849                           ;eeprom_i2c.c: 288: char buffer[15];
  1850                           ;eeprom_i2c.c: 290: PORTA=0x01;
  1851  0A29  3001               	movlw	1
  1852  0A2A  0085               	movwf	5	;volatile
  1853                           
  1854                           ;eeprom_i2c.c: 291: *pa=0xFF;
  1855  0A2B  30FF               	movlw	255
  1856  0A2C  0085               	movwf	5
  1857                           
  1858                           ;eeprom_i2c.c: 293: putch(0x0D);
  1859  0A2D  300D               	movlw	13
  1860  0A2E  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  1861                           
  1862                           ;eeprom_i2c.c: 294: putch(0x0A);
  1863  0A33  300A               	movlw	10
  1864  0A34  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  1865                           
  1866                           ;eeprom_i2c.c: 297: for(int i=97; i<123; i++){
  1867  0A39  3061               	movlw	97
  1868  0A3A  1683               	bsf	3,5	;RP0=1, select bank1
  1869  0A3B  00C9               	movwf	main@i^(0+128)
  1870  0A3C  01CA               	clrf	(main@i+1)^(0+128)
  1871  0A3D                     l6248:	
  1872                           
  1873                           ;eeprom_i2c.c: 298: putch(i);
  1874  0A3D  1683               	bsf	3,5	;RP0=1, select bank1
  1875  0A3E  1303               	bcf	3,6	;RP1=0, select bank1
  1876  0A3F  0849               	movf	main@i^(0+128),w
  1877  0A40  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  1878                           
  1879                           ;eeprom_i2c.c: 299: pause(20);
  1880  0A45  3014               	movlw	20
  1881  0A46  00F0               	movwf	?_pause
  1882  0A47  01F1               	clrf	?_pause+1
  1883  0A48  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  1884  0A4D  1683               	bsf	3,5	;RP0=1, select bank1
  1885  0A4E  1303               	bcf	3,6	;RP1=0, select bank1
  1886  0A4F  0AC9               	incf	main@i^(0+128),f
  1887  0A50  1903               	skipnz
  1888  0A51  0ACA               	incf	(main@i+1)^(0+128),f
  1889  0A52  084A               	movf	(main@i+1)^(0+128),w
  1890  0A53  3A80               	xorlw	128
  1891  0A54  00FF               	movwf	127
  1892  0A55  3080               	movlw	128
  1893  0A56  027F               	subwf	127,w
  1894  0A57  1D03               	skipz
  1895  0A58  2A5B               	goto	u3605
  1896  0A59  307B               	movlw	123
  1897  0A5A  0249               	subwf	main@i^(0+128),w
  1898  0A5B                     u3605:	
  1899  0A5B  1C03               	skipc
  1900  0A5C  2A3D               	goto	l6248
  1901                           
  1902                           ;eeprom_i2c.c: 300: }
  1903                           ;eeprom_i2c.c: 302: putch(0x0D);
  1904  0A5D  300D               	movlw	13
  1905  0A5E  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  1906                           
  1907                           ;eeprom_i2c.c: 303: putch(0x0A);
  1908  0A63  300A               	movlw	10
  1909  0A64  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  1910                           
  1911                           ;eeprom_i2c.c: 304: pause(100);
  1912  0A69  3064               	movlw	100
  1913  0A6A  00F0               	movwf	?_pause
  1914  0A6B  01F1               	clrf	?_pause+1
  1915  0A6C  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  1916                           
  1917                           ;eeprom_i2c.c: 306: PORTB=0;
  1918  0A71  1283               	bcf	3,5	;RP0=0, select bank0
  1919  0A72  1303               	bcf	3,6	;RP1=0, select bank0
  1920  0A73  0186               	clrf	6	;volatile
  1921                           
  1922                           ;eeprom_i2c.c: 309: unsigned int B1, B2, mil, dec, cen, uni=0;
  1923  0A74  1683               	bsf	3,5	;RP0=1, select bank1
  1924  0A75  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1925  0A76  01CF               	clrf	main@cnt2^(0+128)
  1926                           
  1927                           ;eeprom_i2c.c: 312: sprintf(buffer,"Escribiendo...");
  1928  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0A78  00D2               	movwf	?_sprintf
  1930  0A79  30B9               	movlw	main@buffer& (0+255)
  1931  0A7A  120A  118A  2061   	fcall	_sprintf
      +       120A  158A         
  1932                           
  1933                           ;eeprom_i2c.c: 313: for (char x = 0; x<20; x++)
  1934  0A7F  01CB               	clrf	main@x^(0+128)
  1935  0A80                     l6268:	
  1936                           
  1937                           ;eeprom_i2c.c: 314: {
  1938                           ;eeprom_i2c.c: 315: putch (buffer[x]);
  1939  0A80  084B               	movf	main@x^(0+128),w
  1940  0A81  3EB9               	addlw	main@buffer& (0+255)
  1941  0A82  0084               	movwf	4
  1942  0A83  0800               	movf	0,w
  1943  0A84  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  1944  0A89  1683               	bsf	3,5	;RP0=1, select bank1
  1945  0A8A  3014               	movlw	20
  1946  0A8B  0ACB               	incf	main@x^(0+128),f
  1947  0A8C  024B               	subwf	main@x^(0+128),w
  1948  0A8D  1C03               	skipc
  1949  0A8E  2A80               	goto	l6268
  1950                           
  1951                           ;eeprom_i2c.c: 316: }
  1952                           ;eeprom_i2c.c: 317: pause(200);
  1953  0A8F  30C8               	movlw	200
  1954  0A90  00F0               	movwf	?_pause
  1955  0A91  01F1               	clrf	?_pause+1
  1956  0A92  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  1957                           
  1958                           ;eeprom_i2c.c: 318: putch(0x0D);
  1959  0A97  300D               	movlw	13
  1960  0A98  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  1961                           
  1962                           ;eeprom_i2c.c: 319: putch(0x0A);
  1963  0A9D  300A               	movlw	10
  1964  0A9E  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  1965                           
  1966                           ;eeprom_i2c.c: 321: lcd_goto(0);
  1967  0AA3  3000               	movlw	0
  1968  0AA4  160A  118A  25BE   	fcall	_lcd_goto
      +       120A  158A         
  1969                           
  1970                           ;eeprom_i2c.c: 322: lcd_puts("Escribiendo...");
  1971  0AA9  3077               	movlw	low (STR_1-__stringbase)
  1972  0AAA  00F5               	movwf	?_lcd_puts
  1973  0AAB  3080               	movlw	128
  1974  0AAC  00F6               	movwf	?_lcd_puts+1
  1975  0AAD  160A  118A  2631   	fcall	_lcd_puts
      +       120A  158A         
  1976                           
  1977                           ;eeprom_i2c.c: 324: i2c_init();
  1978  0AB2  120A  118A  2045   	fcall	_i2c_init
      +       120A  158A         
  1979                           
  1980                           ;eeprom_i2c.c: 326: PORTB=0;
  1981  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0AB8  0186               	clrf	6	;volatile
  1983                           
  1984                           ;eeprom_i2c.c: 328: pause(3000);
  1985  0AB9  30B8               	movlw	184
  1986  0ABA  00F0               	movwf	?_pause
  1987  0ABB  300B               	movlw	11
  1988  0ABC  00F1               	movwf	?_pause+1
  1989  0ABD  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  1990  0AC2                     l6326:	
  1991                           ;eeprom_i2c.c: 331: while(cnt2 < 25)
  1992                           
  1993  0AC2  3019               	movlw	25
  1994  0AC3  1683               	bsf	3,5	;RP0=1, select bank1
  1995  0AC4  1303               	bcf	3,6	;RP1=0, select bank1
  1996  0AC5  024F               	subwf	main@cnt2^(0+128),w
  1997  0AC6  1803               	btfsc	3,0
  1998  0AC7  2B90               	goto	l6328
  1999                           
  2000                           ;eeprom_i2c.c: 332: {
  2001                           ;eeprom_i2c.c: 333: ADCON0=0xC1;
  2002  0AC8  30C1               	movlw	193
  2003  0AC9  1283               	bcf	3,5	;RP0=0, select bank0
  2004  0ACA  009F               	movwf	31	;volatile
  2005                           
  2006                           ;eeprom_i2c.c: 334: GO_DONE=1;
  2007  0ACB  149F               	bsf	31,1
  2008  0ACC                     l1146:	
  2009                           ;eeprom_i2c.c: 335: while(GO_DONE==1);
  2010                           
  2011  0ACC  189F               	btfsc	31,1
  2012  0ACD  2ACC               	goto	l1146
  2013                           
  2014                           ;eeprom_i2c.c: 336: CCPR1L=ADRESH;
  2015  0ACE  081E               	movf	30,w	;volatile
  2016  0ACF  0095               	movwf	21	;volatile
  2017                           
  2018                           ;eeprom_i2c.c: 337: CCP1CON=(ADRESL>>2)|0x0C;
  2019  0AD0  1683               	bsf	3,5	;RP0=1, select bank1
  2020  0AD1  081E               	movf	30,w	;volatile
  2021  0AD2  1283               	bcf	3,5	;RP0=0, select bank0
  2022  0AD3  00DB               	movwf	??_main
  2023  0AD4  1003               	clrc
  2024  0AD5  0CDB               	rrf	??_main,f
  2025  0AD6  1003               	clrc
  2026  0AD7  0CDB               	rrf	??_main,f
  2027  0AD8  085B               	movf	??_main,w
  2028  0AD9  380C               	iorlw	12
  2029  0ADA  0097               	movwf	23	;volatile
  2030                           
  2031                           ;eeprom_i2c.c: 338: nin=(ADRESH<<2)|(ADRESL>>6);
  2032  0ADB  081E               	movf	30,w	;volatile
  2033  0ADC  1683               	bsf	3,5	;RP0=1, select bank1
  2034  0ADD  00D3               	movwf	_nin^(0+128)
  2035  0ADE  01D4               	clrf	(_nin+1)^(0+128)
  2036  0ADF  1003               	clrc
  2037  0AE0  0DD3               	rlf	_nin^(0+128),f
  2038  0AE1  0DD4               	rlf	(_nin+1)^(0+128),f
  2039  0AE2  1003               	clrc
  2040  0AE3  0DD3               	rlf	_nin^(0+128),f
  2041  0AE4  0DD4               	rlf	(_nin+1)^(0+128),f
  2042  0AE5  081E               	movf	30,w	;volatile
  2043  0AE6  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0AE7  00DB               	movwf	??_main
  2045  0AE8  3006               	movlw	6
  2046  0AE9                     u3635:	
  2047  0AE9  1003               	clrc
  2048  0AEA  0CDB               	rrf	??_main,f
  2049  0AEB  3EFF               	addlw	-1
  2050  0AEC  1D03               	skipz
  2051  0AED  2AE9               	goto	u3635
  2052  0AEE  085B               	movf	??_main,w
  2053  0AEF  1683               	bsf	3,5	;RP0=1, select bank1
  2054  0AF0  04D3               	iorwf	_nin^(0+128),f
  2055                           
  2056                           ;eeprom_i2c.c: 339: num=nin*0.004887585533;
  2057  0AF1  3028               	movlw	40
  2058  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  2059  0AF3  00AD               	movwf	?___ftmul
  2060  0AF4  30A0               	movlw	160
  2061  0AF5  00AE               	movwf	?___ftmul+1
  2062  0AF6  303B               	movlw	59
  2063  0AF7  00AF               	movwf	?___ftmul+2
  2064  0AF8  1683               	bsf	3,5	;RP0=1, select bank1
  2065  0AF9  0854               	movf	(_nin+1)^(0+128),w
  2066  0AFA  00F9               	movwf	?___awtoft+1
  2067  0AFB  0853               	movf	_nin^(0+128),w
  2068  0AFC  00F8               	movwf	?___awtoft
  2069  0AFD  120A  158A  249F   	fcall	___awtoft
      +       120A  158A         
  2070  0B02  0878               	movf	?___awtoft,w
  2071  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0B04  00B0               	movwf	?___ftmul+3
  2073  0B05  0879               	movf	?___awtoft+1,w
  2074  0B06  00B1               	movwf	?___ftmul+4
  2075  0B07  087A               	movf	?___awtoft+2,w
  2076  0B08  00B2               	movwf	?___ftmul+5
  2077  0B09  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  2078  0B0E  082D               	movf	?___ftmul,w
  2079  0B0F  1683               	bsf	3,5	;RP0=1, select bank1
  2080  0B10  00D0               	movwf	_num^(0+128)
  2081  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0B12  082E               	movf	?___ftmul+1,w
  2083  0B13  1683               	bsf	3,5	;RP0=1, select bank1
  2084  0B14  00D1               	movwf	(_num+1)^(0+128)
  2085  0B15  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0B16  082F               	movf	?___ftmul+2,w
  2087  0B17  1683               	bsf	3,5	;RP0=1, select bank1
  2088  0B18  00D2               	movwf	(_num+2)^(0+128)
  2089                           
  2090                           ;eeprom_i2c.c: 340: sprintf(carac,"%1.3f",num);
  2091  0B19  30B0               	movlw	(STR_3-__stringbase)& (0+255)
  2092  0B1A  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0B1B  00D2               	movwf	?_sprintf
  2094  0B1C  1683               	bsf	3,5	;RP0=1, select bank1
  2095  0B1D  0850               	movf	_num^(0+128),w
  2096  0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0B1F  00D3               	movwf	?_sprintf+1
  2098  0B20  1683               	bsf	3,5	;RP0=1, select bank1
  2099  0B21  0851               	movf	(_num+1)^(0+128),w
  2100  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  2101  0B23  00D4               	movwf	?_sprintf+2
  2102  0B24  1683               	bsf	3,5	;RP0=1, select bank1
  2103  0B25  0852               	movf	(_num+2)^(0+128),w
  2104  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0B27  00D5               	movwf	?_sprintf+3
  2106  0B28  30D5               	movlw	_carac& (0+255)
  2107  0B29  120A  118A  2061   	fcall	_sprintf
      +       120A  158A         
  2108                           
  2109                           ;eeprom_i2c.c: 342: lcd_goto(0x40);
  2110  0B2E  3040               	movlw	64
  2111  0B2F  160A  118A  25BE   	fcall	_lcd_goto
      +       120A  158A         
  2112                           
  2113                           ;eeprom_i2c.c: 343: lcd_puts("V1:");
  2114  0B34  30B6               	movlw	low (STR_4-__stringbase)
  2115  0B35  00F5               	movwf	?_lcd_puts
  2116  0B36  3080               	movlw	128
  2117  0B37  00F6               	movwf	?_lcd_puts+1
  2118  0B38  160A  118A  2631   	fcall	_lcd_puts
      +       120A  158A         
  2119                           
  2120                           ;eeprom_i2c.c: 344: lcd_puts(carac);
  2121  0B3D  30D5               	movlw	_carac& (0+255)
  2122  0B3E  00F5               	movwf	?_lcd_puts
  2123  0B3F  01F6               	clrf	?_lcd_puts+1
  2124  0B40  160A  118A  2631   	fcall	_lcd_puts
      +       120A  158A         
  2125                           
  2126                           ;eeprom_i2c.c: 346: sprintf(buffer,"V%i : %s  ",cnt2,carac);
  2127  0B45  3093               	movlw	(STR_5-__stringbase)& (0+255)
  2128  0B46  00D2               	movwf	?_sprintf
  2129  0B47  1683               	bsf	3,5	;RP0=1, select bank1
  2130  0B48  084F               	movf	main@cnt2^(0+128),w
  2131  0B49  1283               	bcf	3,5	;RP0=0, select bank0
  2132  0B4A  00D3               	movwf	?_sprintf+1
  2133  0B4B  30D5               	movlw	_carac& (0+255)
  2134  0B4C  01D4               	clrf	?_sprintf+2
  2135  0B4D  00D5               	movwf	?_sprintf+3
  2136  0B4E  30B9               	movlw	main@buffer& (0+255)
  2137  0B4F  120A  118A  2061   	fcall	_sprintf
      +       120A  158A         
  2138                           
  2139                           ;eeprom_i2c.c: 347: for (char x = 0; x<10; x++)
  2140  0B54  01CC               	clrf	main@x_1874^(0+128)
  2141  0B55                     l6316:	
  2142                           
  2143                           ;eeprom_i2c.c: 348: {
  2144                           ;eeprom_i2c.c: 349: putch (buffer[x]);
  2145  0B55  084C               	movf	main@x_1874^(0+128),w
  2146  0B56  3EB9               	addlw	main@buffer& (0+255)
  2147  0B57  0084               	movwf	4
  2148  0B58  0800               	movf	0,w
  2149  0B59  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  2150  0B5E  1683               	bsf	3,5	;RP0=1, select bank1
  2151  0B5F  300A               	movlw	10
  2152  0B60  0ACC               	incf	main@x_1874^(0+128),f
  2153  0B61  024C               	subwf	main@x_1874^(0+128),w
  2154  0B62  1C03               	skipc
  2155  0B63  2B55               	goto	l6316
  2156                           
  2157                           ;eeprom_i2c.c: 350: }
  2158                           ;eeprom_i2c.c: 351: putch(0x0D);
  2159  0B64  300D               	movlw	13
  2160  0B65  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  2161                           
  2162                           ;eeprom_i2c.c: 352: putch(0x0A);
  2163  0B6A  300A               	movlw	10
  2164  0B6B  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  2165                           
  2166                           ;eeprom_i2c.c: 354: pause (100);
  2167  0B70  3064               	movlw	100
  2168  0B71  00F0               	movwf	?_pause
  2169  0B72  01F1               	clrf	?_pause+1
  2170  0B73  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  2171                           
  2172                           ;eeprom_i2c.c: 355: I2C_EEOUT(cnt1, cnt2, nin);
  2173  0B78  1683               	bsf	3,5	;RP0=1, select bank1
  2174  0B79  1303               	bcf	3,6	;RP1=0, select bank1
  2175  0B7A  084F               	movf	main@cnt2^(0+128),w
  2176  0B7B  00F4               	movwf	?_I2C_EEOUT
  2177  0B7C  0853               	movf	_nin^(0+128),w
  2178  0B7D  00F5               	movwf	?_I2C_EEOUT+1
  2179  0B7E  0848               	movf	main@cnt1^(0+128),w
  2180  0B7F  160A  118A  25C5   	fcall	_I2C_EEOUT
      +       120A  158A         
  2181                           
  2182                           ;eeprom_i2c.c: 356: pause(20);
  2183  0B84  3014               	movlw	20
  2184  0B85  00F0               	movwf	?_pause
  2185  0B86  01F1               	clrf	?_pause+1
  2186  0B87  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  2187                           
  2188                           ;eeprom_i2c.c: 357: cnt2 = cnt2 + 1;
  2189  0B8C  1683               	bsf	3,5	;RP0=1, select bank1
  2190  0B8D  1303               	bcf	3,6	;RP1=0, select bank1
  2191  0B8E  0ACF               	incf	main@cnt2^(0+128),f
  2192  0B8F  2AC2               	goto	l6326
  2193  0B90                     l6328:	
  2194                           
  2195                           ;eeprom_i2c.c: 358: }
  2196                           ;eeprom_i2c.c: 360: cnt2=0;
  2197  0B90  01CF               	clrf	main@cnt2^(0+128)
  2198                           
  2199                           ;eeprom_i2c.c: 362: lcd_clear();
  2200  0B91  160A  118A  2627   	fcall	_lcd_clear
      +       120A  158A         
  2201                           
  2202                           ;eeprom_i2c.c: 363: lcd_goto(0);
  2203  0B96  3000               	movlw	0
  2204  0B97  160A  118A  25BE   	fcall	_lcd_goto
      +       120A  158A         
  2205                           
  2206                           ;eeprom_i2c.c: 364: lcd_puts("Leyendo...");
  2207  0B9C  309E               	movlw	low (STR_6-__stringbase)
  2208  0B9D  00F5               	movwf	?_lcd_puts
  2209  0B9E  3080               	movlw	128
  2210  0B9F  00F6               	movwf	?_lcd_puts+1
  2211  0BA0  160A  118A  2631   	fcall	_lcd_puts
      +       120A  158A         
  2212                           
  2213                           ;eeprom_i2c.c: 366: sprintf(buffer,"Leyendo.... ");
  2214  0BA5  3086               	movlw	(STR_7-__stringbase)& (0+255)
  2215  0BA6  00D2               	movwf	?_sprintf
  2216  0BA7  30B9               	movlw	main@buffer& (0+255)
  2217  0BA8  120A  118A  2061   	fcall	_sprintf
      +       120A  158A         
  2218                           
  2219                           ;eeprom_i2c.c: 367: for (char x = 0; x<10; x++)
  2220  0BAD  01CD               	clrf	main@x_1877^(0+128)
  2221  0BAE                     l6342:	
  2222                           
  2223                           ;eeprom_i2c.c: 368: {
  2224                           ;eeprom_i2c.c: 369: putch (buffer[x]);
  2225  0BAE  084D               	movf	main@x_1877^(0+128),w
  2226  0BAF  3EB9               	addlw	main@buffer& (0+255)
  2227  0BB0  0084               	movwf	4
  2228  0BB1  0800               	movf	0,w
  2229  0BB2  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  2230  0BB7  1683               	bsf	3,5	;RP0=1, select bank1
  2231  0BB8  300A               	movlw	10
  2232  0BB9  0ACD               	incf	main@x_1877^(0+128),f
  2233  0BBA  024D               	subwf	main@x_1877^(0+128),w
  2234  0BBB  1C03               	skipc
  2235  0BBC  2BAE               	goto	l6342
  2236                           
  2237                           ;eeprom_i2c.c: 370: }
  2238                           ;eeprom_i2c.c: 371: pause(200);
  2239  0BBD  30C8               	movlw	200
  2240  0BBE  00F0               	movwf	?_pause
  2241  0BBF  01F1               	clrf	?_pause+1
  2242  0BC0  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  2243                           
  2244                           ;eeprom_i2c.c: 372: putch(0x0D);
  2245  0BC5  300D               	movlw	13
  2246  0BC6  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  2247                           
  2248                           ;eeprom_i2c.c: 373: putch(0x0A);
  2249  0BCB  300A               	movlw	10
  2250  0BCC  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  2251  0BD1                     l6376:	
  2252                           ;eeprom_i2c.c: 375: while(cnt2<25)
  2253                           
  2254  0BD1  3019               	movlw	25
  2255  0BD2  1683               	bsf	3,5	;RP0=1, select bank1
  2256  0BD3  024F               	subwf	main@cnt2^(0+128),w
  2257  0BD4  1803               	btfsc	3,0
  2258  0BD5  2C9C               	goto	l1159
  2259                           
  2260                           ;eeprom_i2c.c: 376: {
  2261                           ;eeprom_i2c.c: 377: lcd_goto(0x40);
  2262  0BD6  3040               	movlw	64
  2263  0BD7  160A  118A  25BE   	fcall	_lcd_goto
      +       120A  158A         
  2264                           
  2265                           ;eeprom_i2c.c: 378: B1=I2C_EEIN(cnt1,cnt2);
  2266  0BDC  1683               	bsf	3,5	;RP0=1, select bank1
  2267  0BDD  084F               	movf	main@cnt2^(0+128),w
  2268  0BDE  00F1               	movwf	?_I2C_EEIN
  2269  0BDF  0848               	movf	main@cnt1^(0+128),w
  2270  0BE0  160A  118A  25E0   	fcall	_I2C_EEIN
      +       120A  158A         
  2271                           
  2272                           ;eeprom_i2c.c: 399: lcd_goto(0x40);
  2273  0BE5  3040               	movlw	64
  2274  0BE6  160A  118A  25BE   	fcall	_lcd_goto
      +       120A  158A         
  2275                           
  2276                           ;eeprom_i2c.c: 400: nin=I2C_EEIN(cnt1,cnt2);
  2277  0BEB  1683               	bsf	3,5	;RP0=1, select bank1
  2278  0BEC  084F               	movf	main@cnt2^(0+128),w
  2279  0BED  00F1               	movwf	?_I2C_EEIN
  2280  0BEE  0848               	movf	main@cnt1^(0+128),w
  2281  0BEF  160A  118A  25E0   	fcall	_I2C_EEIN
      +       120A  158A         
  2282  0BF4  00D3               	movwf	_nin^(0+128)
  2283  0BF5  3014               	movlw	20
  2284  0BF6  01D4               	clrf	(_nin+1)^(0+128)
  2285                           
  2286                           ;eeprom_i2c.c: 401: pause(20);
  2287  0BF7  00F0               	movwf	?_pause
  2288  0BF8  01F1               	clrf	?_pause+1
  2289  0BF9  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  2290                           
  2291                           ;eeprom_i2c.c: 402: num=nin*0.004887585533;
  2292  0BFE  3028               	movlw	40
  2293  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  2295  0C01  00AD               	movwf	?___ftmul
  2296  0C02  30A0               	movlw	160
  2297  0C03  00AE               	movwf	?___ftmul+1
  2298  0C04  303B               	movlw	59
  2299  0C05  00AF               	movwf	?___ftmul+2
  2300  0C06  1683               	bsf	3,5	;RP0=1, select bank1
  2301  0C07  0854               	movf	(_nin+1)^(0+128),w
  2302  0C08  00F9               	movwf	?___awtoft+1
  2303  0C09  0853               	movf	_nin^(0+128),w
  2304  0C0A  00F8               	movwf	?___awtoft
  2305  0C0B  120A  158A  249F   	fcall	___awtoft
      +       120A  158A         
  2306  0C10  0878               	movf	?___awtoft,w
  2307  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  2308  0C12  00B0               	movwf	?___ftmul+3
  2309  0C13  0879               	movf	?___awtoft+1,w
  2310  0C14  00B1               	movwf	?___ftmul+4
  2311  0C15  087A               	movf	?___awtoft+2,w
  2312  0C16  00B2               	movwf	?___ftmul+5
  2313  0C17  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  2314  0C1C  082D               	movf	?___ftmul,w
  2315  0C1D  1683               	bsf	3,5	;RP0=1, select bank1
  2316  0C1E  00D0               	movwf	_num^(0+128)
  2317  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0C20  082E               	movf	?___ftmul+1,w
  2319  0C21  1683               	bsf	3,5	;RP0=1, select bank1
  2320  0C22  00D1               	movwf	(_num+1)^(0+128)
  2321  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  2322  0C24  082F               	movf	?___ftmul+2,w
  2323  0C25  1683               	bsf	3,5	;RP0=1, select bank1
  2324  0C26  00D2               	movwf	(_num+2)^(0+128)
  2325                           
  2326                           ;eeprom_i2c.c: 403: sprintf(carac,"%1.3f",num);
  2327  0C27  30B0               	movlw	(STR_3-__stringbase)& (0+255)
  2328  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0C29  00D2               	movwf	?_sprintf
  2330  0C2A  1683               	bsf	3,5	;RP0=1, select bank1
  2331  0C2B  0850               	movf	_num^(0+128),w
  2332  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0C2D  00D3               	movwf	?_sprintf+1
  2334  0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  2335  0C2F  0851               	movf	(_num+1)^(0+128),w
  2336  0C30  1283               	bcf	3,5	;RP0=0, select bank0
  2337  0C31  00D4               	movwf	?_sprintf+2
  2338  0C32  1683               	bsf	3,5	;RP0=1, select bank1
  2339  0C33  0852               	movf	(_num+2)^(0+128),w
  2340  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0C35  00D5               	movwf	?_sprintf+3
  2342  0C36  30D5               	movlw	_carac& (0+255)
  2343  0C37  120A  118A  2061   	fcall	_sprintf
      +       120A  158A         
  2344                           
  2345                           ;eeprom_i2c.c: 404: lcd_goto(0x40);
  2346  0C3C  3040               	movlw	64
  2347  0C3D  160A  118A  25BE   	fcall	_lcd_goto
      +       120A  158A         
  2348                           
  2349                           ;eeprom_i2c.c: 405: lcd_puts("V1:");
  2350  0C42  30B6               	movlw	low (STR_4-__stringbase)
  2351  0C43  00F5               	movwf	?_lcd_puts
  2352  0C44  3080               	movlw	128
  2353  0C45  00F6               	movwf	?_lcd_puts+1
  2354  0C46  160A  118A  2631   	fcall	_lcd_puts
      +       120A  158A         
  2355                           
  2356                           ;eeprom_i2c.c: 406: lcd_puts(carac);
  2357  0C4B  30D5               	movlw	_carac& (0+255)
  2358  0C4C  00F5               	movwf	?_lcd_puts
  2359  0C4D  01F6               	clrf	?_lcd_puts+1
  2360  0C4E  160A  118A  2631   	fcall	_lcd_puts
      +       120A  158A         
  2361                           
  2362                           ;eeprom_i2c.c: 407: pause (100);
  2363  0C53  3064               	movlw	100
  2364  0C54  00F0               	movwf	?_pause
  2365  0C55  01F1               	clrf	?_pause+1
  2366  0C56  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  2367                           
  2368                           ;eeprom_i2c.c: 409: sprintf(buffer,"V%i : %s  ",cnt2,carac);
  2369  0C5B  3093               	movlw	(STR_5-__stringbase)& (0+255)
  2370  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  2371  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  2372  0C5E  00D2               	movwf	?_sprintf
  2373  0C5F  1683               	bsf	3,5	;RP0=1, select bank1
  2374  0C60  084F               	movf	main@cnt2^(0+128),w
  2375  0C61  1283               	bcf	3,5	;RP0=0, select bank0
  2376  0C62  00D3               	movwf	?_sprintf+1
  2377  0C63  30D5               	movlw	_carac& (0+255)
  2378  0C64  01D4               	clrf	?_sprintf+2
  2379  0C65  00D5               	movwf	?_sprintf+3
  2380  0C66  30B9               	movlw	main@buffer& (0+255)
  2381  0C67  120A  118A  2061   	fcall	_sprintf
      +       120A  158A         
  2382                           
  2383                           ;eeprom_i2c.c: 410: for (char x = 0; x<10; x++)
  2384  0C6C  01CE               	clrf	main@x_1881^(0+128)
  2385  0C6D                     l6366:	
  2386                           
  2387                           ;eeprom_i2c.c: 411: {
  2388                           ;eeprom_i2c.c: 412: putch (buffer[x]);
  2389  0C6D  084E               	movf	main@x_1881^(0+128),w
  2390  0C6E  3EB9               	addlw	main@buffer& (0+255)
  2391  0C6F  0084               	movwf	4
  2392  0C70  0800               	movf	0,w
  2393  0C71  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  2394  0C76  1683               	bsf	3,5	;RP0=1, select bank1
  2395  0C77  300A               	movlw	10
  2396  0C78  0ACE               	incf	main@x_1881^(0+128),f
  2397  0C79  024E               	subwf	main@x_1881^(0+128),w
  2398  0C7A  1C03               	skipc
  2399  0C7B  2C6D               	goto	l6366
  2400                           
  2401                           ;eeprom_i2c.c: 413: }
  2402                           ;eeprom_i2c.c: 414: pause(200);
  2403  0C7C  30C8               	movlw	200
  2404  0C7D  00F0               	movwf	?_pause
  2405  0C7E  01F1               	clrf	?_pause+1
  2406  0C7F  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  2407                           
  2408                           ;eeprom_i2c.c: 415: putch(0x0D);
  2409  0C84  300D               	movlw	13
  2410  0C85  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  2411                           
  2412                           ;eeprom_i2c.c: 416: putch(0x0A);
  2413  0C8A  300A               	movlw	10
  2414  0C8B  120A  118A  203D   	fcall	_putch
      +       120A  158A         
  2415                           
  2416                           ;eeprom_i2c.c: 418: pause (100);
  2417  0C90  3064               	movlw	100
  2418  0C91  00F0               	movwf	?_pause
  2419  0C92  01F1               	clrf	?_pause+1
  2420  0C93  160A  118A  2660   	fcall	_pause
      +       120A  158A         
  2421                           
  2422                           ;eeprom_i2c.c: 419: cnt2=cnt2 + 1;
  2423  0C98  1683               	bsf	3,5	;RP0=1, select bank1
  2424  0C99  1303               	bcf	3,6	;RP1=0, select bank1
  2425  0C9A  0ACF               	incf	main@cnt2^(0+128),f
  2426  0C9B  2BD1               	goto	l6376
  2427  0C9C                     l1159:	
  2428  0C9C  120A  118A  2800   	ljmp	start
  2429  0C9F                     __end_of_main:	
  2430                           
  2431                           	psect	text718
  2432  0061                     __ptext718:	
  2433 ;; =============== function _main ends ============
  2434                           
  2435                           
  2436 ;; *************** function _sprintf *****************
  2437 ;; Defined at:
  2438 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  sp              1    wreg     PTR unsigned char 
  2441 ;;		 -> carac(5), main@buffer(15), 
  2442 ;;  f               1   50[BANK0 ] PTR const unsigned char 
  2443 ;;		 -> STR_10(11), STR_8(6), STR_7(13), STR_5(11), 
  2444 ;;		 -> STR_3(6), STR_1(15), 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  sp              1   17[BANK1 ] PTR unsigned char 
  2447 ;;		 -> carac(5), main@buffer(15), 
  2448 ;;  _val            4   21[BANK1 ] struct .
  2449 ;;  fval            3   14[BANK1 ] struct .
  2450 ;;  integ           3    5[BANK1 ] struct .
  2451 ;;  ival            3    0        struct .
  2452 ;;  prec            2   18[BANK1 ] int 
  2453 ;;  exp             2   12[BANK1 ] int 
  2454 ;;  width           2   10[BANK1 ] int 
  2455 ;;  flag            2    8[BANK1 ] unsigned short 
  2456 ;;  c               1   20[BANK1 ] char 
  2457 ;;  ap              1    4[BANK1 ] PTR void [1]
  2458 ;;		 -> ?_sprintf(2), 
  2459 ;;  d               1    0        unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  2   50[BANK0 ] int 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 60/0
  2466 ;;		On exit  : 160/20
  2467 ;;		Unchanged: FFE00/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       4       0       0       0
  2470 ;;      Locals:         0       0      25       0       0
  2471 ;;      Temps:          0       5       0       0       0
  2472 ;;      Totals:         0       9      25       0       0
  2473 ;;Total ram usage:       34 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    3
  2476 ;; This function calls:
  2477 ;;		_isdigit
  2478 ;;		___wmul
  2479 ;;		___ftge
  2480 ;;		___ftneg
  2481 ;;		___awdiv
  2482 ;;		_scale
  2483 ;;		___ftmul
  2484 ;;		_fround
  2485 ;;		___ftadd
  2486 ;;		___fttol
  2487 ;;		__div_to_l_
  2488 ;;		__tdiv_to_l_
  2489 ;;		___lltoft
  2490 ;;		___ftsub
  2491 ;;		___lldiv
  2492 ;;		___llmod
  2493 ;; This function is called by:
  2494 ;;		_main
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497  0061                     _sprintf:	
  2498                           
  2499                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2500                           ;sprintf@sp stored from wreg
  2501  0061  1683               	bsf	3,5	;RP0=1, select bank1
  2502  0062  00B1               	movwf	sprintf@sp^(0+128)
  2503  0063  3053               	movlw	(?_sprintf+1)& (0+255)
  2504  0064  00A4               	movwf	sprintf@ap^(0+128)
  2505  0065                     l6156:	
  2506  0065  1283               	bcf	3,5	;RP0=0, select bank0
  2507  0066  0852               	movf	sprintf@f,w
  2508  0067  0AD2               	incf	sprintf@f,f
  2509  0068  0084               	movwf	4
  2510  0069  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  2511  006E  1683               	bsf	3,5	;RP0=1, select bank1
  2512  006F  00B4               	movwf	sprintf@c^(0+128)
  2513  0070  08B4               	movf	sprintf@c^(0+128),f
  2514  0071  1903               	btfsc	3,2
  2515  0072  2DFC               	goto	l6158
  2516  0073  0834               	movf	sprintf@c^(0+128),w
  2517  0074  3A25               	xorlw	37
  2518  0075  1903               	skipnz
  2519  0076  287E               	goto	l5844
  2520  0077  0831               	movf	sprintf@sp^(0+128),w
  2521  0078  0084               	movwf	4
  2522  0079  0834               	movf	sprintf@c^(0+128),w
  2523  007A  1383               	bcf	3,7	;select IRP bank0
  2524  007B  0080               	movwf	0
  2525  007C  0AB1               	incf	sprintf@sp^(0+128),f
  2526  007D  2865               	goto	l6156
  2527  007E                     l5844:	
  2528  007E  01AA               	clrf	sprintf@width^(0+128)
  2529  007F  01AB               	clrf	(sprintf@width+1)^(0+128)
  2530  0080  01A8               	clrf	sprintf@flag^(0+128)
  2531  0081  01A9               	clrf	(sprintf@flag+1)^(0+128)
  2532  0082  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0083  0852               	movf	sprintf@f,w
  2534  0084  0084               	movwf	4
  2535  0085  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  2536  008A  266B  120A  118A   	fcall	_isdigit
  2537  008D  1C03               	btfss	3,0
  2538  008E  28B7               	goto	l5856
  2539  008F  1683               	bsf	3,5	;RP0=1, select bank1
  2540  0090  01AA               	clrf	sprintf@width^(0+128)
  2541  0091  01AB               	clrf	(sprintf@width+1)^(0+128)
  2542  0092                     l5850:	
  2543  0092  1683               	bsf	3,5	;RP0=1, select bank1
  2544  0093  082B               	movf	(sprintf@width+1)^(0+128),w
  2545  0094  00F1               	movwf	?___wmul+1
  2546  0095  082A               	movf	sprintf@width^(0+128),w
  2547  0096  00F0               	movwf	?___wmul
  2548  0097  300A               	movlw	10
  2549  0098  00F2               	movwf	?___wmul+2
  2550  0099  01F3               	clrf	?___wmul+3
  2551  009A  2679               	fcall	___wmul
  2552  009B  1283               	bcf	3,5	;RP0=0, select bank0
  2553  009C  0852               	movf	sprintf@f,w
  2554  009D  0084               	movwf	4
  2555  009E  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  2556  00A3  2797  120A  118A   	fcall	PL13	;call to abstracted procedure
  2557  00A6  00AA               	movwf	sprintf@width^(0+128)
  2558  00A7  27DB               	fcall	PL28	;call to abstracted procedure
  2559  00A8  00AB               	movwf	(sprintf@width+1)^(0+128)
  2560  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  2561  00AA  0AD2               	incf	sprintf@f,f
  2562  00AB  0852               	movf	sprintf@f,w
  2563  00AC  0084               	movwf	4
  2564  00AD  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  2565  00B2  266B  120A  118A   	fcall	_isdigit
  2566  00B5  1803               	btfsc	3,0
  2567  00B6  2892               	goto	l5850
  2568  00B7                     l5856:	
  2569  00B7  0852               	movf	sprintf@f,w
  2570  00B8  0084               	movwf	4
  2571  00B9  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  2572  00BE  3A2E               	xorlw	46
  2573  00BF  1D03               	skipz
  2574  00C0  28F1               	goto	l5870
  2575  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  2576  00C2  1729               	bsf	(sprintf@flag^(0+128)+1),6
  2577  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  2578  00C4  0AD2               	incf	sprintf@f,f
  2579  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  2580  00C6  01B2               	clrf	sprintf@prec^(0+128)
  2581  00C7  01B3               	clrf	(sprintf@prec+1)^(0+128)
  2582  00C8                     l5868:	
  2583  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  2584  00C9  0852               	movf	sprintf@f,w
  2585  00CA  0084               	movwf	4
  2586  00CB  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  2587  00D0  266B  120A  118A   	fcall	_isdigit
  2588  00D3  1C03               	btfss	3,0
  2589  00D4  2972               	goto	l5914
  2590  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  2591  00D6  0833               	movf	(sprintf@prec+1)^(0+128),w
  2592  00D7  00F1               	movwf	?___wmul+1
  2593  00D8  0832               	movf	sprintf@prec^(0+128),w
  2594  00D9  00F0               	movwf	?___wmul
  2595  00DA  300A               	movlw	10
  2596  00DB  00F2               	movwf	?___wmul+2
  2597  00DC  01F3               	clrf	?___wmul+3
  2598  00DD  2679               	fcall	___wmul
  2599  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  2600  00DF  0852               	movf	sprintf@f,w
  2601  00E0  0084               	movwf	4
  2602  00E1  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  2603  00E6  2797  120A  118A   	fcall	PL13	;call to abstracted procedure
  2604  00E9  00B2               	movwf	sprintf@prec^(0+128)
  2605  00EA  27DB  120A  118A   	fcall	PL28	;call to abstracted procedure
  2606  00ED  00B3               	movwf	(sprintf@prec+1)^(0+128)
  2607  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  2608  00EF  0AD2               	incf	sprintf@f,f
  2609  00F0  28C8               	goto	l5868
  2610  00F1                     l5870:	
  2611  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  2612  00F2  01B2               	clrf	sprintf@prec^(0+128)
  2613  00F3  01B3               	clrf	(sprintf@prec+1)^(0+128)
  2614  00F4  1629               	bsf	(sprintf@flag^(0+128)+1),4
  2615  00F5  2972               	goto	l5914
  2616  00F6                     l1230:	
  2617  00F6  1529               	bsf	(sprintf@flag^(0+128)+1),2
  2618  00F7  298D               	goto	l5916
  2619  00F8                     l5874:	
  2620  00F8  0824               	movf	sprintf@ap^(0+128),w
  2621  00F9  0084               	movwf	4
  2622  00FA  1383               	bcf	3,7	;select IRP bank0
  2623  00FB  0800               	movf	0,w
  2624  00FC  00B5               	movwf	sprintf@_val^(0+128)
  2625  00FD  01B6               	clrf	(sprintf@_val+1)^(0+128)
  2626  00FE  0AA4               	incf	sprintf@ap^(0+128),f
  2627  00FF  0436               	iorwf	(sprintf@_val+1)^(0+128),w
  2628  0100  1D03               	skipz
  2629  0101  2906               	goto	l5882
  2630  0102  30A9               	movlw	low (STR_11-__stringbase)
  2631  0103  00B5               	movwf	sprintf@_val^(0+128)
  2632  0104  3080               	movlw	128
  2633  0105  00B6               	movwf	(sprintf@_val+1)^(0+128)
  2634  0106                     l5882:	
  2635  0106  01B7               	clrf	(sprintf@_val^(0+128)+2)
  2636  0107  01B8               	clrf	((sprintf@_val+1)^(0+128)+2)
  2637  0108                     l5886:	
  2638  0108  0837               	movf	(sprintf@_val^(0+128)+2),w
  2639  0109  0735               	addwf	sprintf@_val^(0+128),w
  2640  010A  0084               	movwf	4
  2641  010B  0836               	movf	(sprintf@_val+1)^(0+128),w
  2642  010C  1803               	skipnc
  2643  010D  0A36               	incf	(sprintf@_val+1)^(0+128),w
  2644  010E  1283               	bcf	3,5	;RP0=0, select bank0
  2645  010F  00FF               	movwf	127
  2646  0110  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2647  0115  3800               	iorlw	0
  2648  0116  1903               	btfsc	3,2
  2649  0117  291D               	goto	l5888
  2650  0118  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0119  0AB7               	incf	(sprintf@_val^(0+128)+2),f
  2652  011A  1903               	skipnz
  2653  011B  0AB8               	incf	((sprintf@_val+1)^(0+128)+2),f
  2654  011C  2908               	goto	l5886
  2655  011D                     l5888:	
  2656  011D  1683               	bsf	3,5	;RP0=1, select bank1
  2657  011E  0833               	movf	(sprintf@prec+1)^(0+128),w
  2658  011F  0432               	iorwf	sprintf@prec^(0+128),w
  2659  0120  1903               	skipnz
  2660  0121  292E               	goto	l1239
  2661  0122  0838               	movf	((sprintf@_val+1)^(0+128)+2),w
  2662  0123  0233               	subwf	(sprintf@prec+1)^(0+128),w
  2663  0124  1D03               	skipz
  2664  0125  2928               	goto	u3125
  2665  0126  0837               	movf	(sprintf@_val^(0+128)+2),w
  2666  0127  0232               	subwf	sprintf@prec^(0+128),w
  2667  0128                     u3125:	
  2668  0128  1803               	skipnc
  2669  0129  292E               	goto	l1239
  2670  012A  0833               	movf	(sprintf@prec+1)^(0+128),w
  2671  012B  00B8               	movwf	((sprintf@_val+1)^(0+128)+2)
  2672  012C  0832               	movf	sprintf@prec^(0+128),w
  2673  012D  00B7               	movwf	(sprintf@_val^(0+128)+2)
  2674  012E                     l1239:	
  2675  012E  082B               	movf	(sprintf@width+1)^(0+128),w
  2676  012F  0238               	subwf	((sprintf@_val+1)^(0+128)+2),w
  2677  0130  1D03               	skipz
  2678  0131  2934               	goto	u3135
  2679  0132  082A               	movf	sprintf@width^(0+128),w
  2680  0133  0237               	subwf	(sprintf@_val^(0+128)+2),w
  2681  0134                     u3135:	
  2682  0134  1803               	skipnc
  2683  0135  293D               	goto	l5896
  2684  0136  0837               	movf	(sprintf@_val^(0+128)+2),w
  2685  0137  02AA               	subwf	sprintf@width^(0+128),f
  2686  0138  0838               	movf	((sprintf@_val+1)^(0+128)+2),w
  2687  0139  1C03               	skipc
  2688  013A  03AB               	decf	(sprintf@width+1)^(0+128),f
  2689  013B  02AB               	subwf	(sprintf@width+1)^(0+128),f
  2690  013C  293F               	goto	l5902
  2691  013D                     l5896:	
  2692  013D  01AA               	clrf	sprintf@width^(0+128)
  2693  013E  01AB               	clrf	(sprintf@width+1)^(0+128)
  2694  013F                     l5902:	
  2695  013F  30FF               	movlw	-1
  2696  0140  07AA               	addwf	sprintf@width^(0+128),f
  2697  0141  1C03               	skipc
  2698  0142  03AB               	decf	(sprintf@width+1)^(0+128),f
  2699  0143  0A2A               	incf	sprintf@width^(0+128),w
  2700  0144  1903               	skipnz
  2701  0145  0A2B               	incf	(sprintf@width+1)^(0+128),w
  2702  0146  1903               	btfsc	3,2
  2703  0147  2966               	goto	l5910
  2704  0148  0831               	movf	sprintf@sp^(0+128),w
  2705  0149  27F7  120A  118A   	fcall	PL33	;call to abstracted procedure
  2706  014C  293F               	goto	l5902
  2707  014D                     l5904:	
  2708  014D  0836               	movf	(sprintf@_val+1)^(0+128),w
  2709  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2710  014F  00FF               	movwf	127
  2711  0150  1683               	bsf	3,5	;RP0=1, select bank1
  2712  0151  0835               	movf	sprintf@_val^(0+128),w
  2713  0152  0084               	movwf	4
  2714  0153  1283               	bcf	3,5	;RP0=0, select bank0
  2715  0154  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2716  0159  00D6               	movwf	??_sprintf
  2717  015A  1683               	bsf	3,5	;RP0=1, select bank1
  2718  015B  0831               	movf	sprintf@sp^(0+128),w
  2719  015C  0084               	movwf	4
  2720  015D  1283               	bcf	3,5	;RP0=0, select bank0
  2721  015E  0856               	movf	??_sprintf,w
  2722  015F  1383               	bcf	3,7	;select IRP bank0
  2723  0160  0080               	movwf	0
  2724  0161  1683               	bsf	3,5	;RP0=1, select bank1
  2725  0162  0AB5               	incf	sprintf@_val^(0+128),f
  2726  0163  1903               	skipnz
  2727  0164  0AB6               	incf	(sprintf@_val+1)^(0+128),f
  2728  0165  0AB1               	incf	sprintf@sp^(0+128),f
  2729  0166                     l5910:	
  2730  0166  3001               	movlw	1
  2731  0167  02B7               	subwf	(sprintf@_val^(0+128)+2),f
  2732  0168  3000               	movlw	0
  2733  0169  1C03               	skipc
  2734  016A  03B8               	decf	((sprintf@_val+1)^(0+128)+2),f
  2735  016B  02B8               	subwf	((sprintf@_val+1)^(0+128)+2),f
  2736  016C  0A37               	incf	(sprintf@_val^(0+128)+2),w
  2737  016D  1903               	skipnz
  2738  016E  0A38               	incf	((sprintf@_val+1)^(0+128)+2),w
  2739  016F  1903               	btfsc	3,2
  2740  0170  2865               	goto	l6156
  2741  0171  294D               	goto	l5904
  2742  0172                     l5914:	
  2743  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0173  0852               	movf	sprintf@f,w
  2745  0174  0AD2               	incf	sprintf@f,f
  2746  0175  0084               	movwf	4
  2747  0176  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  2748  017B  1683               	bsf	3,5	;RP0=1, select bank1
  2749  017C  00B4               	movwf	sprintf@c^(0+128)
  2750                           
  2751                           ; Switch size 1, requested type "space"
  2752                           ; Number of cases is 5, Range of values is 0 to 115
  2753                           ; switch strategies available:
  2754                           ; Name         Instructions Cycles
  2755                           ; simple_byte           16     9 (average)
  2756                           ; jumptable            260     6 (fixed)
  2757                           ; rangetable           120     6 (fixed)
  2758                           ; spacedrange          238     9 (fixed)
  2759                           ; locatedrange         116     3 (fixed)
  2760                           ;	Chosen strategy is simple_byte
  2761  017D  3A00               	xorlw	0	; case 0
  2762  017E  1903               	skipnz
  2763  017F  2DFC               	goto	l6158
  2764  0180  3A64               	xorlw	100	; case 100
  2765  0181  1903               	skipnz
  2766  0182  298D               	goto	l5916
  2767  0183  3A02               	xorlw	2	; case 102
  2768  0184  1903               	skipnz
  2769  0185  28F6               	goto	l1230
  2770  0186  3A0F               	xorlw	15	; case 105
  2771  0187  1903               	skipnz
  2772  0188  298D               	goto	l5916
  2773  0189  3A1A               	xorlw	26	; case 115
  2774  018A  1903               	skipnz
  2775  018B  28F8               	goto	l5874
  2776  018C  2865               	goto	l6156
  2777  018D                     l5916:	
  2778  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2779  018E  3007               	movlw	7
  2780  018F  01D6               	clrf	??_sprintf
  2781  0190  1683               	bsf	3,5	;RP0=1, select bank1
  2782  0191  0529               	andwf	(sprintf@flag+1)^(0+128),w
  2783  0192  1283               	bcf	3,5	;RP0=0, select bank0
  2784  0193  00D7               	movwf	??_sprintf+1
  2785  0194  0456               	iorwf	??_sprintf,w
  2786  0195  1903               	skipnz
  2787  0196  2CC1               	goto	l6076
  2788  0197  1683               	bsf	3,5	;RP0=1, select bank1
  2789  0198  1E29               	btfss	(sprintf@flag+1)^(0+128),4
  2790  0199  299D               	goto	l5922
  2791  019A  3006               	movlw	6
  2792  019B  00B2               	movwf	sprintf@prec^(0+128)
  2793  019C  01B3               	clrf	(sprintf@prec+1)^(0+128)
  2794  019D                     l5922:	
  2795  019D  0824               	movf	sprintf@ap^(0+128),w
  2796  019E  0084               	movwf	4
  2797  019F  1383               	bcf	3,7	;select IRP bank0
  2798  01A0  0800               	movf	0,w
  2799  01A1  00AE               	movwf	sprintf@fval^(0+128)
  2800  01A2  0A84               	incf	4,f
  2801  01A3  0800               	movf	0,w
  2802  01A4  00AF               	movwf	(sprintf@fval+1)^(0+128)
  2803  01A5  0A84               	incf	4,f
  2804  01A6  0800               	movf	0,w
  2805  01A7  00B0               	movwf	(sprintf@fval+2)^(0+128)
  2806  01A8  3003               	movlw	3
  2807  01A9  07A4               	addwf	sprintf@ap^(0+128),f
  2808  01AA  082E               	movf	sprintf@fval^(0+128),w
  2809  01AB  00F0               	movwf	?___ftge
  2810  01AC  082F               	movf	(sprintf@fval+1)^(0+128),w
  2811  01AD  00F1               	movwf	?___ftge+1
  2812  01AE  0830               	movf	(sprintf@fval+2)^(0+128),w
  2813  01AF  00F2               	movwf	?___ftge+2
  2814  01B0  01F3               	clrf	?___ftge+3
  2815  01B1  01F4               	clrf	?___ftge+4
  2816  01B2  01F5               	clrf	?___ftge+5
  2817  01B3  263F  120A  118A   	fcall	___ftge
  2818  01B6  1803               	btfsc	3,0
  2819  01B7  29C9               	goto	l5932
  2820  01B8  082E               	movf	sprintf@fval^(0+128),w
  2821  01B9  00F0               	movwf	?___ftneg
  2822  01BA  082F               	movf	(sprintf@fval+1)^(0+128),w
  2823  01BB  00F1               	movwf	?___ftneg+1
  2824  01BC  0830               	movf	(sprintf@fval+2)^(0+128),w
  2825  01BD  00F2               	movwf	?___ftneg+2
  2826  01BE  2735  120A  118A   	fcall	___ftneg
  2827  01C1  0870               	movf	?___ftneg,w
  2828  01C2  00AE               	movwf	sprintf@fval^(0+128)
  2829  01C3  0871               	movf	?___ftneg+1,w
  2830  01C4  00AF               	movwf	(sprintf@fval+1)^(0+128)
  2831  01C5  0872               	movf	?___ftneg+2,w
  2832  01C6  00B0               	movwf	(sprintf@fval+2)^(0+128)
  2833  01C7  3003               	movlw	3
  2834  01C8  04A8               	iorwf	sprintf@flag^(0+128),f
  2835  01C9                     l5932:	
  2836  01C9  01AC               	clrf	sprintf@exp^(0+128)
  2837  01CA  01AD               	clrf	(sprintf@exp+1)^(0+128)
  2838  01CB  0830               	movf	(sprintf@fval+2)^(0+128),w
  2839  01CC  042F               	iorwf	(sprintf@fval+1)^(0+128),w
  2840  01CD  042E               	iorwf	sprintf@fval^(0+128),w
  2841  01CE  1903               	skipnz
  2842  01CF  2A5F               	goto	l5964
  2843  01D0  30AE               	movlw	low sprintf@fval
  2844  01D1  0084               	movwf	4
  2845  01D2  27F0  120A  118A   	fcall	PL32	;call to abstracted procedure
  2846  01D5  0A84               	incf	4,f
  2847  01D6  0800               	movf	0,w
  2848  01D7  00D8               	movwf	??_sprintf+2
  2849  01D8  0A84               	incf	4,f
  2850  01D9  0800               	movf	0,w
  2851  01DA  00D9               	movwf	??_sprintf+3
  2852  01DB  300F               	movlw	15
  2853  01DC                     u3205:	
  2854  01DC  1003               	clrc
  2855  01DD  0CD9               	rrf	??_sprintf+3,f
  2856  01DE  0CD8               	rrf	??_sprintf+2,f
  2857  01DF  0CD7               	rrf	??_sprintf+1,f
  2858  01E0  0CD6               	rrf	??_sprintf,f
  2859  01E1  3EFF               	addlw	-1
  2860  01E2  1D03               	skipz
  2861  01E3  29DC               	goto	u3205
  2862  01E4  0857               	movf	??_sprintf+1,w
  2863  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2864  01E6  00AD               	movwf	(sprintf@exp+1)^(0+128)
  2865  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2866  01E8  0856               	movf	??_sprintf,w
  2867  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  2868  01EA  00AC               	movwf	sprintf@exp^(0+128)
  2869  01EB  3082               	movlw	-126
  2870  01EC  01AD               	clrf	(sprintf@exp+1)^(0+128)
  2871  01ED  07AC               	addwf	sprintf@exp^(0+128),f
  2872  01EE  1C03               	skipc
  2873  01EF  03AD               	decf	(sprintf@exp+1)^(0+128),f
  2874  01F0  30FF               	movlw	-1
  2875  01F1  07AC               	addwf	sprintf@exp^(0+128),f
  2876  01F2  1C03               	skipc
  2877  01F3  03AD               	decf	(sprintf@exp+1)^(0+128),f
  2878  01F4  3003               	movlw	3
  2879  01F5  00F0               	movwf	?___wmul
  2880  01F6  01F1               	clrf	?___wmul+1
  2881  01F7  082D               	movf	(sprintf@exp+1)^(0+128),w
  2882  01F8  00F3               	movwf	?___wmul+3
  2883  01F9  082C               	movf	sprintf@exp^(0+128),w
  2884  01FA  00F2               	movwf	?___wmul+2
  2885  01FB  2679               	fcall	___wmul
  2886  01FC  0871               	movf	?___wmul+1,w
  2887  01FD  00AD               	movwf	(sprintf@exp+1)^(0+128)
  2888  01FE  0870               	movf	?___wmul,w
  2889  01FF  00AC               	movwf	sprintf@exp^(0+128)
  2890  0200  300A               	movlw	10
  2891  0201  00F6               	movwf	?___awdiv
  2892  0202  01F7               	clrf	?___awdiv+1
  2893  0203  082D               	movf	(sprintf@exp+1)^(0+128),w
  2894  0204  00F9               	movwf	?___awdiv+3
  2895  0205  082C               	movf	sprintf@exp^(0+128),w
  2896  0206  00F8               	movwf	?___awdiv+2
  2897  0207  120A  158A  266A   	fcall	___awdiv
      +       120A  118A         
  2898  020C  0877               	movf	?___awdiv+1,w
  2899  020D  00AD               	movwf	(sprintf@exp+1)^(0+128)
  2900  020E  0876               	movf	?___awdiv,w
  2901  020F  00AC               	movwf	sprintf@exp^(0+128)
  2902  0210  1FAD               	btfss	(sprintf@exp+1)^(0+128),7
  2903  0211  2A16               	goto	l5952
  2904  0212  30FF               	movlw	-1
  2905  0213  07AC               	addwf	sprintf@exp^(0+128),f
  2906  0214  1C03               	skipc
  2907  0215  03AD               	decf	(sprintf@exp+1)^(0+128),f
  2908  0216                     l5952:	
  2909  0216  032C               	decf	sprintf@exp^(0+128),w
  2910  0217  3AFF               	xorlw	255
  2911  0218  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2912  021D  278A  120A  118A   	fcall	PL12	;call to abstracted procedure
  2913  0220  27AD               	fcall	PL15	;call to abstracted procedure
  2914  0221  1683               	bsf	3,5	;RP0=1, select bank1
  2915  0222  0825               	movf	sprintf@integ^(0+128),w
  2916  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2917  0224  00B0               	movwf	?___ftmul+3
  2918  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2919  0226  0826               	movf	(sprintf@integ+1)^(0+128),w
  2920  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0228  00B1               	movwf	?___ftmul+4
  2922  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2923  022A  0827               	movf	(sprintf@integ+2)^(0+128),w
  2924  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2925  022C  00B2               	movwf	?___ftmul+5
  2926  022D  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2927  0232  082D               	movf	?___ftmul,w
  2928  0233  1683               	bsf	3,5	;RP0=1, select bank1
  2929  0234  00A5               	movwf	sprintf@integ^(0+128)
  2930  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2931  0236  082E               	movf	?___ftmul+1,w
  2932  0237  1683               	bsf	3,5	;RP0=1, select bank1
  2933  0238  00A6               	movwf	(sprintf@integ+1)^(0+128)
  2934  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2935  023A  082F               	movf	?___ftmul+2,w
  2936  023B  1683               	bsf	3,5	;RP0=1, select bank1
  2937  023C  00A7               	movwf	(sprintf@integ+2)^(0+128)
  2938  023D  27D4  120A  118A   	fcall	PL22	;call to abstracted procedure
  2939  0240  3080               	movlw	128
  2940  0241  01F3               	clrf	?___ftge+3
  2941  0242  00F4               	movwf	?___ftge+4
  2942  0243  303F               	movlw	63
  2943  0244  00F5               	movwf	?___ftge+5
  2944  0245  263F  120A  118A   	fcall	___ftge
  2945  0248  1803               	btfsc	3,0
  2946  0249  2A4F               	goto	l5960
  2947  024A  30FF               	movlw	-1
  2948  024B  07AC               	addwf	sprintf@exp^(0+128),f
  2949  024C  1C03               	skipc
  2950  024D  03AD               	decf	(sprintf@exp+1)^(0+128),f
  2951  024E  2A5F               	goto	l5964
  2952  024F                     l5960:	
  2953  024F  27D4  120A  118A   	fcall	PL22	;call to abstracted procedure
  2954  0252  3020               	movlw	32
  2955  0253  01F3               	clrf	?___ftge+3
  2956  0254  00F4               	movwf	?___ftge+4
  2957  0255  3041               	movlw	65
  2958  0256  00F5               	movwf	?___ftge+5
  2959  0257  263F  120A  118A   	fcall	___ftge
  2960  025A  1C03               	btfss	3,0
  2961  025B  2A5F               	goto	l5964
  2962  025C  0AAC               	incf	sprintf@exp^(0+128),f
  2963  025D  1903               	skipnz
  2964  025E  0AAD               	incf	(sprintf@exp+1)^(0+128),f
  2965  025F                     l5964:	
  2966  025F  0833               	movf	(sprintf@prec+1)^(0+128),w
  2967  0260  3A80               	xorlw	128
  2968  0261  00FF               	movwf	127
  2969  0262  3080               	movlw	128
  2970  0263  027F               	subwf	127,w
  2971  0264  1D03               	skipz
  2972  0265  2A68               	goto	u3245
  2973  0266  300D               	movlw	13
  2974  0267  0232               	subwf	sprintf@prec^(0+128),w
  2975  0268                     u3245:	
  2976  0268  1803               	skipnc
  2977  0269  2A93               	goto	l5968
  2978  026A  27FD               	call	PL34	;select bank 1
  2979  026B  0832               	movf	sprintf@prec^(0+128),w
  2980  026C  120A  158A  204A   	fcall	_fround
      +       120A  118A         
  2981  0271  0848               	movf	?_fround,w
  2982  0272  00BC               	movwf	?___ftadd
  2983  0273  0849               	movf	?_fround+1,w
  2984  0274  00BD               	movwf	?___ftadd+1
  2985  0275  084A               	movf	?_fround+2,w
  2986  0276  00BE               	movwf	?___ftadd+2
  2987  0277  1683               	bsf	3,5	;RP0=1, select bank1
  2988  0278  082E               	movf	sprintf@fval^(0+128),w
  2989  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2990  027A  00BF               	movwf	?___ftadd+3
  2991  027B  1683               	bsf	3,5	;RP0=1, select bank1
  2992  027C  082F               	movf	(sprintf@fval+1)^(0+128),w
  2993  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2994  027E  00C0               	movwf	?___ftadd+4
  2995  027F  1683               	bsf	3,5	;RP0=1, select bank1
  2996  0280  0830               	movf	(sprintf@fval+2)^(0+128),w
  2997  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0282  00C1               	movwf	?___ftadd+5
  2999  0283  160A  118A  273E   	fcall	___ftadd
      +       120A  118A         
  3000  0288  083C               	movf	?___ftadd,w
  3001  0289  1683               	bsf	3,5	;RP0=1, select bank1
  3002  028A  00AE               	movwf	sprintf@fval^(0+128)
  3003  028B  1283               	bcf	3,5	;RP0=0, select bank0
  3004  028C  083D               	movf	?___ftadd+1,w
  3005  028D  1683               	bsf	3,5	;RP0=1, select bank1
  3006  028E  00AF               	movwf	(sprintf@fval+1)^(0+128)
  3007  028F  1283               	bcf	3,5	;RP0=0, select bank0
  3008  0290  083E               	movf	?___ftadd+2,w
  3009  0291  1683               	bsf	3,5	;RP0=1, select bank1
  3010  0292  00B0               	movwf	(sprintf@fval+2)^(0+128)
  3011  0293                     l5968:	
  3012  0293  27FD               	call	PL34	;select bank 1
  3013  0294  082D               	movf	(sprintf@exp+1)^(0+128),w
  3014  0295  3A80               	xorlw	128
  3015  0296  00FF               	movwf	127
  3016  0297  3080               	movlw	128
  3017  0298  027F               	subwf	127,w
  3018  0299  1D03               	skipz
  3019  029A  2A9D               	goto	u3255
  3020  029B  300A               	movlw	10
  3021  029C  022C               	subwf	sprintf@exp^(0+128),w
  3022  029D                     u3255:	
  3023  029D  1803               	skipnc
  3024  029E  2ABE               	goto	l5976
  3025  029F  27FD               	call	PL34	;select bank 1
  3026  02A0  0830               	movf	(sprintf@fval+2)^(0+128),w
  3027  02A1  042F               	iorwf	(sprintf@fval+1)^(0+128),w
  3028  02A2  042E               	iorwf	sprintf@fval^(0+128),w
  3029  02A3  1903               	skipnz
  3030  02A4  2AFF               	goto	l5992
  3031  02A5  082E               	movf	sprintf@fval^(0+128),w
  3032  02A6  27A2  120A  118A   	fcall	PL14	;call to abstracted procedure
  3033  02A9  2692  120A  118A   	fcall	___fttol
  3034  02AC  0823               	movf	?___fttol+3,w
  3035  02AD  0422               	iorwf	?___fttol+2,w
  3036  02AE  0421               	iorwf	?___fttol+1,w
  3037  02AF  0420               	iorwf	?___fttol,w
  3038  02B0  1D03               	skipz
  3039  02B1  2AFF               	goto	l5992
  3040  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  3041  02B3  082D               	movf	(sprintf@exp+1)^(0+128),w
  3042  02B4  3A80               	xorlw	128
  3043  02B5  00FF               	movwf	127
  3044  02B6  3080               	movlw	128
  3045  02B7  027F               	subwf	127,w
  3046  02B8  1D03               	skipz
  3047  02B9  2ABC               	goto	u3285
  3048  02BA  3002               	movlw	2
  3049  02BB  022C               	subwf	sprintf@exp^(0+128),w
  3050  02BC                     u3285:	
  3051  02BC  1C03               	skipc
  3052  02BD  2AFF               	goto	l5992
  3053  02BE                     l5976:	
  3054  02BE  27FD               	call	PL34	;select bank 1
  3055  02BF  27D4  120A  118A   	fcall	PL22	;call to abstracted procedure
  3056  02C2  3070               	movlw	112
  3057  02C3  00F3               	movwf	?___ftge+3
  3058  02C4  3089               	movlw	137
  3059  02C5  00F4               	movwf	?___ftge+4
  3060  02C6  3040               	movlw	64
  3061  02C7  00F5               	movwf	?___ftge+5
  3062  02C8  263F  120A  118A   	fcall	___ftge
  3063  02CB  1803               	btfsc	3,0
  3064  02CC  2ACF               	goto	l5980
  3065  02CD  30F7               	movlw	-9
  3066  02CE  2AD0               	goto	L1
  3067  02CF                     l5980:	
  3068  02CF  30F8               	movlw	-8
  3069  02D0                     L1:	
  3070  02D0  07AC               	addwf	sprintf@exp^(0+128),f
  3071  02D1  1C03               	skipc
  3072  02D2  03AD               	decf	(sprintf@exp+1)^(0+128),f
  3073  02D3  082C               	movf	sprintf@exp^(0+128),w
  3074  02D4  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  3075  02D9  278A               	fcall	PL12	;call to abstracted procedure
  3076  02DA  00F0               	movwf	?__tdiv_to_l_
  3077  02DB  082F               	movf	(sprintf@fval+1)^(0+128),w
  3078  02DC  00F1               	movwf	?__tdiv_to_l_+1
  3079  02DD  0830               	movf	(sprintf@fval+2)^(0+128),w
  3080  02DE  00F2               	movwf	?__tdiv_to_l_+2
  3081  02DF  0825               	movf	sprintf@integ^(0+128),w
  3082  02E0  00F3               	movwf	?__tdiv_to_l_+3
  3083  02E1  0826               	movf	(sprintf@integ+1)^(0+128),w
  3084  02E2  00F4               	movwf	?__tdiv_to_l_+4
  3085  02E3  0827               	movf	(sprintf@integ+2)^(0+128),w
  3086  02E4  00F5               	movwf	?__tdiv_to_l_+5
  3087  02E5  160A  118A  2546   	fcall	__tdiv_to_l_
      +       120A  118A         
  3088  02EA  0873               	movf	?__tdiv_to_l_+3,w
  3089  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  3090  02EC  00A3               	movwf	(_sprintf$1951+3)^(0+128)
  3091  02ED  0872               	movf	?__tdiv_to_l_+2,w
  3092  02EE  00A2               	movwf	(_sprintf$1951+2)^(0+128)
  3093  02EF  0871               	movf	?__tdiv_to_l_+1,w
  3094  02F0  00A1               	movwf	(_sprintf$1951+1)^(0+128)
  3095  02F1  0870               	movf	?__tdiv_to_l_,w
  3096  02F2  00A0               	movwf	_sprintf$1951^(0+128)
  3097  02F3  0823               	movf	(_sprintf$1951+3)^(0+128),w
  3098  02F4  00B8               	movwf	(sprintf@_val+3)^(0+128)
  3099  02F5  0822               	movf	(_sprintf$1951+2)^(0+128),w
  3100  02F6  00B7               	movwf	(sprintf@_val+2)^(0+128)
  3101  02F7  0821               	movf	(_sprintf$1951+1)^(0+128),w
  3102  02F8  00B6               	movwf	(sprintf@_val+1)^(0+128)
  3103  02F9  0820               	movf	_sprintf$1951^(0+128),w
  3104  02FA  00B5               	movwf	sprintf@_val^(0+128)
  3105  02FB  01AE               	clrf	sprintf@fval^(0+128)
  3106  02FC  01AF               	clrf	(sprintf@fval+1)^(0+128)
  3107  02FD  01B0               	clrf	(sprintf@fval+2)^(0+128)
  3108  02FE  2B3A               	goto	l5996
  3109  02FF                     l5992:	
  3110  02FF  27FD               	call	PL34	;select bank 1
  3111  0300  082E               	movf	sprintf@fval^(0+128),w
  3112  0301  27A2  120A  118A   	fcall	PL14	;call to abstracted procedure
  3113  0304  2692  120A  118A   	fcall	___fttol
  3114  0307  277C               	fcall	PL7	;call to abstracted procedure
  3115  0308  1683               	bsf	3,5	;RP0=1, select bank1
  3116  0309  00B5               	movwf	sprintf@_val^(0+128)
  3117  030A  0838               	movf	(sprintf@_val+3)^(0+128),w
  3118  030B  00FB               	movwf	?___lltoft+3
  3119  030C  0837               	movf	(sprintf@_val+2)^(0+128),w
  3120  030D  00FA               	movwf	?___lltoft+2
  3121  030E  0836               	movf	(sprintf@_val+1)^(0+128),w
  3122  030F  00F9               	movwf	?___lltoft+1
  3123  0310  0835               	movf	sprintf@_val^(0+128),w
  3124  0311  00F8               	movwf	?___lltoft
  3125  0312  120A  158A  24BA   	fcall	___lltoft
      +       120A  118A         
  3126  0317  0878               	movf	?___lltoft,w
  3127  0318  1283               	bcf	3,5	;RP0=0, select bank0
  3128  0319  00C8               	movwf	?___ftsub
  3129  031A  0879               	movf	?___lltoft+1,w
  3130  031B  00C9               	movwf	?___ftsub+1
  3131  031C  087A               	movf	?___lltoft+2,w
  3132  031D  00CA               	movwf	?___ftsub+2
  3133  031E  1683               	bsf	3,5	;RP0=1, select bank1
  3134  031F  082E               	movf	sprintf@fval^(0+128),w
  3135  0320  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0321  00CB               	movwf	?___ftsub+3
  3137  0322  1683               	bsf	3,5	;RP0=1, select bank1
  3138  0323  082F               	movf	(sprintf@fval+1)^(0+128),w
  3139  0324  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0325  00CC               	movwf	?___ftsub+4
  3141  0326  1683               	bsf	3,5	;RP0=1, select bank1
  3142  0327  0830               	movf	(sprintf@fval+2)^(0+128),w
  3143  0328  1283               	bcf	3,5	;RP0=0, select bank0
  3144  0329  00CD               	movwf	?___ftsub+5
  3145  032A  273D  120A  118A   	fcall	___ftsub
  3146  032D  0848               	movf	?___ftsub,w
  3147  032E  1683               	bsf	3,5	;RP0=1, select bank1
  3148  032F  00AE               	movwf	sprintf@fval^(0+128)
  3149  0330  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0331  0849               	movf	?___ftsub+1,w
  3151  0332  1683               	bsf	3,5	;RP0=1, select bank1
  3152  0333  00AF               	movwf	(sprintf@fval+1)^(0+128)
  3153  0334  1283               	bcf	3,5	;RP0=0, select bank0
  3154  0335  084A               	movf	?___ftsub+2,w
  3155  0336  1683               	bsf	3,5	;RP0=1, select bank1
  3156  0337  00B0               	movwf	(sprintf@fval+2)^(0+128)
  3157  0338  01AC               	clrf	sprintf@exp^(0+128)
  3158  0339  01AD               	clrf	(sprintf@exp+1)^(0+128)
  3159  033A                     l5996:	
  3160  033A  01B4               	clrf	sprintf@c^(0+128)
  3161  033B  0AB4               	incf	sprintf@c^(0+128),f
  3162  033C                     l6002:	
  3163  033C  2755               	fcall	PL3	;call to abstracted procedure
  3164  033D  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3165  0342  00D7               	movwf	??_sprintf+1
  3166  0343  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3167  0348  00D8               	movwf	??_sprintf+2
  3168  0349  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3169  034E  00D9               	movwf	??_sprintf+3
  3170  034F  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3171  0354  00DA               	movwf	??_sprintf+4
  3172  0355  1683               	bsf	3,5	;RP0=1, select bank1
  3173  0356  0238               	subwf	(sprintf@_val+3)^(0+128),w
  3174  0357  1D03               	skipz
  3175  0358  2B69               	goto	u3305
  3176  0359  1283               	bcf	3,5	;RP0=0, select bank0
  3177  035A  0859               	movf	??_sprintf+3,w
  3178  035B  1683               	bsf	3,5	;RP0=1, select bank1
  3179  035C  0237               	subwf	(sprintf@_val+2)^(0+128),w
  3180  035D  1D03               	skipz
  3181  035E  2B69               	goto	u3305
  3182  035F  1283               	bcf	3,5	;RP0=0, select bank0
  3183  0360  0858               	movf	??_sprintf+2,w
  3184  0361  1683               	bsf	3,5	;RP0=1, select bank1
  3185  0362  0236               	subwf	(sprintf@_val+1)^(0+128),w
  3186  0363  1D03               	skipz
  3187  0364  2B69               	goto	u3305
  3188  0365  1283               	bcf	3,5	;RP0=0, select bank0
  3189  0366  0857               	movf	??_sprintf+1,w
  3190  0367  1683               	bsf	3,5	;RP0=1, select bank1
  3191  0368  0235               	subwf	sprintf@_val^(0+128),w
  3192  0369                     u3305:	
  3193  0369  1C03               	btfss	3,0
  3194  036A  2B70               	goto	l6010
  3195  036B  0AB4               	incf	sprintf@c^(0+128),f
  3196  036C  0834               	movf	sprintf@c^(0+128),w
  3197  036D  3A0A               	xorlw	10
  3198  036E  1D03               	skipz
  3199  036F  2B3C               	goto	l6002
  3200  0370                     l6010:	
  3201  0370  0832               	movf	sprintf@prec^(0+128),w
  3202  0371  0734               	addwf	sprintf@c^(0+128),w
  3203  0372  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0373  00D6               	movwf	??_sprintf
  3205  0374  1683               	bsf	3,5	;RP0=1, select bank1
  3206  0375  0833               	movf	(sprintf@prec+1)^(0+128),w
  3207  0376  1803               	skipnc
  3208  0377  0A33               	incf	(sprintf@prec+1)^(0+128),w
  3209  0378  1BB4               	btfsc	sprintf@c^(0+128),7
  3210  0379  3EFF               	addlw	255
  3211  037A  1283               	bcf	3,5	;RP0=0, select bank0
  3212  037B  00D7               	movwf	??_sprintf+1
  3213  037C  1683               	bsf	3,5	;RP0=1, select bank1
  3214  037D  082C               	movf	sprintf@exp^(0+128),w
  3215  037E  1283               	bcf	3,5	;RP0=0, select bank0
  3216  037F  0756               	addwf	??_sprintf,w
  3217  0380  00D8               	movwf	??_sprintf+2
  3218  0381  1683               	bsf	3,5	;RP0=1, select bank1
  3219  0382  082D               	movf	(sprintf@exp+1)^(0+128),w
  3220  0383  1803               	skipnc
  3221  0384  0A2D               	incf	(sprintf@exp+1)^(0+128),w
  3222  0385  1283               	bcf	3,5	;RP0=0, select bank0
  3223  0386  0757               	addwf	??_sprintf+1,w
  3224  0387  00D9               	movwf	??_sprintf+3
  3225  0388  0858               	movf	??_sprintf+2,w
  3226  0389  1683               	bsf	3,5	;RP0=1, select bank1
  3227  038A  02AA               	subwf	sprintf@width^(0+128),f
  3228  038B  1283               	bcf	3,5	;RP0=0, select bank0
  3229  038C  0859               	movf	??_sprintf+3,w
  3230  038D  1683               	bsf	3,5	;RP0=1, select bank1
  3231  038E  1C03               	skipc
  3232  038F  03AB               	decf	(sprintf@width+1)^(0+128),f
  3233  0390  02AB               	subwf	(sprintf@width+1)^(0+128),f
  3234  0391  0833               	movf	(sprintf@prec+1)^(0+128),w
  3235  0392  0432               	iorwf	sprintf@prec^(0+128),w
  3236  0393  1903               	skipnz
  3237  0394  2B99               	goto	l6016
  3238  0395  30FF               	movlw	-1
  3239  0396  07AA               	addwf	sprintf@width^(0+128),f
  3240  0397  1C03               	skipc
  3241  0398  03AB               	decf	(sprintf@width+1)^(0+128),f
  3242  0399                     l6016:	
  3243  0399  0828               	movf	sprintf@flag^(0+128),w
  3244  039A  3903               	andlw	3
  3245  039B  1D03               	btfss	3,2
  3246  039C  2BAD               	goto	l6018
  3247  039D                     l6026:	
  3248  039D  082B               	movf	(sprintf@width+1)^(0+128),w
  3249  039E  3A80               	xorlw	128
  3250  039F  00FF               	movwf	127
  3251  03A0  3080               	movlw	128
  3252  03A1  027F               	subwf	127,w
  3253  03A2  1D03               	skipz
  3254  03A3  2BA6               	goto	u3345
  3255  03A4  3001               	movlw	1
  3256  03A5  022A               	subwf	sprintf@width^(0+128),w
  3257  03A6                     u3345:	
  3258  03A6  1C03               	btfss	3,0
  3259  03A7  2BB2               	goto	l6028
  3260  03A8  27FD               	call	PL34	;select bank 1
  3261  03A9  0831               	movf	sprintf@sp^(0+128),w
  3262  03AA  27F7  120A  118A   	fcall	PL33	;call to abstracted procedure
  3263  03AD                     l6018:	
  3264  03AD  30FF               	movlw	-1
  3265  03AE  07AA               	addwf	sprintf@width^(0+128),f
  3266  03AF  1C03               	skipc
  3267  03B0  03AB               	decf	(sprintf@width+1)^(0+128),f
  3268  03B1  2B9D               	goto	l6026
  3269  03B2                     l6028:	
  3270  03B2  27FD               	call	PL34	;select bank 1
  3271  03B3  0828               	movf	sprintf@flag^(0+128),w
  3272  03B4  3903               	andlw	3
  3273  03B5  1903               	btfsc	3,2
  3274  03B6  2BE9               	goto	l6038
  3275  03B7  0831               	movf	sprintf@sp^(0+128),w
  3276  03B8  0084               	movwf	4
  3277  03B9  302D               	movlw	45
  3278  03BA  2BE5               	goto	L4
  3279  03BB                     l6034:	
  3280  03BB  275F  120A  118A   	fcall	PL4	;call to abstracted procedure
  3281  03BE  2755               	fcall	PL3	;call to abstracted procedure
  3282  03BF  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3283  03C4  00F0               	movwf	?___lldiv
  3284  03C5  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3285  03CA  00F1               	movwf	?___lldiv+1
  3286  03CB  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3287  03D0  00F2               	movwf	?___lldiv+2
  3288  03D1  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3289  03D6  2767  120A  118A   	fcall	PL5	;call to abstracted procedure
  3290  03D9  26ED  120A  118A   	fcall	___lldiv
  3291  03DC  2772  120A  118A   	fcall	PL6	;call to abstracted procedure
  3292  03DF  2601  120A  118A   	fcall	___llmod
  3293  03E2  27C2  120A  118A   	fcall	PL20	;call to abstracted procedure
  3294  03E5                     L4:	
  3295  03E5  1383               	bcf	3,7	;select IRP bank0
  3296  03E6  0080               	movwf	0
  3297  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  3298  03E8  0AB1               	incf	sprintf@sp^(0+128),f
  3299  03E9                     l6038:	
  3300  03E9  03B4               	decf	sprintf@c^(0+128),f
  3301  03EA  0F34               	incfsz	sprintf@c^(0+128),w
  3302  03EB  2BBB               	goto	l6034
  3303  03EC                     l6046:	
  3304  03EC  082D               	movf	(sprintf@exp+1)^(0+128),w
  3305  03ED  3A80               	xorlw	128
  3306  03EE  00FF               	movwf	127
  3307  03EF  3080               	movlw	128
  3308  03F0  027F               	subwf	127,w
  3309  03F1  1D03               	skipz
  3310  03F2  2BF5               	goto	u3375
  3311  03F3  3001               	movlw	1
  3312  03F4  022C               	subwf	sprintf@exp^(0+128),w
  3313  03F5                     u3375:	
  3314  03F5  1C03               	btfss	3,0
  3315  03F6  2C00               	goto	l6048
  3316  03F7  27FD               	call	PL34	;select bank 1
  3317  03F8  0831               	movf	sprintf@sp^(0+128),w
  3318  03F9  27E9  120A  118A   	fcall	PL31	;call to abstracted procedure
  3319  03FC  07AC               	addwf	sprintf@exp^(0+128),f
  3320  03FD  1C03               	skipc
  3321  03FE  03AD               	decf	(sprintf@exp+1)^(0+128),f
  3322  03FF  2BEC               	goto	l6046
  3323  0400                     l6048:	
  3324  0400  27FD               	call	PL34	;select bank 1
  3325  0401  0833               	movf	(sprintf@prec+1)^(0+128),w
  3326  0402  3A80               	xorlw	128
  3327  0403  00FF               	movwf	127
  3328  0404  3080               	movlw	128
  3329  0405  027F               	subwf	127,w
  3330  0406  1D03               	skipz
  3331  0407  2C0A               	goto	u3385
  3332  0408  3009               	movlw	9
  3333  0409  0232               	subwf	sprintf@prec^(0+128),w
  3334  040A                     u3385:	
  3335  040A  1C03               	skipc
  3336  040B  2C0F               	goto	l6052
  3337  040C  3008               	movlw	8
  3338  040D  27FD               	call	PL34	;select bank 1
  3339  040E  2C11               	goto	L2
  3340  040F                     l6052:	
  3341  040F  27FD               	call	PL34	;select bank 1
  3342  0410  0832               	movf	sprintf@prec^(0+128),w
  3343  0411                     L2:	
  3344  0411  00B4               	movwf	sprintf@c^(0+128)
  3345  0412  1283               	bcf	3,5	;RP0=0, select bank0
  3346  0413  00D6               	movwf	??_sprintf
  3347  0414  01D7               	clrf	??_sprintf+1
  3348  0415  1BD6               	btfsc	??_sprintf,7
  3349  0416  03D7               	decf	??_sprintf+1,f
  3350  0417  1683               	bsf	3,5	;RP0=1, select bank1
  3351  0418  02B2               	subwf	sprintf@prec^(0+128),f
  3352  0419  1283               	bcf	3,5	;RP0=0, select bank0
  3353  041A  0857               	movf	??_sprintf+1,w
  3354  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3355  041C  1C03               	skipc
  3356  041D  03B3               	decf	(sprintf@prec+1)^(0+128),f
  3357  041E  02B3               	subwf	(sprintf@prec+1)^(0+128),f
  3358  041F  0834               	movf	sprintf@c^(0+128),w
  3359  0420  1903               	btfsc	3,2
  3360  0421  2C28               	goto	l6058
  3361  0422  0831               	movf	sprintf@sp^(0+128),w
  3362  0423  0084               	movwf	4
  3363  0424  302E               	movlw	46
  3364  0425  1383               	bcf	3,7	;select IRP bank0
  3365  0426  0080               	movwf	0
  3366  0427  0AB1               	incf	sprintf@sp^(0+128),f
  3367  0428                     l6058:	
  3368  0428  0834               	movf	sprintf@c^(0+128),w
  3369  0429  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  3370  042E  083C               	movf	?_scale,w
  3371  042F  00B0               	movwf	?___ftmul+3
  3372  0430  083D               	movf	?_scale+1,w
  3373  0431  00B1               	movwf	?___ftmul+4
  3374  0432  083E               	movf	?_scale+2,w
  3375  0433  00B2               	movwf	?___ftmul+5
  3376  0434  1683               	bsf	3,5	;RP0=1, select bank1
  3377  0435  082E               	movf	sprintf@fval^(0+128),w
  3378  0436  27AD               	fcall	PL15	;call to abstracted procedure
  3379  0437  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  3380  043C  082D               	movf	?___ftmul,w
  3381  043D  00A0               	movwf	?___fttol
  3382  043E  082E               	movf	?___ftmul+1,w
  3383  043F  00A1               	movwf	?___fttol+1
  3384  0440  082F               	movf	?___ftmul+2,w
  3385  0441  00A2               	movwf	?___fttol+2
  3386  0442  2692  120A  118A   	fcall	___fttol
  3387  0445  277C  120A  118A   	fcall	PL7	;call to abstracted procedure
  3388  0448  2CB0               	goto	L3
  3389  0449                     l6060:	
  3390  0449  275F  120A  118A   	fcall	PL4	;call to abstracted procedure
  3391  044C  2755               	fcall	PL3	;call to abstracted procedure
  3392  044D  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3393  0452  00F0               	movwf	?___lldiv
  3394  0453  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3395  0458  00F1               	movwf	?___lldiv+1
  3396  0459  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3397  045E  00F2               	movwf	?___lldiv+2
  3398  045F  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3399  0464  2767  120A  118A   	fcall	PL5	;call to abstracted procedure
  3400  0467  26ED  120A  118A   	fcall	___lldiv
  3401  046A  2772  120A  118A   	fcall	PL6	;call to abstracted procedure
  3402  046D  2601  120A  118A   	fcall	___llmod
  3403  0470  27C2  120A  118A   	fcall	PL20	;call to abstracted procedure
  3404  0473  1383               	bcf	3,7	;select IRP bank0
  3405  0474  0080               	movwf	0
  3406  0475  1683               	bsf	3,5	;RP0=1, select bank1
  3407  0476  0AB1               	incf	sprintf@sp^(0+128),f
  3408  0477  2755               	fcall	PL3	;call to abstracted procedure
  3409  0478  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3410  047D  00A0               	movwf	?___llmod
  3411  047E  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3412  0483  00A1               	movwf	?___llmod+1
  3413  0484  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3414  0489  00A2               	movwf	?___llmod+2
  3415  048A  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3416  048F  00A3               	movwf	?___llmod+3
  3417  0490  1683               	bsf	3,5	;RP0=1, select bank1
  3418  0491  0838               	movf	(sprintf@_val+3)^(0+128),w
  3419  0492  1283               	bcf	3,5	;RP0=0, select bank0
  3420  0493  00A7               	movwf	?___llmod+7
  3421  0494  1683               	bsf	3,5	;RP0=1, select bank1
  3422  0495  0837               	movf	(sprintf@_val+2)^(0+128),w
  3423  0496  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0497  00A6               	movwf	?___llmod+6
  3425  0498  1683               	bsf	3,5	;RP0=1, select bank1
  3426  0499  0836               	movf	(sprintf@_val+1)^(0+128),w
  3427  049A  1283               	bcf	3,5	;RP0=0, select bank0
  3428  049B  00A5               	movwf	?___llmod+5
  3429  049C  1683               	bsf	3,5	;RP0=1, select bank1
  3430  049D  0835               	movf	sprintf@_val^(0+128),w
  3431  049E  1283               	bcf	3,5	;RP0=0, select bank0
  3432  049F  00A4               	movwf	?___llmod+4
  3433  04A0  2601  120A  118A   	fcall	___llmod
  3434  04A3  0823               	movf	?___llmod+3,w
  3435  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  3436  04A5  00B8               	movwf	(sprintf@_val+3)^(0+128)
  3437  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  3438  04A7  0822               	movf	?___llmod+2,w
  3439  04A8  1683               	bsf	3,5	;RP0=1, select bank1
  3440  04A9  00B7               	movwf	(sprintf@_val+2)^(0+128)
  3441  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  3442  04AB  0821               	movf	?___llmod+1,w
  3443  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  3444  04AD  00B6               	movwf	(sprintf@_val+1)^(0+128)
  3445  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3446  04AF  0820               	movf	?___llmod,w
  3447  04B0                     L3:	
  3448  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  3449  04B1  00B5               	movwf	sprintf@_val^(0+128)
  3450  04B2  03B4               	decf	sprintf@c^(0+128),f
  3451  04B3  0F34               	incfsz	sprintf@c^(0+128),w
  3452  04B4  2C49               	goto	l6060
  3453  04B5                     l6074:	
  3454  04B5  0833               	movf	(sprintf@prec+1)^(0+128),w
  3455  04B6  0432               	iorwf	sprintf@prec^(0+128),w
  3456  04B7  1903               	btfsc	3,2
  3457  04B8  2865               	goto	l6156
  3458  04B9  0831               	movf	sprintf@sp^(0+128),w
  3459  04BA  27E9  120A  118A   	fcall	PL31	;call to abstracted procedure
  3460  04BD  07B2               	addwf	sprintf@prec^(0+128),f
  3461  04BE  1C03               	skipc
  3462  04BF  03B3               	decf	(sprintf@prec+1)^(0+128),f
  3463  04C0  2CB5               	goto	l6074
  3464  04C1                     l6076:	
  3465  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  3466  04C2  0824               	movf	sprintf@ap^(0+128),w
  3467  04C3  0084               	movwf	4
  3468  04C4  1383               	bcf	3,7	;select IRP bank0
  3469  04C5  27F0  120A  118A   	fcall	PL32	;call to abstracted procedure
  3470  04C8  0856               	movf	??_sprintf,w
  3471  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  3472  04CA  00B5               	movwf	sprintf@_val^(0+128)
  3473  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  3474  04CC  0857               	movf	??_sprintf+1,w
  3475  04CD  1683               	bsf	3,5	;RP0=1, select bank1
  3476  04CE  00B6               	movwf	(sprintf@_val+1)^(0+128)
  3477  04CF  3000               	movlw	0
  3478  04D0  1BB6               	btfsc	(sprintf@_val+1)^(0+128),7
  3479  04D1  30FF               	movlw	255
  3480  04D2  00B7               	movwf	(sprintf@_val+2)^(0+128)
  3481  04D3  00B8               	movwf	(sprintf@_val+3)^(0+128)
  3482  04D4  0AA4               	incf	sprintf@ap^(0+128),f
  3483  04D5  0AA4               	incf	sprintf@ap^(0+128),f
  3484  04D6  1FB8               	btfss	(sprintf@_val+3)^(0+128),7
  3485  04D7  2CE5               	goto	l6086
  3486  04D8  3003               	movlw	3
  3487  04D9  04A8               	iorwf	sprintf@flag^(0+128),f
  3488  04DA  09B5               	comf	sprintf@_val^(0+128),f
  3489  04DB  09B6               	comf	(sprintf@_val+1)^(0+128),f
  3490  04DC  09B7               	comf	(sprintf@_val+2)^(0+128),f
  3491  04DD  09B8               	comf	(sprintf@_val+3)^(0+128),f
  3492  04DE  0AB5               	incf	sprintf@_val^(0+128),f
  3493  04DF  1903               	skipnz
  3494  04E0  0AB6               	incf	(sprintf@_val+1)^(0+128),f
  3495  04E1  1903               	skipnz
  3496  04E2  0AB7               	incf	(sprintf@_val+2)^(0+128),f
  3497  04E3  1903               	skipnz
  3498  04E4  0AB8               	incf	(sprintf@_val+3)^(0+128),f
  3499  04E5                     l6086:	
  3500  04E5  0833               	movf	(sprintf@prec+1)^(0+128),w
  3501  04E6  0432               	iorwf	sprintf@prec^(0+128),w
  3502  04E7  1D03               	skipz
  3503  04E8  2CF1               	goto	l6092
  3504  04E9  0838               	movf	(sprintf@_val+3)^(0+128),w
  3505  04EA  0437               	iorwf	(sprintf@_val+2)^(0+128),w
  3506  04EB  0436               	iorwf	(sprintf@_val+1)^(0+128),w
  3507  04EC  0435               	iorwf	sprintf@_val^(0+128),w
  3508  04ED  1903               	btfsc	3,2
  3509  04EE  0AB2               	incf	sprintf@prec^(0+128),f
  3510  04EF  1903               	skipnz
  3511  04F0  0AB3               	incf	(sprintf@prec+1)^(0+128),f
  3512  04F1                     l6092:	
  3513  04F1  01B4               	clrf	sprintf@c^(0+128)
  3514  04F2  0AB4               	incf	sprintf@c^(0+128),f
  3515  04F3                     l6098:	
  3516  04F3  2755               	fcall	PL3	;call to abstracted procedure
  3517  04F4  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3518  04F9  00D7               	movwf	??_sprintf+1
  3519  04FA  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3520  04FF  00D8               	movwf	??_sprintf+2
  3521  0500  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3522  0505  00D9               	movwf	??_sprintf+3
  3523  0506  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3524  050B  00DA               	movwf	??_sprintf+4
  3525  050C  1683               	bsf	3,5	;RP0=1, select bank1
  3526  050D  0238               	subwf	(sprintf@_val+3)^(0+128),w
  3527  050E  1D03               	skipz
  3528  050F  2D20               	goto	u3455
  3529  0510  1283               	bcf	3,5	;RP0=0, select bank0
  3530  0511  0859               	movf	??_sprintf+3,w
  3531  0512  1683               	bsf	3,5	;RP0=1, select bank1
  3532  0513  0237               	subwf	(sprintf@_val+2)^(0+128),w
  3533  0514  1D03               	skipz
  3534  0515  2D20               	goto	u3455
  3535  0516  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0517  0858               	movf	??_sprintf+2,w
  3537  0518  1683               	bsf	3,5	;RP0=1, select bank1
  3538  0519  0236               	subwf	(sprintf@_val+1)^(0+128),w
  3539  051A  1D03               	skipz
  3540  051B  2D20               	goto	u3455
  3541  051C  1283               	bcf	3,5	;RP0=0, select bank0
  3542  051D  0857               	movf	??_sprintf+1,w
  3543  051E  1683               	bsf	3,5	;RP0=1, select bank1
  3544  051F  0235               	subwf	sprintf@_val^(0+128),w
  3545  0520                     u3455:	
  3546  0520  1C03               	btfss	3,0
  3547  0521  2D27               	goto	l6106
  3548  0522  0AB4               	incf	sprintf@c^(0+128),f
  3549  0523  0834               	movf	sprintf@c^(0+128),w
  3550  0524  3A0A               	xorlw	10
  3551  0525  1D03               	skipz
  3552  0526  2CF3               	goto	l6098
  3553  0527                     l6106:	
  3554  0527  0834               	movf	sprintf@c^(0+128),w
  3555  0528  27B8  120A  118A   	fcall	PL19	;call to abstracted procedure
  3556  052B  0833               	movf	(sprintf@prec+1)^(0+128),w
  3557  052C  3A80               	xorlw	128
  3558  052D  1283               	bcf	3,5	;RP0=0, select bank0
  3559  052E  0258               	subwf	??_sprintf+2,w
  3560  052F  1D03               	skipz
  3561  0530  2D35               	goto	u3475
  3562  0531  1683               	bsf	3,5	;RP0=1, select bank1
  3563  0532  0832               	movf	sprintf@prec^(0+128),w
  3564  0533  1283               	bcf	3,5	;RP0=0, select bank0
  3565  0534  0256               	subwf	??_sprintf,w
  3566  0535                     u3475:	
  3567  0535  1803               	skipnc
  3568  0536  2D3B               	goto	l6110
  3569  0537  27FD               	call	PL34	;select bank 1
  3570  0538  0832               	movf	sprintf@prec^(0+128),w
  3571  0539  00B4               	movwf	sprintf@c^(0+128)
  3572  053A  2D53               	goto	l6114
  3573  053B                     l6110:	
  3574  053B  1683               	bsf	3,5	;RP0=1, select bank1
  3575  053C  27CB  120A  118A   	fcall	PL21	;call to abstracted procedure
  3576  053F  0833               	movf	(sprintf@prec+1)^(0+128),w
  3577  0540  3A80               	xorlw	128
  3578  0541  1283               	bcf	3,5	;RP0=0, select bank0
  3579  0542  00D8               	movwf	??_sprintf+2
  3580  0543  0857               	movf	??_sprintf+1,w
  3581  0544  3A80               	xorlw	128
  3582  0545  0258               	subwf	??_sprintf+2,w
  3583  0546  1D03               	skipz
  3584  0547  2D4B               	goto	u3485
  3585  0548  0856               	movf	??_sprintf,w
  3586  0549  1683               	bsf	3,5	;RP0=1, select bank1
  3587  054A  0232               	subwf	sprintf@prec^(0+128),w
  3588  054B                     u3485:	
  3589  054B  1803               	skipnc
  3590  054C  2D53               	goto	l6114
  3591  054D  27FD               	call	PL34	;select bank 1
  3592  054E  0834               	movf	sprintf@c^(0+128),w
  3593  054F  00B2               	movwf	sprintf@prec^(0+128)
  3594  0550  01B3               	clrf	(sprintf@prec+1)^(0+128)
  3595  0551  1BB2               	btfsc	sprintf@prec^(0+128),7
  3596  0552  03B3               	decf	(sprintf@prec+1)^(0+128),f
  3597  0553                     l6114:	
  3598  0553  27FD               	call	PL34	;select bank 1
  3599  0554  082B               	movf	(sprintf@width+1)^(0+128),w
  3600  0555  042A               	iorwf	sprintf@width^(0+128),w
  3601  0556  1903               	skipnz
  3602  0557  2D60               	goto	l6120
  3603  0558  0828               	movf	sprintf@flag^(0+128),w
  3604  0559  3903               	andlw	3
  3605  055A  1903               	btfsc	3,2
  3606  055B  2D60               	goto	l6120
  3607  055C  30FF               	movlw	-1
  3608  055D  07AA               	addwf	sprintf@width^(0+128),f
  3609  055E  1C03               	skipc
  3610  055F  03AB               	decf	(sprintf@width+1)^(0+128),f
  3611  0560                     l6120:	
  3612  0560  1F29               	btfss	(sprintf@flag+1)^(0+128),6
  3613  0561  2D7D               	goto	l6128
  3614  0562  0833               	movf	(sprintf@prec+1)^(0+128),w
  3615  0563  3A80               	xorlw	128
  3616  0564  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0565  00D6               	movwf	??_sprintf
  3618  0566  1683               	bsf	3,5	;RP0=1, select bank1
  3619  0567  082B               	movf	(sprintf@width+1)^(0+128),w
  3620  0568  3A80               	xorlw	128
  3621  0569  1283               	bcf	3,5	;RP0=0, select bank0
  3622  056A  0256               	subwf	??_sprintf,w
  3623  056B  1D03               	skipz
  3624  056C  2D70               	goto	u3525
  3625  056D  1683               	bsf	3,5	;RP0=1, select bank1
  3626  056E  082A               	movf	sprintf@width^(0+128),w
  3627  056F  0232               	subwf	sprintf@prec^(0+128),w
  3628  0570                     u3525:	
  3629  0570  1803               	skipnc
  3630  0571  2D7A               	goto	l6126
  3631  0572  27FD               	call	PL34	;select bank 1
  3632  0573  0832               	movf	sprintf@prec^(0+128),w
  3633  0574  02AA               	subwf	sprintf@width^(0+128),f
  3634  0575  0833               	movf	(sprintf@prec+1)^(0+128),w
  3635  0576  1C03               	skipc
  3636  0577  03AB               	decf	(sprintf@width+1)^(0+128),f
  3637  0578  02AB               	subwf	(sprintf@width+1)^(0+128),f
  3638  0579  2D7D               	goto	l6128
  3639  057A                     l6126:	
  3640  057A  27FD               	call	PL34	;select bank 1
  3641  057B  01AA               	clrf	sprintf@width^(0+128)
  3642  057C  01AB               	clrf	(sprintf@width+1)^(0+128)
  3643  057D                     l6128:	
  3644  057D  0834               	movf	sprintf@c^(0+128),w
  3645  057E  27B8  120A  118A   	fcall	PL19	;call to abstracted procedure
  3646  0581  082B               	movf	(sprintf@width+1)^(0+128),w
  3647  0582  3A80               	xorlw	128
  3648  0583  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0584  0258               	subwf	??_sprintf+2,w
  3650  0585  1D03               	skipz
  3651  0586  2D8B               	goto	u3535
  3652  0587  1683               	bsf	3,5	;RP0=1, select bank1
  3653  0588  082A               	movf	sprintf@width^(0+128),w
  3654  0589  1283               	bcf	3,5	;RP0=0, select bank0
  3655  058A  0256               	subwf	??_sprintf,w
  3656  058B                     u3535:	
  3657  058B  1803               	skipnc
  3658  058C  2D99               	goto	l6132
  3659  058D  1683               	bsf	3,5	;RP0=1, select bank1
  3660  058E  27CB  120A  118A   	fcall	PL21	;call to abstracted procedure
  3661  0591  02AA               	subwf	sprintf@width^(0+128),f
  3662  0592  1283               	bcf	3,5	;RP0=0, select bank0
  3663  0593  0857               	movf	??_sprintf+1,w
  3664  0594  1683               	bsf	3,5	;RP0=1, select bank1
  3665  0595  1C03               	skipc
  3666  0596  03AB               	decf	(sprintf@width+1)^(0+128),f
  3667  0597  02AB               	subwf	(sprintf@width+1)^(0+128),f
  3668  0598  2D9C               	goto	l6134
  3669  0599                     l6132:	
  3670  0599  27FD               	call	PL34	;select bank 1
  3671  059A  01AA               	clrf	sprintf@width^(0+128)
  3672  059B  01AB               	clrf	(sprintf@width+1)^(0+128)
  3673  059C                     l6134:	
  3674  059C  082B               	movf	(sprintf@width+1)^(0+128),w
  3675  059D  042A               	iorwf	sprintf@width^(0+128),w
  3676  059E  1903               	skipnz
  3677  059F  2DAE               	goto	l6142
  3678  05A0                     l6136:	
  3679  05A0  0831               	movf	sprintf@sp^(0+128),w
  3680  05A1  0084               	movwf	4
  3681  05A2  3020               	movlw	32
  3682  05A3  1383               	bcf	3,7	;select IRP bank0
  3683  05A4  0080               	movwf	0
  3684  05A5  30FF               	movlw	-1
  3685  05A6  0AB1               	incf	sprintf@sp^(0+128),f
  3686  05A7  07AA               	addwf	sprintf@width^(0+128),f
  3687  05A8  1C03               	skipc
  3688  05A9  03AB               	decf	(sprintf@width+1)^(0+128),f
  3689  05AA  082B               	movf	(sprintf@width+1)^(0+128),w
  3690  05AB  042A               	iorwf	sprintf@width^(0+128),w
  3691  05AC  1D03               	skipz
  3692  05AD  2DA0               	goto	l6136
  3693  05AE                     l6142:	
  3694  05AE  0828               	movf	sprintf@flag^(0+128),w
  3695  05AF  3903               	andlw	3
  3696  05B0  1903               	btfsc	3,2
  3697  05B1  2DB8               	goto	l6154
  3698  05B2  0831               	movf	sprintf@sp^(0+128),w
  3699  05B3  0084               	movwf	4
  3700  05B4  302D               	movlw	45
  3701  05B5                     L5:	
  3702  05B5  1383               	bcf	3,7	;select IRP bank0
  3703  05B6  0080               	movwf	0
  3704  05B7  0AB1               	incf	sprintf@sp^(0+128),f
  3705  05B8                     l6154:	
  3706  05B8  30FF               	movlw	-1
  3707  05B9  07B2               	addwf	sprintf@prec^(0+128),f
  3708  05BA  1C03               	skipc
  3709  05BB  03B3               	decf	(sprintf@prec+1)^(0+128),f
  3710  05BC  0A32               	incf	sprintf@prec^(0+128),w
  3711  05BD  1903               	skipnz
  3712  05BE  0A33               	incf	(sprintf@prec+1)^(0+128),w
  3713  05BF  1903               	btfsc	3,2
  3714  05C0  2865               	goto	l6156
  3715  05C1  300A               	movlw	10
  3716  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  3717  05C3  00A0               	movwf	?___llmod
  3718  05C4  01A1               	clrf	?___llmod+1
  3719  05C5  01A2               	clrf	?___llmod+2
  3720  05C6  01A3               	clrf	?___llmod+3
  3721  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  3722  05C8  0832               	movf	sprintf@prec^(0+128),w
  3723  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  3724  05CA  00D6               	movwf	??_sprintf
  3725  05CB  1003               	clrc
  3726  05CC  0DD6               	rlf	??_sprintf,f
  3727  05CD  1003               	clrc
  3728  05CE  0D56               	rlf	??_sprintf,w
  3729  05CF  3E4F               	addlw	low (_dpowers-__stringbase)
  3730  05D0  0084               	movwf	4
  3731  05D1  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3732  05D6  00F0               	movwf	?___lldiv
  3733  05D7  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3734  05DC  00F1               	movwf	?___lldiv+1
  3735  05DD  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3736  05E2  00F2               	movwf	?___lldiv+2
  3737  05E3  160A  118A  200A   	fcall	stringdir
      +       120A  118A         
  3738  05E8  2767  120A  118A   	fcall	PL5	;call to abstracted procedure
  3739  05EB  26ED  120A  118A   	fcall	___lldiv
  3740  05EE  2772  120A  118A   	fcall	PL6	;call to abstracted procedure
  3741  05F1  2601  120A  118A   	fcall	___llmod
  3742  05F4  0820               	movf	?___llmod,w
  3743  05F5  3E30               	addlw	48
  3744  05F6  1683               	bsf	3,5	;RP0=1, select bank1
  3745  05F7  00B4               	movwf	sprintf@c^(0+128)
  3746  05F8  0831               	movf	sprintf@sp^(0+128),w
  3747  05F9  0084               	movwf	4
  3748  05FA  0834               	movf	sprintf@c^(0+128),w
  3749  05FB  2DB5               	goto	L5
  3750  05FC                     l6158:	
  3751  05FC  0831               	movf	sprintf@sp^(0+128),w
  3752  05FD  0084               	movwf	4
  3753  05FE  1383               	bcf	3,7	;select IRP bank0
  3754  05FF  0180               	clrf	0
  3755  0600  0008               	return
  3756  0601                     __end_of_sprintf:	
  3757  0601                     __ptext737:	
  3758 ;; =============== function ___ftneg ends ============
  3759                           
  3760                           
  3761 ;; *************** function ___llmod *****************
  3762 ;; Defined at:
  3763 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  divisor         4    0[BANK0 ] unsigned long 
  3766 ;;  dividend        4    4[BANK0 ] unsigned long 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  counter         1   13[COMMON] unsigned char 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  4    0[BANK0 ] unsigned long 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0
  3773 ;; Tracked objects:
  3774 ;;		On entry : 60/0
  3775 ;;		On exit  : 60/0
  3776 ;;		Unchanged: FFF9F/0
  3777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3778 ;;      Params:         0       8       0       0       0
  3779 ;;      Locals:         1       0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0
  3781 ;;      Totals:         1       8       0       0       0
  3782 ;;Total ram usage:        9 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_sprintf
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790  0601                     ___llmod:	
  3791                           
  3792                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3793  0601  0823               	movf	___llmod@divisor+3,w
  3794  0602  0422               	iorwf	___llmod@divisor+2,w
  3795  0603  0421               	iorwf	___llmod@divisor+1,w
  3796  0604  0420               	iorwf	___llmod@divisor,w
  3797  0605  1903               	skipnz
  3798  0606  2E36               	goto	l5448
  3799  0607  01FD               	clrf	___llmod@counter
  3800  0608                     L12:	
  3801  0608  0AFD               	incf	___llmod@counter,f
  3802  0609  1BA3               	btfsc	___llmod@divisor+3,7
  3803  060A  2E11               	goto	l5440
  3804  060B  1003               	clrc
  3805  060C  0DA0               	rlf	___llmod@divisor,f
  3806  060D  0DA1               	rlf	___llmod@divisor+1,f
  3807  060E  0DA2               	rlf	___llmod@divisor+2,f
  3808  060F  0DA3               	rlf	___llmod@divisor+3,f
  3809  0610  2E08               	goto	L12
  3810  0611                     l5440:	
  3811  0611  0823               	movf	___llmod@divisor+3,w
  3812  0612  0227               	subwf	___llmod@dividend+3,w
  3813  0613  1D03               	skipz
  3814  0614  2E1F               	goto	u2485
  3815  0615  0822               	movf	___llmod@divisor+2,w
  3816  0616  0226               	subwf	___llmod@dividend+2,w
  3817  0617  1D03               	skipz
  3818  0618  2E1F               	goto	u2485
  3819  0619  0821               	movf	___llmod@divisor+1,w
  3820  061A  0225               	subwf	___llmod@dividend+1,w
  3821  061B  1D03               	skipz
  3822  061C  2E1F               	goto	u2485
  3823  061D  0820               	movf	___llmod@divisor,w
  3824  061E  0224               	subwf	___llmod@dividend,w
  3825  061F                     u2485:	
  3826  061F  1C03               	skipc
  3827  0620  2E30               	goto	L13
  3828  0621  0820               	movf	___llmod@divisor,w
  3829  0622  02A4               	subwf	___llmod@dividend,f
  3830  0623  0821               	movf	___llmod@divisor+1,w
  3831  0624  1C03               	skipc
  3832  0625  0F21               	incfsz	___llmod@divisor+1,w
  3833  0626  02A5               	subwf	___llmod@dividend+1,f
  3834  0627  0822               	movf	___llmod@divisor+2,w
  3835  0628  1C03               	skipc
  3836  0629  0F22               	incfsz	___llmod@divisor+2,w
  3837  062A  02A6               	subwf	___llmod@dividend+2,f
  3838  062B  0823               	movf	___llmod@divisor+3,w
  3839  062C  1C03               	skipc
  3840  062D  0F23               	incfsz	___llmod@divisor+3,w
  3841  062E  02A7               	subwf	___llmod@dividend+3,f
  3842  062F  1003               	clrc
  3843  0630                     L13:	
  3844  0630  0CA3               	rrf	___llmod@divisor+3,f
  3845  0631  0CA2               	rrf	___llmod@divisor+2,f
  3846  0632  0CA1               	rrf	___llmod@divisor+1,f
  3847  0633  0CA0               	rrf	___llmod@divisor,f
  3848  0634  0BFD               	decfsz	___llmod@counter,f
  3849  0635  2E11               	goto	l5440
  3850  0636                     l5448:	
  3851  0636  0827               	movf	___llmod@dividend+3,w
  3852  0637  00A3               	movwf	?___llmod+3
  3853  0638  0826               	movf	___llmod@dividend+2,w
  3854  0639  00A2               	movwf	?___llmod+2
  3855  063A  0825               	movf	___llmod@dividend+1,w
  3856  063B  00A1               	movwf	?___llmod+1
  3857  063C  0824               	movf	___llmod@dividend,w
  3858  063D  00A0               	movwf	?___llmod
  3859  063E  0008               	return
  3860  063F                     __end_of___llmod:	
  3861  063F                     __ptext735:	
  3862 ;; =============== function ___lldiv ends ============
  3863                           
  3864                           
  3865 ;; *************** function ___ftge *****************
  3866 ;; Defined at:
  3867 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftge.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  ff1             3    0[COMMON] float 
  3870 ;;  ff2             3    3[COMMON] float 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;		None               void
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0
  3877 ;; Tracked objects:
  3878 ;;		On entry : 60/20
  3879 ;;		On exit  : 60/20
  3880 ;;		Unchanged: FFF9F/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3882 ;;      Params:         6       0       0       0       0
  3883 ;;      Locals:         0       0       0       0       0
  3884 ;;      Temps:          0       0       0       0       0
  3885 ;;      Totals:         6       0       0       0       0
  3886 ;;Total ram usage:        6 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_sprintf
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894  063F                     ___ftge:	
  3895                           
  3896                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3897  063F  1FF2               	btfss	___ftge@ff1+2,7
  3898  0640  2E4E               	goto	l5464
  3899  0641  0870               	movf	___ftge@ff1,w
  3900  0642  3C00               	sublw	0
  3901  0643  00F0               	movwf	___ftge@ff1
  3902  0644  0871               	movf	___ftge@ff1+1,w
  3903  0645  1C03               	skipc
  3904  0646  0F71               	incfsz	___ftge@ff1+1,w
  3905  0647  3C00               	sublw	0
  3906  0648  00F1               	movwf	___ftge@ff1+1
  3907  0649  0872               	movf	___ftge@ff1+2,w
  3908  064A  1C03               	skipc
  3909  064B  0F72               	incfsz	___ftge@ff1+2,w
  3910  064C  3C80               	sublw	128
  3911  064D  00F2               	movwf	___ftge@ff1+2
  3912  064E                     l5464:	
  3913  064E  1FF5               	btfss	___ftge@ff2+2,7
  3914  064F  2E5D               	goto	l5468
  3915  0650  0873               	movf	___ftge@ff2,w
  3916  0651  3C00               	sublw	0
  3917  0652  00F3               	movwf	___ftge@ff2
  3918  0653  0874               	movf	___ftge@ff2+1,w
  3919  0654  1C03               	skipc
  3920  0655  0F74               	incfsz	___ftge@ff2+1,w
  3921  0656  3C00               	sublw	0
  3922  0657  00F4               	movwf	___ftge@ff2+1
  3923  0658  0875               	movf	___ftge@ff2+2,w
  3924  0659  1C03               	skipc
  3925  065A  0F75               	incfsz	___ftge@ff2+2,w
  3926  065B  3C80               	sublw	128
  3927  065C  00F5               	movwf	___ftge@ff2+2
  3928  065D                     l5468:	
  3929  065D  3080               	movlw	128
  3930  065E  06F2               	xorwf	___ftge@ff1+2,f
  3931  065F  06F5               	xorwf	___ftge@ff2+2,f
  3932  0660  0875               	movf	___ftge@ff2+2,w
  3933  0661  0272               	subwf	___ftge@ff1+2,w
  3934  0662  1D03               	skipz
  3935  0663  0008               	return
  3936  0664  0874               	movf	___ftge@ff2+1,w
  3937  0665  0271               	subwf	___ftge@ff1+1,w
  3938  0666  1D03               	skipz
  3939  0667  0008               	return
  3940  0668  0873               	movf	___ftge@ff2,w
  3941  0669  0270               	subwf	___ftge@ff1,w
  3942  066A  0008               	return
  3943  066B                     __end_of___ftge:	
  3944  066B                     __ptext747:	
  3945 ;; =============== function __tdiv_to_l_ ends ============
  3946                           
  3947                           
  3948 ;; *************** function _isdigit *****************
  3949 ;; Defined at:
  3950 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\isdigit.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  c               1    wreg     unsigned char 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  c               1    1[COMMON] unsigned char 
  3955 ;; Return value:  Size  Location     Type
  3956 ;;		None               void
  3957 ;; Registers used:
  3958 ;;		wreg, status,2, status,0
  3959 ;; Tracked objects:
  3960 ;;		On entry : 60/0
  3961 ;;		On exit  : 60/0
  3962 ;;		Unchanged: FFF9F/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3964 ;;      Params:         0       0       0       0       0
  3965 ;;      Locals:         2       0       0       0       0
  3966 ;;      Temps:          0       0       0       0       0
  3967 ;;      Totals:         2       0       0       0       0
  3968 ;;Total ram usage:        2 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		_sprintf
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976  066B                     _isdigit:	
  3977                           
  3978                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3979                           ;isdigit@c stored from wreg
  3980  066B  00F1               	movwf	isdigit@c
  3981  066C  303A               	movlw	58
  3982  066D  01F0               	clrf	_isdigit$2459
  3983  066E  0271               	subwf	isdigit@c,w
  3984  066F  1803               	skipnc
  3985  0670  2E77               	goto	l5150
  3986  0671  3030               	movlw	48
  3987  0672  0271               	subwf	isdigit@c,w
  3988  0673  1C03               	skipc
  3989  0674  2E77               	goto	l5150
  3990  0675  01F0               	clrf	_isdigit$2459
  3991  0676  0AF0               	incf	_isdigit$2459,f
  3992  0677                     l5150:	
  3993  0677  0C70               	rrf	_isdigit$2459,w
  3994  0678  0008               	return
  3995  0679                     __end_of_isdigit:	
  3996  0679                     __ptext743:	
  3997 ;; =============== function ___lbdiv ends ============
  3998                           
  3999                           
  4000 ;; *************** function ___wmul *****************
  4001 ;; Defined at:
  4002 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  multiplier      2    0[COMMON] unsigned int 
  4005 ;;  multiplicand    2    2[COMMON] unsigned int 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  product         2    4[COMMON] unsigned int 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  2    0[COMMON] unsigned int 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0
  4012 ;; Tracked objects:
  4013 ;;		On entry : 60/20
  4014 ;;		On exit  : 60/20
  4015 ;;		Unchanged: FFF9F/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4017 ;;      Params:         4       0       0       0       0
  4018 ;;      Locals:         2       0       0       0       0
  4019 ;;      Temps:          0       0       0       0       0
  4020 ;;      Totals:         6       0       0       0       0
  4021 ;;Total ram usage:        6 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_fround
  4027 ;;		_scale
  4028 ;;		_sprintf
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031  0679                     ___wmul:	
  4032                           
  4033                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4034  0679  01F4               	clrf	___wmul@product
  4035  067A  01F5               	clrf	___wmul@product+1
  4036  067B                     l5266:	
  4037  067B  1C70               	btfss	___wmul@multiplier,0
  4038  067C  2E83               	goto	l5270
  4039  067D  0872               	movf	___wmul@multiplicand,w
  4040  067E  07F4               	addwf	___wmul@product,f
  4041  067F  1803               	skipnc
  4042  0680  0AF5               	incf	___wmul@product+1,f
  4043  0681  0873               	movf	___wmul@multiplicand+1,w
  4044  0682  07F5               	addwf	___wmul@product+1,f
  4045  0683                     l5270:	
  4046  0683  1003               	clrc
  4047  0684  0DF2               	rlf	___wmul@multiplicand,f
  4048  0685  0DF3               	rlf	___wmul@multiplicand+1,f
  4049  0686  1003               	clrc
  4050  0687  0CF1               	rrf	___wmul@multiplier+1,f
  4051  0688  0CF0               	rrf	___wmul@multiplier,f
  4052  0689  0871               	movf	___wmul@multiplier+1,w
  4053  068A  0470               	iorwf	___wmul@multiplier,w
  4054  068B  1D03               	skipz
  4055  068C  2E7B               	goto	l5266
  4056  068D  0875               	movf	___wmul@product+1,w
  4057  068E  00F1               	movwf	?___wmul+1
  4058  068F  0874               	movf	___wmul@product,w
  4059  0690  00F0               	movwf	?___wmul
  4060  0691  0008               	return
  4061  0692                     __end_of___wmul:	
  4062  0692                     __ptext739:	
  4063 ;; =============== function ___awdiv ends ============
  4064                           
  4065                           
  4066 ;; *************** function ___fttol *****************
  4067 ;; Defined at:
  4068 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fttol.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;  f1              3    0[BANK0 ] float 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  lval            4    8[BANK0 ] unsigned long 
  4073 ;;  exp1            1   12[BANK0 ] unsigned char 
  4074 ;;  sign1           1    7[BANK0 ] unsigned char 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  4    0[BANK0 ] long 
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0
  4079 ;; Tracked objects:
  4080 ;;		On entry : 60/0
  4081 ;;		On exit  : 60/0
  4082 ;;		Unchanged: FFF9F/0
  4083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4084 ;;      Params:         0       4       0       0       0
  4085 ;;      Locals:         0       6       0       0       0
  4086 ;;      Temps:          0       3       0       0       0
  4087 ;;      Totals:         0      13       0       0       0
  4088 ;;Total ram usage:       13 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_sprintf
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096  0692                     ___fttol:	
  4097                           
  4098                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4099  0692  27E2  120A  118A   	fcall	PL29	;call to abstracted procedure
  4100  0695  1003               	clrc
  4101  0696  0D25               	rlf	??___fttol+1,w
  4102  0697  0D26               	rlf	??___fttol+2,w
  4103  0698  00AC               	movwf	___fttol@exp1
  4104  0699  08AC               	movf	___fttol@exp1,f
  4105  069A  1D03               	skipz
  4106  069B  2EA1               	goto	l5354
  4107  069C                     l5352:	
  4108  069C  01A0               	clrf	?___fttol
  4109  069D  01A1               	clrf	?___fttol+1
  4110  069E  01A2               	clrf	?___fttol+2
  4111  069F  01A3               	clrf	?___fttol+3
  4112  06A0  0008               	return
  4113  06A1                     l5354:	
  4114  06A1  27E2  120A  118A   	fcall	PL29	;call to abstracted procedure
  4115  06A4  3017               	movlw	23
  4116  06A5                     u2325:	
  4117  06A5  1003               	clrc
  4118  06A6  0CA6               	rrf	??___fttol+2,f
  4119  06A7  0CA5               	rrf	??___fttol+1,f
  4120  06A8  0CA4               	rrf	??___fttol,f
  4121  06A9  3EFF               	addlw	-1
  4122  06AA  1D03               	skipz
  4123  06AB  2EA5               	goto	u2325
  4124  06AC  0824               	movf	??___fttol,w
  4125  06AD  00A7               	movwf	___fttol@sign1
  4126  06AE  17A1               	bsf	___fttol@f1+1,7
  4127  06AF  01A2               	clrf	___fttol@f1+2
  4128  06B0  0820               	movf	___fttol@f1,w
  4129  06B1  00A8               	movwf	___fttol@lval
  4130  06B2  0821               	movf	___fttol@f1+1,w
  4131  06B3  00A9               	movwf	___fttol@lval+1
  4132  06B4  0822               	movf	___fttol@f1+2,w
  4133  06B5  00AA               	movwf	___fttol@lval+2
  4134  06B6  308E               	movlw	142
  4135  06B7  01AB               	clrf	___fttol@lval+3
  4136  06B8  02AC               	subwf	___fttol@exp1,f
  4137  06B9  1FAC               	btfss	___fttol@exp1,7
  4138  06BA  2EC8               	goto	l5374
  4139  06BB  082C               	movf	___fttol@exp1,w
  4140  06BC  3A80               	xorlw	128
  4141  06BD  3E8F               	addlw	143
  4142  06BE  1C03               	btfss	3,0
  4143  06BF  2E9C               	goto	l5352
  4144  06C0                     l5370:	
  4145  06C0  1003               	clrc
  4146  06C1  0CAB               	rrf	___fttol@lval+3,f
  4147  06C2  0CAA               	rrf	___fttol@lval+2,f
  4148  06C3  0CA9               	rrf	___fttol@lval+1,f
  4149  06C4  0CA8               	rrf	___fttol@lval,f
  4150  06C5  0FAC               	incfsz	___fttol@exp1,f
  4151  06C6  2EC0               	goto	l5370
  4152  06C7  2ED6               	goto	l5380
  4153  06C8                     l5374:	
  4154  06C8  3018               	movlw	24
  4155  06C9  022C               	subwf	___fttol@exp1,w
  4156  06CA  1803               	btfsc	3,0
  4157  06CB  2E9C               	goto	l5352
  4158  06CC                     l2429:	
  4159  06CC  08AC               	movf	___fttol@exp1,f
  4160  06CD  1903               	btfsc	3,2
  4161  06CE  2ED6               	goto	l5380
  4162  06CF  1003               	clrc
  4163  06D0  0DA8               	rlf	___fttol@lval,f
  4164  06D1  0DA9               	rlf	___fttol@lval+1,f
  4165  06D2  0DAA               	rlf	___fttol@lval+2,f
  4166  06D3  0DAB               	rlf	___fttol@lval+3,f
  4167  06D4  03AC               	decf	___fttol@exp1,f
  4168  06D5  2ECC               	goto	l2429
  4169  06D6                     l5380:	
  4170  06D6  0827               	movf	___fttol@sign1,w
  4171  06D7  1903               	btfsc	3,2
  4172  06D8  2EE4               	goto	l5384
  4173  06D9  09A8               	comf	___fttol@lval,f
  4174  06DA  09A9               	comf	___fttol@lval+1,f
  4175  06DB  09AA               	comf	___fttol@lval+2,f
  4176  06DC  09AB               	comf	___fttol@lval+3,f
  4177  06DD  0AA8               	incf	___fttol@lval,f
  4178  06DE  1903               	skipnz
  4179  06DF  0AA9               	incf	___fttol@lval+1,f
  4180  06E0  1903               	skipnz
  4181  06E1  0AAA               	incf	___fttol@lval+2,f
  4182  06E2  1903               	skipnz
  4183  06E3  0AAB               	incf	___fttol@lval+3,f
  4184  06E4                     l5384:	
  4185  06E4  082B               	movf	___fttol@lval+3,w
  4186  06E5  00A3               	movwf	?___fttol+3
  4187  06E6  082A               	movf	___fttol@lval+2,w
  4188  06E7  00A2               	movwf	?___fttol+2
  4189  06E8  0829               	movf	___fttol@lval+1,w
  4190  06E9  00A1               	movwf	?___fttol+1
  4191  06EA  0828               	movf	___fttol@lval,w
  4192  06EB  00A0               	movwf	?___fttol
  4193  06EC  0008               	return
  4194  06ED                     __end_of___fttol:	
  4195  06ED                     __ptext734:	
  4196 ;; =============== function ___awmod ends ============
  4197                           
  4198                           
  4199 ;; *************** function ___lldiv *****************
  4200 ;; Defined at:
  4201 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  divisor         4    0[COMMON] unsigned long 
  4204 ;;  dividend        4    4[COMMON] unsigned long 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  quotient        4    8[COMMON] unsigned long 
  4207 ;;  counter         1   12[COMMON] unsigned char 
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  4    0[COMMON] unsigned long 
  4210 ;; Registers used:
  4211 ;;		wreg, status,2, status,0
  4212 ;; Tracked objects:
  4213 ;;		On entry : 60/20
  4214 ;;		On exit  : 60/20
  4215 ;;		Unchanged: FFF9F/0
  4216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4217 ;;      Params:         8       0       0       0       0
  4218 ;;      Locals:         5       0       0       0       0
  4219 ;;      Temps:          0       0       0       0       0
  4220 ;;      Totals:        13       0       0       0       0
  4221 ;;Total ram usage:       13 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_sprintf
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229  06ED                     ___lldiv:	
  4230                           
  4231                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4232  06ED  01F8               	clrf	___lldiv@quotient
  4233  06EE  01F9               	clrf	___lldiv@quotient+1
  4234  06EF  01FA               	clrf	___lldiv@quotient+2
  4235  06F0  01FB               	clrf	___lldiv@quotient+3
  4236  06F1  0873               	movf	___lldiv@divisor+3,w
  4237  06F2  0472               	iorwf	___lldiv@divisor+2,w
  4238  06F3  0471               	iorwf	___lldiv@divisor+1,w
  4239  06F4  0470               	iorwf	___lldiv@divisor,w
  4240  06F5  1903               	skipnz
  4241  06F6  2F2C               	goto	l5502
  4242  06F7  01FC               	clrf	___lldiv@counter
  4243  06F8                     L9:	
  4244  06F8  0AFC               	incf	___lldiv@counter,f
  4245  06F9  1BF3               	btfsc	___lldiv@divisor+3,7
  4246  06FA  2F01               	goto	l5490
  4247  06FB  1003               	clrc
  4248  06FC  0DF0               	rlf	___lldiv@divisor,f
  4249  06FD  0DF1               	rlf	___lldiv@divisor+1,f
  4250  06FE  0DF2               	rlf	___lldiv@divisor+2,f
  4251  06FF  0DF3               	rlf	___lldiv@divisor+3,f
  4252  0700  2EF8               	goto	L9
  4253  0701                     l5490:	
  4254  0701  1003               	clrc
  4255  0702  0DF8               	rlf	___lldiv@quotient,f
  4256  0703  0DF9               	rlf	___lldiv@quotient+1,f
  4257  0704  0DFA               	rlf	___lldiv@quotient+2,f
  4258  0705  0DFB               	rlf	___lldiv@quotient+3,f
  4259  0706  0873               	movf	___lldiv@divisor+3,w
  4260  0707  0277               	subwf	___lldiv@dividend+3,w
  4261  0708  1D03               	skipz
  4262  0709  2F14               	goto	u2565
  4263  070A  0872               	movf	___lldiv@divisor+2,w
  4264  070B  0276               	subwf	___lldiv@dividend+2,w
  4265  070C  1D03               	skipz
  4266  070D  2F14               	goto	u2565
  4267  070E  0871               	movf	___lldiv@divisor+1,w
  4268  070F  0275               	subwf	___lldiv@dividend+1,w
  4269  0710  1D03               	skipz
  4270  0711  2F14               	goto	u2565
  4271  0712  0870               	movf	___lldiv@divisor,w
  4272  0713  0274               	subwf	___lldiv@dividend,w
  4273  0714                     u2565:	
  4274  0714  1C03               	skipc
  4275  0715  2F26               	goto	L10
  4276  0716  0870               	movf	___lldiv@divisor,w
  4277  0717  02F4               	subwf	___lldiv@dividend,f
  4278  0718  0871               	movf	___lldiv@divisor+1,w
  4279  0719  1C03               	skipc
  4280  071A  0F71               	incfsz	___lldiv@divisor+1,w
  4281  071B  02F5               	subwf	___lldiv@dividend+1,f
  4282  071C  0872               	movf	___lldiv@divisor+2,w
  4283  071D  1C03               	skipc
  4284  071E  0F72               	incfsz	___lldiv@divisor+2,w
  4285  071F  02F6               	subwf	___lldiv@dividend+2,f
  4286  0720  0873               	movf	___lldiv@divisor+3,w
  4287  0721  1C03               	skipc
  4288  0722  0F73               	incfsz	___lldiv@divisor+3,w
  4289  0723  02F7               	subwf	___lldiv@dividend+3,f
  4290  0724  1478               	bsf	___lldiv@quotient,0
  4291  0725  1003               	clrc
  4292  0726                     L10:	
  4293  0726  0CF3               	rrf	___lldiv@divisor+3,f
  4294  0727  0CF2               	rrf	___lldiv@divisor+2,f
  4295  0728  0CF1               	rrf	___lldiv@divisor+1,f
  4296  0729  0CF0               	rrf	___lldiv@divisor,f
  4297  072A  0BFC               	decfsz	___lldiv@counter,f
  4298  072B  2F01               	goto	l5490
  4299  072C                     l5502:	
  4300  072C  087B               	movf	___lldiv@quotient+3,w
  4301  072D  00F3               	movwf	?___lldiv+3
  4302  072E  087A               	movf	___lldiv@quotient+2,w
  4303  072F  00F2               	movwf	?___lldiv+2
  4304  0730  0879               	movf	___lldiv@quotient+1,w
  4305  0731  00F1               	movwf	?___lldiv+1
  4306  0732  0878               	movf	___lldiv@quotient,w
  4307  0733  00F0               	movwf	?___lldiv
  4308  0734  0008               	return
  4309  0735                     __end_of___lldiv:	
  4310  0735                     __ptext736:	
  4311 ;; =============== function ___ftge ends ============
  4312                           
  4313                           
  4314 ;; *************** function ___ftneg *****************
  4315 ;; Defined at:
  4316 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftneg.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;  f1              3    0[COMMON] float 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;		None
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  3    0[COMMON] float 
  4323 ;; Registers used:
  4324 ;;		wreg
  4325 ;; Tracked objects:
  4326 ;;		On entry : 160/20
  4327 ;;		On exit  : 160/20
  4328 ;;		Unchanged: FFE9F/0
  4329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4330 ;;      Params:         3       0       0       0       0
  4331 ;;      Locals:         0       0       0       0       0
  4332 ;;      Temps:          0       0       0       0       0
  4333 ;;      Totals:         3       0       0       0       0
  4334 ;;Total ram usage:        3 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_sprintf
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342  0735                     ___ftneg:	
  4343                           
  4344                           ; Regs used in ___ftneg: [wreg]
  4345  0735  0872               	movf	___ftneg@f1+2,w
  4346  0736  0471               	iorwf	___ftneg@f1+1,w
  4347  0737  0470               	iorwf	___ftneg@f1,w
  4348  0738  1903               	skipnz
  4349  0739  0008               	return
  4350  073A  3080               	movlw	128
  4351  073B  06F2               	xorwf	___ftneg@f1+2,f
  4352  073C  0008               	return
  4353  073D                     __end_of___ftneg:	
  4354  073D                     __ptext722:	
  4355 ;; =============== function _lcd_clear ends ============
  4356                           
  4357                           
  4358 ;; *************** function ___ftsub *****************
  4359 ;; Defined at:
  4360 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftsub.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;  f2              3   40[BANK0 ] float 
  4363 ;;  f1              3   43[BANK0 ] float 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;		None
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  3   40[BANK0 ] float 
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0, pclath, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 60/0
  4372 ;;		On exit  : 60/0
  4373 ;;		Unchanged: FFF9F/0
  4374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4375 ;;      Params:         0       6       0       0       0
  4376 ;;      Locals:         0       0       0       0       0
  4377 ;;      Temps:          0       0       0       0       0
  4378 ;;      Totals:         0       6       0       0       0
  4379 ;;Total ram usage:        6 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    2
  4382 ;; This function calls:
  4383 ;;		___ftadd
  4384 ;; This function is called by:
  4385 ;;		_sprintf
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388  073D                     ___ftsub:	
  4389                           
  4390                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4391  073D  3080               	movlw	128
  4392  073E  06CA               	xorwf	___ftsub@f2+2,f
  4393  073F  084B               	movf	___ftsub@f1,w
  4394  0740  00BC               	movwf	?___ftadd
  4395  0741  084C               	movf	___ftsub@f1+1,w
  4396  0742  00BD               	movwf	?___ftadd+1
  4397  0743  084D               	movf	___ftsub@f1+2,w
  4398  0744  00BE               	movwf	?___ftadd+2
  4399  0745  0848               	movf	___ftsub@f2,w
  4400  0746  00BF               	movwf	?___ftadd+3
  4401  0747  0849               	movf	___ftsub@f2+1,w
  4402  0748  00C0               	movwf	?___ftadd+4
  4403  0749  084A               	movf	___ftsub@f2+2,w
  4404  074A  00C1               	movwf	?___ftadd+5
  4405  074B  160A  118A  273E   	fcall	___ftadd
  4406  074E  083C               	movf	?___ftadd,w
  4407  074F  00C8               	movwf	?___ftsub
  4408  0750  083D               	movf	?___ftadd+1,w
  4409  0751  00C9               	movwf	?___ftsub+1
  4410  0752  083E               	movf	?___ftadd+2,w
  4411  0753  00CA               	movwf	?___ftsub+2
  4412  0754  0008               	return
  4413  0755                     __end_of___ftsub:	
  4414  0755                     PL3:	
  4415  0755  0834               	movf	sprintf@c^(0+128),w
  4416  0756  1283               	bcf	3,5	;RP0=0, select bank0
  4417  0757  00D6               	movwf	??_sprintf
  4418  0758  1003               	clrc
  4419  0759  0DD6               	rlf	??_sprintf,f
  4420  075A  1003               	clrc
  4421  075B  0D56               	rlf	??_sprintf,w
  4422  075C  3E4F               	addlw	low (_dpowers-__stringbase)
  4423  075D  0084               	movwf	4
  4424  075E  0008               	return
  4425  075F                     PL4:	
  4426  075F  300A               	movlw	10
  4427  0760  1283               	bcf	3,5	;RP0=0, select bank0
  4428  0761  00A0               	movwf	?___llmod
  4429  0762  01A1               	clrf	?___llmod+1
  4430  0763  01A2               	clrf	?___llmod+2
  4431  0764  01A3               	clrf	?___llmod+3
  4432  0765  1683               	bsf	3,5	;RP0=1, select bank1
  4433  0766  0008               	return
  4434  0767                     PL5:	
  4435  0767  00F3               	movwf	?___lldiv+3
  4436  0768  1683               	bsf	3,5	;RP0=1, select bank1
  4437  0769  0838               	movf	(sprintf@_val+3)^(0+128),w
  4438  076A  00F7               	movwf	?___lldiv+7
  4439  076B  0837               	movf	(sprintf@_val+2)^(0+128),w
  4440  076C  00F6               	movwf	?___lldiv+6
  4441  076D  0836               	movf	(sprintf@_val+1)^(0+128),w
  4442  076E  00F5               	movwf	?___lldiv+5
  4443  076F  0835               	movf	sprintf@_val^(0+128),w
  4444  0770  00F4               	movwf	?___lldiv+4
  4445  0771  0008               	return
  4446  0772                     PL6:	
  4447  0772  0873               	movf	?___lldiv+3,w
  4448  0773  1283               	bcf	3,5	;RP0=0, select bank0
  4449  0774  00A7               	movwf	?___llmod+7
  4450  0775  0872               	movf	?___lldiv+2,w
  4451  0776  00A6               	movwf	?___llmod+6
  4452  0777  0871               	movf	?___lldiv+1,w
  4453  0778  00A5               	movwf	?___llmod+5
  4454  0779  0870               	movf	?___lldiv,w
  4455  077A  00A4               	movwf	?___llmod+4
  4456  077B  0008               	return
  4457  077C                     PL7:	
  4458  077C  0823               	movf	?___fttol+3,w
  4459  077D  1683               	bsf	3,5	;RP0=1, select bank1
  4460  077E  00B8               	movwf	(sprintf@_val+3)^(0+128)
  4461  077F  1283               	bcf	3,5	;RP0=0, select bank0
  4462  0780  0822               	movf	?___fttol+2,w
  4463  0781  1683               	bsf	3,5	;RP0=1, select bank1
  4464  0782  00B7               	movwf	(sprintf@_val+2)^(0+128)
  4465  0783  1283               	bcf	3,5	;RP0=0, select bank0
  4466  0784  0821               	movf	?___fttol+1,w
  4467  0785  1683               	bsf	3,5	;RP0=1, select bank1
  4468  0786  00B6               	movwf	(sprintf@_val+1)^(0+128)
  4469  0787  1283               	bcf	3,5	;RP0=0, select bank0
  4470  0788  0820               	movf	?___fttol,w
  4471  0789  0008               	return
  4472  078A                     PL12:	
  4473  078A  083C               	movf	?_scale,w
  4474  078B  1683               	bsf	3,5	;RP0=1, select bank1
  4475  078C  00A5               	movwf	sprintf@integ^(0+128)
  4476  078D  1283               	bcf	3,5	;RP0=0, select bank0
  4477  078E  083D               	movf	?_scale+1,w
  4478  078F  1683               	bsf	3,5	;RP0=1, select bank1
  4479  0790  00A6               	movwf	(sprintf@integ+1)^(0+128)
  4480  0791  1283               	bcf	3,5	;RP0=0, select bank0
  4481  0792  083E               	movf	?_scale+2,w
  4482  0793  1683               	bsf	3,5	;RP0=1, select bank1
  4483  0794  00A7               	movwf	(sprintf@integ+2)^(0+128)
  4484  0795  082E               	movf	sprintf@fval^(0+128),w
  4485  0796  0008               	return
  4486  0797                     PL13:	
  4487  0797  0770               	addwf	?___wmul,w
  4488  0798  00D6               	movwf	??_sprintf
  4489  0799  3000               	movlw	0
  4490  079A  1803               	skipnc
  4491  079B  3001               	movlw	1
  4492  079C  0771               	addwf	?___wmul+1,w
  4493  079D  00D7               	movwf	??_sprintf+1
  4494  079E  0856               	movf	??_sprintf,w
  4495  079F  3ED0               	addlw	208
  4496  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  4497  07A1  0008               	return
  4498  07A2                     PL14:	
  4499  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  4500  07A3  00A0               	movwf	?___fttol
  4501  07A4  1683               	bsf	3,5	;RP0=1, select bank1
  4502  07A5  082F               	movf	(sprintf@fval+1)^(0+128),w
  4503  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  4504  07A7  00A1               	movwf	?___fttol+1
  4505  07A8  1683               	bsf	3,5	;RP0=1, select bank1
  4506  07A9  0830               	movf	(sprintf@fval+2)^(0+128),w
  4507  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  4508  07AB  00A2               	movwf	?___fttol+2
  4509  07AC  0008               	return
  4510  07AD                     PL15:	
  4511  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  4512  07AE  00AD               	movwf	?___ftmul
  4513  07AF  1683               	bsf	3,5	;RP0=1, select bank1
  4514  07B0  082F               	movf	(sprintf@fval+1)^(0+128),w
  4515  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  4516  07B2  00AE               	movwf	?___ftmul+1
  4517  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  4518  07B4  0830               	movf	(sprintf@fval+2)^(0+128),w
  4519  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  4520  07B6  00AF               	movwf	?___ftmul+2
  4521  07B7  0008               	return
  4522  07B8                     PL19:	
  4523  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  4524  07B9  00D6               	movwf	??_sprintf
  4525  07BA  01D7               	clrf	??_sprintf+1
  4526  07BB  1BD6               	btfsc	??_sprintf,7
  4527  07BC  03D7               	decf	??_sprintf+1,f
  4528  07BD  0857               	movf	??_sprintf+1,w
  4529  07BE  3A80               	xorlw	128
  4530  07BF  00D8               	movwf	??_sprintf+2
  4531  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  4532  07C1  0008               	return
  4533  07C2                     PL20:	
  4534  07C2  0820               	movf	?___llmod,w
  4535  07C3  3E30               	addlw	48
  4536  07C4  00D7               	movwf	??_sprintf+1
  4537  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  4538  07C6  0831               	movf	sprintf@sp^(0+128),w
  4539  07C7  0084               	movwf	4
  4540  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  4541  07C9  0857               	movf	??_sprintf+1,w
  4542  07CA  0008               	return
  4543  07CB                     PL21:	
  4544  07CB  1303               	bcf	3,6	;RP1=0, select bank1
  4545  07CC  0834               	movf	sprintf@c^(0+128),w
  4546  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  4547  07CE  00D6               	movwf	??_sprintf
  4548  07CF  01D7               	clrf	??_sprintf+1
  4549  07D0  1BD6               	btfsc	??_sprintf,7
  4550  07D1  03D7               	decf	??_sprintf+1,f
  4551  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  4552  07D3  0008               	return
  4553  07D4                     PL22:	
  4554  07D4  0825               	movf	sprintf@integ^(0+128),w
  4555  07D5  00F0               	movwf	?___ftge
  4556  07D6  0826               	movf	(sprintf@integ+1)^(0+128),w
  4557  07D7  00F1               	movwf	?___ftge+1
  4558  07D8  0827               	movf	(sprintf@integ+2)^(0+128),w
  4559  07D9  00F2               	movwf	?___ftge+2
  4560  07DA  0008               	return
  4561  07DB                     PL28:	
  4562  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  4563  07DC  0857               	movf	??_sprintf+1,w
  4564  07DD  1803               	skipnc
  4565  07DE  3E01               	addlw	1
  4566  07DF  3EFF               	addlw	255
  4567  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  4568  07E1  0008               	return
  4569  07E2                     PL29:	
  4570  07E2  0820               	movf	___fttol@f1,w
  4571  07E3  00A4               	movwf	??___fttol
  4572  07E4  0821               	movf	___fttol@f1+1,w
  4573  07E5  00A5               	movwf	??___fttol+1
  4574  07E6  0822               	movf	___fttol@f1+2,w
  4575  07E7  00A6               	movwf	??___fttol+2
  4576  07E8  0008               	return
  4577  07E9                     PL31:	
  4578  07E9  0084               	movwf	4
  4579  07EA  3030               	movlw	48
  4580  07EB  1383               	bcf	3,7	;select IRP bank0
  4581  07EC  0080               	movwf	0
  4582  07ED  30FF               	movlw	-1
  4583  07EE  0AB1               	incf	sprintf@sp^(0+128),f
  4584  07EF  0008               	return
  4585  07F0                     PL32:	
  4586  07F0  0800               	movf	0,w
  4587  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  4588  07F2  00D6               	movwf	??_sprintf
  4589  07F3  0A84               	incf	4,f
  4590  07F4  0800               	movf	0,w
  4591  07F5  00D7               	movwf	??_sprintf+1
  4592  07F6  0008               	return
  4593  07F7                     PL33:	
  4594  07F7  0084               	movwf	4
  4595  07F8  3020               	movlw	32
  4596  07F9  1383               	bcf	3,7	;select IRP bank0
  4597  07FA  0080               	movwf	0
  4598  07FB  0AB1               	incf	sprintf@sp^(0+128),f
  4599  07FC  0008               	return
  4600  07FD                     PL34:	
  4601  07FD  1683               	bsf	3,5	;RP0=1, select bank1
  4602  07FE  1303               	bcf	3,6	;RP1=0, select bank1
  4603  07FF  0008               	return
  4604                           
  4605                           	psect	text719
  4606  15BE                     __ptext719:	
  4607 ;; =============== function _sprintf ends ============
  4608                           
  4609                           
  4610 ;; *************** function _lcd_goto *****************
  4611 ;; Defined at:
  4612 ;;		line 228 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  pos             1    wreg     unsigned char 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  pos             1    5[COMMON] unsigned char 
  4617 ;; Return value:  Size  Location     Type
  4618 ;;		None               void
  4619 ;; Registers used:
  4620 ;;		wreg, status,2, status,0, pclath, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 60/0
  4624 ;;		Unchanged: FFF9F/0
  4625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4626 ;;      Params:         0       0       0       0       0
  4627 ;;      Locals:         1       0       0       0       0
  4628 ;;      Temps:          0       0       0       0       0
  4629 ;;      Totals:         1       0       0       0       0
  4630 ;;Total ram usage:        1 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    3
  4633 ;; This function calls:
  4634 ;;		_lcd_write
  4635 ;; This function is called by:
  4636 ;;		_main
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639  15BE                     _lcd_goto:	
  4640                           
  4641                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  4642                           ;lcd_goto@pos stored from wreg
  4643  15BE  00F5               	movwf	lcd_goto@pos
  4644                           
  4645                           ;eeprom_i2c.c: 229: RA7=0;
  4646  15BF  1283               	bcf	3,5	;RP0=0, select bank0
  4647  15C0  1303               	bcf	3,6	;RP1=0, select bank0
  4648  15C1  1385               	bcf	5,7
  4649                           
  4650                           ;eeprom_i2c.c: 230: lcd_write(0x80+pos);
  4651  15C2  0875               	movf	lcd_goto@pos,w
  4652  15C3  3E80               	addlw	128
  4653  15C4  2E4E               	ljmp	_lcd_write
  4654  15C5                     __end_of_lcd_goto:	
  4655  15C5                     __ptext726:	
  4656 ;; =============== function _lcd_write ends ============
  4657                           
  4658                           
  4659 ;; *************** function _I2C_EEOUT *****************
  4660 ;; Defined at:
  4661 ;;		line 168 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  address1        1    wreg     unsigned char 
  4664 ;;  address2        1    4[COMMON] unsigned char 
  4665 ;;  data            1    5[COMMON] unsigned char 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  address1        1    6[COMMON] unsigned char 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;		None               void
  4670 ;; Registers used:
  4671 ;;		wreg, status,2, status,0, pclath, cstack
  4672 ;; Tracked objects:
  4673 ;;		On entry : 160/20
  4674 ;;		On exit  : 100/0
  4675 ;;		Unchanged: FFE9F/0
  4676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4677 ;;      Params:         2       0       0       0       0
  4678 ;;      Locals:         1       0       0       0       0
  4679 ;;      Temps:          0       0       0       0       0
  4680 ;;      Totals:         3       0       0       0       0
  4681 ;;Total ram usage:        3 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    2
  4684 ;; This function calls:
  4685 ;;		_i2c_start
  4686 ;;		_i2c_write
  4687 ;;		_i2c_stop
  4688 ;;		_pause
  4689 ;; This function is called by:
  4690 ;;		_main
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693  15C5                     _I2C_EEOUT:	
  4694                           
  4695                           ; Regs used in _I2C_EEOUT: [wreg+status,2+status,0+pclath+cstack]
  4696                           ;I2C_EEOUT@address1 stored from wreg
  4697  15C5  00F6               	movwf	I2C_EEOUT@address1
  4698                           
  4699                           ;eeprom_i2c.c: 169: i2c_start();
  4700  15C6  2609  160A  118A   	fcall	_i2c_start
  4701                           
  4702                           ;eeprom_i2c.c: 170: i2c_write(0xa0);
  4703  15C9  30A0               	movlw	160
  4704  15CA  2601  160A  118A   	fcall	_i2c_write
  4705                           
  4706                           ;eeprom_i2c.c: 171: i2c_write(address1);
  4707  15CD  0876               	movf	I2C_EEOUT@address1,w
  4708  15CE  2601  160A  118A   	fcall	_i2c_write
  4709                           
  4710                           ;eeprom_i2c.c: 172: i2c_write(address2);
  4711  15D1  0874               	movf	I2C_EEOUT@address2,w
  4712  15D2  2601  160A  118A   	fcall	_i2c_write
  4713                           
  4714                           ;eeprom_i2c.c: 173: i2c_write(data);
  4715  15D5  0875               	movf	I2C_EEOUT@data,w
  4716  15D6  2601  160A  118A   	fcall	_i2c_write
  4717                           
  4718                           ;eeprom_i2c.c: 174: i2c_stop();
  4719  15D9  260D  160A  118A   	fcall	_i2c_stop
  4720                           
  4721                           ;eeprom_i2c.c: 175: pause(11);
  4722  15DC  300B               	movlw	11
  4723  15DD  00F0               	movwf	?_pause
  4724  15DE  01F1               	clrf	?_pause+1
  4725  15DF  2E60               	ljmp	l5542
  4726  15E0                     __end_of_I2C_EEOUT:	
  4727  15E0                     __ptext731:	
  4728 ;; =============== function ___ftadd ends ============
  4729                           
  4730                           
  4731 ;; *************** function _I2C_EEIN *****************
  4732 ;; Defined at:
  4733 ;;		line 184 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  address1        1    wreg     unsigned char 
  4736 ;;  address2        1    1[COMMON] unsigned char 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  address1        1    2[COMMON] unsigned char 
  4739 ;;  data            1    3[COMMON] unsigned char 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      unsigned char 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, status,0, pclath, cstack
  4744 ;; Tracked objects:
  4745 ;;		On entry : 160/20
  4746 ;;		On exit  : 160/20
  4747 ;;		Unchanged: FFE9F/0
  4748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4749 ;;      Params:         1       0       0       0       0
  4750 ;;      Locals:         2       0       0       0       0
  4751 ;;      Temps:          0       0       0       0       0
  4752 ;;      Totals:         3       0       0       0       0
  4753 ;;Total ram usage:        3 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; Hardware stack levels required when called:    1
  4756 ;; This function calls:
  4757 ;;		_i2c_start
  4758 ;;		_i2c_write
  4759 ;;		_i2c_restart
  4760 ;;		_i2c_read
  4761 ;;		_I2C_nack
  4762 ;;		_i2c_stop
  4763 ;; This function is called by:
  4764 ;;		_main
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767  15E0                     _I2C_EEIN:	
  4768                           
  4769                           ; Regs used in _I2C_EEIN: [wreg+status,2+status,0+pclath+cstack]
  4770                           ;I2C_EEIN@address1 stored from wreg
  4771  15E0  00F2               	movwf	I2C_EEIN@address1
  4772                           
  4773                           ;eeprom_i2c.c: 185: unsigned char data;
  4774                           ;eeprom_i2c.c: 186: i2c_start();
  4775  15E1  2609  160A  118A   	fcall	_i2c_start
  4776                           
  4777                           ;eeprom_i2c.c: 187: i2c_write(0xa0);
  4778  15E4  30A0               	movlw	160
  4779  15E5  2601  160A  118A   	fcall	_i2c_write
  4780                           
  4781                           ;eeprom_i2c.c: 188: i2c_write(address1);
  4782  15E8  0872               	movf	I2C_EEIN@address1,w
  4783  15E9  2601  160A  118A   	fcall	_i2c_write
  4784                           
  4785                           ;eeprom_i2c.c: 189: i2c_write(address2);
  4786  15EC  0871               	movf	I2C_EEIN@address2,w
  4787  15ED  2601  160A  118A   	fcall	_i2c_write
  4788                           
  4789                           ;eeprom_i2c.c: 190: i2c_restart();
  4790  15F0  2612  160A  118A   	fcall	_i2c_restart
  4791                           
  4792                           ;eeprom_i2c.c: 191: i2c_write(0xa1);
  4793  15F3  30A1               	movlw	161
  4794  15F4  2601  160A  118A   	fcall	_i2c_write
  4795                           
  4796                           ;eeprom_i2c.c: 192: data=i2c_read();
  4797  15F7  2617  160A  118A   	fcall	_i2c_read
  4798  15FA  00F3               	movwf	I2C_EEIN@data
  4799                           
  4800                           ;eeprom_i2c.c: 193: I2C_nack();
  4801  15FB  261F  160A  118A   	fcall	_I2C_nack
  4802                           
  4803                           ;eeprom_i2c.c: 194: i2c_stop();
  4804  15FE  260D               	fcall	_i2c_stop
  4805                           
  4806                           ;eeprom_i2c.c: 195: return(data);
  4807  15FF  0873               	movf	I2C_EEIN@data,w
  4808  1600  0008               	return
  4809  1601                     __end_of_I2C_EEIN:	
  4810  1601                     __ptext749:	
  4811 ;; =============== function _putch ends ============
  4812                           
  4813                           
  4814 ;; *************** function _i2c_write *****************
  4815 ;; Defined at:
  4816 ;;		line 156 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  I2C_data        1    wreg     unsigned char 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;  I2C_data        1    0[COMMON] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;		None               void
  4823 ;; Registers used:
  4824 ;;		wreg
  4825 ;; Tracked objects:
  4826 ;;		On entry : 140/20
  4827 ;;		On exit  : 160/0
  4828 ;;		Unchanged: FFE9F/0
  4829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4830 ;;      Params:         0       0       0       0       0
  4831 ;;      Locals:         1       0       0       0       0
  4832 ;;      Temps:          0       0       0       0       0
  4833 ;;      Totals:         1       0       0       0       0
  4834 ;;Total ram usage:        1 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_I2C_EEOUT
  4840 ;;		_I2C_EEIN
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843  1601                     _i2c_write:	
  4844                           
  4845                           ; Regs used in _i2c_write: [wreg]
  4846                           ;i2c_write@I2C_data stored from wreg
  4847  1601  00F0               	movwf	i2c_write@I2C_data
  4848                           
  4849                           ;eeprom_i2c.c: 157: PIR1bits.SSPIF=0;
  4850  1602  1283               	bcf	3,5	;RP0=0, select bank0
  4851  1603  118C               	bcf	12,3	;volatile
  4852                           
  4853                           ;eeprom_i2c.c: 158: SSPBUF=I2C_data;
  4854  1604  0870               	movf	i2c_write@I2C_data,w
  4855  1605  0093               	movwf	19	;volatile
  4856  1606                     l1107:	
  4857                           ;eeprom_i2c.c: 159: while(PIR1bits.SSPIF==0);
  4858                           
  4859  1606  198C               	btfsc	12,3	;volatile
  4860  1607  0008               	return
  4861  1608  2E06               	goto	l1107
  4862  1609                     __end_of_i2c_write:	
  4863  1609                     __ptext754:	
  4864 ;; =============== function _i2c_restart ends ============
  4865                           
  4866                           
  4867 ;; *************** function _i2c_start *****************
  4868 ;; Defined at:
  4869 ;;		line 102 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;		None
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;		None
  4874 ;; Return value:  Size  Location     Type
  4875 ;;		None               void
  4876 ;; Registers used:
  4877 ;;		None
  4878 ;; Tracked objects:
  4879 ;;		On entry : 160/20
  4880 ;;		On exit  : 160/20
  4881 ;;		Unchanged: FFE9F/0
  4882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4883 ;;      Params:         0       0       0       0       0
  4884 ;;      Locals:         0       0       0       0       0
  4885 ;;      Temps:          0       0       0       0       0
  4886 ;;      Totals:         0       0       0       0       0
  4887 ;;Total ram usage:        0 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_I2C_EEOUT
  4893 ;;		_I2C_EEIN
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896  1609                     _i2c_start:	
  4897                           
  4898                           ;eeprom_i2c.c: 103: SSPCON2bits.SEN=1;
  4899                           
  4900                           ; Regs used in _i2c_start: []
  4901  1609  1411               	bsf	17,0	;volatile
  4902  160A                     l1071:	
  4903                           ;eeprom_i2c.c: 104: while(SSPCON2bits.SEN==1);
  4904                           
  4905  160A  1C11               	btfss	17,0	;volatile
  4906  160B  0008               	return
  4907  160C  2E0A               	goto	l1071
  4908  160D                     __end_of_i2c_start:	
  4909  160D                     __ptext752:	
  4910 ;; =============== function _i2c_read ends ============
  4911                           
  4912                           
  4913 ;; *************** function _i2c_stop *****************
  4914 ;; Defined at:
  4915 ;;		line 118 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;		None
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;		None
  4920 ;; Return value:  Size  Location     Type
  4921 ;;		None               void
  4922 ;; Registers used:
  4923 ;;		None
  4924 ;; Tracked objects:
  4925 ;;		On entry : 160/0
  4926 ;;		On exit  : 160/20
  4927 ;;		Unchanged: FFE9F/0
  4928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4929 ;;      Params:         0       0       0       0       0
  4930 ;;      Locals:         0       0       0       0       0
  4931 ;;      Temps:          0       0       0       0       0
  4932 ;;      Totals:         0       0       0       0       0
  4933 ;;Total ram usage:        0 bytes
  4934 ;; Hardware stack levels used:    1
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_I2C_EEOUT
  4939 ;;		_I2C_EEIN
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942  160D                     _i2c_stop:	
  4943                           
  4944                           ;eeprom_i2c.c: 119: SSPCON2bits.PEN=1;
  4945                           
  4946                           ; Regs used in _i2c_stop: []
  4947  160D  1683               	bsf	3,5	;RP0=1, select bank1
  4948  160E  1511               	bsf	17,2	;volatile
  4949  160F                     l1083:	
  4950                           ;eeprom_i2c.c: 120: while(SSPCON2bits.PEN==1);
  4951                           
  4952  160F  1D11               	btfss	17,2	;volatile
  4953  1610  0008               	return
  4954  1611  2E0F               	goto	l1083
  4955  1612                     __end_of_i2c_stop:	
  4956  1612                     __ptext753:	
  4957 ;; =============== function _i2c_stop ends ============
  4958                           
  4959                           
  4960 ;; *************** function _i2c_restart *****************
  4961 ;; Defined at:
  4962 ;;		line 110 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;		None
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;		None               void
  4969 ;; Registers used:
  4970 ;;		None
  4971 ;; Tracked objects:
  4972 ;;		On entry : 160/0
  4973 ;;		On exit  : 160/20
  4974 ;;		Unchanged: FFE9F/0
  4975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4976 ;;      Params:         0       0       0       0       0
  4977 ;;      Locals:         0       0       0       0       0
  4978 ;;      Temps:          0       0       0       0       0
  4979 ;;      Totals:         0       0       0       0       0
  4980 ;;Total ram usage:        0 bytes
  4981 ;; Hardware stack levels used:    1
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		_I2C_EEIN
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988  1612                     _i2c_restart:	
  4989                           
  4990                           ;eeprom_i2c.c: 111: SSPCON2bits.RSEN=1;
  4991                           
  4992                           ; Regs used in _i2c_restart: []
  4993  1612  1683               	bsf	3,5	;RP0=1, select bank1
  4994  1613  1491               	bsf	17,1	;volatile
  4995  1614                     l1077:	
  4996                           ;eeprom_i2c.c: 112: while(SSPCON2bits.RSEN==1);
  4997                           
  4998  1614  1C91               	btfss	17,1	;volatile
  4999  1615  0008               	return
  5000  1616  2E14               	goto	l1077
  5001  1617                     __end_of_i2c_restart:	
  5002  1617                     __ptext751:	
  5003 ;; =============== function _I2C_nack ends ============
  5004                           
  5005                           
  5006 ;; *************** function _i2c_read *****************
  5007 ;; Defined at:
  5008 ;;		line 126 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;		None
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;		None
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1    wreg      unsigned char 
  5015 ;; Registers used:
  5016 ;;		wreg
  5017 ;; Tracked objects:
  5018 ;;		On entry : 160/0
  5019 ;;		On exit  : 160/0
  5020 ;;		Unchanged: FFE9F/0
  5021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5022 ;;      Params:         0       0       0       0       0
  5023 ;;      Locals:         0       0       0       0       0
  5024 ;;      Temps:          0       0       0       0       0
  5025 ;;      Totals:         0       0       0       0       0
  5026 ;;Total ram usage:        0 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; This function calls:
  5029 ;;		Nothing
  5030 ;; This function is called by:
  5031 ;;		_I2C_EEIN
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034  1617                     _i2c_read:	
  5035                           
  5036                           ;eeprom_i2c.c: 127: PIR1bits.SSPIF=0;
  5037                           
  5038                           ; Regs used in _i2c_read: [wreg]
  5039  1617  118C               	bcf	12,3	;volatile
  5040                           
  5041                           ;eeprom_i2c.c: 128: SSPCON2bits.RCEN=1;
  5042  1618  1683               	bsf	3,5	;RP0=1, select bank1
  5043  1619  1591               	bsf	17,3	;volatile
  5044  161A                     l1089:	
  5045                           ;eeprom_i2c.c: 129: while(PIR1bits.SSPIF==0);
  5046                           
  5047  161A  1283               	bcf	3,5	;RP0=0, select bank0
  5048  161B  1D8C               	btfss	12,3	;volatile
  5049  161C  2E1A               	goto	l1089
  5050                           
  5051                           ;eeprom_i2c.c: 130: return SSPBUF;
  5052  161D  0813               	movf	19,w	;volatile
  5053  161E  0008               	return
  5054  161F                     __end_of_i2c_read:	
  5055  161F                     __ptext750:	
  5056 ;; =============== function _i2c_write ends ============
  5057                           
  5058                           
  5059 ;; *************** function _I2C_nack *****************
  5060 ;; Defined at:
  5061 ;;		line 146 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;		None
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;		None
  5066 ;; Return value:  Size  Location     Type
  5067 ;;		None               void
  5068 ;; Registers used:
  5069 ;;		None
  5070 ;; Tracked objects:
  5071 ;;		On entry : 160/0
  5072 ;;		On exit  : 160/0
  5073 ;;		Unchanged: FFE9F/0
  5074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5075 ;;      Params:         0       0       0       0       0
  5076 ;;      Locals:         0       0       0       0       0
  5077 ;;      Temps:          0       0       0       0       0
  5078 ;;      Totals:         0       0       0       0       0
  5079 ;;Total ram usage:        0 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; This function calls:
  5082 ;;		Nothing
  5083 ;; This function is called by:
  5084 ;;		_I2C_EEIN
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087  161F                     _I2C_nack:	
  5088                           
  5089                           ;eeprom_i2c.c: 147: PIR1bits.SSPIF=0;
  5090                           
  5091                           ; Regs used in _I2C_nack: []
  5092  161F  118C               	bcf	12,3	;volatile
  5093                           
  5094                           ;eeprom_i2c.c: 148: SSPCON2bits.ACKDT=1;
  5095  1620  1683               	bsf	3,5	;RP0=1, select bank1
  5096  1621  1691               	bsf	17,5	;volatile
  5097                           
  5098                           ;eeprom_i2c.c: 149: SSPCON2bits.ACKEN=1;
  5099  1622  1611               	bsf	17,4	;volatile
  5100  1623                     l1101:	
  5101                           ;eeprom_i2c.c: 150: while(PIR1bits.SSPIF==0);
  5102                           
  5103  1623  1283               	bcf	3,5	;RP0=0, select bank0
  5104  1624  198C               	btfsc	12,3	;volatile
  5105  1625  0008               	return
  5106  1626  2E23               	goto	l1101
  5107  1627                     __end_of_I2C_nack:	
  5108  1627                     __ptext721:	
  5109 ;; =============== function _lcd_puts ends ============
  5110                           
  5111                           
  5112 ;; *************** function _lcd_clear *****************
  5113 ;; Defined at:
  5114 ;;		line 208 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;		None
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;		None
  5119 ;; Return value:  Size  Location     Type
  5120 ;;		None               void
  5121 ;; Registers used:
  5122 ;;		wreg, status,2, status,0, pclath, cstack
  5123 ;; Tracked objects:
  5124 ;;		On entry : 40/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: FFF9F/0
  5127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5128 ;;      Params:         0       0       0       0       0
  5129 ;;      Locals:         0       0       0       0       0
  5130 ;;      Temps:          0       0       0       0       0
  5131 ;;      Totals:         0       0       0       0       0
  5132 ;;Total ram usage:        0 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    3
  5135 ;; This function calls:
  5136 ;;		_lcd_write
  5137 ;;		_pause
  5138 ;; This function is called by:
  5139 ;;		_main
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142  1627                     _lcd_clear:	
  5143                           
  5144                           ;eeprom_i2c.c: 209: RA7=0;
  5145                           
  5146                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  5147  1627  1283               	bcf	3,5	;RP0=0, select bank0
  5148  1628  3001               	movlw	1
  5149  1629  1385               	bcf	5,7
  5150                           
  5151                           ;eeprom_i2c.c: 210: lcd_write(0x1);
  5152  162A  264E  160A  118A   	fcall	_lcd_write
  5153                           
  5154                           ;eeprom_i2c.c: 211: pause(2);
  5155  162D  3002               	movlw	2
  5156  162E  00F0               	movwf	?_pause
  5157  162F  01F1               	clrf	?_pause+1
  5158  1630  2E60               	ljmp	l5542
  5159  1631                     __end_of_lcd_clear:	
  5160  1631                     __ptext720:	
  5161 ;; =============== function _lcd_goto ends ============
  5162                           
  5163                           
  5164 ;; *************** function _lcd_puts *****************
  5165 ;; Defined at:
  5166 ;;		line 215 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  s               2    5[COMMON] PTR const unsigned char 
  5169 ;;		 -> STR_9(4), STR_6(11), STR_4(4), carac(5), 
  5170 ;;		 -> STR_2(15), 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;		None
  5173 ;; Return value:  Size  Location     Type
  5174 ;;		None               void
  5175 ;; Registers used:
  5176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5177 ;; Tracked objects:
  5178 ;;		On entry : 60/0
  5179 ;;		On exit  : 60/0
  5180 ;;		Unchanged: FFE9F/0
  5181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5182 ;;      Params:         2       0       0       0       0
  5183 ;;      Locals:         0       0       0       0       0
  5184 ;;      Temps:          0       0       0       0       0
  5185 ;;      Totals:         2       0       0       0       0
  5186 ;;Total ram usage:        2 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; Hardware stack levels required when called:    3
  5189 ;; This function calls:
  5190 ;;		_lcd_write
  5191 ;; This function is called by:
  5192 ;;		_main
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195  1631                     _lcd_puts:	
  5196                           
  5197                           ;eeprom_i2c.c: 216: RA7=1;
  5198                           
  5199                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5200  1631  1785               	bsf	5,7
  5201  1632                     l5830:	
  5202                           ;eeprom_i2c.c: 217: while(*s)
  5203                           
  5204  1632  0876               	movf	lcd_puts@s+1,w
  5205  1633  00FF               	movwf	127
  5206  1634  0875               	movf	lcd_puts@s,w
  5207  1635  0084               	movwf	4
  5208  1636  160A  118A  2000   	fcall	stringtab
      +       160A  118A         
  5209  163B  3800               	iorlw	0
  5210  163C  1903               	btfsc	3,2
  5211  163D  0008               	return
  5212                           
  5213                           ;eeprom_i2c.c: 218: lcd_write(*s++);
  5214  163E  0876               	movf	lcd_puts@s+1,w
  5215  163F  00FF               	movwf	127
  5216  1640  0875               	movf	lcd_puts@s,w
  5217  1641  0084               	movwf	4
  5218  1642  160A  118A  2000   	fcall	stringtab
      +       160A  118A         
  5219  1647  264E  160A  118A   	fcall	_lcd_write
  5220  164A  0AF5               	incf	lcd_puts@s,f
  5221  164B  1903               	skipnz
  5222  164C  0AF6               	incf	lcd_puts@s+1,f
  5223  164D  2E32               	goto	l5830
  5224  164E                     __end_of_lcd_puts:	
  5225  164E                     __ptext725:	
  5226 ;; =============== function _fround ends ============
  5227                           
  5228                           
  5229 ;; *************** function _lcd_write *****************
  5230 ;; Defined at:
  5231 ;;		line 199 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  c               1    wreg     unsigned char 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  c               1    4[COMMON] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;		None               void
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0, pclath, cstack
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 60/0
  5243 ;;		Unchanged: FFF9F/0
  5244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5245 ;;      Params:         0       0       0       0       0
  5246 ;;      Locals:         1       0       0       0       0
  5247 ;;      Temps:          0       0       0       0       0
  5248 ;;      Totals:         1       0       0       0       0
  5249 ;;Total ram usage:        1 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; Hardware stack levels required when called:    2
  5252 ;; This function calls:
  5253 ;;		_pause
  5254 ;; This function is called by:
  5255 ;;		_lcd_clear
  5256 ;;		_lcd_puts
  5257 ;;		_lcd_goto
  5258 ;;		_main
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261  164E                     _lcd_write:	
  5262                           
  5263                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  5264                           ;lcd_write@c stored from wreg
  5265  164E  00F4               	movwf	lcd_write@c
  5266                           
  5267                           ;eeprom_i2c.c: 200: pause(1);
  5268  164F  01F0               	clrf	?_pause
  5269  1650  0AF0               	incf	?_pause,f
  5270  1651  01F1               	clrf	?_pause+1
  5271  1652  2660               	fcall	_pause
  5272                           
  5273                           ;eeprom_i2c.c: 201: PORTD=((c >> 4) & 0x0F);
  5274  1653  0E74               	swapf	lcd_write@c,w
  5275  1654  390F               	andlw	15
  5276  1655  1283               	bcf	3,5	;RP0=0, select bank0
  5277  1656  1303               	bcf	3,6	;RP1=0, select bank0
  5278  1657  0088               	movwf	8	;volatile
  5279                           
  5280                           ;eeprom_i2c.c: 202: ((RA6=1),(RA6=0));
  5281  1658  1705               	bsf	5,6
  5282  1659  1305               	bcf	5,6
  5283                           
  5284                           ;eeprom_i2c.c: 203: PORTD=(c & 0x0F);
  5285  165A  0874               	movf	lcd_write@c,w
  5286  165B  390F               	andlw	15
  5287  165C  0088               	movwf	8	;volatile
  5288                           
  5289                           ;eeprom_i2c.c: 204: ((RA6=1),(RA6=0));
  5290  165D  1705               	bsf	5,6
  5291  165E  1305               	bcf	5,6
  5292  165F  0008               	return
  5293  1660                     __end_of_lcd_write:	
  5294  1660                     __ptext732:	
  5295 ;; =============== function _I2C_EEIN ends ============
  5296                           
  5297                           
  5298 ;; *************** function _pause *****************
  5299 ;; Defined at:
  5300 ;;		line 71 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;  usvalue         2    0[COMMON] unsigned short 
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;  x               2    2[COMMON] unsigned short 
  5305 ;; Return value:  Size  Location     Type
  5306 ;;		None               void
  5307 ;; Registers used:
  5308 ;;		wreg, status,2, status,0, pclath, cstack
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: FFF9F/0
  5313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5314 ;;      Params:         2       0       0       0       0
  5315 ;;      Locals:         2       0       0       0       0
  5316 ;;      Temps:          0       0       0       0       0
  5317 ;;      Totals:         4       0       0       0       0
  5318 ;;Total ram usage:        4 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    1
  5321 ;; This function calls:
  5322 ;;		_msecbase
  5323 ;; This function is called by:
  5324 ;;		_I2C_EEOUT
  5325 ;;		_lcd_write
  5326 ;;		_lcd_clear
  5327 ;;		_main
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330  1660                     _pause:	
  5331  1660                     l5542:	
  5332                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  5333                           
  5334                           
  5335                           ;eeprom_i2c.c: 72: unsigned short x;
  5336                           ;eeprom_i2c.c: 74: for (x=0; x<=usvalue; x++)
  5337  1660  01F2               	clrf	pause@x
  5338  1661  01F3               	clrf	pause@x+1
  5339  1662                     l5548:	
  5340  1662  0873               	movf	pause@x+1,w
  5341  1663  0271               	subwf	pause@usvalue+1,w
  5342  1664  1D03               	skipz
  5343  1665  2E68               	goto	u2655
  5344  1666  0872               	movf	pause@x,w
  5345  1667  0270               	subwf	pause@usvalue,w
  5346  1668                     u2655:	
  5347  1668  1C03               	btfss	3,0
  5348  1669  0008               	return
  5349                           
  5350                           ;eeprom_i2c.c: 75: {
  5351                           ;eeprom_i2c.c: 76: msecbase();
  5352  166A  2671  160A  118A   	fcall	_msecbase
  5353  166D  0AF2               	incf	pause@x,f
  5354  166E  1903               	skipnz
  5355  166F  0AF3               	incf	pause@x+1,f
  5356  1670  2E62               	goto	l5548
  5357  1671                     __end_of_pause:	
  5358  1671                     __ptext756:	
  5359 ;; =============== function _i2c_init ends ============
  5360                           
  5361                           
  5362 ;; *************** function _msecbase *****************
  5363 ;; Defined at:
  5364 ;;		line 62 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;		None
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;		None
  5369 ;; Return value:  Size  Location     Type
  5370 ;;		None               void
  5371 ;; Registers used:
  5372 ;;		wreg
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: FFF9F/0
  5377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5378 ;;      Params:         0       0       0       0       0
  5379 ;;      Locals:         0       0       0       0       0
  5380 ;;      Temps:          0       0       0       0       0
  5381 ;;      Totals:         0       0       0       0       0
  5382 ;;Total ram usage:        0 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; This function calls:
  5385 ;;		Nothing
  5386 ;; This function is called by:
  5387 ;;		_pause
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390  1671                     _msecbase:	
  5391                           
  5392                           ;eeprom_i2c.c: 63: OPTION_REG = 0b00000001;
  5393                           
  5394                           ; Regs used in _msecbase: [wreg]
  5395  1671  3001               	movlw	1
  5396  1672  1683               	bsf	3,5	;RP0=1, select bank1
  5397  1673  1303               	bcf	3,6	;RP1=0, select bank1
  5398  1674  0081               	movwf	1	;volatile
  5399                           
  5400                           ;eeprom_i2c.c: 64: TMR0 = 0xD;
  5401  1675  300D               	movlw	13
  5402  1676  1283               	bcf	3,5	;RP0=0, select bank0
  5403  1677  0081               	movwf	1	;volatile
  5404  1678                     l1056:	
  5405                           ;eeprom_i2c.c: 65: while(!T0IF);
  5406                           
  5407  1678  1D0B               	btfss	11,2
  5408  1679  2E78               	goto	l1056
  5409                           
  5410                           ;eeprom_i2c.c: 66: T0IF = 0;
  5411  167A  110B               	bcf	11,2
  5412  167B  0008               	return
  5413  167C                     __end_of_msecbase:	
  5414                           
  5415                           	psect	text724
  5416  084A                     __ptext724:	
  5417 ;; =============== function _scale ends ============
  5418                           
  5419                           
  5420 ;; *************** function _fround *****************
  5421 ;; Defined at:
  5422 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;  prec            1    wreg     unsigned char 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;  prec            1   49[BANK0 ] unsigned char 
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  3   40[BANK0 ] unsigned char 
  5429 ;; Registers used:
  5430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5431 ;; Tracked objects:
  5432 ;;		On entry : 60/20
  5433 ;;		On exit  : 60/0
  5434 ;;		Unchanged: FFF9F/0
  5435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5436 ;;      Params:         0       3       0       0       0
  5437 ;;      Locals:         0       7       0       0       0
  5438 ;;      Temps:          0       0       0       0       0
  5439 ;;      Totals:         0      10       0       0       0
  5440 ;;Total ram usage:       10 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; Hardware stack levels required when called:    2
  5443 ;; This function calls:
  5444 ;;		___lbmod
  5445 ;;		___bmul
  5446 ;;		___lbdiv
  5447 ;;		___ftmul
  5448 ;; This function is called by:
  5449 ;;		_sprintf
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452  084A                     _fround:	
  5453                           
  5454                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5455                           ;fround@prec stored from wreg
  5456  084A  1283               	bcf	3,5	;RP0=0, select bank0
  5457  084B  00D1               	movwf	fround@prec
  5458  084C  306E               	movlw	110
  5459  084D  0251               	subwf	fround@prec,w
  5460  084E  1C03               	skipc
  5461  084F  28D5               	goto	l5762
  5462  0850  3003               	movlw	3
  5463  0851  00F9               	movwf	?___bmul
  5464  0852  300A               	movlw	10
  5465  0853  00F5               	movwf	?___lbdiv
  5466  0854  3064               	movlw	100
  5467  0855  00F0               	movwf	?___lbmod
  5468  0856  0851               	movf	fround@prec,w
  5469  0857  216A  120A  158A   	fcall	___lbmod
  5470  085A  214F               	fcall	___lbdiv
  5471  085B  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5472  0860  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5473  0861  0084               	movwf	4
  5474  0862  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5475  0867  00AD               	movwf	?___ftmul
  5476  0868  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5477  086D  00AE               	movwf	?___ftmul+1
  5478  086E  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5479  0873  00AF               	movwf	?___ftmul+2
  5480  0874  3003               	movlw	3
  5481  0875  00F9               	movwf	?___bmul
  5482  0876  3064               	movlw	100
  5483  0877  00F5               	movwf	?___lbdiv
  5484  0878  0851               	movf	fround@prec,w
  5485  0879  214F               	fcall	___lbdiv
  5486  087A  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5487  087F  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5488  0880  0084               	movwf	4
  5489  0881  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5490  0886  00B0               	movwf	?___ftmul+3
  5491  0887  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5492  088C  00B1               	movwf	?___ftmul+4
  5493  088D  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5494  0892  00B2               	movwf	?___ftmul+5
  5495  0893  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5496  0898  2195  120A  158A   	fcall	PL30	;call to abstracted procedure
  5497  089B  3003               	movlw	3
  5498  089C  00F9               	movwf	?___bmul
  5499  089D  300A               	movlw	10
  5500  089E  00F0               	movwf	?___lbmod
  5501  089F  0851               	movf	fround@prec,w
  5502  08A0  216A               	fcall	___lbmod
  5503  08A1  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5504  08A6  3E01               	addlw	low (__npowers_-__stringbase)
  5505  08A7  0084               	movwf	4
  5506  08A8  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5507  08AD  00AD               	movwf	?___ftmul
  5508  08AE  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5509  08B3  00AE               	movwf	?___ftmul+1
  5510  08B4  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5511  08B9  218D               	fcall	PL26	;call to abstracted procedure
  5512  08BA  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5513  08BF  082D               	movf	?___ftmul,w
  5514  08C0  00CB               	movwf	_fround$2942
  5515  08C1  082E               	movf	?___ftmul+1,w
  5516  08C2  00CC               	movwf	_fround$2942+1
  5517  08C3  082F               	movf	?___ftmul+2,w
  5518  08C4  00CD               	movwf	_fround$2942+2
  5519  08C5  303F               	movlw	63
  5520  08C6  01AD               	clrf	?___ftmul
  5521  08C7  01AE               	clrf	?___ftmul+1
  5522  08C8  00AF               	movwf	?___ftmul+2
  5523  08C9  084B               	movf	_fround$2942,w
  5524  08CA  00B0               	movwf	?___ftmul+3
  5525  08CB  084C               	movf	_fround$2942+1,w
  5526  08CC  00B1               	movwf	?___ftmul+4
  5527  08CD  084D               	movf	_fround$2942+2,w
  5528  08CE  00B2               	movwf	?___ftmul+5
  5529  08CF  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5530  08D4  2986               	ljmp	PL17	;call to abstracted procedure
  5531  08D5                     l5762:	
  5532  08D5  300B               	movlw	11
  5533  08D6  0251               	subwf	fround@prec,w
  5534  08D7  1C03               	skipc
  5535  08D8  2929               	goto	l5770
  5536  08D9  3003               	movlw	3
  5537  08DA  00F9               	movwf	?___bmul
  5538  08DB  300A               	movlw	10
  5539  08DC  00F0               	movwf	?___lbmod
  5540  08DD  0851               	movf	fround@prec,w
  5541  08DE  216A               	fcall	___lbmod
  5542  08DF  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5543  08E4  3E01               	addlw	low (__npowers_-__stringbase)
  5544  08E5  0084               	movwf	4
  5545  08E6  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5546  08EB  00AD               	movwf	?___ftmul
  5547  08EC  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5548  08F1  00AE               	movwf	?___ftmul+1
  5549  08F2  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5550  08F7  00AF               	movwf	?___ftmul+2
  5551  08F8  3003               	movlw	3
  5552  08F9  00F9               	movwf	?___bmul
  5553  08FA  300A               	movlw	10
  5554  08FB  00F5               	movwf	?___lbdiv
  5555  08FC  0851               	movf	fround@prec,w
  5556  08FD  214F               	fcall	___lbdiv
  5557  08FE  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5558  0903  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5559  0904  0084               	movwf	4
  5560  0905  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5561  090A  00B0               	movwf	?___ftmul+3
  5562  090B  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5563  0910  00B1               	movwf	?___ftmul+4
  5564  0911  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5565  0916  00B2               	movwf	?___ftmul+5
  5566  0917  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5567  091C  2195  120A  158A   	fcall	PL30	;call to abstracted procedure
  5568  091F  303F               	movlw	63
  5569  0920  01AD               	clrf	?___ftmul
  5570  0921  01AE               	clrf	?___ftmul+1
  5571  0922  218D               	fcall	PL26	;call to abstracted procedure
  5572  0923  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5573  0928  2986               	ljmp	PL17	;call to abstracted procedure
  5574  0929                     l5770:	
  5575  0929  303F               	movlw	63
  5576  092A  01AD               	clrf	?___ftmul
  5577  092B  01AE               	clrf	?___ftmul+1
  5578  092C  00AF               	movwf	?___ftmul+2
  5579  092D  3003               	movlw	3
  5580  092E  00F9               	movwf	?___bmul
  5581  092F  0851               	movf	fround@prec,w
  5582  0930  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5583  0935  3E01               	addlw	low (__npowers_-__stringbase)
  5584  0936  0084               	movwf	4
  5585  0937  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5586  093C  00B0               	movwf	?___ftmul+3
  5587  093D  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5588  0942  00B1               	movwf	?___ftmul+4
  5589  0943  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5590  0948  00B2               	movwf	?___ftmul+5
  5591  0949  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5592  094E  2986               	ljmp	PL17	;call to abstracted procedure
  5593  094F                     __end_of_fround:	
  5594  094F                     __ptext742:	
  5595 ;; =============== function ___lbmod ends ============
  5596                           
  5597                           
  5598 ;; *************** function ___lbdiv *****************
  5599 ;; Defined at:
  5600 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbdiv.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  dividend        1    wreg     unsigned char 
  5603 ;;  divisor         1    5[COMMON] unsigned char 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  dividend        1    6[COMMON] unsigned char 
  5606 ;;  quotient        1    8[COMMON] unsigned char 
  5607 ;;  counter         1    7[COMMON] unsigned char 
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  1    wreg      unsigned char 
  5610 ;; Registers used:
  5611 ;;		wreg, status,2, status,0
  5612 ;; Tracked objects:
  5613 ;;		On entry : 60/0
  5614 ;;		On exit  : 60/0
  5615 ;;		Unchanged: FFF9F/0
  5616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5617 ;;      Params:         1       0       0       0       0
  5618 ;;      Locals:         3       0       0       0       0
  5619 ;;      Temps:          0       0       0       0       0
  5620 ;;      Totals:         4       0       0       0       0
  5621 ;;Total ram usage:        4 bytes
  5622 ;; Hardware stack levels used:    1
  5623 ;; This function calls:
  5624 ;;		Nothing
  5625 ;; This function is called by:
  5626 ;;		_fround
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629  094F                     ___lbdiv:	
  5630                           
  5631                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5632                           ;___lbdiv@dividend stored from wreg
  5633  094F  00F6               	movwf	___lbdiv@dividend
  5634  0950  01F8               	clrf	___lbdiv@quotient
  5635  0951  0875               	movf	___lbdiv@divisor,w
  5636  0952  1903               	btfsc	3,2
  5637  0953  2968               	goto	l5300
  5638  0954  01F7               	clrf	___lbdiv@counter
  5639  0955                     l5286:	
  5640  0955  0AF7               	incf	___lbdiv@counter,f
  5641  0956  1BF5               	btfsc	___lbdiv@divisor,7
  5642  0957  295B               	goto	l2342
  5643  0958  1003               	clrc
  5644  0959  0DF5               	rlf	___lbdiv@divisor,f
  5645  095A  2955               	goto	l5286
  5646  095B                     l2342:	
  5647  095B  1003               	clrc
  5648  095C  0DF8               	rlf	___lbdiv@quotient,f
  5649  095D  0875               	movf	___lbdiv@divisor,w
  5650  095E  0276               	subwf	___lbdiv@dividend,w
  5651  095F  1C03               	skipc
  5652  0960  2965               	goto	L17
  5653  0961  0875               	movf	___lbdiv@divisor,w
  5654  0962  02F6               	subwf	___lbdiv@dividend,f
  5655  0963  1478               	bsf	___lbdiv@quotient,0
  5656  0964  1003               	clrc
  5657  0965                     L17:	
  5658  0965  0CF5               	rrf	___lbdiv@divisor,f
  5659  0966  0BF7               	decfsz	___lbdiv@counter,f
  5660  0967  295B               	goto	l2342
  5661  0968                     l5300:	
  5662  0968  0878               	movf	___lbdiv@quotient,w
  5663  0969  0008               	return
  5664  096A                     __end_of___lbdiv:	
  5665  096A                     __ptext741:	
  5666 ;; =============== function ___ftpack ends ============
  5667                           
  5668                           
  5669 ;; *************** function ___lbmod *****************
  5670 ;; Defined at:
  5671 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbmod.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;  dividend        1    wreg     unsigned char 
  5674 ;;  divisor         1    0[COMMON] unsigned char 
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;  dividend        1    2[COMMON] unsigned char 
  5677 ;;  rem             1    4[COMMON] unsigned char 
  5678 ;;  counter         1    3[COMMON] unsigned char 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      unsigned char 
  5681 ;; Registers used:
  5682 ;;		wreg, status,2, status,0
  5683 ;; Tracked objects:
  5684 ;;		On entry : 60/0
  5685 ;;		On exit  : 60/0
  5686 ;;		Unchanged: FFF9F/0
  5687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5688 ;;      Params:         1       0       0       0       0
  5689 ;;      Locals:         3       0       0       0       0
  5690 ;;      Temps:          1       0       0       0       0
  5691 ;;      Totals:         5       0       0       0       0
  5692 ;;Total ram usage:        5 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; This function calls:
  5695 ;;		Nothing
  5696 ;; This function is called by:
  5697 ;;		_fround
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700  096A                     ___lbmod:	
  5701                           
  5702                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5703                           ;___lbmod@dividend stored from wreg
  5704  096A  00F2               	movwf	___lbmod@dividend
  5705  096B  3008               	movlw	8
  5706  096C  00F3               	movwf	___lbmod@counter
  5707  096D  01F4               	clrf	___lbmod@rem
  5708  096E                     l5308:	
  5709  096E  0872               	movf	___lbmod@dividend,w
  5710  096F  00F1               	movwf	??___lbmod
  5711  0970  3007               	movlw	7
  5712  0971  1003               	clrc
  5713  0972                     L16:	
  5714  0972  0CF1               	rrf	??___lbmod,f
  5715  0973  3EFF               	addlw	-1
  5716  0974  1003               	clrc
  5717  0975  1D03               	skipz
  5718  0976  2972               	goto	L16
  5719  0977  0D74               	rlf	___lbmod@rem,w
  5720  0978  0471               	iorwf	??___lbmod,w
  5721  0979  00F4               	movwf	___lbmod@rem
  5722  097A  1003               	clrc
  5723  097B  0DF2               	rlf	___lbmod@dividend,f
  5724  097C  0870               	movf	___lbmod@divisor,w
  5725  097D  0274               	subwf	___lbmod@rem,w
  5726  097E  1C03               	skipc
  5727  097F  2982               	goto	l5316
  5728  0980  0870               	movf	___lbmod@divisor,w
  5729  0981  02F4               	subwf	___lbmod@rem,f
  5730  0982                     l5316:	
  5731  0982  0BF3               	decfsz	___lbmod@counter,f
  5732  0983  296E               	goto	l5308
  5733  0984  0874               	movf	___lbmod@rem,w
  5734  0985  0008               	return
  5735  0986                     __end_of___lbmod:	
  5736  0986                     PL17:	
  5737  0986  082D               	movf	?___ftmul,w
  5738  0987  00C8               	movwf	?_fround
  5739  0988  082E               	movf	?___ftmul+1,w
  5740  0989  00C9               	movwf	?_fround+1
  5741  098A  082F               	movf	?___ftmul+2,w
  5742  098B  00CA               	movwf	?_fround+2
  5743  098C  0008               	return
  5744  098D                     PL26:	
  5745  098D  00AF               	movwf	?___ftmul+2
  5746  098E  084E               	movf	_fround$2941,w
  5747  098F  00B0               	movwf	?___ftmul+3
  5748  0990  084F               	movf	_fround$2941+1,w
  5749  0991  00B1               	movwf	?___ftmul+4
  5750  0992  0850               	movf	_fround$2941+2,w
  5751  0993  00B2               	movwf	?___ftmul+5
  5752  0994  0008               	return
  5753  0995                     PL30:	
  5754  0995  082D               	movf	?___ftmul,w
  5755  0996  00CE               	movwf	_fround$2941
  5756  0997  082E               	movf	?___ftmul+1,w
  5757  0998  00CF               	movwf	_fround$2941+1
  5758  0999  082F               	movf	?___ftmul+2,w
  5759  099A  00D0               	movwf	_fround$2941+2
  5760  099B  0008               	return
  5761                           
  5762                           	psect	text728
  5763  0C9F                     __ptext728:	
  5764 ;; =============== function ___lltoft ends ============
  5765                           
  5766                           
  5767 ;; *************** function ___awtoft *****************
  5768 ;; Defined at:
  5769 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awtoft.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  c               2    8[COMMON] int 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  sign            1   11[COMMON] unsigned char 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  3    8[COMMON] float 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0, pclath, cstack
  5778 ;; Tracked objects:
  5779 ;;		On entry : 60/20
  5780 ;;		On exit  : 60/20
  5781 ;;		Unchanged: FFF9F/0
  5782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5783 ;;      Params:         3       0       0       0       0
  5784 ;;      Locals:         1       0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0
  5786 ;;      Totals:         4       0       0       0       0
  5787 ;;Total ram usage:        4 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    1
  5790 ;; This function calls:
  5791 ;;		___ftpack
  5792 ;; This function is called by:
  5793 ;;		_main
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796  0C9F                     ___awtoft:	
  5797                           
  5798                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5799  0C9F  01FB               	clrf	___awtoft@sign
  5800  0CA0  1FF9               	btfss	___awtoft@c+1,7
  5801  0CA1  2CA9               	goto	l5712
  5802  0CA2  09F8               	comf	___awtoft@c,f
  5803  0CA3  09F9               	comf	___awtoft@c+1,f
  5804  0CA4  0AF8               	incf	___awtoft@c,f
  5805  0CA5  1903               	skipnz
  5806  0CA6  0AF9               	incf	___awtoft@c+1,f
  5807  0CA7  01FB               	clrf	___awtoft@sign
  5808  0CA8  0AFB               	incf	___awtoft@sign,f
  5809  0CA9                     l5712:	
  5810  0CA9  0878               	movf	___awtoft@c,w
  5811  0CAA  00F0               	movwf	?___ftpack
  5812  0CAB  0879               	movf	___awtoft@c+1,w
  5813  0CAC  00F1               	movwf	?___ftpack+1
  5814  0CAD  308E               	movlw	142
  5815  0CAE  01F2               	clrf	?___ftpack+2
  5816  0CAF  00F3               	movwf	?___ftpack+3
  5817  0CB0  087B               	movf	___awtoft@sign,w
  5818  0CB1  00F4               	movwf	?___ftpack+4
  5819  0CB2  2769               	fcall	___ftpack
  5820  0CB3  0870               	movf	?___ftpack,w
  5821  0CB4  00F8               	movwf	?___awtoft
  5822  0CB5  0871               	movf	?___ftpack+1,w
  5823  0CB6  00F9               	movwf	?___awtoft+1
  5824  0CB7  0872               	movf	?___ftpack+2,w
  5825  0CB8  00FA               	movwf	?___awtoft+2
  5826  0CB9  0008               	return
  5827  0CBA                     __end_of___awtoft:	
  5828  0CBA                     __ptext727:	
  5829 ;; =============== function _I2C_EEOUT ends ============
  5830                           
  5831                           
  5832 ;; *************** function ___lltoft *****************
  5833 ;; Defined at:
  5834 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lltoft.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  c               4    8[COMMON] unsigned long 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  exp             1   12[COMMON] unsigned char 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  3    8[COMMON] float 
  5841 ;; Registers used:
  5842 ;;		wreg, status,2, status,0, pclath, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 60/20
  5845 ;;		On exit  : 60/20
  5846 ;;		Unchanged: FFF9F/0
  5847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5848 ;;      Params:         4       0       0       0       0
  5849 ;;      Locals:         1       0       0       0       0
  5850 ;;      Temps:          0       0       0       0       0
  5851 ;;      Totals:         5       0       0       0       0
  5852 ;;Total ram usage:        5 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    1
  5855 ;; This function calls:
  5856 ;;		___ftpack
  5857 ;; This function is called by:
  5858 ;;		_sprintf
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861  0CBA                     ___lltoft:	
  5862                           
  5863                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5864  0CBA  308E               	movlw	142
  5865  0CBB  00FC               	movwf	___lltoft@exp
  5866  0CBC                     l5720:	
  5867  0CBC  30FF               	movlw	255
  5868  0CBD  057B               	andwf	___lltoft@c+3,w
  5869  0CBE  1903               	btfsc	3,2
  5870  0CBF  2CC7               	goto	l5722
  5871  0CC0  1003               	clrc
  5872  0CC1  0CFB               	rrf	___lltoft@c+3,f
  5873  0CC2  0CFA               	rrf	___lltoft@c+2,f
  5874  0CC3  0CF9               	rrf	___lltoft@c+1,f
  5875  0CC4  0CF8               	rrf	___lltoft@c,f
  5876  0CC5  0AFC               	incf	___lltoft@exp,f
  5877  0CC6  2CBC               	goto	l5720
  5878  0CC7                     l5722:	
  5879  0CC7  0878               	movf	___lltoft@c,w
  5880  0CC8  00F0               	movwf	?___ftpack
  5881  0CC9  0879               	movf	___lltoft@c+1,w
  5882  0CCA  00F1               	movwf	?___ftpack+1
  5883  0CCB  087A               	movf	___lltoft@c+2,w
  5884  0CCC  00F2               	movwf	?___ftpack+2
  5885  0CCD  087C               	movf	___lltoft@exp,w
  5886  0CCE  00F3               	movwf	?___ftpack+3
  5887  0CCF  01F4               	clrf	?___ftpack+4
  5888  0CD0  2769               	fcall	___ftpack
  5889  0CD1  0870               	movf	?___ftpack,w
  5890  0CD2  00F8               	movwf	?___lltoft
  5891  0CD3  0871               	movf	?___ftpack+1,w
  5892  0CD4  00F9               	movwf	?___lltoft+1
  5893  0CD5  0872               	movf	?___ftpack+2,w
  5894  0CD6  00FA               	movwf	?___lltoft+2
  5895  0CD7  0008               	return
  5896  0CD8                     __end_of___lltoft:	
  5897  0CD8                     __ptext723:	
  5898 ;; =============== function ___ftsub ends ============
  5899                           
  5900                           
  5901 ;; *************** function _scale *****************
  5902 ;; Defined at:
  5903 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;  scl             1    wreg     char 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;  scl             1   38[BANK0 ] char 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  3   28[BANK0 ] char 
  5910 ;; Registers used:
  5911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 60/20
  5914 ;;		On exit  : 60/0
  5915 ;;		Unchanged: FFF9F/0
  5916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5917 ;;      Params:         0       3       0       0       0
  5918 ;;      Locals:         0       4       0       0       0
  5919 ;;      Temps:          0       4       0       0       0
  5920 ;;      Totals:         0      11       0       0       0
  5921 ;;Total ram usage:       11 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:    2
  5924 ;; This function calls:
  5925 ;;		___awmod
  5926 ;;		___awdiv
  5927 ;;		___ftmul
  5928 ;;		___bmul
  5929 ;; This function is called by:
  5930 ;;		_sprintf
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933  0CD8                     _scale:	
  5934                           
  5935                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5936                           ;scale@scl stored from wreg
  5937  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  5938  0CD9  00C6               	movwf	scale@scl
  5939  0CDA  1FC6               	btfss	scale@scl,7
  5940  0CDB  2DA4               	goto	l5796
  5941  0CDC  09C6               	comf	scale@scl,f
  5942  0CDD  0AC6               	incf	scale@scl,f
  5943  0CDE  0846               	movf	scale@scl,w
  5944  0CDF  3A80               	xorlw	128
  5945  0CE0  3E12               	addlw	-238
  5946  0CE1  1C03               	skipc
  5947  0CE2  2D48               	goto	l5786
  5948  0CE3  300A               	movlw	10
  5949  0CE4  27CB  120A  158A   	fcall	PL16	;call to abstracted procedure
  5950  0CE7  26AF  120A  158A   	fcall	___awmod
  5951  0CEA  0871               	movf	?___awmod+1,w
  5952  0CEB  00F9               	movwf	?___awdiv+3
  5953  0CEC  0870               	movf	?___awmod,w
  5954  0CED  00F8               	movwf	?___awdiv+2
  5955  0CEE  266A  120A  158A   	fcall	___awdiv
  5956  0CF1  27E0               	fcall	PL23	;call to abstracted procedure
  5957  0CF2  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5958  0CF3  0084               	movwf	4
  5959  0CF4  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5960  0CF9  00AD               	movwf	?___ftmul
  5961  0CFA  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5962  0CFF  00AE               	movwf	?___ftmul+1
  5963  0D00  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5964  0D05  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5965  0D08  1BF8               	btfsc	?___awdiv+2,7
  5966  0D09  03F9               	decf	?___awdiv+3,f
  5967  0D0A  266A  120A  158A   	fcall	___awdiv
  5968  0D0D  27BC               	fcall	PL10	;call to abstracted procedure
  5969  0D0E  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5970  0D0F  0084               	movwf	4
  5971  0D10  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5972  0D15  00B0               	movwf	?___ftmul+3
  5973  0D16  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5974  0D1B  00B1               	movwf	?___ftmul+4
  5975  0D1C  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5976  0D21  00B2               	movwf	?___ftmul+5
  5977  0D22  26EC  120A  158A   	fcall	___ftmul
  5978  0D25  27A7  120A  158A   	fcall	PL8	;call to abstracted procedure
  5979  0D28  1BF2               	btfsc	?___awmod+2,7
  5980  0D29  03F3               	decf	?___awmod+3,f
  5981  0D2A  26AF  120A  158A   	fcall	___awmod
  5982  0D2D  27B4               	fcall	PL9	;call to abstracted procedure
  5983  0D2E  3E01               	addlw	low (__npowers_-__stringbase)
  5984  0D2F  0084               	movwf	4
  5985  0D30  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5986  0D35  00AD               	movwf	?___ftmul
  5987  0D36  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5988  0D3B  00AE               	movwf	?___ftmul+1
  5989  0D3C  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  5990  0D41  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5991  0D44  26EC  120A  158A   	fcall	___ftmul
  5992  0D47  2FC4               	ljmp	PL11	;call to abstracted procedure
  5993  0D48                     l5786:	
  5994  0D48  0846               	movf	scale@scl,w
  5995  0D49  3A80               	xorlw	128
  5996  0D4A  3E75               	addlw	-139
  5997  0D4B  1C03               	skipc
  5998  0D4C  2D8D               	goto	l5792
  5999  0D4D  300A               	movlw	10
  6000  0D4E  00F0               	movwf	?___awmod
  6001  0D4F  01F1               	clrf	?___awmod+1
  6002  0D50  0846               	movf	scale@scl,w
  6003  0D51  00F2               	movwf	?___awmod+2
  6004  0D52  01F3               	clrf	?___awmod+3
  6005  0D53  1BF2               	btfsc	?___awmod+2,7
  6006  0D54  03F3               	decf	?___awmod+3,f
  6007  0D55  26AF  120A  158A   	fcall	___awmod
  6008  0D58  27B4               	fcall	PL9	;call to abstracted procedure
  6009  0D59  3E01               	addlw	low (__npowers_-__stringbase)
  6010  0D5A  0084               	movwf	4
  6011  0D5B  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6012  0D60  00AD               	movwf	?___ftmul
  6013  0D61  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6014  0D66  00AE               	movwf	?___ftmul+1
  6015  0D67  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6016  0D6C  27F8  120A  158A   	fcall	PL27	;call to abstracted procedure
  6017  0D6F  1BF8               	btfsc	?___awdiv+2,7
  6018  0D70  03F9               	decf	?___awdiv+3,f
  6019  0D71  266A  120A  158A   	fcall	___awdiv
  6020  0D74  27BC               	fcall	PL10	;call to abstracted procedure
  6021  0D75  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6022  0D76  0084               	movwf	4
  6023  0D77  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6024  0D7C  00B0               	movwf	?___ftmul+3
  6025  0D7D  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6026  0D82  00B1               	movwf	?___ftmul+4
  6027  0D83  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6028  0D88  00B2               	movwf	?___ftmul+5
  6029  0D89  26EC  120A  158A   	fcall	___ftmul
  6030  0D8C  2FC4               	ljmp	PL11	;call to abstracted procedure
  6031  0D8D                     l5792:	
  6032  0D8D  3003               	movlw	3
  6033  0D8E  00F9               	movwf	?___bmul
  6034  0D8F  0846               	movf	scale@scl,w
  6035  0D90  275B               	fcall	___bmul
  6036  0D91  3E01               	addlw	low (__npowers_-__stringbase)
  6037  0D92  0084               	movwf	4
  6038  0D93  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6039  0D98  00BC               	movwf	?_scale
  6040  0D99  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6041  0D9E  00BD               	movwf	?_scale+1
  6042  0D9F  160A  118A  200A   	fcall	stringdir
  6043  0DA2  00BE               	movwf	?_scale+2
  6044  0DA3  0008               	return
  6045  0DA4                     l5796:	
  6046  0DA4  0846               	movf	scale@scl,w
  6047  0DA5  3A80               	xorlw	128
  6048  0DA6  3E12               	addlw	-238
  6049  0DA7  1C03               	skipc
  6050  0DA8  2E0E               	goto	l5804
  6051  0DA9  300A               	movlw	10
  6052  0DAA  27CB  120A  158A   	fcall	PL16	;call to abstracted procedure
  6053  0DAD  26AF  120A  158A   	fcall	___awmod
  6054  0DB0  0871               	movf	?___awmod+1,w
  6055  0DB1  00F9               	movwf	?___awdiv+3
  6056  0DB2  0870               	movf	?___awmod,w
  6057  0DB3  00F8               	movwf	?___awdiv+2
  6058  0DB4  266A  120A  158A   	fcall	___awdiv
  6059  0DB7  27E0               	fcall	PL23	;call to abstracted procedure
  6060  0DB8  3E43               	addlw	low ((__powers_-__stringbase+27))
  6061  0DB9  0084               	movwf	4
  6062  0DBA  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6063  0DBF  00AD               	movwf	?___ftmul
  6064  0DC0  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6065  0DC5  00AE               	movwf	?___ftmul+1
  6066  0DC6  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6067  0DCB  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  6068  0DCE  1BF8               	btfsc	?___awdiv+2,7
  6069  0DCF  03F9               	decf	?___awdiv+3,f
  6070  0DD0  266A  120A  158A   	fcall	___awdiv
  6071  0DD3  27BC               	fcall	PL10	;call to abstracted procedure
  6072  0DD4  3E5E               	addlw	low ((__powers_-__stringbase+54))
  6073  0DD5  0084               	movwf	4
  6074  0DD6  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6075  0DDB  00B0               	movwf	?___ftmul+3
  6076  0DDC  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6077  0DE1  00B1               	movwf	?___ftmul+4
  6078  0DE2  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6079  0DE7  00B2               	movwf	?___ftmul+5
  6080  0DE8  26EC  120A  158A   	fcall	___ftmul
  6081  0DEB  27A7  120A  158A   	fcall	PL8	;call to abstracted procedure
  6082  0DEE  1BF2               	btfsc	?___awmod+2,7
  6083  0DEF  03F3               	decf	?___awmod+3,f
  6084  0DF0  26AF  120A  158A   	fcall	___awmod
  6085  0DF3  27B4               	fcall	PL9	;call to abstracted procedure
  6086  0DF4  3E28               	addlw	low (__powers_-__stringbase)
  6087  0DF5  0084               	movwf	4
  6088  0DF6  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6089  0DFB  00AD               	movwf	?___ftmul
  6090  0DFC  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6091  0E01  00AE               	movwf	?___ftmul+1
  6092  0E02  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6093  0E07  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  6094  0E0A  26EC  120A  158A   	fcall	___ftmul
  6095  0E0D  2FC4               	ljmp	PL11	;call to abstracted procedure
  6096  0E0E                     l5804:	
  6097  0E0E  0846               	movf	scale@scl,w
  6098  0E0F  3A80               	xorlw	128
  6099  0E10  3E75               	addlw	-139
  6100  0E11  1C03               	skipc
  6101  0E12  2E53               	goto	l5810
  6102  0E13  300A               	movlw	10
  6103  0E14  00F0               	movwf	?___awmod
  6104  0E15  01F1               	clrf	?___awmod+1
  6105  0E16  0846               	movf	scale@scl,w
  6106  0E17  00F2               	movwf	?___awmod+2
  6107  0E18  01F3               	clrf	?___awmod+3
  6108  0E19  1BF2               	btfsc	?___awmod+2,7
  6109  0E1A  03F3               	decf	?___awmod+3,f
  6110  0E1B  26AF  120A  158A   	fcall	___awmod
  6111  0E1E  27B4               	fcall	PL9	;call to abstracted procedure
  6112  0E1F  3E28               	addlw	low (__powers_-__stringbase)
  6113  0E20  0084               	movwf	4
  6114  0E21  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6115  0E26  00AD               	movwf	?___ftmul
  6116  0E27  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6117  0E2C  00AE               	movwf	?___ftmul+1
  6118  0E2D  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6119  0E32  27F8  120A  158A   	fcall	PL27	;call to abstracted procedure
  6120  0E35  1BF8               	btfsc	?___awdiv+2,7
  6121  0E36  03F9               	decf	?___awdiv+3,f
  6122  0E37  266A  120A  158A   	fcall	___awdiv
  6123  0E3A  27BC               	fcall	PL10	;call to abstracted procedure
  6124  0E3B  3E43               	addlw	low ((__powers_-__stringbase+27))
  6125  0E3C  0084               	movwf	4
  6126  0E3D  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6127  0E42  00B0               	movwf	?___ftmul+3
  6128  0E43  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6129  0E48  00B1               	movwf	?___ftmul+4
  6130  0E49  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6131  0E4E  00B2               	movwf	?___ftmul+5
  6132  0E4F  26EC  120A  158A   	fcall	___ftmul
  6133  0E52  2FC4               	ljmp	PL11	;call to abstracted procedure
  6134  0E53                     l5810:	
  6135  0E53  3003               	movlw	3
  6136  0E54  00F9               	movwf	?___bmul
  6137  0E55  0846               	movf	scale@scl,w
  6138  0E56  275B               	fcall	___bmul
  6139  0E57  3E28               	addlw	low (__powers_-__stringbase)
  6140  0E58  0084               	movwf	4
  6141  0E59  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6142  0E5E  00BC               	movwf	?_scale
  6143  0E5F  160A  118A  200A   	fcall	stringdir
      +       120A  158A         
  6144  0E64  00BD               	movwf	?_scale+1
  6145  0E65  160A  118A  200A   	fcall	stringdir
  6146  0E68  00BE               	movwf	?_scale+2
  6147  0E69  0008               	return
  6148  0E6A                     __end_of_scale:	
  6149  0E6A                     __ptext738:	
  6150 ;; =============== function ___llmod ends ============
  6151                           
  6152                           
  6153 ;; *************** function ___awdiv *****************
  6154 ;; Defined at:
  6155 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;  divisor         2    6[COMMON] int 
  6158 ;;  dividend        2    8[COMMON] int 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;  quotient        2   12[COMMON] int 
  6161 ;;  sign            1   11[COMMON] unsigned char 
  6162 ;;  counter         1   10[COMMON] unsigned char 
  6163 ;; Return value:  Size  Location     Type
  6164 ;;                  2    6[COMMON] int 
  6165 ;; Registers used:
  6166 ;;		wreg, status,2, status,0
  6167 ;; Tracked objects:
  6168 ;;		On entry : 40/20
  6169 ;;		On exit  : 40/20
  6170 ;;		Unchanged: FFFBF/0
  6171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6172 ;;      Params:         4       0       0       0       0
  6173 ;;      Locals:         4       0       0       0       0
  6174 ;;      Temps:          0       0       0       0       0
  6175 ;;      Totals:         8       0       0       0       0
  6176 ;;Total ram usage:        8 bytes
  6177 ;; Hardware stack levels used:    1
  6178 ;; This function calls:
  6179 ;;		Nothing
  6180 ;; This function is called by:
  6181 ;;		_scale
  6182 ;;		_sprintf
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185  0E6A                     ___awdiv:	
  6186                           
  6187                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6188  0E6A  01FB               	clrf	___awdiv@sign
  6189  0E6B  1FF7               	btfss	___awdiv@divisor+1,7
  6190  0E6C  2E74               	goto	l5396
  6191  0E6D  09F6               	comf	___awdiv@divisor,f
  6192  0E6E  09F7               	comf	___awdiv@divisor+1,f
  6193  0E6F  0AF6               	incf	___awdiv@divisor,f
  6194  0E70  1903               	skipnz
  6195  0E71  0AF7               	incf	___awdiv@divisor+1,f
  6196  0E72  01FB               	clrf	___awdiv@sign
  6197  0E73  0AFB               	incf	___awdiv@sign,f
  6198  0E74                     l5396:	
  6199  0E74  1FF9               	btfss	___awdiv@dividend+1,7
  6200  0E75  2E7D               	goto	l5402
  6201  0E76  09F8               	comf	___awdiv@dividend,f
  6202  0E77  09F9               	comf	___awdiv@dividend+1,f
  6203  0E78  0AF8               	incf	___awdiv@dividend,f
  6204  0E79  1903               	skipnz
  6205  0E7A  0AF9               	incf	___awdiv@dividend+1,f
  6206  0E7B  3001               	movlw	1
  6207  0E7C  06FB               	xorwf	___awdiv@sign,f
  6208  0E7D                     l5402:	
  6209  0E7D  01FC               	clrf	___awdiv@quotient
  6210  0E7E  01FD               	clrf	___awdiv@quotient+1
  6211  0E7F  0877               	movf	___awdiv@divisor+1,w
  6212  0E80  0476               	iorwf	___awdiv@divisor,w
  6213  0E81  1903               	skipnz
  6214  0E82  2EA2               	goto	l5424
  6215  0E83  01FA               	clrf	___awdiv@counter
  6216  0E84                     L14:	
  6217  0E84  0AFA               	incf	___awdiv@counter,f
  6218  0E85  1BF7               	btfsc	___awdiv@divisor+1,7
  6219  0E86  2E8B               	goto	l5412
  6220  0E87  1003               	clrc
  6221  0E88  0DF6               	rlf	___awdiv@divisor,f
  6222  0E89  0DF7               	rlf	___awdiv@divisor+1,f
  6223  0E8A  2E84               	goto	L14
  6224  0E8B                     l5412:	
  6225  0E8B  1003               	clrc
  6226  0E8C  0DFC               	rlf	___awdiv@quotient,f
  6227  0E8D  0DFD               	rlf	___awdiv@quotient+1,f
  6228  0E8E  0877               	movf	___awdiv@divisor+1,w
  6229  0E8F  0279               	subwf	___awdiv@dividend+1,w
  6230  0E90  1D03               	skipz
  6231  0E91  2E94               	goto	u2435
  6232  0E92  0876               	movf	___awdiv@divisor,w
  6233  0E93  0278               	subwf	___awdiv@dividend,w
  6234  0E94                     u2435:	
  6235  0E94  1C03               	skipc
  6236  0E95  2E9E               	goto	L15
  6237  0E96  0876               	movf	___awdiv@divisor,w
  6238  0E97  02F8               	subwf	___awdiv@dividend,f
  6239  0E98  0877               	movf	___awdiv@divisor+1,w
  6240  0E99  1C03               	skipc
  6241  0E9A  03F9               	decf	___awdiv@dividend+1,f
  6242  0E9B  02F9               	subwf	___awdiv@dividend+1,f
  6243  0E9C  147C               	bsf	___awdiv@quotient,0
  6244  0E9D  1003               	clrc
  6245  0E9E                     L15:	
  6246  0E9E  0CF7               	rrf	___awdiv@divisor+1,f
  6247  0E9F  0CF6               	rrf	___awdiv@divisor,f
  6248  0EA0  0BFA               	decfsz	___awdiv@counter,f
  6249  0EA1  2E8B               	goto	l5412
  6250  0EA2                     l5424:	
  6251  0EA2  087B               	movf	___awdiv@sign,w
  6252  0EA3  1903               	btfsc	3,2
  6253  0EA4  2EAA               	goto	l5428
  6254  0EA5  09FC               	comf	___awdiv@quotient,f
  6255  0EA6  09FD               	comf	___awdiv@quotient+1,f
  6256  0EA7  0AFC               	incf	___awdiv@quotient,f
  6257  0EA8  1903               	skipnz
  6258  0EA9  0AFD               	incf	___awdiv@quotient+1,f
  6259  0EAA                     l5428:	
  6260  0EAA  087D               	movf	___awdiv@quotient+1,w
  6261  0EAB  00F7               	movwf	?___awdiv+1
  6262  0EAC  087C               	movf	___awdiv@quotient,w
  6263  0EAD  00F6               	movwf	?___awdiv
  6264  0EAE  0008               	return
  6265  0EAF                     __end_of___awdiv:	
  6266  0EAF                     __ptext733:	
  6267 ;; =============== function _pause ends ============
  6268                           
  6269                           
  6270 ;; *************** function ___awmod *****************
  6271 ;; Defined at:
  6272 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  divisor         2    0[COMMON] int 
  6275 ;;  dividend        2    2[COMMON] int 
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;  sign            1    5[COMMON] unsigned char 
  6278 ;;  counter         1    4[COMMON] unsigned char 
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  2    0[COMMON] int 
  6281 ;; Registers used:
  6282 ;;		wreg, status,2, status,0
  6283 ;; Tracked objects:
  6284 ;;		On entry : 60/0
  6285 ;;		On exit  : 60/0
  6286 ;;		Unchanged: FFF9F/0
  6287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6288 ;;      Params:         4       0       0       0       0
  6289 ;;      Locals:         2       0       0       0       0
  6290 ;;      Temps:          0       0       0       0       0
  6291 ;;      Totals:         6       0       0       0       0
  6292 ;;Total ram usage:        6 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; This function calls:
  6295 ;;		Nothing
  6296 ;; This function is called by:
  6297 ;;		_scale
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300  0EAF                     ___awmod:	
  6301                           
  6302                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6303  0EAF  01F5               	clrf	___awmod@sign
  6304  0EB0  1FF3               	btfss	___awmod@dividend+1,7
  6305  0EB1  2EB9               	goto	l5514
  6306  0EB2  09F2               	comf	___awmod@dividend,f
  6307  0EB3  09F3               	comf	___awmod@dividend+1,f
  6308  0EB4  0AF2               	incf	___awmod@dividend,f
  6309  0EB5  1903               	skipnz
  6310  0EB6  0AF3               	incf	___awmod@dividend+1,f
  6311  0EB7  01F5               	clrf	___awmod@sign
  6312  0EB8  0AF5               	incf	___awmod@sign,f
  6313  0EB9                     l5514:	
  6314  0EB9  1FF1               	btfss	___awmod@divisor+1,7
  6315  0EBA  2EC0               	goto	l5518
  6316  0EBB  09F0               	comf	___awmod@divisor,f
  6317  0EBC  09F1               	comf	___awmod@divisor+1,f
  6318  0EBD  0AF0               	incf	___awmod@divisor,f
  6319  0EBE  1903               	skipnz
  6320  0EBF  0AF1               	incf	___awmod@divisor+1,f
  6321  0EC0                     l5518:	
  6322  0EC0  0871               	movf	___awmod@divisor+1,w
  6323  0EC1  0470               	iorwf	___awmod@divisor,w
  6324  0EC2  1903               	skipnz
  6325  0EC3  2EDF               	goto	l5534
  6326  0EC4  01F4               	clrf	___awmod@counter
  6327  0EC5                     L7:	
  6328  0EC5  0AF4               	incf	___awmod@counter,f
  6329  0EC6  1BF1               	btfsc	___awmod@divisor+1,7
  6330  0EC7  2ECC               	goto	l5526
  6331  0EC8  1003               	clrc
  6332  0EC9  0DF0               	rlf	___awmod@divisor,f
  6333  0ECA  0DF1               	rlf	___awmod@divisor+1,f
  6334  0ECB  2EC5               	goto	L7
  6335  0ECC                     l5526:	
  6336  0ECC  0871               	movf	___awmod@divisor+1,w
  6337  0ECD  0273               	subwf	___awmod@dividend+1,w
  6338  0ECE  1D03               	skipz
  6339  0ECF  2ED2               	goto	u2625
  6340  0ED0  0870               	movf	___awmod@divisor,w
  6341  0ED1  0272               	subwf	___awmod@dividend,w
  6342  0ED2                     u2625:	
  6343  0ED2  1C03               	skipc
  6344  0ED3  2EDB               	goto	L8
  6345  0ED4  0870               	movf	___awmod@divisor,w
  6346  0ED5  02F2               	subwf	___awmod@dividend,f
  6347  0ED6  0871               	movf	___awmod@divisor+1,w
  6348  0ED7  1C03               	skipc
  6349  0ED8  03F3               	decf	___awmod@dividend+1,f
  6350  0ED9  02F3               	subwf	___awmod@dividend+1,f
  6351  0EDA  1003               	clrc
  6352  0EDB                     L8:	
  6353  0EDB  0CF1               	rrf	___awmod@divisor+1,f
  6354  0EDC  0CF0               	rrf	___awmod@divisor,f
  6355  0EDD  0BF4               	decfsz	___awmod@counter,f
  6356  0EDE  2ECC               	goto	l5526
  6357  0EDF                     l5534:	
  6358  0EDF  0875               	movf	___awmod@sign,w
  6359  0EE0  1903               	btfsc	3,2
  6360  0EE1  2EE7               	goto	l5538
  6361  0EE2  09F2               	comf	___awmod@dividend,f
  6362  0EE3  09F3               	comf	___awmod@dividend+1,f
  6363  0EE4  0AF2               	incf	___awmod@dividend,f
  6364  0EE5  1903               	skipnz
  6365  0EE6  0AF3               	incf	___awmod@dividend+1,f
  6366  0EE7                     l5538:	
  6367  0EE7  0873               	movf	___awmod@dividend+1,w
  6368  0EE8  00F1               	movwf	?___awmod+1
  6369  0EE9  0872               	movf	___awmod@dividend,w
  6370  0EEA  00F0               	movwf	?___awmod
  6371  0EEB  0008               	return
  6372  0EEC                     __end_of___awmod:	
  6373  0EEC                     __ptext729:	
  6374 ;; =============== function ___awtoft ends ============
  6375                           
  6376                           
  6377 ;; *************** function ___ftmul *****************
  6378 ;; Defined at:
  6379 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  f1              3   13[BANK0 ] float 
  6382 ;;  f2              3   16[BANK0 ] float 
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
  6385 ;;  sign            1   27[BANK0 ] unsigned char 
  6386 ;;  cntr            1   26[BANK0 ] unsigned char 
  6387 ;;  exp             1   22[BANK0 ] unsigned char 
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  3   13[BANK0 ] float 
  6390 ;; Registers used:
  6391 ;;		wreg, status,2, status,0, pclath, cstack
  6392 ;; Tracked objects:
  6393 ;;		On entry : 60/0
  6394 ;;		On exit  : 60/0
  6395 ;;		Unchanged: FFF9F/0
  6396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6397 ;;      Params:         0       6       0       0       0
  6398 ;;      Locals:         0       6       0       0       0
  6399 ;;      Temps:          0       3       0       0       0
  6400 ;;      Totals:         0      15       0       0       0
  6401 ;;Total ram usage:       15 bytes
  6402 ;; Hardware stack levels used:    1
  6403 ;; Hardware stack levels required when called:    1
  6404 ;; This function calls:
  6405 ;;		___ftpack
  6406 ;; This function is called by:
  6407 ;;		_main
  6408 ;;		_fround
  6409 ;;		_scale
  6410 ;;		_sprintf
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413  0EEC                     ___ftmul:	
  6414                           
  6415                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6416  0EEC  082D               	movf	___ftmul@f1,w
  6417  0EED  00B3               	movwf	??___ftmul
  6418  0EEE  082E               	movf	___ftmul@f1+1,w
  6419  0EEF  00B4               	movwf	??___ftmul+1
  6420  0EF0  082F               	movf	___ftmul@f1+2,w
  6421  0EF1  00B5               	movwf	??___ftmul+2
  6422  0EF2  1003               	clrc
  6423  0EF3  0D34               	rlf	??___ftmul+1,w
  6424  0EF4  0D35               	rlf	??___ftmul+2,w
  6425  0EF5  00B6               	movwf	___ftmul@exp
  6426  0EF6  08B6               	movf	___ftmul@exp,f
  6427  0EF7  1D03               	skipz
  6428  0EF8  2EFD               	goto	l5654
  6429  0EF9  01AD               	clrf	?___ftmul
  6430  0EFA  01AE               	clrf	?___ftmul+1
  6431  0EFB  01AF               	clrf	?___ftmul+2
  6432  0EFC  0008               	return
  6433  0EFD                     l5654:	
  6434  0EFD  0830               	movf	___ftmul@f2,w
  6435  0EFE  00B3               	movwf	??___ftmul
  6436  0EFF  0831               	movf	___ftmul@f2+1,w
  6437  0F00  00B4               	movwf	??___ftmul+1
  6438  0F01  0832               	movf	___ftmul@f2+2,w
  6439  0F02  00B5               	movwf	??___ftmul+2
  6440  0F03  1003               	clrc
  6441  0F04  0D34               	rlf	??___ftmul+1,w
  6442  0F05  0D35               	rlf	??___ftmul+2,w
  6443  0F06  00BB               	movwf	___ftmul@sign
  6444  0F07  08BB               	movf	___ftmul@sign,f
  6445  0F08  1D03               	skipz
  6446  0F09  2F0E               	goto	l5660
  6447  0F0A  01AD               	clrf	?___ftmul
  6448  0F0B  01AE               	clrf	?___ftmul+1
  6449  0F0C  01AF               	clrf	?___ftmul+2
  6450  0F0D  0008               	return
  6451  0F0E                     l5660:	
  6452  0F0E  083B               	movf	___ftmul@sign,w
  6453  0F0F  3E7B               	addlw	123
  6454  0F10  07B6               	addwf	___ftmul@exp,f
  6455  0F11  082F               	movf	___ftmul@f1+2,w
  6456  0F12  00BB               	movwf	___ftmul@sign
  6457  0F13  0832               	movf	___ftmul@f2+2,w
  6458  0F14  06BB               	xorwf	___ftmul@sign,f
  6459  0F15  3080               	movlw	128
  6460  0F16  05BB               	andwf	___ftmul@sign,f
  6461  0F17  3007               	movlw	7
  6462  0F18  17AE               	bsf	___ftmul@f1+1,7
  6463  0F19  17B1               	bsf	___ftmul@f2+1,7
  6464  0F1A  01B2               	clrf	___ftmul@f2+2
  6465  0F1B  01B7               	clrf	___ftmul@f3_as_product
  6466  0F1C  01B8               	clrf	___ftmul@f3_as_product+1
  6467  0F1D  01B9               	clrf	___ftmul@f3_as_product+2
  6468  0F1E  00BA               	movwf	___ftmul@cntr
  6469  0F1F                     l5678:	
  6470  0F1F  1C2D               	btfss	___ftmul@f1,0
  6471  0F20  2F29               	goto	l5682
  6472  0F21  0830               	movf	___ftmul@f2,w
  6473  0F22  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  6474  0F25  1803               	skipnc
  6475  0F26  0A32               	incf	___ftmul@f2+2,w
  6476  0F27  1D03               	btfss	3,2
  6477  0F28  07B9               	addwf	___ftmul@f3_as_product+2,f
  6478  0F29                     l5682:	
  6479  0F29  1003               	clrc
  6480  0F2A  0CAF               	rrf	___ftmul@f1+2,f
  6481  0F2B  0CAE               	rrf	___ftmul@f1+1,f
  6482  0F2C  0CAD               	rrf	___ftmul@f1,f
  6483  0F2D  1003               	clrc
  6484  0F2E  0DB0               	rlf	___ftmul@f2,f
  6485  0F2F  0DB1               	rlf	___ftmul@f2+1,f
  6486  0F30  0DB2               	rlf	___ftmul@f2+2,f
  6487  0F31  0BBA               	decfsz	___ftmul@cntr,f
  6488  0F32  2F1F               	goto	l5678
  6489  0F33  3009               	movlw	9
  6490  0F34  00BA               	movwf	___ftmul@cntr
  6491  0F35                     l5690:	
  6492  0F35  1C2D               	btfss	___ftmul@f1,0
  6493  0F36  2F3F               	goto	l5694
  6494  0F37  0830               	movf	___ftmul@f2,w
  6495  0F38  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  6496  0F3B  1803               	skipnc
  6497  0F3C  0A32               	incf	___ftmul@f2+2,w
  6498  0F3D  1D03               	btfss	3,2
  6499  0F3E  07B9               	addwf	___ftmul@f3_as_product+2,f
  6500  0F3F                     l5694:	
  6501  0F3F  1003               	clrc
  6502  0F40  0CAF               	rrf	___ftmul@f1+2,f
  6503  0F41  0CAE               	rrf	___ftmul@f1+1,f
  6504  0F42  0CAD               	rrf	___ftmul@f1,f
  6505  0F43  1003               	clrc
  6506  0F44  0CB9               	rrf	___ftmul@f3_as_product+2,f
  6507  0F45  0CB8               	rrf	___ftmul@f3_as_product+1,f
  6508  0F46  0CB7               	rrf	___ftmul@f3_as_product,f
  6509  0F47  0BBA               	decfsz	___ftmul@cntr,f
  6510  0F48  2F35               	goto	l5690
  6511  0F49  0837               	movf	___ftmul@f3_as_product,w
  6512  0F4A  00F0               	movwf	?___ftpack
  6513  0F4B  0838               	movf	___ftmul@f3_as_product+1,w
  6514  0F4C  00F1               	movwf	?___ftpack+1
  6515  0F4D  0839               	movf	___ftmul@f3_as_product+2,w
  6516  0F4E  00F2               	movwf	?___ftpack+2
  6517  0F4F  0836               	movf	___ftmul@exp,w
  6518  0F50  00F3               	movwf	?___ftpack+3
  6519  0F51  083B               	movf	___ftmul@sign,w
  6520  0F52  00F4               	movwf	?___ftpack+4
  6521  0F53  2769               	fcall	___ftpack
  6522  0F54  0870               	movf	?___ftpack,w
  6523  0F55  00AD               	movwf	?___ftmul
  6524  0F56  0871               	movf	?___ftpack+1,w
  6525  0F57  00AE               	movwf	?___ftmul+1
  6526  0F58  0872               	movf	?___ftpack+2,w
  6527  0F59  00AF               	movwf	?___ftmul+2
  6528  0F5A  0008               	return
  6529  0F5B                     __end_of___ftmul:	
  6530  0F5B                     __ptext744:	
  6531 ;; =============== function ___wmul ends ============
  6532                           
  6533                           
  6534 ;; *************** function ___bmul *****************
  6535 ;; Defined at:
  6536 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\bmul.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;  multiplier      1    wreg     unsigned char 
  6539 ;;  multiplicand    1    9[COMMON] unsigned char 
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  multiplier      1   11[COMMON] unsigned char 
  6542 ;;  product         1   10[COMMON] unsigned char 
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      unsigned char 
  6545 ;; Registers used:
  6546 ;;		wreg, status,2, status,0
  6547 ;; Tracked objects:
  6548 ;;		On entry : 60/0
  6549 ;;		On exit  : 60/0
  6550 ;;		Unchanged: FFF9F/0
  6551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6552 ;;      Params:         1       0       0       0       0
  6553 ;;      Locals:         2       0       0       0       0
  6554 ;;      Temps:          0       0       0       0       0
  6555 ;;      Totals:         3       0       0       0       0
  6556 ;;Total ram usage:        3 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; This function calls:
  6559 ;;		Nothing
  6560 ;; This function is called by:
  6561 ;;		_fround
  6562 ;;		_scale
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565  0F5B                     ___bmul:	
  6566                           
  6567                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6568                           ;___bmul@multiplier stored from wreg
  6569  0F5B  00FB               	movwf	___bmul@multiplier
  6570  0F5C  01FA               	clrf	___bmul@product
  6571  0F5D                     l5250:	
  6572  0F5D  0879               	movf	___bmul@multiplicand,w
  6573  0F5E  187B               	btfsc	___bmul@multiplier,0
  6574  0F5F  07FA               	addwf	___bmul@product,f
  6575  0F60  1003               	clrc
  6576  0F61  0DF9               	rlf	___bmul@multiplicand,f
  6577  0F62  1003               	clrc
  6578  0F63  0CFB               	rrf	___bmul@multiplier,f
  6579  0F64  08FB               	movf	___bmul@multiplier,f
  6580  0F65  1D03               	skipz
  6581  0F66  2F5D               	goto	l5250
  6582  0F67  087A               	movf	___bmul@product,w
  6583  0F68  0008               	return
  6584  0F69                     __end_of___bmul:	
  6585  0F69                     __ptext740:	
  6586 ;; =============== function ___fttol ends ============
  6587                           
  6588                           
  6589 ;; *************** function ___ftpack *****************
  6590 ;; Defined at:
  6591 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  arg             3    0[COMMON] unsigned um
  6594 ;;  exp             1    3[COMMON] unsigned char 
  6595 ;;  sign            1    4[COMMON] unsigned char 
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;		None
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  3    0[COMMON] float 
  6600 ;; Registers used:
  6601 ;;		wreg, status,2, status,0
  6602 ;; Tracked objects:
  6603 ;;		On entry : 40/20
  6604 ;;		On exit  : 40/20
  6605 ;;		Unchanged: FFFBF/0
  6606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6607 ;;      Params:         5       0       0       0       0
  6608 ;;      Locals:         0       0       0       0       0
  6609 ;;      Temps:          3       0       0       0       0
  6610 ;;      Totals:         8       0       0       0       0
  6611 ;;Total ram usage:        8 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; This function calls:
  6614 ;;		Nothing
  6615 ;; This function is called by:
  6616 ;;		___ftadd
  6617 ;;		___ftmul
  6618 ;;		___awtoft
  6619 ;;		___lltoft
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622  0F69                     ___ftpack:	
  6623                           
  6624                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6625  0F69  0873               	movf	___ftpack@exp,w
  6626  0F6A  1903               	btfsc	3,2
  6627  0F6B  2F71               	goto	l5326
  6628  0F6C  0872               	movf	___ftpack@arg+2,w
  6629  0F6D  0471               	iorwf	___ftpack@arg+1,w
  6630  0F6E  0470               	iorwf	___ftpack@arg,w
  6631  0F6F  1D03               	skipz
  6632  0F70  2F7A               	goto	l5332
  6633  0F71                     l5326:	
  6634  0F71  01F0               	clrf	?___ftpack
  6635  0F72  01F1               	clrf	?___ftpack+1
  6636  0F73  01F2               	clrf	?___ftpack+2
  6637  0F74  0008               	return
  6638  0F75                     l5330:	
  6639  0F75  0AF3               	incf	___ftpack@exp,f
  6640  0F76  1003               	clrc
  6641  0F77  0CF2               	rrf	___ftpack@arg+2,f
  6642  0F78  0CF1               	rrf	___ftpack@arg+1,f
  6643  0F79  0CF0               	rrf	___ftpack@arg,f
  6644  0F7A                     l5332:	
  6645  0F7A  30FE               	movlw	254
  6646  0F7B  0572               	andwf	___ftpack@arg+2,w
  6647  0F7C  1903               	btfsc	3,2
  6648  0F7D  2F89               	goto	l5336
  6649  0F7E  2F75               	goto	l5330
  6650  0F7F                     l5334:	
  6651  0F7F  0AF3               	incf	___ftpack@exp,f
  6652  0F80  0AF0               	incf	___ftpack@arg,f
  6653  0F81  1903               	skipnz
  6654  0F82  0AF1               	incf	___ftpack@arg+1,f
  6655  0F83  1903               	skipnz
  6656  0F84  0AF2               	incf	___ftpack@arg+2,f
  6657  0F85  1003               	clrc
  6658  0F86  0CF2               	rrf	___ftpack@arg+2,f
  6659  0F87  0CF1               	rrf	___ftpack@arg+1,f
  6660  0F88  0CF0               	rrf	___ftpack@arg,f
  6661  0F89                     l5336:	
  6662  0F89  30FF               	movlw	255
  6663  0F8A  0572               	andwf	___ftpack@arg+2,w
  6664  0F8B  1903               	btfsc	3,2
  6665  0F8C  2F93               	goto	l5340
  6666  0F8D  2F7F               	goto	l5334
  6667  0F8E                     l5338:	
  6668  0F8E  03F3               	decf	___ftpack@exp,f
  6669  0F8F  1003               	clrc
  6670  0F90  0DF0               	rlf	___ftpack@arg,f
  6671  0F91  0DF1               	rlf	___ftpack@arg+1,f
  6672  0F92  0DF2               	rlf	___ftpack@arg+2,f
  6673  0F93                     l5340:	
  6674  0F93  1FF1               	btfss	___ftpack@arg+1,7
  6675  0F94  2F8E               	goto	l5338
  6676  0F95  1C73               	btfss	___ftpack@exp,0
  6677  0F96  13F1               	bcf	___ftpack@arg+1,7
  6678  0F97  1003               	clrc
  6679  0F98  0CF3               	rrf	___ftpack@exp,f
  6680  0F99  0873               	movf	___ftpack@exp,w
  6681  0F9A  00F7               	movwf	??___ftpack+2
  6682  0F9B  01F6               	clrf	??___ftpack+1
  6683  0F9C  01F5               	clrf	??___ftpack
  6684  0F9D  0875               	movf	??___ftpack,w
  6685  0F9E  04F0               	iorwf	___ftpack@arg,f
  6686  0F9F  0876               	movf	??___ftpack+1,w
  6687  0FA0  04F1               	iorwf	___ftpack@arg+1,f
  6688  0FA1  0877               	movf	??___ftpack+2,w
  6689  0FA2  04F2               	iorwf	___ftpack@arg+2,f
  6690  0FA3  0874               	movf	___ftpack@sign,w
  6691  0FA4  1D03               	skipz
  6692  0FA5  17F2               	bsf	___ftpack@arg+2,7
  6693  0FA6  0008               	return
  6694  0FA7                     __end_of___ftpack:	
  6695  0FA7                     PL8:	
  6696  0FA7  082D               	movf	?___ftmul,w
  6697  0FA8  00C3               	movwf	_scale$2943
  6698  0FA9  082E               	movf	?___ftmul+1,w
  6699  0FAA  00C4               	movwf	_scale$2943+1
  6700  0FAB  082F               	movf	?___ftmul+2,w
  6701  0FAC  00C5               	movwf	_scale$2943+2
  6702  0FAD  300A               	movlw	10
  6703  0FAE  00F0               	movwf	?___awmod
  6704  0FAF  01F1               	clrf	?___awmod+1
  6705  0FB0  0846               	movf	scale@scl,w
  6706  0FB1  00F2               	movwf	?___awmod+2
  6707  0FB2  01F3               	clrf	?___awmod+3
  6708  0FB3  0008               	return
  6709  0FB4                     PL9:	
  6710  0FB4  0870               	movf	?___awmod,w
  6711  0FB5  00BF               	movwf	??_scale
  6712  0FB6  0871               	movf	?___awmod+1,w
  6713  0FB7  00C0               	movwf	??_scale+1
  6714  0FB8  083F               	movf	??_scale,w
  6715  0FB9  073F               	addwf	??_scale,w
  6716  0FBA  073F               	addwf	??_scale,w
  6717  0FBB  0008               	return
  6718  0FBC                     PL10:	
  6719  0FBC  0876               	movf	?___awdiv,w
  6720  0FBD  00C1               	movwf	??_scale+2
  6721  0FBE  0877               	movf	?___awdiv+1,w
  6722  0FBF  00C2               	movwf	??_scale+3
  6723  0FC0  0841               	movf	??_scale+2,w
  6724  0FC1  0741               	addwf	??_scale+2,w
  6725  0FC2  0741               	addwf	??_scale+2,w
  6726  0FC3  0008               	return
  6727  0FC4                     PL11:	
  6728  0FC4  082D               	movf	?___ftmul,w
  6729  0FC5  00BC               	movwf	?_scale
  6730  0FC6  082E               	movf	?___ftmul+1,w
  6731  0FC7  00BD               	movwf	?_scale+1
  6732  0FC8  082F               	movf	?___ftmul+2,w
  6733  0FC9  00BE               	movwf	?_scale+2
  6734  0FCA  0008               	return
  6735  0FCB                     PL16:	
  6736  0FCB  00F6               	movwf	?___awdiv
  6737  0FCC  01F7               	clrf	?___awdiv+1
  6738  0FCD  0846               	movf	scale@scl,w
  6739  0FCE  00F2               	movwf	?___awmod+2
  6740  0FCF  01F3               	clrf	?___awmod+3
  6741  0FD0  1BF2               	btfsc	?___awmod+2,7
  6742  0FD1  03F3               	decf	?___awmod+3,f
  6743  0FD2  3064               	movlw	100
  6744  0FD3  00F0               	movwf	?___awmod
  6745  0FD4  01F1               	clrf	?___awmod+1
  6746  0FD5  0008               	return
  6747  0FD6                     PL18:	
  6748  0FD6  07B7               	addwf	___ftmul@f3_as_product,f
  6749  0FD7  0831               	movf	___ftmul@f2+1,w
  6750  0FD8  1103               	clrz
  6751  0FD9  1803               	skipnc
  6752  0FDA  0A31               	incf	___ftmul@f2+1,w
  6753  0FDB  1D03               	btfss	3,2
  6754  0FDC  07B8               	addwf	___ftmul@f3_as_product+1,f
  6755  0FDD  0832               	movf	___ftmul@f2+2,w
  6756  0FDE  1103               	clrz
  6757  0FDF  0008               	return
  6758  0FE0                     PL23:	
  6759  0FE0  0876               	movf	?___awdiv,w
  6760  0FE1  00BF               	movwf	??_scale
  6761  0FE2  0877               	movf	?___awdiv+1,w
  6762  0FE3  00C0               	movwf	??_scale+1
  6763  0FE4  083F               	movf	??_scale,w
  6764  0FE5  073F               	addwf	??_scale,w
  6765  0FE6  073F               	addwf	??_scale,w
  6766  0FE7  0008               	return
  6767  0FE8                     PL24:	
  6768  0FE8  00AF               	movwf	?___ftmul+2
  6769  0FE9  0843               	movf	_scale$2943,w
  6770  0FEA  00B0               	movwf	?___ftmul+3
  6771  0FEB  0844               	movf	_scale$2943+1,w
  6772  0FEC  00B1               	movwf	?___ftmul+4
  6773  0FED  0845               	movf	_scale$2943+2,w
  6774  0FEE  00B2               	movwf	?___ftmul+5
  6775  0FEF  0008               	return
  6776  0FF0                     PL25:	
  6777  0FF0  00AF               	movwf	?___ftmul+2
  6778  0FF1  3064               	movlw	100
  6779  0FF2  00F6               	movwf	?___awdiv
  6780  0FF3  01F7               	clrf	?___awdiv+1
  6781  0FF4  0846               	movf	scale@scl,w
  6782  0FF5  00F8               	movwf	?___awdiv+2
  6783  0FF6  01F9               	clrf	?___awdiv+3
  6784  0FF7  0008               	return
  6785  0FF8                     PL27:	
  6786  0FF8  00AF               	movwf	?___ftmul+2
  6787  0FF9  300A               	movlw	10
  6788  0FFA  00F6               	movwf	?___awdiv
  6789  0FFB  01F7               	clrf	?___awdiv+1
  6790  0FFC  0846               	movf	scale@scl,w
  6791  0FFD  00F8               	movwf	?___awdiv+2
  6792  0FFE  01F9               	clrf	?___awdiv+3
  6793  0FFF  0008               	return
  6794                           
  6795                           	psect	text730
  6796  173E                     __ptext730:	
  6797 ;; =============== function ___ftmul ends ============
  6798                           
  6799                           
  6800 ;; *************** function ___ftadd *****************
  6801 ;; Defined at:
  6802 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftadd.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;  f1              3   28[BANK0 ] float 
  6805 ;;  f2              3   31[BANK0 ] float 
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  exp1            1   39[BANK0 ] unsigned char 
  6808 ;;  exp2            1   38[BANK0 ] unsigned char 
  6809 ;;  sign            1   37[BANK0 ] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  3   28[BANK0 ] float 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2, status,0, pclath, cstack
  6814 ;; Tracked objects:
  6815 ;;		On entry : 60/0
  6816 ;;		On exit  : 60/0
  6817 ;;		Unchanged: FFF9F/0
  6818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6819 ;;      Params:         0       6       0       0       0
  6820 ;;      Locals:         0       3       0       0       0
  6821 ;;      Temps:          0       3       0       0       0
  6822 ;;      Totals:         0      12       0       0       0
  6823 ;;Total ram usage:       12 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:    1
  6826 ;; This function calls:
  6827 ;;		___ftpack
  6828 ;; This function is called by:
  6829 ;;		_sprintf
  6830 ;;		___ftsub
  6831 ;; This function uses a non-reentrant model
  6832 ;;
  6833  173E                     ___ftadd:	
  6834                           
  6835                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6836  173E  083C               	movf	___ftadd@f1,w
  6837  173F  00C2               	movwf	??___ftadd
  6838  1740  083D               	movf	___ftadd@f1+1,w
  6839  1741  00C3               	movwf	??___ftadd+1
  6840  1742  083E               	movf	___ftadd@f1+2,w
  6841  1743  00C4               	movwf	??___ftadd+2
  6842  1744  1003               	clrc
  6843  1745  0D43               	rlf	??___ftadd+1,w
  6844  1746  0D44               	rlf	??___ftadd+2,w
  6845  1747  00C7               	movwf	___ftadd@exp1
  6846  1748  083F               	movf	___ftadd@f2,w
  6847  1749  00C2               	movwf	??___ftadd
  6848  174A  0840               	movf	___ftadd@f2+1,w
  6849  174B  00C3               	movwf	??___ftadd+1
  6850  174C  0841               	movf	___ftadd@f2+2,w
  6851  174D  00C4               	movwf	??___ftadd+2
  6852  174E  1003               	clrc
  6853  174F  0D43               	rlf	??___ftadd+1,w
  6854  1750  0D44               	rlf	??___ftadd+2,w
  6855  1751  00C6               	movwf	___ftadd@exp2
  6856  1752  0847               	movf	___ftadd@exp1,w
  6857  1753  1903               	btfsc	3,2
  6858  1754  2F61               	goto	l5578
  6859  1755  0846               	movf	___ftadd@exp2,w
  6860  1756  0247               	subwf	___ftadd@exp1,w
  6861  1757  0846               	movf	___ftadd@exp2,w
  6862  1758  1803               	skipnc
  6863  1759  2F69               	goto	L6
  6864  175A  00C2               	movwf	??___ftadd
  6865  175B  0847               	movf	___ftadd@exp1,w
  6866  175C  02C2               	subwf	??___ftadd,f
  6867  175D  3019               	movlw	25
  6868  175E  0242               	subwf	??___ftadd,w
  6869  175F  1C03               	skipc
  6870  1760  2F68               	goto	l5582
  6871  1761                     l5578:	
  6872  1761  083F               	movf	___ftadd@f2,w
  6873  1762  00BC               	movwf	?___ftadd
  6874  1763  0840               	movf	___ftadd@f2+1,w
  6875  1764  00BD               	movwf	?___ftadd+1
  6876  1765  0841               	movf	___ftadd@f2+2,w
  6877  1766  00BE               	movwf	?___ftadd+2
  6878  1767  0008               	return
  6879  1768                     l5582:	
  6880  1768  0846               	movf	___ftadd@exp2,w
  6881  1769                     L6:	
  6882  1769  1903               	btfsc	3,2
  6883  176A  0008               	return
  6884  176B  0847               	movf	___ftadd@exp1,w
  6885  176C  0246               	subwf	___ftadd@exp2,w
  6886  176D  1803               	skipnc
  6887  176E  2F77               	goto	l5588
  6888  176F  0847               	movf	___ftadd@exp1,w
  6889  1770  00C2               	movwf	??___ftadd
  6890  1771  0846               	movf	___ftadd@exp2,w
  6891  1772  02C2               	subwf	??___ftadd,f
  6892  1773  3019               	movlw	25
  6893  1774  0242               	subwf	??___ftadd,w
  6894  1775  1803               	btfsc	3,0
  6895  1776  0008               	return
  6896  1777                     l5588:	
  6897  1777  3006               	movlw	6
  6898  1778  00C5               	movwf	___ftadd@sign
  6899  1779  1BBE               	btfsc	___ftadd@f1+2,7
  6900  177A  17C5               	bsf	___ftadd@sign,7
  6901  177B  1BC1               	btfsc	___ftadd@f2+2,7
  6902  177C  1745               	bsf	___ftadd@sign,6
  6903  177D  17BD               	bsf	___ftadd@f1+1,7
  6904  177E  01BE               	clrf	___ftadd@f1+2
  6905  177F  17C0               	bsf	___ftadd@f2+1,7
  6906  1780  01C1               	clrf	___ftadd@f2+2
  6907  1781  0846               	movf	___ftadd@exp2,w
  6908  1782  0247               	subwf	___ftadd@exp1,w
  6909  1783  1803               	skipnc
  6910  1784  2F9E               	goto	l5610
  6911  1785                     l5600:	
  6912  1785  1003               	clrc
  6913  1786  0DBF               	rlf	___ftadd@f2,f
  6914  1787  0DC0               	rlf	___ftadd@f2+1,f
  6915  1788  0DC1               	rlf	___ftadd@f2+2,f
  6916  1789  03C6               	decf	___ftadd@exp2,f
  6917  178A  0846               	movf	___ftadd@exp2,w
  6918  178B  0647               	xorwf	___ftadd@exp1,w
  6919  178C  1903               	skipnz
  6920  178D  2F99               	goto	l5608
  6921  178E  03C5               	decf	___ftadd@sign,f
  6922  178F  0845               	movf	___ftadd@sign,w
  6923  1790  3907               	andlw	7
  6924  1791  1903               	btfsc	3,2
  6925  1792  2F99               	goto	l5608
  6926  1793  2F85               	goto	l5600
  6927  1794                     l5606:	
  6928  1794  1003               	clrc
  6929  1795  0CBE               	rrf	___ftadd@f1+2,f
  6930  1796  0CBD               	rrf	___ftadd@f1+1,f
  6931  1797  0CBC               	rrf	___ftadd@f1,f
  6932  1798  0AC7               	incf	___ftadd@exp1,f
  6933  1799                     l5608:	
  6934  1799  0847               	movf	___ftadd@exp1,w
  6935  179A  0646               	xorwf	___ftadd@exp2,w
  6936  179B  1903               	btfsc	3,2
  6937  179C  2FBA               	goto	l2373
  6938  179D  2F94               	goto	l5606
  6939  179E                     l5610:	
  6940  179E  0847               	movf	___ftadd@exp1,w
  6941  179F  0246               	subwf	___ftadd@exp2,w
  6942  17A0  1803               	skipnc
  6943  17A1  2FBA               	goto	l2373
  6944  17A2                     l5612:	
  6945  17A2  1003               	clrc
  6946  17A3  0DBC               	rlf	___ftadd@f1,f
  6947  17A4  0DBD               	rlf	___ftadd@f1+1,f
  6948  17A5  0DBE               	rlf	___ftadd@f1+2,f
  6949  17A6  03C7               	decf	___ftadd@exp1,f
  6950  17A7  0846               	movf	___ftadd@exp2,w
  6951  17A8  0647               	xorwf	___ftadd@exp1,w
  6952  17A9  1903               	skipnz
  6953  17AA  2FB6               	goto	l5620
  6954  17AB  03C5               	decf	___ftadd@sign,f
  6955  17AC  0845               	movf	___ftadd@sign,w
  6956  17AD  3907               	andlw	7
  6957  17AE  1903               	btfsc	3,2
  6958  17AF  2FB6               	goto	l5620
  6959  17B0  2FA2               	goto	l5612
  6960  17B1                     l5618:	
  6961  17B1  1003               	clrc
  6962  17B2  0CC1               	rrf	___ftadd@f2+2,f
  6963  17B3  0CC0               	rrf	___ftadd@f2+1,f
  6964  17B4  0CBF               	rrf	___ftadd@f2,f
  6965  17B5  0AC6               	incf	___ftadd@exp2,f
  6966  17B6                     l5620:	
  6967  17B6  0847               	movf	___ftadd@exp1,w
  6968  17B7  0646               	xorwf	___ftadd@exp2,w
  6969  17B8  1D03               	skipz
  6970  17B9  2FB1               	goto	l5618
  6971  17BA                     l2373:	
  6972  17BA  1FC5               	btfss	___ftadd@sign,7
  6973  17BB  2FC5               	goto	l5626
  6974  17BC  30FF               	movlw	255
  6975  17BD  06BC               	xorwf	___ftadd@f1,f
  6976  17BE  06BD               	xorwf	___ftadd@f1+1,f
  6977  17BF  06BE               	xorwf	___ftadd@f1+2,f
  6978  17C0  0ABC               	incf	___ftadd@f1,f
  6979  17C1  1903               	skipnz
  6980  17C2  0ABD               	incf	___ftadd@f1+1,f
  6981  17C3  1903               	skipnz
  6982  17C4  0ABE               	incf	___ftadd@f1+2,f
  6983  17C5                     l5626:	
  6984  17C5  1F45               	btfss	___ftadd@sign,6
  6985  17C6  2FD0               	goto	l5632
  6986  17C7  30FF               	movlw	255
  6987  17C8  06BF               	xorwf	___ftadd@f2,f
  6988  17C9  06C0               	xorwf	___ftadd@f2+1,f
  6989  17CA  06C1               	xorwf	___ftadd@f2+2,f
  6990  17CB  0ABF               	incf	___ftadd@f2,f
  6991  17CC  1903               	skipnz
  6992  17CD  0AC0               	incf	___ftadd@f2+1,f
  6993  17CE  1903               	skipnz
  6994  17CF  0AC1               	incf	___ftadd@f2+2,f
  6995  17D0                     l5632:	
  6996  17D0  01C5               	clrf	___ftadd@sign
  6997  17D1  083C               	movf	___ftadd@f1,w
  6998  17D2  07BF               	addwf	___ftadd@f2,f
  6999  17D3  083D               	movf	___ftadd@f1+1,w
  7000  17D4  1103               	clrz
  7001  17D5  1803               	skipnc
  7002  17D6  0A3D               	incf	___ftadd@f1+1,w
  7003  17D7  1D03               	btfss	3,2
  7004  17D8  07C0               	addwf	___ftadd@f2+1,f
  7005  17D9  083E               	movf	___ftadd@f1+2,w
  7006  17DA  1103               	clrz
  7007  17DB  1803               	skipnc
  7008  17DC  0A3E               	incf	___ftadd@f1+2,w
  7009  17DD  1D03               	btfss	3,2
  7010  17DE  07C1               	addwf	___ftadd@f2+2,f
  7011  17DF  1FC1               	btfss	___ftadd@f2+2,7
  7012  17E0  2FEC               	goto	l5644
  7013  17E1  30FF               	movlw	255
  7014  17E2  06BF               	xorwf	___ftadd@f2,f
  7015  17E3  06C0               	xorwf	___ftadd@f2+1,f
  7016  17E4  06C1               	xorwf	___ftadd@f2+2,f
  7017  17E5  0ABF               	incf	___ftadd@f2,f
  7018  17E6  1903               	skipnz
  7019  17E7  0AC0               	incf	___ftadd@f2+1,f
  7020  17E8  1903               	skipnz
  7021  17E9  0AC1               	incf	___ftadd@f2+2,f
  7022  17EA  01C5               	clrf	___ftadd@sign
  7023  17EB  0AC5               	incf	___ftadd@sign,f
  7024  17EC                     l5644:	
  7025  17EC  083F               	movf	___ftadd@f2,w
  7026  17ED  00F0               	movwf	?___ftpack
  7027  17EE  0840               	movf	___ftadd@f2+1,w
  7028  17EF  00F1               	movwf	?___ftpack+1
  7029  17F0  0841               	movf	___ftadd@f2+2,w
  7030  17F1  00F2               	movwf	?___ftpack+2
  7031  17F2  0847               	movf	___ftadd@exp1,w
  7032  17F3  00F3               	movwf	?___ftpack+3
  7033  17F4  0845               	movf	___ftadd@sign,w
  7034  17F5  00F4               	movwf	?___ftpack+4
  7035  17F6  120A  158A  2769   	fcall	___ftpack
  7036  17F9  0870               	movf	?___ftpack,w
  7037  17FA  00BC               	movwf	?___ftadd
  7038  17FB  0871               	movf	?___ftpack+1,w
  7039  17FC  00BD               	movwf	?___ftadd+1
  7040  17FD  0872               	movf	?___ftpack+2,w
  7041  17FE  00BE               	movwf	?___ftadd+2
  7042  17FF  0008               	return
  7043  1800                     __end_of___ftadd:	
  7044                           
  7045                           	psect	text745
  7046  167C                     __ptext745:	
  7047 ;; =============== function ___bmul ends ============
  7048                           
  7049                           
  7050 ;; *************** function __div_to_l_ *****************
  7051 ;; Defined at:
  7052 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fldivl.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;  f1              3    0[COMMON] unsigned char 
  7055 ;;  f2              3    3[COMMON] unsigned char 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;  quot            4    0[BANK0 ] unsigned long 
  7058 ;;  exp1            1    5[BANK0 ] unsigned char 
  7059 ;;  cntr            1    4[BANK0 ] unsigned char 
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  4    0[COMMON] unsigned long 
  7062 ;; Registers used:
  7063 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 60/0
  7067 ;;		Unchanged: FFF9F/0
  7068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7069 ;;      Params:         6       0       0       0       0
  7070 ;;      Locals:         0       6       0       0       0
  7071 ;;      Temps:          8       0       0       0       0
  7072 ;;      Totals:        14       6       0       0       0
  7073 ;;Total ram usage:       20 bytes
  7074 ;; Hardware stack levels used:    1
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		_sprintf
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081  167C                     __div_to_l_:	
  7082                           
  7083                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  7084  167C  3070               	movlw	low __div_to_l_@f1
  7085  167D  2731  160A  118A   	fcall	PL2	;call to abstracted procedure
  7086  1680  1003               	clrc
  7087  1681  0D78               	rlf	??__div_to_l_+2,w
  7088  1682  0D79               	rlf	??__div_to_l_+3,w
  7089  1683  1283               	bcf	3,5	;RP0=0, select bank0
  7090  1684  1303               	bcf	3,6	;RP1=0, select bank0
  7091  1685  00A5               	movwf	__div_to_l_@exp1
  7092  1686  08A5               	movf	__div_to_l_@exp1,f
  7093  1687  1D03               	skipz
  7094  1688  2E8E               	goto	l5206
  7095  1689                     l5204:	
  7096  1689  01F0               	clrf	?__div_to_l_
  7097  168A  01F1               	clrf	?__div_to_l_+1
  7098  168B  01F2               	clrf	?__div_to_l_+2
  7099  168C  01F3               	clrf	?__div_to_l_+3
  7100  168D  0008               	return
  7101  168E                     l5206:	
  7102  168E  3073               	movlw	low __div_to_l_@f2
  7103  168F  2731  160A  118A   	fcall	PL2	;call to abstracted procedure
  7104  1692  1003               	clrc
  7105  1693  0D78               	rlf	??__div_to_l_+2,w
  7106  1694  0D79               	rlf	??__div_to_l_+3,w
  7107  1695  00A4               	movwf	__div_to_l_@cntr
  7108  1696  08A4               	movf	__div_to_l_@cntr,f
  7109  1697  1903               	btfsc	3,2
  7110  1698  2E89               	goto	l5204
  7111  1699  3070               	movlw	low __div_to_l_@f1
  7112  169A  0084               	movwf	4
  7113  169B  3080               	movlw	128
  7114  169C  0A84               	incf	4,f
  7115  169D  0A84               	incf	4,f
  7116  169E  0480               	iorwf	0,f
  7117  169F  3070               	movlw	low __div_to_l_@f1
  7118  16A0  0A84               	incf	4,f
  7119  16A1  0084               	movwf	4
  7120  16A2  3073               	movlw	low __div_to_l_@f2
  7121  16A3  0A84               	incf	4,f
  7122  16A4  0A84               	incf	4,f
  7123  16A5  0A84               	incf	4,f
  7124  16A6  0180               	clrf	0
  7125  16A7  0084               	movwf	4
  7126  16A8  3080               	movlw	128
  7127  16A9  0A84               	incf	4,f
  7128  16AA  0A84               	incf	4,f
  7129  16AB  0480               	iorwf	0,f
  7130  16AC  3073               	movlw	low __div_to_l_@f2
  7131  16AD  0A84               	incf	4,f
  7132  16AE  0084               	movwf	4
  7133  16AF  307F               	movlw	127
  7134  16B0  0A84               	incf	4,f
  7135  16B1  0A84               	incf	4,f
  7136  16B2  0A84               	incf	4,f
  7137  16B3  0180               	clrf	0
  7138  16B4  01A0               	clrf	__div_to_l_@quot
  7139  16B5  01A1               	clrf	__div_to_l_@quot+1
  7140  16B6  01A2               	clrf	__div_to_l_@quot+2
  7141  16B7  01A3               	clrf	__div_to_l_@quot+3
  7142  16B8  02A5               	subwf	__div_to_l_@exp1,f
  7143  16B9  30A0               	movlw	160
  7144  16BA  0724               	addwf	__div_to_l_@cntr,w
  7145  16BB  00F6               	movwf	??__div_to_l_
  7146  16BC  02A5               	subwf	__div_to_l_@exp1,f
  7147  16BD  3020               	movlw	32
  7148  16BE  00A4               	movwf	__div_to_l_@cntr
  7149  16BF                     l5220:	
  7150  16BF  3073               	movlw	low __div_to_l_@f2
  7151  16C0  1003               	clrc
  7152  16C1  0DA0               	rlf	__div_to_l_@quot,f
  7153  16C2  0DA1               	rlf	__div_to_l_@quot+1,f
  7154  16C3  0DA2               	rlf	__div_to_l_@quot+2,f
  7155  16C4  0DA3               	rlf	__div_to_l_@quot+3,f
  7156  16C5  2731  160A  118A   	fcall	PL2	;call to abstracted procedure
  7157  16C8  3070               	movlw	low __div_to_l_@f1
  7158  16C9  0084               	movwf	4
  7159  16CA  0800               	movf	0,w
  7160  16CB  00FA               	movwf	??__div_to_l_+4
  7161  16CC  0A84               	incf	4,f
  7162  16CD  0800               	movf	0,w
  7163  16CE  00FB               	movwf	??__div_to_l_+5
  7164  16CF  0A84               	incf	4,f
  7165  16D0  0800               	movf	0,w
  7166  16D1  00FC               	movwf	??__div_to_l_+6
  7167  16D2  0A84               	incf	4,f
  7168  16D3  0800               	movf	0,w
  7169  16D4  00FD               	movwf	??__div_to_l_+7
  7170  16D5  0879               	movf	??__div_to_l_+3,w
  7171  16D6  027D               	subwf	??__div_to_l_+7,w
  7172  16D7  1D03               	skipz
  7173  16D8  2EE3               	goto	u2065
  7174  16D9  0878               	movf	??__div_to_l_+2,w
  7175  16DA  027C               	subwf	??__div_to_l_+6,w
  7176  16DB  1D03               	skipz
  7177  16DC  2EE3               	goto	u2065
  7178  16DD  0877               	movf	??__div_to_l_+1,w
  7179  16DE  027B               	subwf	??__div_to_l_+5,w
  7180  16DF  1D03               	skipz
  7181  16E0  2EE3               	goto	u2065
  7182  16E1  0876               	movf	??__div_to_l_,w
  7183  16E2  027A               	subwf	??__div_to_l_+4,w
  7184  16E3                     u2065:	
  7185  16E3  1C03               	skipc
  7186  16E4  2EFF               	goto	l2602
  7187  16E5  3073               	movlw	low __div_to_l_@f2
  7188  16E6  2731  160A  118A   	fcall	PL2	;call to abstracted procedure
  7189  16E9  3070               	movlw	low __div_to_l_@f1
  7190  16EA  0084               	movwf	4
  7191  16EB  0876               	movf	??__div_to_l_,w
  7192  16EC  0280               	subwf	0,f
  7193  16ED  0A84               	incf	4,f
  7194  16EE  0877               	movf	??__div_to_l_+1,w
  7195  16EF  1C03               	skipc
  7196  16F0  0F77               	incfsz	??__div_to_l_+1,w
  7197  16F1  0280               	subwf	0,f
  7198  16F2  0A84               	incf	4,f
  7199  16F3  0878               	movf	??__div_to_l_+2,w
  7200  16F4  1C03               	skipc
  7201  16F5  0F78               	incfsz	??__div_to_l_+2,w
  7202  16F6  0280               	subwf	0,f
  7203  16F7  0A84               	incf	4,f
  7204  16F8  0879               	movf	??__div_to_l_+3,w
  7205  16F9  1C03               	skipc
  7206  16FA  0A79               	incf	??__div_to_l_+3,w
  7207  16FB  0280               	subwf	0,f
  7208  16FC  3003               	movlw	3
  7209  16FD  0284               	subwf	4,f
  7210  16FE  1420               	bsf	__div_to_l_@quot,0
  7211  16FF                     l2602:	
  7212  16FF  3070               	movlw	low __div_to_l_@f1
  7213  1700  0084               	movwf	4
  7214  1701  1003               	clrc
  7215  1702  0D80               	rlf	0,f
  7216  1703  0A84               	incf	4,f
  7217  1704  0D80               	rlf	0,f
  7218  1705  0A84               	incf	4,f
  7219  1706  0D80               	rlf	0,f
  7220  1707  0A84               	incf	4,f
  7221  1708  0D80               	rlf	0,f
  7222  1709  0BA4               	decfsz	__div_to_l_@cntr,f
  7223  170A  2EBF               	goto	l5220
  7224  170B  1FA5               	btfss	__div_to_l_@exp1,7
  7225  170C  2F1A               	goto	l5238
  7226  170D  0825               	movf	__div_to_l_@exp1,w
  7227  170E  3A80               	xorlw	128
  7228  170F  3E9F               	addlw	159
  7229  1710  1C03               	btfss	3,0
  7230  1711  2E89               	goto	l5204
  7231  1712                     l5234:	
  7232  1712  1003               	clrc
  7233  1713  0CA3               	rrf	__div_to_l_@quot+3,f
  7234  1714  0CA2               	rrf	__div_to_l_@quot+2,f
  7235  1715  0CA1               	rrf	__div_to_l_@quot+1,f
  7236  1716  0CA0               	rrf	__div_to_l_@quot,f
  7237  1717  0FA5               	incfsz	__div_to_l_@exp1,f
  7238  1718  2F12               	goto	l5234
  7239  1719  2F28               	goto	l5244
  7240  171A                     l5238:	
  7241  171A  3020               	movlw	32
  7242  171B  0225               	subwf	__div_to_l_@exp1,w
  7243  171C  1803               	btfsc	3,0
  7244  171D  2E89               	goto	l5204
  7245  171E                     l2610:	
  7246  171E  08A5               	movf	__div_to_l_@exp1,f
  7247  171F  1903               	btfsc	3,2
  7248  1720  2F28               	goto	l5244
  7249  1721  1003               	clrc
  7250  1722  0DA0               	rlf	__div_to_l_@quot,f
  7251  1723  0DA1               	rlf	__div_to_l_@quot+1,f
  7252  1724  0DA2               	rlf	__div_to_l_@quot+2,f
  7253  1725  0DA3               	rlf	__div_to_l_@quot+3,f
  7254  1726  03A5               	decf	__div_to_l_@exp1,f
  7255  1727  2F1E               	goto	l2610
  7256  1728                     l5244:	
  7257  1728  0823               	movf	__div_to_l_@quot+3,w
  7258  1729  00F3               	movwf	?__div_to_l_+3
  7259  172A  0822               	movf	__div_to_l_@quot+2,w
  7260  172B  00F2               	movwf	?__div_to_l_+2
  7261  172C  0821               	movf	__div_to_l_@quot+1,w
  7262  172D  00F1               	movwf	?__div_to_l_+1
  7263  172E  0820               	movf	__div_to_l_@quot,w
  7264  172F  00F0               	movwf	?__div_to_l_
  7265  1730  0008               	return
  7266  1731                     __end_of__div_to_l_:	
  7267  1731                     PL2:	
  7268  1731  0084               	movwf	4
  7269  1732  0800               	movf	0,w
  7270  1733  00F6               	movwf	??__div_to_l_
  7271  1734  0A84               	incf	4,f
  7272  1735  0800               	movf	0,w
  7273  1736  00F7               	movwf	??__div_to_l_+1
  7274  1737  0A84               	incf	4,f
  7275  1738  0800               	movf	0,w
  7276  1739  00F8               	movwf	??__div_to_l_+2
  7277  173A  0A84               	incf	4,f
  7278  173B  0800               	movf	0,w
  7279  173C  00F9               	movwf	??__div_to_l_+3
  7280  173D  0008               	return
  7281                           
  7282                           	psect	text746
  7283  1546                     __ptext746:	
  7284 ;; =============== function __div_to_l_ ends ============
  7285                           
  7286                           
  7287 ;; *************** function __tdiv_to_l_ *****************
  7288 ;; Defined at:
  7289 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftdivl.c"
  7290 ;; Parameters:    Size  Location     Type
  7291 ;;  f1              3    0[COMMON] float 
  7292 ;;  f2              3    3[COMMON] float 
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;  quot            4    0[BANK0 ] unsigned long 
  7295 ;;  exp1            1    5[BANK0 ] unsigned char 
  7296 ;;  cntr            1    4[BANK0 ] unsigned char 
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  4    0[COMMON] unsigned long 
  7299 ;; Registers used:
  7300 ;;		wreg, status,2, status,0
  7301 ;; Tracked objects:
  7302 ;;		On entry : 60/20
  7303 ;;		On exit  : 60/0
  7304 ;;		Unchanged: FFF9F/0
  7305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7306 ;;      Params:         6       0       0       0       0
  7307 ;;      Locals:         0       6       0       0       0
  7308 ;;      Temps:          3       0       0       0       0
  7309 ;;      Totals:         9       6       0       0       0
  7310 ;;Total ram usage:       15 bytes
  7311 ;; Hardware stack levels used:    1
  7312 ;; This function calls:
  7313 ;;		Nothing
  7314 ;; This function is called by:
  7315 ;;		_sprintf
  7316 ;; This function uses a non-reentrant model
  7317 ;;
  7318  1546                     __tdiv_to_l_:	
  7319                           
  7320                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7321  1546  0870               	movf	__tdiv_to_l_@f1,w
  7322  1547  00F6               	movwf	??__tdiv_to_l_
  7323  1548  0871               	movf	__tdiv_to_l_@f1+1,w
  7324  1549  00F7               	movwf	??__tdiv_to_l_+1
  7325  154A  0872               	movf	__tdiv_to_l_@f1+2,w
  7326  154B  00F8               	movwf	??__tdiv_to_l_+2
  7327  154C  1003               	clrc
  7328  154D  0D77               	rlf	??__tdiv_to_l_+1,w
  7329  154E  0D78               	rlf	??__tdiv_to_l_+2,w
  7330  154F  1283               	bcf	3,5	;RP0=0, select bank0
  7331  1550  00A5               	movwf	__tdiv_to_l_@exp1
  7332  1551  08A5               	movf	__tdiv_to_l_@exp1,f
  7333  1552  1D03               	skipz
  7334  1553  2D59               	goto	l5158
  7335  1554                     l5156:	
  7336  1554  01F0               	clrf	?__tdiv_to_l_
  7337  1555  01F1               	clrf	?__tdiv_to_l_+1
  7338  1556  01F2               	clrf	?__tdiv_to_l_+2
  7339  1557  01F3               	clrf	?__tdiv_to_l_+3
  7340  1558  0008               	return
  7341  1559                     l5158:	
  7342  1559  0873               	movf	__tdiv_to_l_@f2,w
  7343  155A  00F6               	movwf	??__tdiv_to_l_
  7344  155B  0874               	movf	__tdiv_to_l_@f2+1,w
  7345  155C  00F7               	movwf	??__tdiv_to_l_+1
  7346  155D  0875               	movf	__tdiv_to_l_@f2+2,w
  7347  155E  00F8               	movwf	??__tdiv_to_l_+2
  7348  155F  1003               	clrc
  7349  1560  0D77               	rlf	??__tdiv_to_l_+1,w
  7350  1561  0D78               	rlf	??__tdiv_to_l_+2,w
  7351  1562  00A4               	movwf	__tdiv_to_l_@cntr
  7352  1563  08A4               	movf	__tdiv_to_l_@cntr,f
  7353  1564  1903               	btfsc	3,2
  7354  1565  2D54               	goto	l5156
  7355  1566  307F               	movlw	127
  7356  1567  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7357  1568  01F2               	clrf	__tdiv_to_l_@f1+2
  7358  1569  17F4               	bsf	__tdiv_to_l_@f2+1,7
  7359  156A  01F5               	clrf	__tdiv_to_l_@f2+2
  7360  156B  01A0               	clrf	__tdiv_to_l_@quot
  7361  156C  01A1               	clrf	__tdiv_to_l_@quot+1
  7362  156D  01A2               	clrf	__tdiv_to_l_@quot+2
  7363  156E  01A3               	clrf	__tdiv_to_l_@quot+3
  7364  156F  02A5               	subwf	__tdiv_to_l_@exp1,f
  7365  1570  3098               	movlw	152
  7366  1571  0724               	addwf	__tdiv_to_l_@cntr,w
  7367  1572  00F6               	movwf	??__tdiv_to_l_
  7368  1573  02A5               	subwf	__tdiv_to_l_@exp1,f
  7369  1574  3018               	movlw	24
  7370  1575  00A4               	movwf	__tdiv_to_l_@cntr
  7371  1576                     l5172:	
  7372  1576  1003               	clrc
  7373  1577  0DA0               	rlf	__tdiv_to_l_@quot,f
  7374  1578  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7375  1579  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7376  157A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7377  157B  0875               	movf	__tdiv_to_l_@f2+2,w
  7378  157C  0272               	subwf	__tdiv_to_l_@f1+2,w
  7379  157D  1D03               	skipz
  7380  157E  2D85               	goto	u1975
  7381  157F  0874               	movf	__tdiv_to_l_@f2+1,w
  7382  1580  0271               	subwf	__tdiv_to_l_@f1+1,w
  7383  1581  1D03               	skipz
  7384  1582  2D85               	goto	u1975
  7385  1583  0873               	movf	__tdiv_to_l_@f2,w
  7386  1584  0270               	subwf	__tdiv_to_l_@f1,w
  7387  1585                     u1975:	
  7388  1585  1C03               	skipc
  7389  1586  2D93               	goto	L18
  7390  1587  0873               	movf	__tdiv_to_l_@f2,w
  7391  1588  02F0               	subwf	__tdiv_to_l_@f1,f
  7392  1589  0874               	movf	__tdiv_to_l_@f2+1,w
  7393  158A  1C03               	skipc
  7394  158B  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  7395  158C  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7396  158D  0875               	movf	__tdiv_to_l_@f2+2,w
  7397  158E  1C03               	skipc
  7398  158F  0A75               	incf	__tdiv_to_l_@f2+2,w
  7399  1590  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7400  1591  1420               	bsf	__tdiv_to_l_@quot,0
  7401  1592  1003               	clrc
  7402  1593                     L18:	
  7403  1593  0DF0               	rlf	__tdiv_to_l_@f1,f
  7404  1594  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7405  1595  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7406  1596  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  7407  1597  2D76               	goto	l5172
  7408  1598  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7409  1599  2DA7               	goto	l5192
  7410  159A  0825               	movf	__tdiv_to_l_@exp1,w
  7411  159B  3A80               	xorlw	128
  7412  159C  3E97               	addlw	151
  7413  159D  1C03               	btfss	3,0
  7414  159E  2D54               	goto	l5156
  7415  159F                     l5188:	
  7416  159F  1003               	clrc
  7417  15A0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7418  15A1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7419  15A2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7420  15A3  0CA0               	rrf	__tdiv_to_l_@quot,f
  7421  15A4  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  7422  15A5  2D9F               	goto	l5188
  7423  15A6  2DB5               	goto	l5198
  7424  15A7                     l5192:	
  7425  15A7  3018               	movlw	24
  7426  15A8  0225               	subwf	__tdiv_to_l_@exp1,w
  7427  15A9  1803               	btfsc	3,0
  7428  15AA  2D54               	goto	l5156
  7429  15AB                     l2567:	
  7430  15AB  08A5               	movf	__tdiv_to_l_@exp1,f
  7431  15AC  1903               	btfsc	3,2
  7432  15AD  2DB5               	goto	l5198
  7433  15AE  1003               	clrc
  7434  15AF  0DA0               	rlf	__tdiv_to_l_@quot,f
  7435  15B0  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7436  15B1  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7437  15B2  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7438  15B3  03A5               	decf	__tdiv_to_l_@exp1,f
  7439  15B4  2DAB               	goto	l2567
  7440  15B5                     l5198:	
  7441  15B5  0823               	movf	__tdiv_to_l_@quot+3,w
  7442  15B6  00F3               	movwf	?__tdiv_to_l_+3
  7443  15B7  0822               	movf	__tdiv_to_l_@quot+2,w
  7444  15B8  00F2               	movwf	?__tdiv_to_l_+2
  7445  15B9  0821               	movf	__tdiv_to_l_@quot+1,w
  7446  15BA  00F1               	movwf	?__tdiv_to_l_+1
  7447  15BB  0820               	movf	__tdiv_to_l_@quot,w
  7448  15BC  00F0               	movwf	?__tdiv_to_l_
  7449  15BD  0008               	return
  7450  15BE                     __end_of__tdiv_to_l_:	
  7451                           
  7452                           	psect	text748
  7453  003D                     __ptext748:	
  7454 ;; =============== function _isdigit ends ============
  7455                           
  7456                           
  7457 ;; *************** function _putch *****************
  7458 ;; Defined at:
  7459 ;;		line 465 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;  dato            1    wreg     unsigned char 
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;  dato            1    0[COMMON] unsigned char 
  7464 ;; Return value:  Size  Location     Type
  7465 ;;		None               void
  7466 ;; Registers used:
  7467 ;;		wreg
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 60/0
  7471 ;;		Unchanged: FFF9F/0
  7472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7473 ;;      Params:         0       0       0       0       0
  7474 ;;      Locals:         1       0       0       0       0
  7475 ;;      Temps:          0       0       0       0       0
  7476 ;;      Totals:         1       0       0       0       0
  7477 ;;Total ram usage:        1 bytes
  7478 ;; Hardware stack levels used:    1
  7479 ;; This function calls:
  7480 ;;		Nothing
  7481 ;; This function is called by:
  7482 ;;		_main
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485  003D                     _putch:	
  7486                           
  7487                           ; Regs used in _putch: [wreg]
  7488                           ;putch@dato stored from wreg
  7489  003D  00F0               	movwf	putch@dato
  7490  003E                     l1162:	
  7491                           ;eeprom_i2c.c: 466: while(!TXIF) continue;
  7492                           
  7493  003E  1283               	bcf	3,5	;RP0=0, select bank0
  7494  003F  1303               	bcf	3,6	;RP1=0, select bank0
  7495  0040  1E0C               	btfss	12,4
  7496  0041  283E               	goto	l1162
  7497                           
  7498                           ;eeprom_i2c.c: 467: TXREG=dato;
  7499  0042  0870               	movf	putch@dato,w
  7500  0043  0099               	movwf	25	;volatile
  7501  0044  0008               	return
  7502  0045                     __end_of_putch:	
  7503                           
  7504                           	psect	text755
  7505  0045                     __ptext755:	
  7506 ;; =============== function _i2c_start ends ============
  7507                           
  7508                           
  7509 ;; *************** function _i2c_init *****************
  7510 ;; Defined at:
  7511 ;;		line 81 in file "C:\Users\petir\Documents\PIC_PROG\C_EEPROM-I2C\eeprom_i2c.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;		None
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;		None
  7516 ;; Return value:  Size  Location     Type
  7517 ;;		None               void
  7518 ;; Registers used:
  7519 ;;		wreg, status,2
  7520 ;; Tracked objects:
  7521 ;;		On entry : 60/0
  7522 ;;		On exit  : 60/20
  7523 ;;		Unchanged: FFF9F/0
  7524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7525 ;;      Params:         0       0       0       0       0
  7526 ;;      Locals:         0       0       0       0       0
  7527 ;;      Temps:          0       0       0       0       0
  7528 ;;      Totals:         0       0       0       0       0
  7529 ;;Total ram usage:        0 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; This function calls:
  7532 ;;		Nothing
  7533 ;; This function is called by:
  7534 ;;		_main
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537  0045                     _i2c_init:	
  7538                           
  7539                           ;eeprom_i2c.c: 82: TRISCbits.TRISC3=1;
  7540                           
  7541                           ; Regs used in _i2c_init: [wreg+status,2]
  7542  0045  1683               	bsf	3,5	;RP0=1, select bank1
  7543  0046  1587               	bsf	7,3	;volatile
  7544                           
  7545                           ;eeprom_i2c.c: 83: TRISCbits.TRISC4=1;
  7546  0047  1607               	bsf	7,4	;volatile
  7547                           
  7548                           ;eeprom_i2c.c: 84: SSPSTAT=0b10000000;
  7549  0048  3080               	movlw	128
  7550  0049  0094               	movwf	20	;volatile
  7551                           
  7552                           ;eeprom_i2c.c: 85: SSPCON =0b00101000;
  7553  004A  3028               	movlw	40
  7554  004B  1283               	bcf	3,5	;RP0=0, select bank0
  7555  004C  0094               	movwf	20	;volatile
  7556                           
  7557                           ;eeprom_i2c.c: 86: SSPCON2 =0;
  7558  004D  1683               	bsf	3,5	;RP0=1, select bank1
  7559  004E  0191               	clrf	17	;volatile
  7560                           
  7561                           ;eeprom_i2c.c: 89: SSPADD = ((4000000/(4UL*100000UL))-1);
  7562  004F  3009               	movlw	9
  7563  0050  0093               	movwf	19	;volatile
  7564  0051  0008               	return
  7565  0052                     __end_of_i2c_init:	
  7566                           
  7567                           	psect	text757
  7568  0000                     __ptext757:	
  7569 ;; =============== function _msecbase ends ============
  7570                           
  7571  007E                     btemp	set	126	;btemp
  7572  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Wed Nov 13 20:21:37 2019

                    pc 0002         ___bmul@product 007A           ___awdiv@sign 007B                     fsr 0004  
  ___wmul@multiplicand 0072           ___ftadd@exp1 0047           ___ftadd@exp2 0046           ___ftadd@sign 0045  
                  _RA4 002C                    _RA6 002E                    _RA7 002F                    _PR2 0092  
                  _nin 00D3                    _num 00D0                    fsr0 0004                    indf 0000  
         ___awmod@sign 0075            lcd_goto@pos 0075                   l1101 1623                   l1110 0000  
                 l1104 0000                   l1113 0000                   l1122 0000                   l1107 1606  
                 l1116 0000                   l1134 0000                   l1230 00F6                   l1071 160A  
                 l1119 0000                   l1056 1678                   l1080 0000                   l1128 0000  
                 l1065 0000                   l1074 0000                   l1162 003E                   l1314 0000  
                 l1146 0ACC                   l1059 0000                   l1083 160F                   l1068 0000  
                 l1092 0000                   l1077 1614                   l1165 0000                   l1086 0000  
                 l1239 012E                   l1159 0C9C                   l1089 161A                   l2315 0000  
                 l2309 0000                   l2342 095B                   l2351 0000                   l2345 0000  
                 l2610 171E                   l2602 16FF                   l2530 0000                   l2603 0000  
                 l2429 06CC                   l2373 17BA                   l5110 0000                   l2462 0000  
                 l5112 0000                   l5120 0000                   l2560 0000                   l2472 0000  
                 l2552 0000                   l2449 0000                   l5114 0000                   l5122 0000  
                 l5202 0000                   l6010 0370                   l6002 033C                   l2299 0000  
                 l2491 0000                   l2395 0000                   l5116 0000                   l5124 0000  
                 l5132 0000                   l5220 16BF                   l5212 0000                   l5204 1689  
                 l5300 0968                   l2476 0000                   l6012 0000                   l5118 0000  
                 l5126 0000                   l5134 0000                   l5150 0677                   l5142 0000  
                 l5222 0000                   l5214 0000                   l5206 168E                   l5310 0000  
                 l6110 053B                   l6022 0000                   l2567 15AB                   l5136 0000  
                 l5144 0000                   l5216 0000                   l5312 0000                   l5304 0000  
                 l5400 0000                   l6120 0560                   l6104 0000                   l6016 0399  
                 l6008 0000                   l6200 0000                   l5138 0000                   l5170 0000  
                 l5162 0000                   l5154 0000                   l5234 1712                   l5226 0000  
                 l5218 0000                   l5250 0F5D                   l5306 0000                   l5330 0F75  
                 l5322 0000                   l5402 0E7D                   l6114 0553                   l6106 0527  
                 l6042 0000                   l6034 03BB                   l6018 03AD                   l6026 039D  
                 l6210 0000                   l6202 0000                   l5172 1576                   l5164 0000  
                 l5156 1554                   l5244 1728                   l5236 0000                   l5228 0000  
                 l5316 0982                   l5308 096E                   l5340 0F93                   l5332 0F7A  
                 l5324 0000                   l5412 0E8B                   l5404 0000                   l5500 0000  
                 l6140 0000                   l6132 0599                   l6060 0449                   l6052 040F  
                 l6044 0000                   l6028 03B2                   l6300 0000                   l6220 0000  
                 l6212 0000                   l6204 0000                   l5190 0000                   l5182 0000  
                 l5174 0000                   l5166 0000                   l5158 1559                   l5238 171A  
                 l5270 0683                   l5318 0000                   l5334 0F7F                   l5326 0F71  
                 l5350 0000                   l5422 0000                   l5414 0000                   l5502 072C  
                 l6150 0000                   l6142 05AE                   l6134 059C                   l6126 057A  
                 l6070 0000                   l6062 0000                   l6054 0000                   l6046 03EC  
                 l6038 03E9                   l6310 0000                   l6302 0000                   l6230 0000  
                 l6222 0000                   l6214 0000                   l6206 0000                   l5192 15A7  
                 l5168 0000                   l5256 0000                   l5248 0000                   l5272 0000  
                 l5264 0000                   l5280 0000                   l5344 0000                   l5336 0F89  
                 l5360 0000                   l5352 069C                   l5424 0EA2                   l5440 0611  
                 l5432 0000                   l5512 0000                   l5600 1785                   l6136 05A0  
                 l6128 057D                   l6080 0000                   l6072 0000                   l6064 0000  
                 l6056 0000                   l6048 0400                   l6320 0000                   l6304 0000  
                 l6240 0000                   l6232 0000                   l6224 0000                   l6216 0000  
                 l6208 0000                   l5178 0000                   l5258 0000                   l5274 0000  
                 l5266 067B                   l5290 0000                   l5282 0000                   l5346 0000  
                 l5338 0F8E                   l5370 06C0                   l5362 0000                   l5354 06A1  
                 l5426 0000                   l5418 0000                   l5514 0EB9                   l5506 0000  
                 l5602 0000                   l5610 179E                   l6154 05B8                   l6138 0000  
                 l6074 04B5                   l6058 0428                   l6330 0000                   l6306 0000  
                 l6250 0000                   l6242 0000                   l6234 0000                   l6226 0000  
                 l6218 0000                   l6170 0000                   l6162 0000                   l5188 159F  
                 l5284 0000                   l5348 0000                   l5380 06D6                   l5372 0000  
                 l5364 0000                   l5356 0000                   l5428 0EAA                   l5452 0000  
                 l5460 0000                   l5532 0000                   l5508 0000                   l5620 17B6  
                 l5612 17A2                   l5700 0000                   l6092 04F1                   l6084 0000  
                 l6076 04C1                   l6156 0065                   l6332 0000                   l6324 0000  
                 l6316 0B55                   l6308 0000                   l6260 0000                   l6252 0000  
                 l6236 0000                   l6228 0000                   l6180 0000                   l6172 0000  
                 l6164 0000                   l5198 15B5                   l5294 0000                   l5286 0955  
                 l5382 0000                   l5374 06C8                   l5358 0000                   l5390 0000  
                 l5446 0000                   l5470 0000                   l5526 0ECC                   l5534 0EDF  
                 l5518 0EC0                   l5542 1660                   l5550 0000                   l5630 0000  
                 l5614 0000                   l5606 1794                   l5710 0000                   l6086 04E5  
                 l6078 0000                   l6158 05FC                   l6342 0BAE                   l6334 0000  
                 l6318 0000                   l6326 0AC2                   l6270 0000                   l6262 0000  
                 l6238 0000                   l6190 0000                   l6182 0000                   l6174 0000  
                 l6166 0000                   l5384 06E4                   l5448 0636                   l5472 0000  
                 l5464 064E                   l5480 0000                   l5536 0000                   l5560 0000  
                 l5552 0000                   l5640 0000                   l5632 17D0                   l5624 0000  
                 l5608 1799                   l5712 0CA9                   l5704 0000                   l5720 0CBC  
                 l6360 0000                   l6352 0000                   l6344 0000                   l6336 0000  
                 l6328 0B90                   l6280 0000                   l6272 0000                   l6256 0000  
                 l6248 0A3D                   l6192 0000                   l6184 0000                   l6176 0000  
                 l6168 0000                   l5298 0000                   l5394 0000                   l5490 0701  
                 l5482 0000                   l5538 0EE7                   l5546 0000                   l5562 0000  
                 l5554 0000                   l5642 0000                   l5634 0000                   l5626 17C5  
                 l5618 17B1                   l5570 0000                   l5706 0000                   l5722 0CC7  
                 l5730 0000                   l5810 0E53                   l6098 04F3                   l6370 0000  
                 l6354 0000                   l6346 0000                   l6290 0000                   l6282 0000  
                 l6258 0000                   l6194 0000                   l6186 09B6                   l6178 0000  
                 l5396 0E74                   l5388 0000                   l5468 065D                   l5492 0000  
                 l5548 1662                   l5564 0000                   l5556 0000                   l5644 17EC  
                 l5636 0000                   l5572 0000                   l5660 0F0E                   l5716 0000  
                 l5732 0000                   l5740 0000                   l5804 0E0E                   l5820 0000  
                 l5900 0000                   l6356 0000                   l6292 0000                   l6276 0000  
                 l6268 0A80                   l6196 0000                   l6188 0000                   l5566 0000  
                 l5558 0000                   l5590 0000                   l5582 1768                   l5574 0000  
                 l5670 0000                   l5662 0000                   l5654 0EFD                   l5734 0000  
                 l5726 0000                   l5750 0000                   l5742 0000                   l5814 0000  
                 l5822 0000                   l5830 1632                   l5910 0166                   l5902 013F  
                 l6374 0000                   l6366 0C6D                   l6358 0000                   l6294 0000  
                 l6286 0000                   l6278 0000                   l6198 0000                   l5496 0000  
                 l5584 0000                   l5672 0000                   l5664 0000                   l5648 0000  
                 l5736 0000                   l5728 0000                   l5744 0000                   l5752 0000  
                 l5816 0000                   l5824 0000                   l5832 0000                   l5904 014D  
                 l6368 0000                   l6376 0BD1                   l6296 0000                   l5578 1761  
                 l5690 0F35                   l5682 0F29                   l5674 0000                   l5666 0000  
                 l5746 0000                   l5738 0000                   l5770 0929                   l5762 08D5  
                 l5834 0000                   l5930 0000                   l5922 019D                   l5906 0000  
                 l5914 0172                   l5850 0092                   l5842 0000                   l6298 0000  
                 l5596 0000                   l5588 1777                   l5684 0000                   l5676 0000  
                 l5668 0000                   l5748 0000                   l5756 0000                   l5828 0000  
                 l5940 0000                   l5932 01C9                   l5924 0000                   l5908 0000  
                 l5916 018D                   l5860 0000                   l5852 0000                   l5844 007E  
                 l5836 0000                   l5598 0000                   l5694 0F3F                   l5686 0000  
                 l5678 0F1F                   l5766 0000                   l5774 0000                   l5942 0000  
                 l5934 0000                   l5926 0000                   l5862 0000                   l5870 00F1  
                 l5854 0000                   l5846 0000                   l5696 0000                   l5688 0000  
                 l5792 0D8D                   l5960 024F                   l5952 0216                   l5944 0000  
                 l5872 0000                   l5856 00B7                   l5698 0000                   l5786 0D48  
                 l5778 0000                   l5954 0000                   l5946 0000                   l5938 0000  
                 l5882 0106                   l5874 00F8                   l5866 0000                   l5796 0DA4  
                 l5980 02CF                   l5956 0000                   l5948 0000                   l5964 025F  
                 l5876 0000                   l5868 00C8                   l5990 0000                   l5886 0108  
                 l5878 0000                   l5992 02FF                   l5976 02BE                   l5968 0293  
                 l5896 013D                   l5888 011D                   l5994 0000                   l5986 0000  
                 l5996 033A                   l5988 0000                   STR_1 1086                   STR_2 1086  
                 STR_3 10BF                   STR_4 10C5                   STR_5 10A2                   STR_6 10AD  
                 STR_7 1095                   STR_8 10BF                   STR_9 10C5                   _T0IF 005A  
                 u2320 0000                   u3200 0000                   u2065 16E3                   u2325 06A5  
                 u3205 01DC                   u3125 0128                   u3135 0134                   u3305 0369  
                 u2435 0E94                   u3245 0268                   u3255 029D                   u2625 0ED2  
                 u3345 03A6                   u2485 061F                   u2565 0714                   u3525 0570  
                 u3285 02BC                   u3605 0A5B                   u2655 1668                   u3535 058B  
                 u3455 0520                   u3375 03F5                   u3385 040A                   u3475 0535  
                 u3635 0AE9                   u3485 054B                   u1975 1585                   _PIR1 000C  
                 _TMR0 0001                   _TXIF 0064       __end_of_I2C_EEIN 1601                   _main 099C  
         ___ftpack@arg 0070           ___ftpack@exp 0073                   btemp 007E       __end_of_I2C_nack 1627  
                 start 0000           _sprintf$1951 00A0      ___bmul@multiplier 007B           ___ftmul@cntr 003A  
        ??_i2c_restart 0070           ___ftmul@sign 003B           ___fttol@exp1 002C           ___fttol@lval 0028  
                ?_main 0070        __end_of___awdiv 0EAF        __end_of___lbdiv 096A        __end_of___ftadd 1800  
                STR_10 10A2                  STR_11 10B8        __end_of___awmod 0EEC        __end_of___lbmod 0986  
      __end_of___ftneg 073D                  _ANSEL 0188        __end_of___lldiv 0735        __end_of___ftmul 0F5B  
      ___awdiv@divisor 0076        __end_of___llmod 063F        __end_of___ftsub 0755        __end_of___fttol 06ED  
                _T2CON 0012        ___awdiv@counter 007A                  _RCSTA 0018                  _SPBRG 0099  
                _PORTA 0005                  _PORTB 0006                  _PORTD 0008                  _TRISA 0085  
                _TRISB 0086                  _TRISC 0087                  _TRISD 0088                  _TRISE 0089  
                _TXREG 0019                  _TXSTA 0098           ___lltoft@exp 007C      __end_of_I2C_EEOUT 15E0  
                _carac 00D5          ___awtoft@sign 007B                  _scale 0CD8        __end_of_isdigit 0679  
                _pause 1660          ___ftpack@sign 0074                  _putch 003D                  main@i 00C9  
                main@x 00CB                  pclath 000A                  status 0003                  wtemp0 007E  
      __end_of_sprintf 0601        ___lbdiv@divisor 0075        ___lbdiv@counter 0077           __end_of_main 0C9F  
     __end_of_i2c_init 0052       __end_of_i2c_read 161F       __end_of_i2c_stop 1612    __end_of_i2c_restart 1617  
               ??_main 005B          ___fttol@sign1 0027   __size_of__tdiv_to_l_ 0078                 _ADCON0 001F  
     ___llmod@dividend 0024                 ?_scale 003C                 _ADRESH 001E                 _ADRESL 009E  
         I2C_EEIN@data 0073                 _CCPR1L 0015                 ?_pause 0070                 _CCPR2L 001B  
     ___awdiv@dividend 0078       __end_of___awtoft 0CBA                 ?_putch 0070       __end_of___ftpack 0FA7  
               _ANSELH 0189       __end_of___lltoft 0CD8                 _OSCCON 008F                 _SSPADD 0093  
               _TRISC1 0439                 _TRISC2 043A                 _TRISC6 043E                 _TRISC7 043F  
               _SSPCON 0014                 _SSPBUF 0013     __size_of_i2c_start 0004     __size_of_i2c_write 0008  
     __end_of_lcd_goto 15C5                 ___bmul 0F5B       __end_of_lcd_puts 164E                 ___ftge 063F  
               ___wmul 0679              ??___awdiv 007A              ??___lbdiv 0076              ??___ftadd 0042  
            ??___awmod 0074              ??___lbmod 0071              ??___ftneg 0073              ??___lldiv 0078  
            ??___ftmul 0033              ??___llmod 007D              ??___ftsub 007E              ??___fttol 0024  
               _fround 084A       ___awdiv@quotient 007C        ___awmod@divisor 0070        ___awmod@counter 0074  
     __end_of_msecbase 167C              ?_I2C_EEIN 0071  ___ftmul@f3_as_product 0037              ??_isdigit 0070  
               pause@x 0072              ?_I2C_nack 0070              ??_sprintf 0056       ___lbdiv@dividend 0076  
      ___lbmod@divisor 0070        ___lbmod@counter 0073             ___ftadd@f1 003C             ___ftadd@f2 003F  
           ___ftge@ff1 0070             ___ftge@ff2 0073             ___ftneg@f1 0070             ___awtoft@c 0078  
  ___bmul@multiplicand 0079             ___ftmul@f1 002D             ___ftmul@f2 0030             ___ftsub@f1 004B  
           ___ftsub@f2 0048             ___fttol@f1 0020         __pcstackCOMMON 0070            _i2c_restart 1612  
           ___lltoft@c 0078          __end_of_scale 0E6A          __end_of_pause 1671          __end_of_putch 0045  
     ___lbdiv@quotient 0078             ??_I2C_EEIN 0072      __end_of_i2c_start 160D      __end_of_i2c_write 1609  
           __div_to_l_ 167C             ??_I2C_nack 0070     __size_of_lcd_clear 000A        __div_to_l_@exp1 0025  
   __size_of_lcd_write 0012        __div_to_l_@cntr 0024           sprintf@integ 00A5                ??_scale 003F  
              ??_pause 0072        __div_to_l_@quot 0020           sprintf@width 00AA                ??_putch 0070  
           __pbssBANK1 00D0              ?_i2c_init 0070              ?_i2c_read 0070              ?_i2c_stop 0070  
        __div_to_l_@f1 0070          __div_to_l_@f2 0073             __pmaintext 099C                ?___bmul 0079  
              ?___ftge 0070                ?___wmul 0070                _CCP1CON 0017                _CCP2CON 001D  
              _BAUDCTL 0187                ?_fround 0048              ?___awtoft 0078              ?___ftpack 0070  
            ?___lltoft 0078                _GO_DONE 00F9          I2C_EEOUT@data 0075                _SSPCON2 0091  
            ?_lcd_goto 0070                _SSPSTAT 0094              ?_lcd_puts 0075              _I2C_EEOUT 15C5  
           ??_i2c_init 0070             ??_i2c_read 0070             ??_i2c_stop 0070              ?_msecbase 0070  
           _scale$2943 0043      __end_of_lcd_clear 1631        __size_of___bmul 000E        __size_of___ftge 002C  
              ___awdiv 0E6A                ___lbdiv 094F                ___ftadd 173E                ___awmod 0EAF  
              ___lbmod 096A      __end_of_lcd_write 1660                ___ftneg 0735                ___lldiv 06ED  
      __size_of___wmul 0019                ___ftmul 0EEC                ___llmod 0601                ___ftsub 073D  
              ___fttol 0692             ??___awtoft 007B             ??___ftpack 0075        __size_of_fround 0105  
           ??___lltoft 007C            ?__div_to_l_ 0070                _dpowers 105E                _isdigit 066B  
     ___awmod@dividend 0072                _sprintf 0061             ??_lcd_goto 0075             ??_lcd_puts 0077  
 end_of_initialization 005D             ?_I2C_EEOUT 0074             ??_msecbase 0070        ___lldiv@divisor 0070  
      ___lldiv@counter 007C         __tdiv_to_l_@f1 0070         __tdiv_to_l_@f2 0073          ??__tdiv_to_l_ 0076  
     ___lbmod@dividend 0072      __size_of_I2C_EEIN 0021              _TRISCbits 0087      __size_of_I2C_nack 0008  
           main@x_1881 00CE             main@x_1874 00CC             main@x_1877 00CD            ___lbmod@rem 0074  
           main@buffer 00B9    __size_of__div_to_l_ 00B5             lcd_write@c 0074            ___ftmul@exp 0036  
         ?_i2c_restart 0070         __end_of___bmul 0F69         __end_of___ftge 066B         __end_of___wmul 0692  
       __end_of_fround 094F    start_initialization 0052    __end_of__tdiv_to_l_ 15BE              _i2c_start 1609  
            _i2c_write 1601            ??_I2C_EEOUT 0076        ___llmod@divisor 0020        ___llmod@counter 007D  
    __size_of_i2c_init 000D      __size_of_i2c_read 0008      __size_of_i2c_stop 0005               ??___bmul 007A  
             ??___ftge 0076               ??___wmul 0074               ??_fround 007E             fround@prec 0051  
    __size_of___awtoft 001B      __size_of___ftpack 003E           pause@usvalue 0070      __size_of___lltoft 001E  
        __pcstackBANK0 0020          __pcstackBANK1 00A0             ?_i2c_start 0070             ?_i2c_write 0070  
         _isdigit$2459 0070      __size_of_lcd_goto 0007            sprintf@_val 00B5            sprintf@flag 00A8  
    __size_of_lcd_puts 001D            sprintf@fval 00AE            sprintf@prec 00B2      __size_of_msecbase 000B  
             ?___awdiv 0076               ?___lbdiv 0075               ?___ftadd 003C               ?___awmod 0070  
            __ptext720 1631              __ptext721 1627              __ptext730 173E              __ptext722 073D  
            __ptext731 15E0              __ptext723 0CD8               ?___lbmod 0070              __ptext740 0F69  
            __ptext732 1660              __ptext724 084A              __ptext741 096A              __ptext733 0EAF  
            __ptext725 164E              __ptext750 161F              __ptext742 094F              __ptext734 06ED  
            __ptext726 15C5              __ptext718 0061              __ptext751 1617              __ptext743 0679  
            __ptext735 063F              __ptext727 0CBA              __ptext719 15BE              __ptext752 160D  
            __ptext744 0F5B              __ptext736 0735              __ptext728 0C9F              __ptext753 1612  
            __ptext745 167C              __ptext737 0601              __ptext729 0EEC              __ptext754 1609  
            __ptext746 1546              __ptext738 0E6A              __ptext755 0045              __ptext747 066B  
            __ptext739 0692              __ptext756 1671              __ptext748 003D              __ptext757 0000  
            __ptext749 1601               ?___ftneg 0070               ?___lldiv 0070               ?___ftmul 002D  
             ?___llmod 0020               ?___ftsub 0048              __npowers_ 1010               ?___fttol 0020  
            _lcd_clear 1627              __pstrings 1000            __tdiv_to_l_ 1546              _lcd_write 164E  
             _I2C_EEIN 15E0           ??__div_to_l_ 0076               ?_isdigit 0070               _I2C_nack 161F  
             ?_sprintf 0052         __size_of_scale 0192         __size_of_pause 0011         __size_of_putch 0008  
       ___wmul@product 0074               _PIR1bits 000C     __end_of__div_to_l_ 1731   __size_of_i2c_restart 0005  
           ?_lcd_clear 0070            __stringbase 100F             ?_lcd_write 0070      ___wmul@multiplier 0070  
            lcd_puts@s 0075            ??_i2c_start 0070            ??_i2c_write 0070       I2C_EEIN@address1 0072  
     I2C_EEIN@address2 0071               _i2c_init 0045               _i2c_read 1617               _i2c_stop 160D  
    i2c_write@I2C_data 0070       __size_of___awdiv 0045       __size_of___lbdiv 001B       __size_of___ftadd 00C2  
     __size_of___awmod 003D       __size_of___lbmod 001C       __size_of___ftneg 0008       __size_of___lldiv 0048  
     __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0018       __size_of___fttol 005B  
             ___awtoft 0C9F               ___ftpack 0F69            _fround$2941 004E            _fround$2942 004B  
             ___lltoft 0CBA             sprintf@exp 00AC       __size_of_isdigit 000E               __powers_ 1037  
             _lcd_goto 15BE               _lcd_puts 1631       __size_of_sprintf 05A0          __size_of_main 0303  
             _msecbase 1671               main@cnt1 00C8               main@cnt2 00CF            ??_lcd_clear 0075  
          ??_lcd_write 0074              putch@dato 0070      I2C_EEOUT@address1 0076      I2C_EEOUT@address2 0074  
             isdigit@c 0071               scale@scl 0046              sprintf@ap 00A4       __tdiv_to_l_@exp1 0025  
     __tdiv_to_l_@cntr 0024              sprintf@sp 00B1       __tdiv_to_l_@quot 0020       ___lldiv@dividend 0074  
            stringcode 100A           ?__tdiv_to_l_ 0070             _OPTION_REG 0081               sprintf@c 00B4  
             sprintf@f 0052       ___lldiv@quotient 0078               stringdir 100A               stringtab 1000  
          _SSPCON2bits 0091     __size_of_I2C_EEOUT 001B  
